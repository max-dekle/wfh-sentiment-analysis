[{"ID":"t3_u51av3","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/u51av3\/reflections_on_2022_staff_level_interviews\/","DATE":1650067200000,"PLAIN_TEXT":"So I decided to make this post because I recently finished up a decent number of interviews at StaffPrincipal level and, prior to those interviews, spent a lot of time scouring online for accounts like this from real people and found a complete dearth of it.Most of the content I was able to find was provided by people who exclusively make money on interview training, was focused primarily on new grad through Senior developers, was woefully out of date, or was focused on being promoted from within or being successful after you land the job (StaffEng.com). So I wanted to give back to share for people who may be in a similar position.[First, a very uninteresting Sankey Diagram of the overall experience.](https:i.imgur.com58UHOJO.png)Basic Background: Remote worker in the midwest US 12 YOE Wasnt even looking to make a move, just wanted to explore my market rateThe other relevant piece is that, before beginning the search, I was already employed at big tech company at StaffPrincipal level. While I am certain this helped in my case, particularly with things like obtaining interviews, I should also mention I have been at the same company for a long time. Well beyond what most in this industry would consider normal. I also had not done interviews in ages (Though Ive conducted hundreds), and had been fully promoted to the level from within, so I truly had no idea what to expect.What I Expected Going In I knew the market was hot, so getting interest wouldnt be a problem. Started with a stack of recruiter mails in my inbox from day one. I was expecting a fair amount of coding in my interviews, particularly LeetCode-style problems. I was expecting a lot of highly-structured System Design interviews.  I was expecting to be interviewed by people at Staff level or above. I was expecting the process to be fairly streamlined and maybe even a little extra care and attention given the level Id be coming in at and the demand for it.  I was expecting to get rejected a lot. More rejections than successes, actually. I was expecting to be given offers that would be higher than my current pay, but not by much given my location.How I PreparedKnowing those expectations above, I did spend some time studying but given I wasnt actually planning to move companies, it was far less than what I often see on here. In all I solved a couple dozen leetcode problems and otherwise just browsed solutions for a few dozen more. I did not look at DDIA to study, but I did already have the book and had read it years ago (When I would argue it was far more relevant).I did not use any Passing the System Design Interview style online guides beyond reading a couple of the freely available ones on Grokking the System Design Interview, but I did definitely go read blogs, watch videos, and skim whitepapers on some actual production systems (HDFS, Reddit, Slack, Uber, etc). What I Actually ExperiencedYou can probably tell by how I phrased a lot of those expectations above where many of these are going. Where to even begin?On Coding ProblemsI did 7 phone screens and five on-sites, all of these with major tech companies. All 7 phone screens involved a coding problem. After that, they practically ceased to exist. Two companies did not even ask me a single additional coding question during the on-site.Of the coding questions I did get, only three were LeetCode style coding problems, all required nothing but hashtables and arrays, and all were very straightforward to solve by someone who writes algorithms on a fairly regular basis. No dynamic programming, no topological sort, no recalling tries or reimplementing binary search like theres not a library for it. All-in all, pleasantly surprised here and glad I did not grind leetcode for weeks on end.On System DesignThis one was just as big of a surprise. If you follow the guides and watch the videos, they are nothing like the real interview experience. The real interview experience has so much more back and forth and veers off into totally arbitrary directions. Also nobody cares about capacity estimation. The only thing even remotely relevant to whats mentioned in DDIA is CAP theorem, which if youve ever worked on a distributed system for more than like, a few weeks, you know it. Even if you dont know the name of it or that its a theorem, you just know that data consistency and availability are tradeoffs of one another. At some companies, maybe they have a formula. But at all the companies I went through, it was clear that what they were looking for were not academics and theory, but signals of real world experience. The feedback I got post-interviews confirmed this - interviewers were more impressed that I brought up considerations like personnel expertise (ex: More devs know SQL than NoSQL), time to market, difficulty in hiring a replacement who knows &lt;complex en-vogue message queue&gt;, and security vulnerabilities that multiply at scale than they were at my ability to talk about sharding and partitioning.On Reverse System DesignI did not see this phrase mentioned even once, anywhere, online or in any videos prior to my interviews. And yet three of my five on-sites had reverse system design rounds.This is a really interesting format where the interviewee is asked to come present a system they already had designed or built (If you cant talk about one for confidentiality reasons, in some cases you can also ask for a prompt from them and it becomes a bit of a take-home assignment). I loved this. Best interview format ever. I had built a lot of things, including some fairly complex distributed systems, so I just got to talk about them and diagram them out and tell cool stories. On The Rest of the InterviewIf youve been following along, you saw few coding interviews, so that leaves system design, and reverse system design and... what else? Well, at a lot of companies we just talked.No bullshit, we talked like actual humans. Not even behavioral, Tell me about a time when... style prompts, but a shocking number of interviews were just talking shop for like 45-60 minutes. Really organic, casual conversations going deep on some tech or lobbing questions back and forth at each other about how wed do X or Y, or what its like to struggle with Framework Foo. And I will reiterate, all of these were major tech companies.On The ProcessYou can pretty much just take my other expectations from above and reverse them to get the outcomes here: A fair number of interviews conducted by Senior and mid-level devs. I dont really have a huge problem with this, but the nature of the conversations in these interviews was just very different and I cant see how it would consistently get good signal. Much more in the weeds, more comments about coding idiosyncrasies and nitpicking if doing a live coding session.  Streamlined would be a very generous term to apply - scheduling was an absolute nightmare for many of the companies. Constant cancellations and rescheduling, lots of demand for me to align to west coast timezone (Remember, Im two hours ahead in the midwest, I dont want to interview at 7 PM my time), which I refused to do. People showing up consistently late and trying to keep me long after we went past time, recruiters changing halfway through the process, poor communication and many days between replies, random recruiter phone calls mid-day instead of just sending an email.If you checked the Sankey, youll see I just dropped two companies before finishing their onsites. I had just had enough. Literally, these companies lost on a Staff-level engineer in quite possibly the highest demand market in history simply because their hiring process was poor.On OffersHonestly, not going to say much here as its been beaten to death on this subreddit. This market is insane if you are a Staff-level developer. The offers are very high, yes, even if you are fully remote. In the US midwest, I managed to get offers all topping half a million dollars a year, which is far more than I had expected going in (Especially given data on that from sites like Levels is sparse for remote outside the coasts) and well above what I was making. It turned my purpose of just exploring my market rate into accepting an offer so high that I could not possibly refuse it.In ClosingWhew. I hope someone finds this of some use - real people anecdotes of what its like right now beyond Senior-level are hard to come by and, as I mentioned, I went into this process with a bunch of assumptions that turned out to be totally wrong, even for major US tech companies. Staff-level is on fire, every company wants them, especially if you have any experience at all operating at the scope and level, and the interviews are far less intimidating than Reddit would have you believe. If youre even considering making a move, now is the time to do it - dont sit with your impostor syndrome like I did.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_yw6eml","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/yw6eml\/another_job_search_data_point_during_a_very_cold\/","DATE":1668470400000,"PLAIN_TEXT":"Normally I dont share this info but some amusing shit happened this time, and since it was a pretty brutal job search I need to vent a little.Background: 12 YOE at SF big N companies. 2 years ago, I transitioned to working fully remote from an LCOL city while taking a 0% paycut from my SF TC ([thread about that](https:old.reddit.comrExperiencedDevscommentsl951f2successfully_negotiated_0_paycut_for_remote)) so I only looked at fully remote + high TC opportunities.Prep:About 2-3 months of on-and-off prep after work or on weekends. Took like 3 weeks of break in the middle cuz I was getting tired of it. DS&amp;A: about 60 LCs, mostly mediums. Used LC premium, neetcode, and random youtube channels for specific problem explanations.Sys design: read both of Alex Xus books (highly recommend), read specific chapters of DDIA for topics I wanted clarity on, watched [sys design interview youtube channel](https:www.youtube.comcSystemDesignInterview), did 5 practice designs for popular problemsApplications and results:Meta- Applied via referral to a Horizon Worlds E6 role. Very specific role, was told that no team matching process would be involved.- Phone screen happened to be the day after Zuck announced the company wide freeze. Recruiter called me an hour before my interview to tell me that I could still interview and the results would be good for 6-12 months. - I interviewed anyway since I wanted the practice. Interviewer spent 20 minutes on behavioral, leaving 25 minutes for 1 medium bit manipulation and 1 hard graph traversal problem, neither are on blind75 or neetcode150 or LCs list of FB problems. Solved the bit manipulation but didnt have enough time to code the graph traversal which the interviewer acknowledged was his fault so I just talked through it but didnt figure out the optimal solution. Interviewer was pretty friendly and a good communicator but had to end exactly at 45 minutes so no time for me to ask anything.- Result: passed screen, but hiring freeze prevents any forward movement. Amazon- Recruiter reached out via LinkedIn for AWS internal tool team, L6 role. Sounded like an absolutely mind numbingly boring team, recruiter could barely find the enthusiasm to sell it to me.- Phone screen was 40 minutes of behavioral! Really didnt expect that. His strategy for behaviorals seemed to be: ask an open ended question -&gt; pick a detail to drill into -&gt; drill into it more -&gt; drill into it even more -&gt; do not let candidate be ambiguous about ANYTHING -&gt; keep drilling -&gt; only stop when interviewee has answered every possible detail or admits they dont know something. This guy was not fucking around. Very engaged and active listener, his drilling questions were very intelligent and relevant. Then an LC easy BFS problem (wtf) followed up by a variation that made it LC medium (BFS with tree depth)- Result: failed screen, very unprepared for the behaviorals this guy wanted. Google- Recruiter reached out via LinkedIn for L6 role that needs to be team matched after offer. Seems like there are more fully remote opportunities than before, but still not that many. - Interviewer was a no show for the first 10 minutes so I emailed the coordinator and got an automated OOO reply with no backup contacts lol. Interviewer showed up at 12 minute mark and apologized profusely. 15 minutes of behavioral followed by an LC medium that transitioned into LC hard. Pretty standard array of numbers problem, its probably on LC. Solved optimally with some hints. Only tricky part was figuring out the worstavgbest big-Os for the optimal solution since the optimal solution has 3 variables that go into the big-O calculation instead of the usual 1 or 2. - Result: passed screen. However, recruiter said she wants to team match BEFORE offer now (contrary to what she said in our initial meeting), and that took forever.Netflix- Recruiter reached out via LinkedIn- UNBELIEVABLY LONG AND DIFFICULT INTERVIEW PROCESS. Had 10 total interviews of 45-60 minutes each with a mix of recruiters, eng, eng manager, non-eng, and non-eng managers. 2 rounds of coding problems, one with google docs and one with coderpad. These were not LC style, but rather realistic every day problems. Deep languagedomain specific knowledge is critical. The non-eng rounds were non-technical behaviorals but they dont fuck around and let you get away with ambiguity. Thankfully I worked a lot with non-eng in the past and my recruiters warned me about this so I had some good stories prepared. Lots and lots of behaviorals that I wasnt asked at any other company. Feel like I met almost everyone I would be working with. The 10 interviews were split across like 4 different weeks and it felt like they just kept going forever. They really do not like false positives I guess. Only apply if you seriously consider Netflix as one of your top choices and are willing to walk over coals. That being said, I did enjoy each and every interview as all the interviewers were very passionate people, great communicators, and seemed to really be curious about me. - Result: got offer for an insane TC raise working on a team Im really excited about. Accepted this offer!Stripe- Recruiter reached out via LinkedIn for staff role in money movement org. - Instead of a phone screen the first round is what they called a mini onsite with 45 minute behavioral with HM and 45 minute sys design. HM was extremely good communicator and actually made me excited about the role. Asked great questions and thanks to me bombing the amazon behavioral, I was hyper prepared for this one. Sys design was a realistic but not very deep problem within the online payments space. Interviewer answered clarifying questions then didnt speak for the next 35 minutes. Passed screening around. Recruiter said both interviewers had no negative feedback to give.- Final round was unique as well. They asked for a 1200 word writeup around a dev effort I owned which would be given to my interviewers. First interview was me presenting that writeup with additional detail for 20 minutes followed by 25 minutes of questions by a panel. Panel gave very positive feedback. Second interview was a sys design problem with a VERY large list of requirements. The interviewer admitted it was beyond the scope of a 45 minute interview so I should move extremely fast and be ready to get interrupted frequently if the interviewer wanted me to move on to something else. Felt like I did pretty well but was not given feedback. Third interview was coding round with 3 parts, non-LC style, using my own IDE. Interviewer wanted me to use unit test driven approach which I didnt enjoy but I solved it all easily enough. Fourth was behavioral with a staff+ eng, who was surprisingly not a good communicator and asked some dumb questions with no followups...- Result: Never really found out because THE DAY AFTER MY INTERVIEW the recruiter called me to say they are going on hiring freeze, and then a few days after that, they announced layoffs. My recruiter was part of the layoffs and my replacement recruiter called to say my application is in limbo until they finish re-strategizing or whatever. 5 startups- Mix of referrals and recruiters reaching out. All startups were tech-centric and roles were staffstaff+leadership. - No LC at all. Always glad to see startups that are smart enough to not use LC. 2 take-home assignments that took way too long but I did it anyway for practice. Several coding rounds using my own IDE to solve realistic or day-to-day style problems. - Results: 3 offers, 1 bad fit, 1 ghosted. None of the offers compared to Netflix without very generous projections of their paper money and represented too much risk for me personally. Offer Negotiation: I consider myself quite good at negotiating offers but the Netflix recruiter made it clear during the verbal offer that they would give me a number at the top end and wouldnt budge from that unless something crazy happens. I tried to leverage that offer against the startup offers but obviously startups can only offer more paper money so that wasnt really productive, and none of the startups are something I truly believed in. Got some decent practice negotiating the startups against each other at least. Moral of the story: dont fucking do a job search during a horrible tech downturn unless you really want to move on lol","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_v45x2y","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/v45x2y\/6_lessons_i_learned_from_working_at_a\/","DATE":1654214400000,"PLAIN_TEXT":"10 YOE, had a lead role at my previous company. Switched to being an IC for more money at a larger company 1.5 years ago. When I joined the team was small, capable and effective. There were problems (mostly related to Jenkins :)) but the team was delivering value and customers were happy. After about a year a new manager joined and the decision was made to greatly grow the team (from about 5 to 50) using outsourced resources. A series of bad management decisions was made resulting in me offering in my resignation a few days ago. I have no doubt that the rest of the original team will soon follow.How dysfunctional was it? Ive included a list of observations at the bottom of this post, now that Ive resigned I can laugh about it again :)Having had a lead role before (and going to a lead role at my next employer) it was very interesting to see how these decisions influenced the team and I figured I would take a moment to reflect, learn from the experience and share it with this sub!Without further ado, I present lessons I learned from working at a dysfunctional workplace!# 1. Listen!One of the most important skills you can have as an engineering managerlead is to listen to your people. They already know whats wrong, what they need to do a better job and what can be improved. Whenever you change something that will influence their jobs, ask for their input first.Even if you decide not to do anything with their input, listening to them and explaining why youre making changes will help so much. In the end your ICs will do the actual work, as an engineering manager your focus should be on making sure that they are happy, motivated and are in a position to do their best possible work.No-one in the team thought we needed 50 extra people to deliver on the business goals but we could have really used 5+ good engineers with expertise in X, Y and Z, some better hardware, a few additional software licenses and a liaison with corporate security so we could discuss how they wanted us to do some things.# 2. Teams and autonomy matter!The quickest way to frustrate smart and motivated individuals is to take them out of their existing team and to put them in a arbitrary team, with people they dont click with and to limit their autonomy. Teams should be built around individuals that compliment each other (personality and skills) and have the same goals. Grouping people together by specialization (e.g testers, front-end developers) and then having them focus on different projects doesnt create a team. It just puts a bunch of people in a room.Two people also isnt a team. Its an arranged marriage. They either fall in love and get lost in their own world, out of touch with reality or youll have to deal with a nasty divorce.Taking away their autonomy (my job, as a senior engineer, was at one point described as moving Jira tickets from left to right) means that theyll no longer be able to fix issues themselves. This will not immediately lead to frustrations but it does mean that smaller frustrations add up over time.# 3. Public praise (and promotions) are important tools to shape cultureIf you have a team with three developers;1. Tina Topper who works hard, is liked, humble and respected due to her amazing skills and productivity2. Marc Mediocre who is a steady workhorse but unmotivated3. Ursa Underperformer who probably isnt in the right place and often creates extra workload for the teamPraising and rewarding Tina Topper might inspire others to emulate her. If you praise and reward Tina, Marc and Ursa in equal amounts Tina Topper might get frustrated because not only is she picking up Ursa Underperformers slack, her hard work is also not being recognized. Marc Mediocre might figure out that Ursa Underperformers performance is good enough and might become even less motivated.Promote and praise only Ursa Underperformer and the team will quickly turn very demotivated.As a leader you should publicly praise the things that you want to see more of (e.g before we start, I just want to take a moment to thank Bary Badass who built X in 3 weeks, with barely any bugs and increased metric Y with 20%!). This makes people feel recognized, appreciated and also positively shapes culture.Make sure to praise individuals within the team and to praise the team to people outside the team.# 4. Let your best developers focus on developer experienceSee: [Maximizing developer efficiency](https:martinfowler.comarticlesdeveloper-effectiveness.html). Engineers productivity can rarely be increased with cash bonuses, team building exercises or Employee of the month rewards. Instead focus on good engineering practices, taking away frustrations and shorten feedback loops. Allow your best engineers to focus on this (within reason). This makes the team feel valued (we dont just focus on features here, we focus on delivering quality and a healthy WLB), increases productivity, decreases burnout and makes hiring easier.Once again, this goes back to 1. Your engineers are in the best position to tell you whats slowing them down and frustrates them. Listen to them, clear roadblocks and give them resources.Encourage engineers to reach out to similar teams andor engineers with similar roles within the organization (I would go as far as to setup coffee dates with people within my own network for them if they express interest) so they can build bridges, share knowledge and nerd out about awesome tech together.Let them know that work lunchescoffees (within reason) can always be expensed. There have been a few times in my career when a 5 euro coffee date saved the team 5k.# 5. Architecture and process is good when theres nothing more to take away, not when theres nothing more to addAt some point I reviewed the architecture for an internal CRUD application with 20 users, that would manage less than 100k entities. It consisted of;- A React Frontend- Microservice (so that additional programming languages could be added in the future)- Containers (despite having no experience or infrastructure in place to host this)- Elastic search (for searching :) )- Postgress (with a bunch of extensions)- Redis as a shared cache- Kafka to let the micro-services talk with each other- A Java backend as the first micro-service.This required a team of 20 developers (+ 10 BAs, project managers, etc) and two years to build. The proposal didnt include any back of the envelope calculations or further justifications for these choices. When I handed in my resignation the first deadline was already missed and not even 50% of the functionality for that deadline was finished. Moral was low and the project manager was working on a plan B.IT is and should always be about managing complexity, if something adds complexity you should be able to justify the additional costs. Do you need 5+ technologies in one project? Perhaps but often youre better of starting without it. If it turns out that Kafka is indeed the simplest solution for your problem, then please do add it!4 teams of 5 developers on the same project is not 400% as effective as one team of 5, its probably only 20 - 100% more effective due to dependencies, communication and process overhead. The easiest way to get a team to deliver faster is to reduce (technical) scope. Focus on delivering working software, as soon as possible and take it from there.Same thing goes for processes, do you need a BA, 10 weekly meetings, documentation for all meetings and strict guidelines for a project that has a single developer? Perhaps but try starting without it and add complexity when you can justify the additional costs.This also goes back to 1. Listen to your engineers and stakeholders and ask them what they need :)# 6. Be results focused, not process focusedTeams are composed of individuals and individuals have different strengths, weaknesses and personalities. Allow the team to find a process of collaboration that works for them. If a team wants to do their dailies in their pajamas when doing push-ups with a soundtrack of heavy metal goats blaring in the background, let them. As long as they deliver the results that you want all else should be up to them.What you should do is work together with stakeholder (including your engineers) to set clear and ambitious goals. No Lets go global-ish at some point in the future? but a Lets get X new paying users by launching in N countries, before the end of 2022 goal. Adjust the goals as you get closer to the end andor learn new information, teams and individuals are motivated by goals that are just out of reach.Celebrate wins! The goal is supposed to be ambitious, if the team thinks they can launch in three countries, throw a dinner in there (or chocolate, or a bonus, go back to point 1 and ask them what they care about, its your team :)) when they launch in the first and second country. The goal should be ambitious and just out of reach but the team should feel as if theyre already on a winning streak.Provide coaches as external resources if the teams tells you that theyre struggling with something (e.g testing, agile, etc). Let the team pick their own coaches. If your team does something very well, offer to them as a coach to another team (if you have their permission, of course). Recognition and praise from peers is the best praise an engineer can receive. This is also how you create 10x engineers, have a 1x engineer that can teach two teams to become more effective :),Now for you entertainment, a list of interesting and also funny things that Ive observed while working there (adapted from my previous comment, [here](https:www.reddit.comrdevopscommentsv3qrtbcicd_and_infra_automation_is_it_mainstreamib0pzw3));- Our CD pipeline being killed because automation is dangerous- Theres no CI integration so developers take screenshots of their code coverage and attach it to PRs- PRs requiring screenshots of manual tests before they could be reviewed - Manual tasks not being automated despite the ROI being obvious- Despite having Ansible the team would still do manual fixes and forgot to open PRs so that stuff would break on the next deployment- Deployments would take 12+ hours- Someone telling me that the law doesnt allow DevOps because developers shouldnt touch production (yeah duh but thats not what DevOps is?)- PRs not being reviewedmerged for weeks- Coworkers reviewing the old code in a PR - People claiming that they could program because they could edit YAML files- People editing source code through a SSH session, including yaml files where they would manually count the spaces. These were not grey bearded insanely skilled wizards. They just couldnt get an IDE and GIT installed on their laptops.- Tasks being assigned to random individuals who are now responsible for X instead of the team deciding whos best suited for a task- Critical bugfixes not being deployed to PROD for months due to them getting lost in the process- Spending months working on a project, producing more documents than lines of code- Having to wait months for physical servers- Testing environments that are continuously out of date with PROD- Not having a proper staging environment because it isnt deemed to be important- Silos and handovers everywhere. You hear thats not my job so often that at some point youll be surprised if someone does something- No working software (or even testing environments) has been delivered since January- Zero accountability, because nothing gets delivered theres no way to measure individual output on a project so no recognition for hard work. No disciplinary actions for people who dont do shit.- Our team has a Developer, Operations and DevOps sub-team no-one knows the difference between those sub-teams. They dont interact with each other. The team lead thinks that this is fine- The standup has 30+ people in the call, my product owner however is not invited - No retro, too much negativity in those! - Lying to stakeholders about production issues: Well just claim it was a bug!- One project has three different database schemas, developed by different people, none have successfully been integrated with the backend- The database schema that is supposed to be used in production is finished but only stored on the authors laptop. For unknown reasons it cannot be shared with the rest of the team.- People join the team and projects all of the time, never introduce themselves, they also leave without announcement. Some days your team is 10 people, then 12, then down to 8.- A team spent the last 2 months working on branding. This is for an internal tool with max 20. users.- My project has been assigned a business analyst from India so now my product owner is supposed to talk to me through the business analyst. This has caused a 2 month delay so far, the requirements produced by the BA mostly contain buzzwords in an order that doesnt make any sense. My product owner has a desk about 10 meters away from mine, we regularly have lunch together.- After 6 months of development the sprint for one of the teams is completely filled with bugs, for a project that isnt even live- The phrase looks like we wont close any stories this sprint, again was uttered this morning by a lead- Theres a guy that does daily manual deployments, when hes sick or on leave. No deployments will be done, this is accepted by everyone.- Project status updates are mostly used to lie to the stakeholders that all is fine, you get a chewing out from the project manager if you report bad news- False positive are never filtered. When Im on call I know that its lunch time when I receive a false positive prio 1 alarm. I get a bunch more around 17.00 that I use as a signal that Im done with the workday- Corporate security breaks our workflows, unannounced, all the time. Due to the last change we now have to install dependencies on a remote Linux server because locally building software is made as difficult as possible- Rsync is not allowed. Great fun when you have to copy over 20k reports!- SSH port forwarding is deemed a security risk so we use netcat, thats totally fine- At some point corporate security blocked us from running executables that were not on a whitelist. Causing us to rename all our development projects to word.exe, powerpoint.exe, etc- Our production servers can be accessed from testing servers without any authentication. Just do a SSH hop. No-one seems to care - We can run a grand total of 7 sudo command. This list does not include tools such as journalctl nano or rm- At one point external developers were hired, we requested a desktop for them that would allow them to write code. They got a locked down VM with notepad installed and nothing else Took 3 weeks to get that fixed.- We had to explain to corporate security why Ansible needed SSH access because the website specified that HTTPS was enough (they were looking at the website for Ansible Tower, a web UI for Ansible)- Being assigned a task to uninstall old versions of an application after running yum install, I tried explaining that yum does this for us. The lead didnt believe it. I spent a day chilling and closed the task as finished. All was good- Someone proposing that we re-review old PRs every two weeks because PRs are like wine, they get betterworse with age?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_qw0851","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/qw0851\/am_i_being_unreasonable_to_think_that_going_into\/","DATE":1637107200000,"PLAIN_TEXT":"So, Ive been working from home for nearly 18 months now, my job has been fully remote since covid and nothing really changed.Im looking for a new job and every time I talk about working from home some companies seem very uncomfortable with the idea and it makes me immediately reject them mentally.I do like the office, sometimes, but the idea of it being mandatory feels super antiquated now.Hearing a potential job say oh we expect you in the office twice a week wouldve been great 2 years ago but now after doing it for nearly two years the idea of being forced back into an office just feels like something people do because they are meant toAnyways, Im not sure if im being ridiculous or not so I was curious about your opinions.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_sbkplj","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/sbkplj\/stckoverflow_jobs_is_closing_what_should_we_use\/","DATE":1642982400000,"PLAIN_TEXT":"It makes me very sad to see [StackOverflow Jobs go](https:meta.stackoverflow.comquestions415293sunsetting-jobs-developer-story). Ive used it successfully both to look for jobs and to hire devs in multiple teams. In fact, Ive never used anything else since I started working remotely 5 years ago.Some features were absolutely crucial for me:- The Joel Test marks. While I ask these questions at every interview regardless, the ability to not waste time interacting with companies that miss important points for me (e.g. no QA team or no unit tests) is extremely important.- Clear indication of preferred locations and timezones (Im only interested in fully remote jobs worldwide, not just US or EU).- User feedback on job postings. Its just upvotes and downvotes, but it often indicates that something about a vacancy is concerning or, on the contrary, particularly good.- Jobs you might like section based on my tags and StackOverflow answers.The last point especially is hard to replicate, but still, Im looking for alternatives. StackOverflow is a platform I trust (despite some questionable decisions), and looking through jobs in other places just doesnt feel as safe and convenient.In short, SO Jobs really felt like it was made by developers for developers.So, what alternatives are there? Which job boards provide the most information about employers and their tech stack, specifically things relevant to developers?Id love to hear any suggestions!(Also I messed up the title, sorry, this is probably from sadness)","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_qgc6lq","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/qgc6lq\/anyone_here_have_days_sometimes_more_than_one_in\/","DATE":1635206400000,"PLAIN_TEXT":"Probably for as long as Ive been in this industry (5 years) Ive been mostly a remote worker. For the same amount of time, Ive also had days where my head simply isnt able to get into coding. These days are a mix of looking at code and the tasks Im procrastination over, along with just zoning out and doing nothing. Im able to do any non-coding work like giving my input in product design or architectural planning meetings etc, thinking about improving our DevOps  CI pipeline and making general efficiency improvements - but anything that involves writing code just feels like a barrier I cant get past on these days. Sometimes it will span multiple days.It feels like its become a more frequent occurrence over the last year and its at the point where I feel guilty and anxious due to the level of output my colleague has - which feels like around double mine - (he has around 13 years exp. and Ive no idea what hes being compensated, though). It feels like my performance will be brought up every day, but it hasnt been so far.Anyone been in or currently in a similar situation?Also - regarding burnout, Ive felt this way since college. I can work without issue on my own coding projects or non-coding projects - so I dont feel its actually burnout or depression. I just dont feel I can code for money much longer.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_orebhl","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/orebhl\/new_cto_drops_in_from_nowhere_and_wants_to_redo\/","DATE":1627171200000,"PLAIN_TEXT":"Edit: Update (31st July 2021) | Thank you everyone for replying to this post, you all gave some good insights into a situation that was really frustrating. Wanted to also inform you that I got a job offer as an Associate Solutions Architect at proper software company and will be starting there from 9th August. My Mobile developers also were given notice, The iOS developer actually got a job offer today, and the Android developer is also got several leads on jobs.---------------------------------------------------------------------------------------------------------------------------------------------I have been working at the same company for almost 8 years now. I have been the team lead  tech lead for the development team which I built from the ground up over time. Me and my team has built lots of internal tools used by our company and a few products as well.My current team consists of two Native mobile developers (one each for Android and iOS) and my self doing the backend in Node.js. We have been working on a new product for our company which has been in the works since last year August. We also have a designer working remotely who designed all the screens for the mobile app. We were on route to launch the product with the initially discussed features this coming August. All was going according to plan.My bosses are not really technical people who understand how software is built. They are marketers by trade and are under the belief that what ever we build they can sell. I have been managing their expectations and the project scope to keep it under control. If I had done everything they asked our product will never launch.But unknown to me they have been talking to this other company to out source some of the parts of the app that I said cannot be built due to our up coming launch date and due to our lack of resources.Suddenly about 2 weeks back they told me about that company and told me their CTO is joining our company as CTO and he will be taking over the development of the product.This new CTO basically replaces my role, which was basically CTO without the actual title. He asked to look through our work and promptly told me that he will be giving notice to my mobile developers and will be converting the app we have been building on native platforms into a hybrid application. And he wants rewrite everything we have done so far. He is going to hire new people and said my current developers have to learn the hybrid framework (ionic in this case, which seems to be what he is familiar with, I chose native development as it fits our team experience more and because its easier to find native app developers than hybrid app developers from where I am from. Also the app needs to have features which would have been easier to build on a native platform).He also wants me to update our nodejs backend with a framework that he will be sending to me. And I also was given one month to do this.My bosses doesnt seem to get how much this will effect the timelines and how its effecting my team. Basically they are saying yes to everything this new CTO is saying. The CTO also said he is CTO of at least 2 other companies which I cannot imagine how he manages to do.I have basically been sidelined. I feel frustrated and also feel that I need to stick around so that I can witness how it will all go down. I have started reaching out to recruiters and friends to see if there are any vacancies that fits me as well.What do you guys think about this situation? Has this happened to anyone of you before?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_tg2vh9","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/tg2vh9\/new_trend_for_bootcamp_applicants\/","DATE":1647475200000,"PLAIN_TEXT":"Had an interesting interview. Submitted my review.Candidate applied for a remote senior full stack engineering position. Resume looked interesting at first glance. Three open source projects contributions going on for two years. And co-founded a startup. I had high expectations and a lot of enthusiasm at the start of the interview.And it was downhill from there. It was the strangest interview ever. They could not answer basic clean code questions, did not mention any of their open source work, and was a bit tight lipped on their current co-founded work experience. All of their knowledge was surface level, and they kept mentioning using binary search for one method. Dropped a lot of library names. But all the knowledge was surface level - if I tried to dig deeper, they could not explain further.You have to remember, I went in with senior engineer expectations.So after the interview I immediately checked their resume again and this time took time to examine each open source project, as well as the co-founded projectstartup on LinkedIn. Why did they share the same group of individuals for each open source project on LI? Same with the co-founded project - same group of individuals on LI.It was actually 3 bootcamp portfolio projects, and 1 capstone project marketed as 3 open-source projects and a co-founded company. The LI sidebar showed a bunch of other engineers with the exact same work experience layouts.It seems to be something that a bootcamp instructed them to do after graduating. But they are sure to scrap any mention of said bootcamp on their profile.I feel like if you market yourself in this way, you need to do a lot more preparation and studying - especially when going for senior engineering role interviews. Im all for them applying and taking a chance! Its just really easy during a senior interview to catch someone who is definitely super green in the field.Have any other interviewers encountered anything like this?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_qcwl4x","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/qcwl4x\/my_recent_experience_looking_for_senior_front_end\/","DATE":1634774400000,"PLAIN_TEXT":"tldr: Job market is hot for experienced devs, candidates have all the power IMO the best interview prep you can do is real interviews WFH makes scheduling recruiter calls and phone screens super easy If you are feeling unhappy or underpaid or think you could be happier or paid better, this is a great time to look--Hi everyone, just went through the process for finding a new job and wanted to share what my experience was like as well as what kinds of offers you can get to help you gauge if you are underpaid.&amp;#x200B;My backgroundI have 4.5 years of experience as a full stack  front end engineer between two companies in San Francisco.&amp;#x200B;What I was looking forA senior front end or front end leaning full stack role, physically based in SF. I struggle with WFH and Im very excited to return to an office and meet my co-workers in person. I didnt rule out remote roles entirely but prioritized companies with office presences. Generally looking for smaller pre-IPO startups where I feel like I can have an impact (not interested in FAANG).&amp;#x200B;TimelineI started passively looking in MayJune 2021 and knew that I wanted to switch companies at some point in the fall (waiting for an equity cliff + after my partner and I had settled a bit into our new place). Had recruiter calls and first rounds sprinkled throughout the summer. Did my final rounds and got offers mid to late September.My funnel I was probably in contact with 45 companies (not at all at once). Around half, recruiters from the company reached out. The rest, I applied.  Of these 45, I had 4 resume rejections and 3 I never heard back from. I had 38 initial calls. These were mostly with recruiters, though a few were with hiring managers or CTOs for small startups. Most of these conversations were fairly standard: what Im looking for, what my timeline is, more about the companyteam. Be sure to ask what the work model is going forward. Some companies are going full remote. Some are doing a hybrid model. Some are still figuring things out.  5 didnt have roles that fit my profile  5 asked to do take home assignments which I declined because I didnt have time for these  3 asked to do automated coding assessments where I didnt speak to another engineer which I also declined I did 25 first round phone screens. These were all one hour long on video. A bunch of these were for practice because I felt rusty and nervous. These were helpful for making me feel more confident but in retrospect I did too many of these.  Around half were FE and React specific exercises, i.e. build this mini React project in this sandbox environment. The most common prompt was building an autocomplete feature for a text input (I had variations of this question many times).  The other half were more language-agnostic practical problem solving. I used JavaScript for all of these. Some examples were building a class to track document history and support undos, write the code for a card game, etc. I used standard data structures (arrays, hashes, stacks, queues) and, occasionally, simple recursion. Never had to do anything with binary trees or linked lists or anything similar (that I havent touched since college).  3 rejections here  1 was because I didnt finish the exercise in time (this also happened to be the very first phone screen I did, so I was very rusty)  2 I received generic rejection emails  I made it to the final stage for 22 companies.  10 I declined either because they were at companies fairly low on my list or I lost interest after learning more from the questions I asked at the end of the phone screen (culture misalignment, poor eng practices, rude interviewers, etc)  4 I had scheduled but cancelled because by the time the onsite came around I had already received an offer that I would have taken over them  8 final stages I actually did  6 offers (more details below)  1 withdrew (this was a 2-part final round where I passed the first round but already had a great offer by the time I heard back about scheduling the second round)  1 rejection - didnt perform well enough on systems design  The questions were a mixture of practical coding interviews similar to first round, systems design, and behavioral interviews.&amp;#x200B;Offers Company 1: Recently IPOd company  Base: 190k, $670k in RSUs Company 2: Series B startup  Base: 188k, grant of ISOs (currently valued around 250k) Company 3: Series E unicorn  Base: 181k, $405k in RSUs Company 4: Series C unicorn  Base: 182k, $445k in RSUs, 30k signing bonus Company 5: Series B startup  Base: 186k, grant of ISOs (currently valued around 250k), 20k signing bonus Company 6: Series E unicorn  Verbal offer, but I was down-leveled so I passed. Never got numbers.All the equity grants are a 4 year vest and 1 year cliff with monthly beating after. I ended up choosing Company 4 because the company was still a small enough stage where I could have an impact, the role was the best fit for me, and I really liked everyone I met during the interview process. I got to tour their office and meet more folks in person after I got the offer which helped seal the deal.&amp;#x200B;Preparation For technical preparation, I used [bfe.dev](http:bfe.dev) for practice with front end and JavaScript. I also brushed up on React functionality (e.g. state, effects, hooks, separation of concerns) and basic styling (e.g. position, display, flex) though most of this I do on a daily basis in my current role. I also spent a decent amount of time studying systems design, and focused more on the front end here. I did not open Leetcode. For behavioral questions, Google common questions and prepare answers ahead of time. Some examples: a time you failed, a time you receivedgave feedback, proudest accomplishment at work, what are you looking for, why are you looking for a new job, best manager youve worked with. In my opinion, the best preparation though is to do real interviews with companies that you arent that invested in.&amp;#x200B;Takeaways Candidates have all the power. Dont be afraid to decline processes that you dont like (e.g. I declined all the take home assignments and automated coding assessments). Get a few practice interviews in first before speaking to companies you care about. Your own amount will vary based on you feel, but for me I think I did too many practice interviews (as evidenced by how many onsite I declined). This was mainly because the last time I was job searching was March 2020 when everyone was having layoffs and hiring freezes and I was not having much success, so I was worried about the numbers. Absolutely not the case in this market. Scheduling for recruiter chats and phone screens is easy to do while were WFH. Onsites were a bit trickier. I ended up taking some PTO for this. Dont be afraid to ask for what you need. For a few companies, I asked to speak with other engineers even before the first round interview. Smaller companies were usually able to accommodate this. For a few, I even spoke with the CTO or Head of Engineering. The company I joined has standard salary and equity amounts per level, but I used the other offers to leverage a signing bonus. Dont be afraid to negotiate.  One other company increased base + salary + equity  Another company said they would add a signing bonus if I cancelled my other onsites (I didnt)If you are unhappy at your job, feeling underpaid, or even content but think you could be happier, this is an incredible time to be a software engineering candidate. Happy to answer any questions or clarify anything.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_sywp00","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/sywp00\/any_other_devs_struggling_to_work_during_normal\/","DATE":1645488000000,"PLAIN_TEXT":"Im a developer with 5 YOE, and Ive been struggling for the past year or so. I love what I do (not every part, but still), but some days I find myself unable to get into a work mode during the work day. If I feel a time crunch or see a necessity, I can kick it in to gear just fine - and in fact these days I feel much more satisfied and content with my work. But half of the time during normal working hours my brain just wont focus. Ill spend more time after hours or on weekends catching up, and I typically dont have an issue getting stuff I need done in these times either... its just less enjoyable because this is when Id want to be relaxing. I also feel that boundaries are important for a job and having a work life balance is important, but when Ive only done little stuff throughout the day, I feel like I need to put in extra hours just to keep it from impacting my performance.Ive been trying to identify the issue for awhile. I thought maybe I was just tired of my position and felt there was nothing else for me to gain there, so I changed jobs. Unfortunately, that didnt fix it. (Not complaining though - still got a nice raise and am getting different experience for my professional growth). Im also working on my masters, too. I dont know if what Im experiencing is a form of burn out, or maybe Ive just had my workflow interrupted by another impromptu meeting that has killed my momentum too many times, but I definitely feel like this is a professional rut that Im in.Ive been trying to reclaim the times when I cant focus on work so its not a total loss. Ive been working on school stuff sometimes during work, and work stuff during when Id normally focus on school. Thankfully, WFH during covid lockdowns and changing jobs to a fully remote position makes that (mostly) easy. Ive given myself the goal to be productive with at least one thing during working hours each day - be it work or school. But that hasnt made the experience any easier. Im the kind of person that feels like if Im not doing anything productive, then it wears on me more than if I was to be busy for 90% of my work day. Its leading me to be more and more worried about my professional future, and Im starting to feel like changing my schedule and setting small goals to build momentum arent helping like I was hoping they would. Have other experienced devs dealt with this? Is it common? Also is it something that youve learned to balance? Or did you make some change that eventually cured it? Thanks in advance for any helpguidance offered.&amp;#x200B;Edit: Thanks everyone for replying, especially those suggesting getting checked out for ADHD. I was talking about this with my wife and she started pointing out some other things I didnt think were related but would also fit the bill, so I went ahead and set up an appointment in mid march to get checked out. I also will make a harder push to get in some more exercise like many have suggested. I dont expect anything to be fixed overnight or for there to be a single thing that magically fixes it, but its nice to know Im not the only one like this! And for everyone that has said this post could have been written by them, it may be worth also checking into ADHD yourself too. This link posted by uAzdle seemed particularly good to me so I wanted to share it here [https:romankogan.netadhd](https:romankogan.netadhd). ","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_tka69d","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/tka69d\/i_made_the_move_from_burnt_out_senior_dev_tech\/","DATE":1647907200000,"PLAIN_TEXT":"I understand this isnt really an option for everyone, you gotta have some inclination towards people skills. I personally always have, but coding got to the point where if it was anything even remotely outside of what I was actively interested in (read: personal side project with no deadlines), if you put a gun to my head and asked me to code another React CRUD app, thats just the day I die I guess . 5-10 years ago Id be happy as a clam putting in 14 hours every day, because I just love a good puzzle and didnt have much else going on in my life. Anyway, I see burn out posts here all the time that seem very relatable. The challenge is usually that you cant really do a career pivot without a pretty hefty pay cut. Well, the people leadership management line seems to let you do it. Your tech background will continue to be useful, especially high level architecture, system design, general tech leadership. The most important soft skills are, imo, empathy, conflict resolution, communication and basic social skills (lets face it, this is not a given for many of us deep in the IC tree - I know it didnt come naturally for me, but its something that can be learned). Im sure theres other approaches to it, but this is the one I know and have made to work for me. If youre thinking about making the jump but are scared you just arent cut out for it, maybe I can put your mind at ease, so ask away !","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_use64e","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/use64e\/devs_who_have_experienced_burnout_how_long_did_it\/","DATE":1652832000000,"PLAIN_TEXT":"Last fall, after a few years of working for a department of the federal government, I found myself dealing with what I now understand to be the typical symptoms of burnout -- no motivation, aversion to work, cynicism, and depression. To me, the problem felt like it was the work. I had a manager who paid no attention to me, repetitive and dull work maintaining legacy database applications, and zero support from colleagues. I did the things I thought I was supposed to do: found a therapist to talk it over with, took six weeks short-term disability on a doctors recommendation, started exercising, journaling, meditating. By the end of the six weeks off I was beginning to feel like myself again.When I went back to work, it wasnt long -- maybe a couple of weeks -- before the old feelings of hopelessness started to surface again. By February of this year, only a few months after my medical leave ended, it had grown once more to be too much for me to handle on my own -- I was crying every day before and after work (and sometimes at my desk) from the mental exhaustion of doing even simple little feature requests or bug fixes, the kind of thing that I used to be able to do quite happily for hours at a time earlier in my career. When I looked at my colleagues code during review, all I could see was the flaws, and I grew bitter and distant from my team. After a last-ditch request for transferring departments was denied by my manager, I decided to pack it up and just quit.I was rapidly headhunted with what seemed like a golden ticket -- fully remote, working on a product in the field I studied in university (NLP), 20% more pay, working with a team of people that seemed during the interviews to be passionate and interesting. I told them I would need two months off before starting the gig to recover from my last job, and they readily agreed. At the end of those two months, once again, I felt so much better: I was exercising, eating well, seeing friends and family, and generally open to what life had to offer. Now Ive been in the new job for only a month, and my mental health has never been worse. All I can see is mountains of technical debt, a culture of mostly freshly-graduated devs who seem happy to work 12 hour days six days a week, and managers who are beholden to sales and unable (or unwilling) to push back for saner deadlines or better working conditions for their teams. At the end of each day I am too exhausted mentally and emotionally to do anything other than order take out and sit in front of the television until I fall asleep. I can barely recognize myself as the person I was a month ago.Ive been a professional SWE for ten years now, and a hobby programmer for another ten years before that. Im only 36, but Im afraid that my career may already be over, and Im still paying off the student loans from my CS degree.So: to those devs who have experienced burnout before, and recovered: is there light at the end of the tunnel? If you took time off to recover, how much time did you need before you felt genuinely ready to work again? What can I do to rediscover the ability to do this job I used to love so well? Or is it time to simply change careers?Edit: Thank you all for your compassionate &amp; thoughtful replies -- what a wonderfully kind community. Reading what you have written and seeing that Im not at all alone in this struggle has been a comfort on a hard day. Many Zoom 1:1s and pairing sessions on my schedule for today, but I will come back in the evening to absorb more of what youve said and leave some replies in the comments.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_qj78g2","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/qj78g2\/just_accepted_a_great_offer_with_a_huge_pay_bump\/","DATE":1635552000000,"PLAIN_TEXT":"Howdy folks, I just wanted to make this post to say its possible to get a good new SWE position without months of crazy interviews and quizzes.I interviewed with this small company (like 50 people, quickly growing). I live in the PNW, the position is remote, and they dont even have an office over here. I applied on indeed and got invited for a video interview a few days later. The interview was half an hour and the interviewer basically told me what the company does and I told them about my relevant experience and expertise (I graduated in 2018 with a non-CS STEM degree, Ive worked in software since then). A lot of my software experience is kinda non-traditional, I usually work close with researchers so the tech I have experience with is a limited. After I finished talking about my experience, the interviewer said I sounded like a perfect fit for the role, and then said that I would probably get an offer. I was given links to schedule two more video-interviews (both less than an hour) with other employees, and told Id get an answer right after that. I was also told I wouldnt be asked coding questions, just questions about my experience and the role.I scheduled those two interviews early the next week. One of them was quite similar to the first interview, I was asked about what I had been working on (projects and stuff), and the technologies I used. For the other, I was interviewing with a higher level manager, and I was asked six high-concept questions about how I learn new things, how I approach problems, how I work with others, and some kinda philosophical questions about the relation between technology and people. My impression after both interviews was that I made a good impression, but since I wasnt really asked anything with an objectively wrong answer I couldnt really be sure. The last interviewer said I would get a response the next day.The next day I woke up to an email with an offer. My previous pay was 81k and this offer was for 135k, plus bonuses. Naturally, I signed the offer and Ill be starting in two weeks. The work sounds super interesting and Im very excited.So the moral of the story is that you can find a great SWE position without six hour long coding interviews or interviews spread out over weeks.I wish yall the best of luck out there!","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_qvf0lz","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/qvf0lz\/level_7_job_search\/","DATE":1637020800000,"PLAIN_TEXT":"Im in the position now where I am unhappy with my work and will be making less each year in the future, but am currently overpaid (Facebook). I also switched to remote work in the last year since the SF Bay housing market is just absurd. I decided to lightly explore the market to see what options are available, especially for remote workers. My goal was to obtain an annual total comp of $1m (or close to it). I was expecting this to be a stretch, so I only talked to a handful of companies.# CoinbaseBy far the most straightforward process. Spoke with a recruiter and then a short behavioral phone screen. They said they could get me $2.6m in stock, which ends up being about $850k-$900k TC. After the phone screen they were ready to move to an onsite interview, but I decided not to pursue it. This ended up being the closest to my target comp, but I wasnt confident in their stock growth.# AmazonAmazon has a separate recruiting chain for higher level engineers, which was a notable improvement over some other places. I ended up doing two behavioral phone screens for leveling (the first did not do a good job exploring my experience and I was pushing them for level 8). I also had two informational calls with a directorvp for two positions that actually fit my profile quite well. The recruiter had originally told me they could get me $3.2m in cashstock (Amazons grant is weird) for a TC of $985k. After the various calls, I was shifted to a new recruiter to handle further interviews. This person informed me that the previous comp was only for SF area, and that for remote they could only get me $600k-$650k. They said they could make a special exception to get up to $800k-$850k. This was disappointing as I felt like we had a good match.# RedditReddit balked at my comp request, said that maybe they could get me $2m but werent sure (so probably ~$700k TC). I asked if I could be considered for level 8, to which the recruiter responded they dont have any high level engineering position available. I tried to explore other options at that point, but the recruiter ghosted me. Everything Ive seen externally about the company suggests it doesnt have a very good culture, and this experience did nothing to dissuade me of that notion.# GoogleIve bounced around a couple recruiters with Google. They refused to give me actual comp numbers, but they didnt seem surprised by what I was asking for. Ive had a couple information meetings with managersdirectors but havent found a good team match yet. It sounds like they dont have a lot of remote availability. Recruiter told me itd probably be best to wait until Q1 to look for more remote positions.&amp;#x200B;Throughout this process I also learned that Google changed their vesting for their initial stock grant from 25% per year to 33%, 33%, 22%, 11%. Theyre doing this to try to mitigate the 4 year cliff, and people being overpaid in years 3-4 based more on luck than performance. It has the benefit that comp isnt changed for the first two years, which means it likely wont affect recruitment very much. I expect more public companies to follow suit with something similar.# FacebookFrom internal discussions it sounds like if you want to join as a remote worker, your stock package will be cut by the same amount as your base wage (5%-15% depending on location). However this may be negotiable, and the stories I see about people joining at MPK and then immediately switching to remote seem like a silly thing to be happening. Stock refreshers are unaffected by remote work status.# TLDRThe tech industry hasnt embraced remote work as much as I had expected. The top tier has limited availability or cuts your wage quite a bit, and companies that have embraced it more fully dont provide top tier wages. Facebook, which already had industry leading wages, is even further out in front of the pack on remote work.&amp;#x200B;Edit: Ive been informed that Coinbases stock grant is basically 4 one year grants that are set each year, meaning that if the stock performs well in the first two years it doesnt help increase your stock payout in the 3rd year. This definitely makes them less attractive.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_p2bmvl","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/p2bmvl\/why_are_employers_against_remote_work\/","DATE":1628640000000,"PLAIN_TEXT":"Ive commonly heard the reason middle managers want to be able to monitor everyone and lord over their reports but that seems a bit angsty and unrealistic that so many middle managers feel that. What is the actual reason?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_qsl7gz","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/qsl7gz\/76_of_my_time_in_october_was_booked_for_meetings\/","DATE":1636675200000,"PLAIN_TEXT":"So I started a new job this Fall at a huge tech company. Ive always worked for small or startup companies. Everything on the business side of this new job is amazing. Great salary, tons of vacation time, low pressure environment, ethical products and policies (a first for me in this industry), good stock earnings, and fully remote.BUT, after months of being here I have basically nothing to show for it. Not a single pull request. Not even some basic bug fixes.This is not me slacking off. The technical side of this company is a nightmare: Documentation is 1000s of text files sitting on-prem. Tons of duplication and contradicting information. The team I landed on is legacy .Net using programming paradigms older than me. 95% of their pull requests are SQL Server stored procedures. I was hired as a PythonJava developer.  DevOps is non-existent other than some hot garbage done by contractors and internal ITsysadmin teams.  I get over 2000 emails per month.  I get at least 8 hours of corporate required training lessons per month. These are always too high level to be useful and are usually theory for waterfall or on-prem monolith infosec.  Assuming 30 minutes for lunch, 75.7% of my month of October was booked for meetings, which almost always run long to boot!  Plus whenever I do get time to code, its all for naught because project management or principle engineers decides to redesign and start again from scratch.Now this post turned into more of a rant than a question, but like holy heck. 75.7% of my month was meetings!What the hell do I do? They are paying me more than double the rinky-dink companies I worked for earlier in my career, but I have no time to actually do work. This is the least productive Ive been in my entire career! Is this normal for a huge corporate company? Ive received nothing but positive feedback from managers, but Im still getting serious anxiety over this. Im starting to debate asking for a team change or getting back in the job market.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_qomwkt","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/qomwkt\/hows_the_work_life_balance_at_these_300k_remote\/","DATE":1636243200000,"PLAIN_TEXT":"I know Im asking folks to generalize, but Im convinced Id need to spend 40+ hours workinglearning and it isnt worth it to me.I make 240k TC in a medium COL area (urban southern state) working about 38 hectic hours a week. Like the team, dont mind the work. Big tech recruiters are the only ones who dont balk at my compensation expectations.So remote 300k+ folks, how are things on that side?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_xomrdq","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/xomrdq\/hiring_at_the_bottom_of_the_market_any_tips\/","DATE":1664150400000,"PLAIN_TEXT":"I work at a small, mission-driven non-profit in a HCOL area. We pay in the bottom quartile for the region, and management is somewhat resentful of even that. We just cant pay more: devs at FAANGs in town make more than our national-level CEO.Its US federal funding, so we must hire US citizens, mostly in the US. Were looking at remote, but, honestly, management and HR arent on board with it, so its a long slog to convince them.Currently, applicants come in two flavors: juniors just out of school with no experience, and professionals from our specialized field transitioning into programming. All seem pretty smart, but its difficult to judge with no history.Any tips for filtering and interviewing candidates at this level?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_ovlai2","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/ovlai2\/im_47_and_beyond_burned_out_how_does_an_old\/","DATE":1627776000000,"PLAIN_TEXT":"(Someone over at rcareerguidance suggested I ask you intelligent and stylish people this question, so here I am. I hope C&amp;P is acceptable.)I have a complex employment situation. I need some guidance. Apologies in advance. I dont think my situation is simple or even remotely normal. I will attempt to summarize.I am 47 years old.I have been with my US company for 20 years.I have a small ownership stake in the company. My shares are worth about $10K if I cashed out now, but cashing out means resigning.I originally started out as a webmaster, but my job has become so much more. I have been the companys sole IT person and programmer for 18 years. I came to a point where there were so many things in maintenance mode, and I couldnt move forward with any new projects, so I went rogue and hired someone out of my secondary budget. I didnt ask permission, I just did it.Five years ago, I moved to England to open and run a EU distribution arm for my US company. I manage this new company by day. This is where I developed the budget to hire my much needed #2 developer. I have a small number of employees to handle the day-to-day labor of the warehouse, and I mostly deal with adminstrivia -- payroll, rent, reorders, leases, sales outreach , that sort of thing.By night I also still do the dev work for the parent US company. My bosses, who seldom listen to personal boundaries, are known to contact me late into the night, for instance. I occasionally have to travel back to the states. I am constantly getting last minute, high priority requests that have absurdly tight deadlines, but I am a goddamn wizard, and I always seem to manage to pull it through.Working for a small idiosyncratic company has its perks, but the boss is a bit mercurial, and Im not often included in the decision making process, even when it concerns my professional domain. This has been a constant -- they were doing this before I lived abroad.Among my accomplishments for this small manufacturing company is creating a custom web-commerce solution that clears $5 million a year. I build all their systems. I have a knack for building systems. I excel at using basic off-the-shelf technology to improve parallelism in the manufacturing and fulfillment process. We get a hell of a lot done with fewer than 2 dozen people on the floor. I am really good at my job.Heres where it gets complicated.I joke that between the programming, the DBA, and the IT work, I do the work of three people, but I only get paid half of what any of them would make. My base salary is $57K USD. So, its not really a joke.For my work in the UK, I get housing and associated expenses covered, a company vehicle, and they pay my taxes. All this makes my total compensation a bit over $100K a year.We rent out our US home for about $1700 a month. Its worth about $200K on the market.I have a years base salary in savings.I max out my IRAs monthly, but even if I didnt put another dollar into our investment accounts, I could still retire with just over $1million in 15 years. Financially, I feel like Im doing about all I can.I am completely exhausted. I dream constantly of work-related stress. I imagine resigning from my job daily. Failing that, Im at the point where I imagine pulling an Arthur Miller and letting my family cash out my life insurance -- $250K. I cant keep going on like this. Im beyond tired of being responsible for everything. Burned out to the point of that, though? Constant depression. Daily crying jags. Im in therapy to just keep holding on, but something has to give.My family? I cant help that responsibility. My kids didnt ask to be here, so theyre my #1 priority. My work responsibilities -- the web store pays everyones salaries. And I have four people in the UK who count on me keeping the local budget afloat to keep their livelihoods intact. I hate hate being the sole person ultimately responsible for the cash flow that pays everyones salaries. The buck definitely stops here.Making things worse, my US employers constantly remind me that Im their most highly-paid employee, and they want to renegotiate my renumeration to pay me less while still expecting me to do both jobs.Im stagnant. Im not learning anything new. I dont really believe in the product Im selling. I do not find meaning or satisfaction in the endeavor that takes up over half of my daily time and 80+% of my emotional energy.Happily, I have lived in the UK long enough that I have secured legal permanent residence for me and my family. For the last five years, I have been legally barred from working for any local company, but now I no longer have that restriction. It was fn expensive to get, but I can now pull the cord and become a free agent should I choose.I am the only earner in my family. My wife hasnt worked in 20 years. In order to meet all of our expenses (kids are in uni, for instance, and Im helping out with some of that), I would have to have a salary of around PS85K GBP, and I suspect that isnt realistic. So we would definitely have to downsize. Alternately, I could get a job making about PS45K, and if my wife could swing PS17K annually, we would also be covered, though the likelihood of her earning that without any work experience or history is low. That, and she has no desire to get a job. -_(tsu)_-Heres the advice part. I have no idea how to go about getting another job at my age. Nearly 50yo programmers arent in high demand. I have skills. I know a number of current programming languages. I have a massive set of accomplishments under my belt. Im great to have on a team, but Im not young.A valid suggestion would be to establish better boundaries with my existing gig -- sounds like a pretty good gig, man. People would kill to be in your shoes.Sure, but that gig has hundreds of strings attached, and setting new boundaries now would go over as well for them as my US bosses cutting my pay would go for me: Hey, guys. Im going to quit the UK branch, but Im still going to live over here and keep doing the programming, and I expect to be paid the same because Ive been severely underpaid by you guys with no raise for over 15 years. Im sure that would play great. sMid life crisis, I guess. Grateful for all its given me, but Im beyond burned out at this job. I am such a shell of a man, that I dont even know what I would do with my life if I got the chance to do anything I want to do. I mostly check out at the end of the day, drag myself to bedtime, and wake up in the morning to do it all over again.If I could think of something I could do, I would even be willing to strike out on my own, but again: empty husk, devoid of ideas.Wow. That was a lot. Thanks for reading this far. I hope it was cogent.tl;dr: How does a old programmer with a ton of experience land a decent job so he can keep feeding his family until retirement?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_nq2ph2","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/nq2ph2\/i_researched_the_origin_of_unlimited_pto_at\/","DATE":1622505600000,"PLAIN_TEXT":"Unlimited PTO. Some love it, others think its a scam. But its worth exploring why this policy was implemented in the first place. And for that, we go back to the early days at Netflix.Its 2003. Netflix is galloping along in pursuit of Blockbuster. Theres a buzz around the office. The chase is on and an employee asks:We are all working online some weekends, responding to emails at odd hours, taking off an afternoon for personal time. We dont track hours worked per day or week. Why are we tracking days of vacation per year?Reed Hastings, CEO of Netflix, doesnt really have a great answer. After all, hes always judged performance without looking at hours. Get the job done in 1 hour or 10 hours? Doesnt matter as long as youre doing good work. Hastings also realizes that some of the best ideas at work come after someones just taken vacation. Theyve got the mental bandwidth to think about their work in a fresh, creative manner. Something thats not possible if youre clocking in and out without any rest.So Hastings decides to pull the trigger. He introduces Netflixs No Vacation Policy which puts the onus on their employees to decide when and how much vacation they need to take. In his book, No Rules Rules, Hastings describes getting nightmares when he first introduced this policy. In one of these nightmares, hed drive to the office, park his car, and walk into a completely empty building. Those nightmares, minus a few blips which well get to in a bit, never really materialized. The policy was a success and soon other companies in the Valley started copying Netflix. Everybody wanted the best talent and implementing a no rules vacation policy seemed like a great differentiator. Except that the same policy which worked so well for Netflix...wasnt working for anyone else.Other companies found that after implementing an unlimited PTO type policy, employees paradoxically started to take less vacation. They would worry that their co-workers would think they were slacking off or that they would get left behind come promotion time. Hastings was surprised. After a bit of digging, he realized the reason behind why these policies had failed. The leaders at these companies were not modelling big vacation taking. Indeed, if the execs were only taking 10 days off, then the unlimited plan would deter other employees from taking anywhere near that amount or more than that.As Hastings put it:In the absence of a policy, the amount of vacation people take largely reflects what they see their boss and colleagues taking. ## Modelling others around youThis concept of modelling others around us applies not only to vacation taking, but to all sorts of behaviors. As we continue to move towards a new distributed, remote-first workforce, theres going to be a lot of ambiguity in the decisions that we need to make.The companies that are able to best adapt to this changing environment will be the ones in which leaders model the right set of behaviors. A big one will be written communication. As the ability to just randomly walk up to someone at the office and ask them a question subsides, well need to document our practices much better and be able to communicate much more efficiently.The more we see others, especially our leaders, invest in written communication and take the time to get better at it, the more we will do it. And never mind us seeing them do this. Reed Hastings wants them to shout loud and clear just how much vacation theyre taking or just how much theyre investing in themselves, so as to encourage everyone else to do it. An example of good modelling in practice is Evernote. The company, which also doesnt limit employee vacation days, actually gives a $1,000 stipend to anyone who takes an entire week off in order to encourage vacation taking ([source](https:www.washingtonpost.comnewson-leadershipwp20130813the-catch-of-having-an-unlimited-vacation-policy)). ## Other ThingsOkay, so there was one more thing that Reed Hastings found out. It wasnt enough for leaders to just model the right behavior. They also had to set context and guidelines.Reed realized this when it was the end of quarter and his accounting team was supposed to be closing up their financial books. But a member of the team, in an attempt to avoid the annual crunch period, took off the first two weeks of January. No bueno. So Reed decided to put in place clear parameters and guidelines on what was acceptable within the context of taking time off. For example, it was imperative to mention things like how many people taking time off at the same time is acceptable and how managers must be notified well in advance of any such long vacations. This would help prevent blows like the one above in the accounting department. ## ConclusionIn the end, it seems like Unlimited PTO can work, but it also needs to be supported with strong management. Individuals need to model big vacation taking and put into place the right guidelines. But I think the lessons here go beyond just vacation. The behaviors we see and notice from those around us eventually have a strong impact on the type of people that we become. This is especially true at the managerial level, where the impact is 1 to N and can result in considerable [cultural debt](https:www.careerfair.ioreviewscultural-debt). So just like this question of unlimited vacation, the answer usually lies in its implementation. Context is king. But that doest always make for good headlines, now, does it. --------Hope that was useful.If you liked this post, you might like [my newsletter](https:www.careerfair.iosubscribe). Its my best content delivered to your inbox once every two weeks. And if Twitter is more your thing, feel free to follow connect with me [here](https:twitter.comOGCareerFair).","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_pzftmg","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/pzftmg\/why_do_people_hate_daily_standups\/","DATE":1633046400000,"PLAIN_TEXT":"When Im reading this subs posts and replies, I often find that people are denouncing daily standups, which I find a bit strange. I have personally found that daily standups are one of the more useful practices in software development (assuming you are developing in a team, and not as a lone wolf). My own experience has been in 3 different teams for over 2 years, 2 of them used some variant of Scrum, and 1 did not (before that I was in companies that didnt use daily standups). The majority of currentpast team members have also found them useful, but not all. I have seen a lot of good sides in dailies, they have helped the team to communicate and find blockers, and help to deal with distractions. They keep everyone up to date and require only a short time. In addition, having a full dev team (has been from 3 to 7) present in a dev-only meeting helps to discuss development things with much less pressure if management would be present. I have found that if management is present, or even PO sometimes, they tend to devolve into status update meetings, but so far in these projects, I have been clear enough that these are supposed to be dev-only meetings. Perhaps in a perfect world, we wouldnt need them if people were good at communicating. But more often than once I have seen that a blocker was discovered during the daily standup or the need for additional meetings found. Sometimes we discover that some person has a problem that more senior dev could assist with. The downside is spending around 10 minutes per day on a daily. Of course, it takes some time to rewind the mind back to programming, but even if you would count it as 30 minutes it is still very valuable. Especially now during remote work when you dont have to reserve a meeting room. I can hardly see this downside being larger than the upside of communication. Especially if you have newer developers in. Is there something Im missing entirely?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_rw5hvs","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/rw5hvs\/where_do_yall_job_hunt_for_fully_remote_positions\/","DATE":1641254400000,"PLAIN_TEXT":"I am pretty underpaid at my current startup (110k for 15+ YoE datafull stackjack of all trades dev), they basically just reset my vested equity, and Im looking around for other possibilities.LinkedIn seems like a cesspool and the last time I used it I barely got any interest. I tried WeWorkRemotely but it didnt have too many listings at the time. I got a ton of response on AngelList but Im not sure I want to go the startup route again. Im a few years out of the hiring loop and wondering if yall have any good places to look and compare job postings.Bonus question: Do yall try to work somewhere that has a missionproductservice you care about? Or just maximize work life balance andor salary?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_10mqe35","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/10mqe35\/my_new_em_is_way_too_handson_and_its_stressing_me\/","DATE":1674777600000,"PLAIN_TEXT":"We had a new engineering manager join our team a few months ago because our then manager got promoted. This new EM is way too hands-on on everything. Literally everything. They want to know every single little detail of everyones work all the time. I was ok with it at first, thinking no harm in a manager wanting to get down into the roots, but lately its just been stressing me out. Its like they want everything to be done their way only or they need explanation on why it wasnt done that way. I will give some examples on what it looks like: 1. They leave nit-picky comments on my pull request. I dont know how common this is, but out of my 4 previous managers, no one reviewed code. Again, no harm in having more eyes on your code. But all their comments are either very minor, like this name doesnt sound good, can you change it etc., or they are very broad, like why did you take this approach, did you evaluate options x, y, and z. Thing is, I did evaluate options x, y, and z and discussed them with the area owners and my tech lead, evaluated pros and cons and settled on that approach. But they are not convinced, they want a one-pager summarizing all the discussion. I did cave in and wrote them a one pager and their only comment: I like what you had in the doc, but when I ask for a one pager I expect more details and not just a high level view. Their exact words. I really have no idea how to fit all the details of a complex multi-week task into one page and more importantly, I dont understand why I am supposed to do it _after_ I already wrote the code for it, tested it, got it reviewed and deemed it ready to go into Production, just to please them.2. They called me at 9 am, knowing full well that I will be traveling and was on leave, asking me to address some comments that another engineer has left on my work, because the deadline was the next day. I checked the comments on my phone and they were very minor but I already packed my laptop so I thought I will finish them once I reach my destination and get a chance to unwind and open my laptop again. After all, the deadline was the next day. But, come 7 pm, I get a message asking me if I have completed the work. I told them I still didnt reach my destination and I will get it done that day itself and they dont have to worry about it. 30 mins later, I get another text saying that they have made the required changes and just need me to review them and see if they are ok. WTF?! Why call me at 9 am on a day I was traveling and already had a lot on my plate if they could do it themselves? And why go and do it when I assured them that I will get it done??3. I created a pull request on Friday, assigned it to one of my peers who is the owner of that area for review, discussed a few things and logged out. I logged in on Monday morning, saw that the PR was approved but the CI build has expired so I ran it again because its needed for the merge. 30 mins later, before the build even finished, I get a message from my manager asking me why I havent merged the PR yet. I told them it wasnt approved and the build expired. To my bad luck, the build finished just then and they checked the PR and messaged me saying the PR is approved and the build is done and I should merge it. As if I didnt know that!4. They enabled 2FA for accessing our Production resources on Friday evening, without discussing it with anyone. My colleague and I had some work to be done on Saturday and we both logged in only to find out neither of us could access the resources because 2FA has been turned on and setting up 2FA requires approval from my manager or my lead and they were not online. We had to wait until the next Saturday to get the work done and it just pushed all our timelines5. Just today, they made it mandatory to have 3 reviewers on your pull request for it to be accepted. 3! Including the person who wrote the code, that would involve 4 people for every pull request. We are a team of 12 working on a very diverse set of features, how the fk are we supposed to gather 4 people with enough knowledge on that specific task?Sorry for the rant. I never had this happen before and I dont know how to process it. I dont know if we got off on the wrong foot and they dont trust me to do the right thing or if they are like this with everyone. We are 100% remote so I cant gauge how my coworkers are feeling about them and none of them are openly complaining about anything. Am I in the wrong here? Am I being too sensitive? Is this normal? What do I do? Because I dont feel like working under them anymore and I dont think its a good time to switch jobs. I can switch teams within the company but I am not sure how it would play out.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_u100v8","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/u100v8\/i_think_ive_lost_my_confidence\/","DATE":1649635200000,"PLAIN_TEXT":"Ive been developing software professionally for over a decade at this point, but recreationally for much longer. Ive been through a number of jobs and held a number of different positions, like many of you here. My first job out of university was for a local company that had just left its startup phase and was starting to really branch out. I was put on a small team with a number of people I knew from school and got to work. My first major project as a junior was a poorly defined software feature, I struggled getting the help I needed for it, and after months of work it was ultimately cancelled. Looking back now I was in no way set up for success as a junior at the time, but it still really set the mood for my career going forward. I seemed to be a magnet for doomed projects and those shitty bugs that end up being WAY larger than they have any right to be. My velocity and output was always low compared to my peers, but I was also always lauded as a good resource for obscure knowledge or weird lore. I was an enabler even if I apparently wasnt completing my own work. Every time a project failed or a bug took too long I was always told it wasnt my fault, the project was bad or the bug was weird, but on the whole it looked really bad for me. I ended up thinking maybe it was my fault, I wasnt as good of a developer as I thought. Combined with the stress of my first kid at the time, I went through some fairly heavy depression and imposter syndrome. My small team ended up getting re-orgd and because of my apparent productivity problems I was put on the bug queue to retrain me which I felt was insulting. I ultimately left that job for another one working for a consulting company, but that was short lived as the company was sold off and spun down and I was let go with a bunch of others. Just another failed project. I ended up taking a government job where I largely coasted, again due to depression, and let my skills seriously lapse. I was allegedly brought in to help with a major rewrite due to my .NET history, but the project ended up being mostly outsourced and, again, a disaster. During that time I worked on nothing interesting beyond training the rest of the team in .NET. Because of my history as an enabler I left that job at the beginning of the pandemic for a contract in a managementarchitecture position with a European finance software company which ended up being yet another disaster, between poor organization, worse communication, and disastrous work life balance I opted not to renew the contract after 6 months and took a step back down to a remote senior developertech lead position on a small team with a slightly more local company with better hours.Unfortunately Im now at the point where Im loathe to take on any large projects. I just cant seem to motivate myself to actually do anything worthwhile because Im always anticipating the rug pull. I can do crazy good work for low stakes bug fixes when I was getting up to speed with the system, but now any time theres even a hint of pressure my brain shuts down and refuses to let me work on anything, and since Im tech lead for my team practically everything I touch is the important stuff. Ive been writing code since I was 7, I learned Basic from a book of programs, I taught myself QBasic with the F1 help menu references, my final project for high school intro to CS in grade 11 was literally a full game engine in qbasic with scripting, mapping, tilesets, sprite animation and music that we used to recreate FF1. None of what Im working on feels like it should be difficult, but it also feels like the most impossible task in the world when Im supposed to be doing it.I dont know what Im expecting to get out of this, I dont deserve pity and after 10 years I doubt Ill have an epiphany, I think I just needed to get this out of my system, late on a Sunday when nobody will see this. Because tomorrow its very likely that Ill be cashing in yet another failed project, but this time it IS my fault. I choked, I couldnt do the work. What seemed like a perfectly doable project slowly turned into an insurmountable mountain as I repeatedly failed to start, over promised completion based on where I felt I should be instead of where I was, worked dumb hours to try and get caught up, and ultimately delivered a pile of hastily slapped together garbage at the 11th hour. I feel like maybe this isnt the career for me any more, but I also have no idea what I would do with my life either were I to quit.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_w7kdtx","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/w7kdtx\/how_do_i_transition_from_a_developer_to_a_manager\/","DATE":1658707200000,"PLAIN_TEXT":"I had a 1:1 with my boss just this weekend. He had been chosen for another position in the company. He wanted to know if I would like to replace him as the new manager. I asked for some time to think about it. A move to management made sense. I have been writing code professionally for almost 9 years and would love to continue coding (at least dedicating 3hours a week to code) even when I become a manager. This is because I want to be directly involved in the development process to have a good sense of whats being built by the department, and how and when its going to be done. One of the things I will do is to invest in tools, especially automation and review tools like[ LinearB](https:linearb.io) or [Gitlab](https:about.gitlab.com) to make work easy since were a development team working remotely and also the fact that less than 2% of our processes are automated and this has impeded productivity in many ways.As somebody who loves to prove to myself I can learn anything, a brand new challenge would be a massive motivation for me. I accepted the promotion, but not without dealing with my doubts. Could I do the job? Would the extra responsibility be a burden too heavy for me? Would my coworkers accept me as their manager? I need help to manage this transition before it blows in my face. I will be glad if you can point me to resources that I can get started with or any advice at this point will be a great bank of resources for me.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_x3yni2","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/x3yni2\/building_camaraderie_in_a_fully_remote_team\/","DATE":1662076800000,"PLAIN_TEXT":"How do we move from our stand up and other meetings being all-business, and no chatter about outside work subjects, to a place where we shoot the shit, have inside jokes, talk about House of the Dragon, etc?Were a brand new team, all hired in the past 6 months except the lead. We have pretty good chemistry already; we all work well together. Were just really lacking in the friendship department.(not that i think we all have to be friends friends. But I think we should at least attempt to build up a warmer, more personal relationship to one other)It feels unnatural to force it but also, how would it ever happen naturally? Idk, just looking for thoughts, ideas, etc that people have experienced with remote work.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_vxz9ew","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/vxz9ew\/how_not_to_get_distracted_during_the_micro\/","DATE":1657670400000,"PLAIN_TEXT":"For larger chunk of down time, e.g. 5-10 minutes while the test suite runs, its easy to take a break or answer emails.But what about micro downtime, e.g. 10-20 second waiting for a script to lint and start remote jobs? For me, it usually goes like this:1. Kick off scripts2. Get bored after 10-20 secs. Check reddit  hacker news for minutes3. Come back to find out the script fails4. Take more time to debug the script than necessary due to lost focus5. Back to (1)So even though the downtime is only for 10-20 secs, I end up wasting minutes during each cycle. Over a work day, I can easily lose 1-2 hours this way.How do you deal with this problem? EDIT: I too value breaks, I just want to take longer, meaningful breaks to nap, talk to my kids, read a book, etc. instead of getting lulled by seconds of waiting into internet doomscrolling.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_sefhl4","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/sefhl4\/mid_career_faang_push_prep_time\/","DATE":1643241600000,"PLAIN_TEXT":"12 YOE, mid 30s. I make a comfortable amount as a full stack leadmanagery person, mostly dealing with CRUD APIs  mobile app work. 176k yr, 205-215k TC all benefits (401k, espp, bonus) considered in an mcol area.I feel it is time to push myself. Ive always been afraid of interviews and it has held me back from surveying to find my true TC range. I get new jobs via networking only. I suspect I have more to learn and more potential than where I am beginning to stagnate.I am studying systems design (very fun - I am filling in gaps for distributed systems). Leetcode medium. Prepping for behavioral tell me a time when.... Going to do test runs on interviewing before doing real ones. FAANGunicorns is the goal - with a bias toward the ones that arent doing leetcode hard.How long should I be preparing for? How long did you prepare? We are in a crazy industry where it seems 250-300k TC remote should be achievable outside FAANG. All you have to do is show up and interview well. At mid career with any decent experience, Ive found it is not too hard to get the foot in the door with phone screens. I am nervous though about under preparing - I want to take the right amount of time to study. Or maybe I am prematurely optimizing!","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_rfkgiz","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/rfkgiz\/bad_job_storytime\/","DATE":1639353600000,"PLAIN_TEXT":"[Earlier, a thread was posted asking about when you know its time to leave a job](https:www.reddit.comrExperiencedDevscommentsrfbhlywhen_did_you_know_it_was_time_to_leave_a_company). The thread was mod-removed for being general career advice, which is fair, but by that points the comments had turned into storytime, and I was enjoying the stories. So Im just creating a thread with that as the main purpose. Ill start. Id joined a small, startup, consulting company as a senior developer. The first few months there were pretty good, surprisingly, but it didnt last. As the company got more used to having its dev team in one state and sales in another, and as they onboarded more and more developers, standards started to shift, and they wound up perpetually complaining about not having enough engineers to staff all the projects while simultaneously having some projects significantly overstaffed because theyre an important client while simultaneously working fresh-from-a-bootcamp juniors to the bone with less-than-adequate support. Engineering didnt have the political capitol to push back, which in retrospect I shouldve seen coming the entire time, because the remote engineering team was ran by a Sales VP whod known the CEO for a very long time. I was staffed on one of these obscenely overstaffed projects. I didnt really like it, because the client was basically the worst of all worlds for a tech company (extremely locked down, low general skill level, antiquated tech stacks full of legacy code, etc) and they had basically 5 senior devs to staff a 1.5dev maintenance project. I didnt have much to do. Which is bad enough on its own, but my review came around and I was heavily punished for not doing anything. I responded by explaining that its because the project was extremely overstaffed. They shrugged and said its what the client wants. I responded by basically saying they can either stop complaining about me doing nothing when they put me in a position where theres nothing to do, or they can move me to a new project when able, but Im not playing internal politics against my team so I can look good. They responded by telling me they dont have a policy of moving people off projects when theyre struggling, and that they think its better for their devs to work it out with the client. I started applying to jobs in earnest. The cherry on top was the $0.00 raise that came on the raise cycle from the review. I wound up sticking it out 2ish months - my wife was around 7 months pregnant when this all went down. But it ended in me walking in on the Monday of my first full week of paternity leave with a resignation letter and my equipment, effective immediately.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_l951f2","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/l951f2\/successfully_negotiated_0_paycut_for_remote\/","DATE":1612051200000,"PLAIN_TEXT":"Ive been living and working in SF for a couple Big N companies since graduating in 2010. Basically only had positive experiences here and my career is in a great spot, but my wife and I have been planning to leave CA for a while to be closer with family. Also, the last couple years have been highlighting some of SFs problems and the yearly forest fire season is getting worse too. So when the pandemic hit we both started discussions with our respective companies to relocate in 2021. With the news of Twitter, Facebook, and Google shifting towards remote-friendly employment for Silicon Valley employees, it seemed like the best chance to ask for it. Im currently staff SWE and my wife is an associate director of product (different companies) so we were both confident about getting the relocation approved. The big question was just how the salary adjustment would be. Our target city is a Southern LCOLMCOL area. If you go to one of those free COL comparison websites, itll say we can maintain the same lifestyle if we lost 75% of our income.Of course, the idea isnt to maintain the same lifestyle but to improve it. So we figured there would be some salary negotiations involved.In my case, my company came back with a 10% reduction which aligned pretty closely to the cuts that companies like Twitter were publicizing. However, since I knew negotiations were possible, I had started interviewing at other companies to see if they would offer a fully remote position with my current TC and surprisingly there were quite a few hits. I went through some of the motions but didnt bother doing any virtual onsites; I just aggressively steered the discussion until both the hiring lead and engineering managers confirmed they could offer my current TC or better. I mentioned that information to my manager and HR contact, and they worked the negotiation up the ladder.This is where having a great relationship with my team and manager paid off. I wasnt directly part of the meetings but apparently my manager, my skip, and our team lead (non-eng person) fought for my case in front of our org execs. This had to happen because the company has no business entity in my target city, meaning they had to do a bunch of work just to employ 1 person there. Eventually they got back to me saying my 0% paycut relocation was approved. My wife got away with a 10% paycut which we figured was reasonable since her role is much harder to find compared to SWE roles. No change to our equity or bonuses.Bottomline, if anyone else is considering leaving HCOL for LCOL, now is a pretty good time to do it. Theres more wiggle room now than probably ever before.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_spijzc","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/spijzc\/my_team_has_basically_no_remote_culture_what_can\/","DATE":1644451200000,"PLAIN_TEXT":"Just joined an honestly great company with really cool people on it, but the team Im on does jack shit for getting to know each other, hang out with each other, etc. I know its remote, but we havent done anything together!What are some things your team does that I can suggest to my own?Edit: theres some really good stuff in here, thanks. The optional + during work approach is definitely best.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_qwr6l2","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/qwr6l2\/best_way_to_leave_a_company_you_love\/","DATE":1637193600000,"PLAIN_TEXT":"Hi, all. Ive been a developer for 12 years. 4 months ago I was hired to a new company. I like it a lot. Theyre great, good people that really take care of their employees. However, Ive recently received news that I am approved for permanent residency in my wifes home country. We are moving to the other side of the planet. My new company really needs me, and I think theyre a great organization. I know theyll be very disappointed with my resignation. How can I make it better for my company while also protecting myself?Im thinking of giving them like 2 months notice before my last day. Something like that maybe. Any other ideas?If it matters, I am currently based in the US.Update: based on the helpful feedback Ive received, Ive decided to give my company 2-3 weeks notice, explain that I still like the company, and offer to work remote as a contractor. Thank you, everyone!","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_y8qibm","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/y8qibm\/swes_working_remotely_for_us_companies_from\/","DATE":1666224000000,"PLAIN_TEXT":"Im currently working as a SWE for an US company and making about 110K per year while living in a third world country. 5 years of professional experience. Ive seen plenty of comments on reddit about ridiculous salaries but Id guess most of those are for people living in the US.So Im wondering; Are there many other experienced SWEs working remotely for US companies and making over 100K?There are times where I feel tempted to start job hunting again to increase my salary, but perhaps that would be greedytoo ambitious if my salary is on the high end for international SWEs working remotely for US companies and I should just settle.What do you guys think?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_tzcu1q","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/tzcu1q\/leaving_company_with_large_project_incomplete\/","DATE":1649376000000,"PLAIN_TEXT":"Looking for advice. I am in the final interview stage for a new company that would lead to a 33% pay increase plus full remote. I would accept the offer upon retrieval. My concern is leaving my current company. I have been soloing a large project for the last 5 months and it is still quite a ways off from the final product. I am the only one who has worked on it and would feel like a complete ass to just up and leave with it in its current state. Have any of yall been in the same situation. How did you handle your resignation?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_xinyet","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/xinyet\/how_to_approach_job_hunt\/","DATE":1663545600000,"PLAIN_TEXT":"The startup I was working at recently laid off most of their engineers including myself. I have 15 yoe in multiple languages, ive coached, mentored, been an EM, principal dev, in large corporate companies and small start ups.The thing is Ive never really looked for jobs before because I know companies in our area well and have a good network of people I know so Ive always known where I wanted to work next and got a position there.Now in a remote first world there are lots more opportunities. I have a young child so I like working remotely and the flexibility it can offer.Ive been offered positions in a couple of companies through friends and former colleagues, but I want to take my time and see whats out there.How can I ensure that Im not missing opportunities and that I put myself across as well as I can?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_u5k222","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/u5k222\/experiences_interviewing_for_a_em_position\/","DATE":1650153600000,"PLAIN_TEXT":"I was inspired by this [post](https:www.reddit.comrExperiencedDevscommentsu51av3reflections_on_2022_staff_level_interviews) about going for a Staff level position. Heres what I recently experienced interviewing at four well known tech companies (including a couple FAANGs) for an EM position.About me25+ YOE (~15 as IC, ~10 as EM) all at small or medium sized tech companies none of which youve heard of.PrepIts been years since I last interviewed and I was pretty worried so I started preparing six months ago. I know my behavioral and managerial skills are solid but I was worried about coding and system design so I focused on those.I watched every YouTube system design video I could find, did LeetCode every day, I read all of DDIA, I listened to tech podcasts, read tech blog posts on scale, I just happened to find a copy of Grokking the System Design on github and ran through that, I did one system design practice interview on my own once every couple weeks, and I wrote out a dozen or so stories for tell me about a time when questions and practiced them daily (I even created my own Anki cards for them).It feels like overkill when I type all that out but having done all that either gave me the knowledge or confidence to get through it all so I dont regret it. I just hope I wont have to do it again.Getting to First Base1 company reached out to me on LinkedIn1 company was me submitting an application online2 companies were internal referralsI had also put internal referrals in with four other large tech companies. I was rejected immediately from one and heard nothing back from the others.Coding InterviewsOnly half the companies required it. One non-FAANG had me do two. Neither company used questions Id seen on LeetCode.Researching on the internet how these companies do their coding interviews and what they expect from you really helped because they were wildly different - one wanted a fully functional solution, well-named and -defined methodsvariables, fully tested; the other just wanted the algorithm.I think having coded for years is what got me through these but LeetCode practice helped.System Design75% of the companies required system design with one FAANG requiring two. Like OP said none of them were like what you see on YouTube. They didnt want to talk indepth about non-functional requirements; some didnt want to talk about them at all (lets not worry about scale) but I think it helped to mention it. None of them were as big and vague as you see on YouTube. No one asked Design Instagram. Instead they were much more detailed, specific projects (design an API to do this specific thing for this specific subset of users).Again, real world experience was my big advantage here but having all that studying done didnt hurt. I think the biggest help was having a plan going into them: Clarify requirements Mention non-functional requirements Go over Data Entities (e.g., your DB tables) Talk APIs Outline brief system architecture Identify bottlenecks and scale opportunities (if time allowed)None of them required knowledge of NoSQL databases (all that memorizing about Cassandra gone to waste lol) but I did need to know that file stores exist and how to utilize them.Tech Deep Dive (or what OP called reverse system design)Like OP said, these are where you have to come armed with a project you lead as an EM and talk in as much depth as you can about it. 100% of the companies asked this.I actually found these the hardest because Ive been working at a 30,000 ft level for so long Im not as involved in the details as I used to be. But I picked a couple fairly technical projects Im involved with, refamiliarized themself with them, and was good to go. Just be ready to talk about everything and show how you lead them as the EM, the tech and non-tech decisions you as the leader had to make, challenges you ran into, etc.Behavioral  ManagerialEach company asked these to a varying degree. One FAANG asked a LOT of them, the other companies only devoted a couple interviews to them. As an EM be ready to talk about a time you recognized poor performance and what you did about it - 100% of them asked this question. Also be ready to talk about a time you recognized high performance and how you got someone promoted - 75% of them asked this.OP said that the rest of his interviews were just talking. That is definitely not what I experienced. One non-FAANG wanted me to talk through my career. But in later interviews this company, and all the rest, definitely asked a lot of tell me about a time when questions.Practicing my stories for these definitely helped. I can tell the story about firing someone in my sleep now.The ProcessTo my surprise the FAANGs were much better about this and much more personal. The recruiters were all fab.Also to my surprise the non-FAANGs were pretty bad about this. The non-FAANGs just pointed me to their online hiring portal when I had any questions or, in one case, didnt reply at all. I didnt feel particularly valued as a candidate.But all of them took longer than I (possibly naively) expected. Recruiter initial chat to offer for all of them was no less than two months.The OffersOP said the market is hot for Staff engs right now, its no different for EMs. I ended up with offers from three of the four companies. Those offers were for more than Ive ever made in my life and only got better as they came in landing on a truly embarrassing amount. All of them fully remote.My Advice Dont spend as much time as I did on coding. Just make sure youre familiar with your language of choice and data structures and youll likely be fine. Getting up to speed on system design wont hurt, but make sure youre involved with your current projects so you can speak about them intelligently. Be able to talk about why you chose a certain technology or what considerations and trade-offs you had to make, what happened when you realized you werent going to hit the deadline, etc. Practice your tell me about a time when stories especially around high  low performers, working with other teams, handling internal disagreements, etc - the things youd be expected to do as a manager.Good luck, managers.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_nmodyl","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/nmodyl\/drunk_post_things_ive_learned_as_a_sr_engineer\/","DATE":1622073600000,"PLAIN_TEXT":"Im drunk and Ill probably regret this, but heres a drunken rank of things Ive learned as an engineer for the past 10 years. The best way Ive advanced my career is by changing companies. Technology stacks dont really matter because there are like 15 basic patterns of software engineering in my field that apply. I work in data so its not going to be the same as webdev or embedded. But all fields have about 10-20 core principles and the tech stack is just trying to make those things easier, so dont fret overit. Theres a reason why people recommend job hunting. If Im unsatisfied at a job, its probably time to move on. Ive made some good, lifelong friends at companies Ive worked with. I dont need to make that a requirement of every place I work. Ive been perfectly happy working at places where I didnt form friendships with my coworkers and Ive been unhappy at places where I made some great friends. Ive learned to be honest with my manager. Not too honest, but honest enough where I can be authentic at work. Whats the worse that can happen? He fire me? Ill just pick up a new job in 2 weeks. If Im awaken at 2am from being on-call for more than once per quarter, then something is seriously wrong and I will either fix it or quit. pour another glass Qualities of a good manager share a lot of qualities of a good engineer. When I first started, I was enamored with technology and programming and computer science. Im over it. Good code is code that can be understood by a junior engineer. Great code can be understood by a first year CS freshman. The best code is no code at all. The most underrated skill to learn as an engineer is how to document. Fuck, someone please teach me how to write good documentation. Seriously, if theres any recommendations, Id seriously pay for a course (like probably a lot of money, maybe 1k for a course if it guaranteed that I could write good docs.) Related to above, writing good proposals for changes is a great skill. Almost every holy war out there (vim vs emacs, mac vs linux, whatever) doesnt matter... except one. See below. The older I get, the more I appreciate dynamic languages. Fuck, I said it. Fight me. If I ever find myself thinking Im the smartest person in the room, its time to leave. I dont know why full stack webdevs are paid so poorly. No really, they should be paid like half a mil a year just base salary. Fuck they have to understand both front end AND back end AND how different browsers work AND networking AND databases AND caching AND differences between web and mobile AND omg what the fuck theres another framework out there that companies want to use? Seriously, why are webdevs paid so little. We should hire more interns, theyre awesome. Those energetic little fucks with their ideas. Even better when they can question or criticize something. I love interns. sip Dont meet your heroes. I paid 5k to take a course by one of my heroes. Hes a brilliant man, but at the end of it I realized that hes making it up as he goes along like the rest of us. Tech stack matters. OK I just said tech stack doesnt matter, but hear me out. If you hear Python dev vs C++ dev, you think very different things, right? Thats because certain tools are really good at certain jobs. If youre not sure what you want to do, just do Java. Its a shitty programming language thats good at almost everything. The greatest programming language ever is lisp. I should learn lisp. For beginners, the most lucrative programming language to learn is SQL. Fuck all other languages. If you know SQL and nothing else, you can make bank. Payroll specialtist? Maybe 50k. Payroll specialist who knows SQL? 90k. Average joe with organizational skills at big corp? $40k. Average joe with organization skills AND sql? Call yourself a PM and earn $150k. Tests are important but TDD is a damn cult. Cushy government jobs are not what they are cracked up to be, at least for early to mid-career engineers. Sure, $120k + bennies + pension sound great, but youll be selling your soul to work on esoteric proprietary technology. Much respect to government workers but seriously theres a reason why the median age for engineers at those places is 50+. Advice does not apply to government contractors. Third party recruiters are leeches. However, if you find a good one, seriously develop a good relationship with them. They can help bootstrap your career. How do you know if you have a good one? If theyve been a third party recruiter for more than 3 years, theyre probably bad. The good ones typically become recruiters are large companies. Options are worthless or can make you a millionaire. Theyre probably worthless unless the headcount of engineering is more than 100. Then maybe they are worth something within this decade. Work from home is the tits. But lack of whiteboarding sucks. Ive never worked at FAANG so I dont know what Im missing. But Ive hired (and not hired) engineers from FAANGs and they dont know what theyre doing either. My self worth is not a function of or correlated with my total compensation. Capitalism is a poor way to determine self-worth. Managers have less power than you think. Way less power. If you ever thing, why doesnt Manager XYZ fire somebody, its because they cant. Titles mostly dont matter. Principal Distinguished Staff Lead Engineer from Whatever Company, whatever. What did you do and what did you accomplish. Thats all people care about. Speaking of titles: early in your career, title changes up are nice. Junior to Mid. Mid to Senior. Senior to Lead. Later in your career, title changes down are nice. That way, you can get the same compensation but then get an increase when youre promoted. In other words, early in your career (&lt;10 years), title changes UP are good because it lets you grow your skills and responsibilities. Later, title changes down are nice because it lets you grow your salary. Max out our 401ks. Be kind to everyone. Not because itll help your career (it will), but because being kind is rewarding by itself. If I didnt learn something from the junior engineer or intern this past month, I wasnt paying attention. Oops Im out of wine. Paying for classes, books, conferences is worth it. Ive done a few conferences, a few 1.5k courses, many books, and a subscription. Worth it. This way, I can better pretend what Im doing. Seriously, why arent webdevs paid more? They know everything!!! Carpal tunnel and back problems are no joke. Spend the 1k now on good equipment. The smartest man Ive every worked for was a Math PhD. Ive learned so much from that guy. I hope hes doing well. Once, in high school, there was thing girl who was a great friend of mine. I mean we talked and hung out and shared a lot of personal stuff over a few years. Then there was a rumor that I liked her or that we were going out or whatever. She didnt take that too well so she started to ignore me. That didnt feel too good. I guess this would be the modern equivalent to ghosting. I dont wish her any ill will though, and I hope shes doing great. Im sorry I didnt handle that better. I had a girlfriend in 8th grade that I didnt want to break up with even though I didnt like her anymore so I just started to ignore her. That was so fucked up. Im sorry, Lena. You know what the best part of being a software engineer is? You can meet and talk to people who think like you. Not necessarily the same interests like sports and TV shows and stuff. But they think about problems the same way you think of them. Thats pretty cool. Theres not enough women in technology. What a fucked up industry. That needs to change. Ive been trying to be more encouraging and helpful to the women engineers in our org, but I dont know what else to do. Same with black engineers. What the hell? Ive never really started hating a language or technology until I started becoming intimately familiar with it. Also, I think a piece of tech is good if I hate it but I simultaneously would recommend it to a client. Fuck Jenkins but man I dont think I would be commuting software malpractice by recommending it to a new client. That being said, git is awful and I have choice but to use it. Also, GUI git tools can go to hell, give me the command line any day. Theres like 7 command lines to memorize, everything else can be googled. Since I work in data, Im going to give a data-specific lessons learned. Fuck pandas. My job is easier because I have semi-technical analysts on my team. Semi-technical because they know programming but not software engineering. This is a blessing because if something doesnt make sense to them, it means that it was probably badly designed. I love the analysts on the team; theyve helped me grow so much more than the most brilliant engineers. Dark mode is great until youre forced to use light mode (webpage or an unsupported app). Thats why I use light mode. I know enough about security to know that I dont know shit about security. Crap Im out of wine. Being a good engineer means knowing best practices. Being a senior engineer means knowing when to break best practices. If people are trying to assign blame to a bug or outage, its time to move on. A lot of progressive companies, especially startups, talk about bringing your authentic self. Well what if your authentic self is all about watching porn? Yeah, its healthy to keep a barrier between your work and personal life. I love drinking with my co-workers during happy hour. Id rather spend time with kids, family, or friends. The best demonstration of great leadership is when my leader took the fall for a mistake that was 100% my fault. You better believe I wouldve walked over fire for her. On the same token, the best leaders Ive been privileged to work under did their best to both advocate for my opinions and also explain to me other opinions that conflict with mine. Im working hard to be like them. Fuck side projects. If you love doing them, great! Even if I had the time to do side-projects, Im too damn busy writing drunken posts on reddit Algorithms and data strictures are important--to a point. I dont see pharmacist interviews test trivia about organic chemistry. Theres something fucked with our industrys interview process. Damn, those devops guys and gals are fing smart. At least those mofos get paid though. Its not important to do what I like. Its more important to do what I dont hate. The closer I am to the product, the closer I am to driving revnue, the more I feel valued regardless of how technical my work is. This has been true for even the most progressive companies. Linux is important even when I was working in all Windows. Why? Because I eventually worked in Linux. So happy for those weekend where I screwed around installing Arch. Ive learned to be wary for ambiguous buzz words like big data. WTF is big data? Ive dealt with 10k rows streaming every 10 minutes in Spark and Kafka and dealt with 1B rows batched up hourly in Python and MySQL. Those labels can go fuck themselves. Not all great jobs are in Silicon Valley. But a lot are.Finally, if you really want to hurt me, dont downvote I dont care about that. Just ignore this post. Nothing makes me sadder than when I wrote a long post and then nobody responds. So if you hate this post, just ignore.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_owi2bc","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/owi2bc\/this_morning_a_hard_decision_was_finalized\/","DATE":1627862400000,"PLAIN_TEXT":"Im a manager who is about to make a very tough call but I think it helps to share instances like this so we can talk about as a group.I have been managing Jeff for about 1 year, I took over this team after some products were moved around and this one fell to me. Jeff is the senior most technical person on the team, hes launched successful products for the company on numerous occasions and is without a doubt a subject matter expert in this domain. You can imagine that on paper, Jeff is highly valued. Previous managers have been giving Jeff raises and awards to incentivize him to stay.&amp;#x200B;I came to this team to keep the ball moving and speed up some product work that was critical to the business. My instinct was to lean on Jeff and figure out how to support him - did he need to shielded more? need more senior talent? more interesting work? I spent about 6 months watching Jeff work, on a team of 8, and finally saw why this team was only producing so much.&amp;#x200B;Problem 1: Jeff prevents others from growing. I dont think its a conscience decision but he can never let go of another stream, one that he isnt responsible for. He constantly throws up roadblocks, insists his opinion on PRs is the only way and throws his weight around to enforce it. Ive called him out on this but the problem has plagued this team. I have some wonderful mid-level engineers who are capable of being senior and are being held back because Jeff wont let go and doesnt trust other engineers.&amp;#x200B;Problem 2: Jeff cant be wrong. A couple times Jeff mentioned a legacy reason for the cause of an issue but when we dig into it further and further, we tend to find out thats not entirely accurate. Jeff is unable to sympathize with the engineers who investigate something and it has created conflict. Ive also brought this up and he doubles down on his defense. &amp;#x200B;Problem 3: Jeff has built himself a hero culture. Product launches are his as are big bug fixes or technical debt wins. I have a suspicion people have left this team in the past is because it only succeeds when Jeff does. &amp;#x200B;So today, Im going against every previous manager and Im letting Jeff go. On paper Jeff has done great work for himself and the company but it has been at the cost of other members of the team. While Jeff and I have talked through these problems, things arent changing and Im unwilling to see another set of folks leave for career growth . &amp;#x200B;For all the Jeffs out there - I think you will be fine in the right environment, especially in an early start up. Youll thrive there, youll be happy with the recognition and especially because the buck stops with you. &amp;#x200B;For others who might think theyre a Jeff. You can still hold strong opinions and have a strong desire to work on great productsprojects but the best career advice I can give you is to work together. Dont cannibalize others growth so you can get the win, instead focus on solving problems together and learn how to inspire others with your work and collaboration. This is not zero sum, many people on a team can succeed at once.&amp;#x200B;For others who work with a Jeff. Share your frustration with your manager that Jeff isnt pushing your growth but instead blocking your growth. I wish more team members told me this, it took me a while to see it myself. Some Jeffs are so used to having to do it all that they forget theyre on a team. &amp;#x200B;For those that manage a Jeff, hopefully the paragraph above sparks a conversation with you. As a manager you are responsible for a lot but your teams health is at the top. Find supportive senior members of the team and watch your products launch faster, with higher quality and most importantly, watch your entire team celebrate the win together. Nothing feels as good as that.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_up0fsa","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/up0fsa\/my_story_of_joining_the_great_resignation\/","DATE":1652400000000,"PLAIN_TEXT":"Twenty years into my software engineering career, I have decided I had to take a break for my mental health. I became part of the Great Resignation of the Early 2020s (I hope the history books phrase it, and capitalize it, just like that).\r\rOne thing I never felt until the last couple of years was burnt out, which was hard to understand considering Ive always felt Ive done a good job of respecting my own limits as far as how much time Im going to devote to my job. I ran across a tweet recently that accurately articulated what Ive been going through:\r\rI always thought burnout happened when you work too much.\rNow I get it. Its investing emotionally and then not getting a return on that investment.\rhttps:twitter.comspamapsstatus1523823022779420673?s=21&amp;t=cpEcSDMGNMN7XIW5U0V3vg\r\rThere were a lot of crucial career moments leading up to this, but one in particular stands out for me. I was working at Tableau, which started out like my dream job. After scuffling around for a long time and seeming to struggle to find the right environment, Tableau hired me on as a senior engineer working on the front end of Tableau Server; basically, making visualization features work in the browser. The hiring manager was so excited to hire me; he told me he wrote HIRE THIS GUY in big letters on my resume when he passed it along to HR.\r\r(He was my manager for no more than a few weeks, after which he decided managing wasnt for him and he needed to go back to being a developer. This has also been a sad recurring theme in my career.)\r\rTableau was so exciting for me because for the first time, an organization actually seemed excited about what I could do for them. The first feature I worked on was Geographic Search, a search widget on maps that allowed the user to search for locations, get some autocompleted suggestions, and zoom the map there by selecting one; pretty typically, similar to what youd see on Google Maps. Our scrum team was about halfway through the feature when leadership demoed it at Tableau Conference in 2014; this was live, working code, not a prototype. And it worked! And people applauded! Thousands of people, right there in the Washington State Convention Center! I couldnt believe it; I had never personally worked on something that was that popular and gotten to see a live reaction like that. Typically, the excitement level for new features and delivering them well was very high in my first couple of years at Tableau; it wasnt unusual for product owners and engineers to cheer and applaud when things were going well, even in regular meetings. I would count the number of times I heard super-excited in meetings, and we usually hit the over.\r\rAs months passed and we started to work on new things, I took on more leadership roles. I acted as scrum master for a new team, working hard to make sure we worked efficiently and communicated well with each other. I implemented test-driven development, in an effort to make sure we had good test coverage for all our features (something that had been lacking in the past). We shipped some redesigned quick filters in 2015 (which wound up getting scrapped), and a data highlighter widget in 2016. Tableau continued to grow its engineering organization, hiring tons of new developers and managers, and every so often, launching into a reorg to try to make the grand hierarchical pyramid make sense.\r\rMeanwhile, the leadership in our area had done something I didnt like; they had demoed unfinished code at Tableau Conference. In fact, they did it two years in a row. The feature, Viz in Tooltip, was something of a white whale for the Visualization team. It would allow users to shows miniature visualizations inside of the pop-up tooltips that appear when hovering over a data point in a viz. The prototype version made them excited, and it made their bosses excited, which made them want to ship it now now now.\r\rOf course, the prototype was nowhere close to shippable. It only worked on Tableau Desktop, and even then was pretty rough, making heavy use of the Windows temp directory to store images. There had been no guidance or thought put into how to make it work for server. The prototype version had the Tableau platform on board and could make requests for new visuals, and just dump the images in the Windows temp directory for quick viewing. Tableau Server had to communicate with the platform via HTTP requestsresponses, which meant we somehow had to request the proper visualization, serve it up to the front end, and display it and lay it in properly.\r\rIt was in this state that it was handed to me, as scrum master of a new team. And during the initial planning meeting, the product owner suggested this was something we could do in six weeks.\r\rOof.\r\rSo, it definitely was not. Even the smallest of features took longer than that to deliver in Tableau, a mature and complex product with lots of layers and engineering challenges at every turn, and a company with growing levels of chaos and process to follow. It was clearly going to be several months, probably the better part of a year, to design and deliver all the pieces we needed to make this feature happen on Server with any kind of quality. I told my boss that the product owners idea of six weeks was crazy, he said, Well, lets hear him out! Thats when you know youre in trouble, organizationally speaking; the pressure to deliver some too fast, washing down onto the devs without any pushback or filtering, is always a bad sign.\r\rFiguring out the architecture for Viz in Tooltip on Tableau Server was going to be one of my biggest challenges of my career, so far; I sat down to sketch out how this feature might be designed.\r\rAnd, over the course of a few days, came up with something good! Tableau Servers back end was Apache Tomcat, which allows you to rewrite the rules for processing requests that come in from the front end. I drew up how we could do that in the Java layer, call into our C++ platform to generate the image in the background, block on fulfilling the image request until it was ready, then complete the request by serving the image to the front end once it was ready. On the front end, we needed to specify which image to show inside the tooltip; I devised a way to sending a lot of parameters by attaching data attributes to the image tag, then a relatively new HTML5 feature.\r\rAfter writing up a long proposal explaining the workflow from the front end (C# code that compiles in to Javascript, a method for writing front-end code that preceded the advent of Typescript), to the Java layer, to the C++ layer using JNI (Java-Native Interface), then back to the front end, I set up a meeting with the best engineering minds in our organization to make sure I was on the right track and generally get them to sign off on my ideas.\r\rAfter that, we got to work; I wrote the bulk of the front-end code, did all of the Java work, and figured out how to write a C++ interface that would allow us to re-use some of the same image generating code for both Server and Desktop, reducing code duplication. I also wrote most of the tests, leaning a little heavier than usual on end-to-end tests for the feature that had so many moving parts across so many layers; in this case, Java tests using the Selenium framework. While doing all this, I was also serving as scrum master, running all the ceremonies, making sure that everyone was on the same page and that everyone knew what was required of them.\r\rPart of the way through delivering all this, I sat down with my boss and asked him to consider me for a promotion. Tableau at the time had Senior- and Staff- level engineers; I had gotten to the point where I was pretty clearly going to successfully be shipping this complicated feature with little guidance from leadership, while also running the teams day-to-day operations. He responded by handing me a printout explaining what was expected at all the different levels; of course I already knew about this, and already felt like I had fulfilled what was necessary for Staff.\r\rA few months later, closer to annual review time, I e-mailed my boss to ask again if he was considering me for a promotion; I got no response (we didnt have the term ghosted then, but it was that). I eventually had to track him down in a conference room in our building, sit and wait for him to finish a meeting, and ask point-blank about it, face to face. I got a wishy-washy answer. These were all Bad Signs.\r\rMeanwhile, the feature turned out great; in fact, it felt like a masterpiece. Once we shipped it, we never saw any serious bugs filed against it, despite all the complexity. Leadership had been worried about overloading Server with too many image requests or image processing cycles, but we were careful about debouncing requests, so those worries proved to be unfounded.\r\rI will never forget the day I demoed it to the area leadership in a big conference room in Tableaus big new building in Fremont, because I was so excited to show off the working final product. But then, after showing it off, my heart sank a little bit; the room couldnt have been more unexcited about the demo. I couldnt really understand it; something had happened to our morale, or maybe the promise of a cool new feature isnt as exciting to leadership once youve actually done all the work to deliver it. Whereas in years past my co-workers would have been super-excited to see the feature shipped and cheering and clapping, this room was dead; I felt like a stand-up comic who had wandered into the wrong open-mic night.\r\rWe shipped it; it was great. The feature became one of the centerpieces of the next Tableau Conference. I didnt get promoted; I left the team a few weeks later to try something else. I wish I could say that experience was uniquely bad; sadly, it appears to have been more like par for the course. Despite taking on more leadership roles and repeatedly shipping major products and engineering initiatives, I still got regularly ghosted and lied to; it happened on the next two teams I worked on, until I finally left. \r\rI had an especially hard time during the pandemic and working from home, when it was apparent I was being lied to by my boss and skip-level boss through Zoom; there was nobody to talk to or confide in, and my stress levels made it really hard to prepare or get through a job search. I suffered through a lot of sleepless nights, wondering if Id ever make it to the end of the Hell tunnel.\r\rI started coding for fun at age 7; that was almost 40 years ago! I still relish the thrill of building something great that works, whether its on the job or on my own time, and Ive enjoyed working on a bunch of different things. But repeatedly dealing with managers who just could not care less about the effort I put in, or who flat out lie to me, has taken its toll. \r\rIt just always feels so disrespectful when it happens, because this is my lifes work. I spend a lot of time and careful thought on how to do my job the best way, and it takes up a lot of my life; that just does not seem to matter to these tech companies, especially as they grow into big hierarchies. Whatever it is that they respect, its apparently not what I have to offer.\r\rAll I can do right now is enjoy this vacation, and hope that Ill be able to get my morale back up enough so that I have the energy for a job search. But for now, its time to unlock these handcuffs which lately have just felt like shackles, and just live my life.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_of4mj2","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/of4mj2\/unpopular_opinion_tech_twitter_is_a_garbage_heap\/","DATE":1625529600000,"PLAIN_TEXT":"I follow a lot of devs on Tech Twitter and honestly its all junk now. Everyone on there has to be a content creator now, selling their bookscourseswhatever. Or they post ridiculous engagement bait questions like What is your favorite JS library? or other such crap. Or theres the people who think they are motivational figures for new devs. Theres one guy who constantly repeats the same story about how he went from frying chicken in a gas station to being a SW developer. Theres an obsession with side hustles and monthly revenue and such, and they basically demonize the traditional path of working for a company. Long threads that are usually lists of websites or resources for new developers. If its not any of that, they are piling on and trying to cancel someone because they dared to disagree with the mob or posted some bad take. People that switch careers into tech and suddenly they are thought leaders who conveniently are available for paid mentoring sessions despite having hardly any practical experience themselves. And dont even get me started about everyone complaining about how their request to be verified was denied and that means they are being oppressed. Or the entitled people complaining that they have to return to the office soon instead of permanently WFH. Or yet another fucking joke about centering a div. As a developer with 10+ years of experience I feel like theres nothing of value there anymore!I wont name names but at this point I have blocked or muted a few dozen people because Im just tired of the same repetitive garbage.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_srpk0e","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/srpk0e\/do_anyone_else_here_love_being_a_developer\/","DATE":1644710400000,"PLAIN_TEXT":"I see a lot of complaining in this sub and other software subs. Im a bit surprised because I see this field as one of the best if not the best right now. We are literally payed to sit around and figure out creative solution while working with computers and software that interests us. Ive worked retail and warehouse jobs before and the change is literally night and day. Its hard physical work that is very soul crushing while the benefits are none. Now you get to sit in a nice office or at home infront of your PC, great pay and benefits. Even comparing it with my friends it sounds awesome. Dentist? Yeah he fucking hates that he cant work from home.Business people? Long ass hours and bad pay where we live.&amp;#x200B;I get that every career has problems but I do think we have one of the best jobs out there. I am just grateful daily that I can get payed by doing something I enjoy. Not a lot of people can say that so if you are, then try to cherish that.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_rvauwd","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/rvauwd\/burnout_prevention\/","DATE":1641168000000,"PLAIN_TEXT":"Ive been doing this for about 5 years now. In that time Ive worked on more technologies, frameworks, languages, and awful codebasesdatabases than I can count. Ive also experienced burnout a number of times. Ive found out how to avoid it, and Id like to share my secret:Stop working so hard. Full stop. My goal is to always be around 50-65% capacity. Now, that doesnt mean I half ass my work. It means I work 4-5 hours a day most days, and it takes me a bit longer to do things, but I get them done properly, and usually faster than other people because Im fairly good at this stuff. Ill work a bit more if I have meeting heavy days, because those are easier for me than coding or architecting new systems and apps.If your company is understaffing, be mindful that you should be looking for significant and meaningful hiring practice changes, a large pay increase or bonuses (in writing) for the picked up slack, or another job.If your company is demanding that you shorten development and testing cycles without additional staff or allowing code debt reduction cycles first, start looking for a new job, and immediately cut your efforts to 50-65%. If your company is loading you up beyond what you can handle at 50-65% capacity, say no...you have more power than you think. If you say no and there is blow back, start looking for a new job. Thats not cool and you dont have to take one for the teamHere is why this is good for you, the business, and the rest of us:Management bases need to hire and level of skill required for a position based on what they think is happening. If you are working 50-60 hoursweek, you are hiding a staffing problem from management or stakeholders. Youre artificially inflating their profits. By working 40 hours or less, youre helping the company properly staff. By saying I cant do more projects youre communicating effectively your limits. By letting them trample you, youre doing yourself, your family, and the company and its employees a disservice. They need us to communicate these things in order to make better decisions. Then, if you do communicate these things and the company doesnt change, you know 100% that its time today to say fuckem and find a better position. Guaranteed youll find something better. They need you more than you need them in most cases. My point is, take this new year to focus on improving your mental health, lowering your stress, and fighting for better work environments. Stick it to these companies underpaying and taking advantage. Good luck and happy new year!!Edit:Based on some comments I think its important to point out that you shouldnt be wasting your extra efforts. You should be becoming a better human. Take courses, grow, be with your family, eat better. Do things that will make you more effective. If your working hours are more effective, then you are actually improving the company, standing up for healthy culture, and being a good example.Edit 2: Wow. How serendipitous that that Kent Beck quote would be in the headline of ExperiencedDevs today. Im not a great programmer. Im just a good programmer with great habits. I think this speaks volumes. Take care of yourself, and I implore you talk about this with co-workers, so they too can take care of themselves. If management hates it, its not you that needs to change, its management.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_otr6z4","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/otr6z4\/heres_few_things_i_have_been_telling_junior\/","DATE":1627516800000,"PLAIN_TEXT":"X post.Heres few things I am telling junior developers in 1:1 and its working out pretty wellIts very basic thing but often ignored so thought to put it out.I dont know if you would believe it or not, but some junior developers are shit scared when they join any team. I had a couple in my previous job, one in a job before that and a few now. Some go well along with the flow and throw in so much productivity. Some, however, arent able to perform at their full potential even though they know a bunch of stuff and super technical.Usually what blocks them is companyteamproject specific things which they arent able to figure out on their own.I used to be that guy 7 years ago. Asking my senior peers was such an issue for me. There was a sense of judgement which held me off from asking more than a predetermined number of questions to any senior guy in the team. Part of this also had to do something with the fact how douchebag some of the senior devs in my team were. A few would literally reply with wink emojis and sarcastic replies when I asked them for a help in solving merge conflicts in my initial years, after I tried to figure out on my own by staying awake whole night reading git articles and exploring stackoverflow like a maniac. Trust me, no matter how simple you think it is and that junior guy should know this, sometimes it literally is impossible for them.Some junior guys break out in company washrooms too.Seriously, some senior devs dont have tolerance around taking more than 4-5 questions a day from junior devs and it can be seenfelt through their body language. Their main excuse is they should figure it out on their own, but sometimes its soul killing to the junior guys. Trust me, I have been there.Keeping my past in mind, I tell these things repeatedly to any new internjunior who joins in my team.Hey, look, feel free to ask as many questions you want. I personally prefer to get asked more questions from you. The more you ask, the more we both learn. And, you know what, your mind will tell you to not ask more questions when you already asked me 4 doubts in a day (at this statement, they show their smilingnodding face in video chat because its the fact for them), but, dont listen to your mind. Thats the limit you set in your mind thinking its not ok to ask more than a few doubts a day to any person. I would be ok even if you ask me 50-100 things a day. So, feel free to throw them in my slack and never feel hesitated to ask your questions. Even if you personally think, this might be a silly doubt, throw it in. I will never judge you for that.This gives them so much confidence and assurity to get unblocked fast and be more productive. Not only that, they speak highly of you with upper management and HRs which gets you additional brownie points. So, its a WIN WIN.Tldr: Be nice to junior devs. You were also junior once.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_opwjl5","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/opwjl5\/my_only_backend_engineer_sent_me_her_resignation\/","DATE":1626998400000,"PLAIN_TEXT":"I am a tech lead at a small company, where we have an even smaller engineering department. Its me, 4 frontend engineers, 2 QA analysts, and 1 backend engineer. We brought on our backend engineer almost a year ago and shes been doing an incredible amount of work and built much of the infrastructure of our latest projects for our product, building our test suite, communicating with our QA and UX engineers, etc. She is by far my most talented engineer right now.However, we havent been able to grow the department due to bullshit budgeting reasons from HR, and my talent recruiter hasnt sent me many candidates until very recently (and those that Ive talked to arent up to par), so shes been by her lonesome doing these projects. Granted the talent department is recruiting for other departments but were not getting any bites.Shes now come to me and gave me her 2 weeks. I kept a straight face when she told me but inside my heart sank. I dont have anyone lined up to take her place (besides me, and I cant handle the stress of being a lead and performing backend work, notwithstanding I dont have the time as it is). Shes told me shes been stressed for a long time and burned out and couldnt handle the workload anymore, which I of course understand.Ive told my boss about this and now Im getting shit about not having an adequate engineering staff, even though Im not getting any resources to help my team grow. Im so pissed. Not at her, but at my company. Im about to scream and I have no idea what to do at this point.I dont know where to go from here. I could try and hire cheap contractors but from my experience they will take a long time to get acquainted to the codebase and most likely make a mess of things. I got her out of pretty much sheer luck (because our recruiting process is absolute ass), and now our velocity is going to plummet, notwithstading I feel like Ive burned out a very talented engineer.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_w8hlfv","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/w8hlfv\/anyone_else_want_a_less_senior_role_just_to_enjoy\/","DATE":1658793600000,"PLAIN_TEXT":"Past three jobs I have been fairly senior, one of them was CTO of a well funded start up with team members and I enjoyed those roles and the challenges it brought.At the moment I am doing my own freelance work and picking my own hours etc, its nice but I miss the team culture.I am considering looking for a normal dev job that isnt too senior purely just to enjoy the work, go home and not have to think about it non stop.This isnt about not wanting to grow or anything but simply an urge for the simpler life.Does anyone else feel similar or have any thoughtsperspective on this?Is this a healthy direction?Im not burned out either, just looking at it differently..","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_nyldve","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/nyldve\/why_i_stopped_only_writing_code_and_you_could_too\/","DATE":1623456000000,"PLAIN_TEXT":"A big theme of communities like rExperiencedDevs is grind: learn to write code faster, better, more elegantly, with more people contributing, etc. This feels really good because, well, you notice your output improving, and often your peersmanager does too, and you get rewarded (better raises, better project selection, title changes).I usually see this pattern with new hires too, and it goes something like this: You join a company and are often given a starter project or set of bugs. Your output will often start very small, it could take hours, but often days, to make significant progress, and youll need to constantly stop and ask othersread documentation (if it exists) to unblock yourself. A good week will be a week where you finish something. You start to learn the tech stackpatternspractices. Now you might not need help with everything, and are able to make a reasonable amount of contributions in a 40 hour work week. Your team starts to trust you and gives you work that they expect to be finished more independently, which is a bit challenging, and you need to learn more about the code base to make consistent progress. Youve learned quite a bit about the stackpatternspractices. Now, in a 40 hour work week, youre doubling your output from just months ago, pull request after pull request. Youre often able to pattern match previous work on to new work (after all, arent we all doing different variations of CRUD applications or spreadsheets?), and that significantly speeds up your work. At this point you might have even got promoted to the next SWE tier, and are starting to mentor new hires.About here is where I see even senior developers start to struggle a bit. For most people (me at least), youre no longer able to double your output, or doubling your output takes longer and longer (i.e. maybe you were able to double your output after 6 weeks, after 6 months, after 2 years, ...).Youre considered a valuable member of the team, but youre not being recognized as much as before, and well, why not? You do more work than &lt;PEERS NAME&gt;, often spot things in code review that even your &lt;TLMANAGER&gt; does not.Here I see people make 1 of 3 choices:1. Settle: Often with various degrees of disgruntled-ness, embrace the rest and vest.(There is absolutely nothing wrong with this, and I would want to address this in a future post)2. Quit: Youll find greener pastures where your hard work will finally be recognized!(Hint, you often just go through the same journey and end up in the same position, but it can be a nice way to change up things, learn something new, and often make some more $ renegotiating your TC)3. Work more hours: If you cant output more in a work week, youll make your own work week.This last choice often leads to burn out, stress, marital problems, the whole nine yards. On top of that, its a self-defeating process - youll start to be recognized for how much work youre doing, but if you stop, it will be perceived that you stopped being as good at your job, and this causes a fairly toxic cycle of over work -&gt; burnout -&gt; over work. Its not pretty, Ive done this.But, there is a fourth choice. Its not always available at every company (Ive had my share of bad working environments, especially in non-tech-centric fields where management didnt value engineering - honestly the only way out here is quit or change roles in my experience), but when it is available, it works: do less but more impactful work.Most teams and products are going to have endless backlogs of features and bugs, and there is no amount of work you can do (individually at least) to make a dent. But what you can do, especially once you (a) understand the code base and (b) understand and align yourself with management, is pick the most important things to work on.A side-effect of this choice is youll start coding less and less, because often your 40h work week is better spent doing something else - high level design proposalsreviews, meeting and coaching other engineers, giving tech talks to a wider audience, and aligning yourself with leadership. Now youre outputting less than you did before, but when you do output something (or leadtrain the team that outputs it), it matters, and youll start getting recognized and rewarded again.Would love to discuss this further in the comments :)","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_nzuypt","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/nzuypt\/how_satya_nadella_transformed_microsoft_and_its\/","DATE":1623628800000,"PLAIN_TEXT":"Its February 2014 and Microsoft has a new CEO. His name is Satya Nadella.The company is struggling. Engineers are leaving for Google. Product launches over the past decade have failed due to an obsession with Windows &amp; Office. Bing is dying. The pundits can smell blood.But in just a few months, Microsofts share price has tripled.The companys outpaced the likes of Airbnb and Netflix.Nadella had a repair job on his hands. Having joined Microsoft in 1992, he had climbed the ladder. And now it was time to rebuild it. Brick by brick.So thats what he did. He rolled up his sleeves and focused on Microsofts most important asset.Its people.## The VisionIt started with a simple change. Nadella modified Microsofts vision statement from:Put a computer on every desk and in every home.To:empower every person and every organization on the planet to achieve more.&amp;#x200B;https:preview.redd.itri1s872m9a571.png?width=2828&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=238f1ad06cfc3bac7f626d3b4eb9d7dc43d30688Rather than focusing on computers, Nadella and Microsoft were about to put their energy towards the humans behind the technology.As he mentioned in an [interview](https:www.fastcompany.com40457458satya-nadella-rewrites-microsofts-code):Our companys identity is fundamentally about creating technology so that others can create more technology. And its essential that it is being used for empowering more people.But you cant empower others around the globe if your own employees..err, are being screwed.And thats exactly what was happening.## Microsofts Stack Ranking SystemI got Cs in college. And it wasnt like I didnt study.All because I was being graded on a fucking curve. And that curve ensured a set number of people would always suffer each time.My college experience, believe it or not, is what was happening at Microsoft. Their infamous stack-ranking system meant that employees were pitted against each other every 6 months.And so instead of focusing on creating the best possible product, engineers would hide information from each other. Theyd fear giving away their ideas because it could damage their positions.Take the 5 best engineers in the world. Under this system, one of them would be fired.https:preview.redd.it8sddf4xo9a571.png?width=2532&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=96beae62ffce73c2d34a10d236d6235035b106bcThis management style stemmed from the Balmer era which centered on finding holes in other peoples ideas. Employees wanted to show they were the smartest. At the cost of innovation. And innovation is everything.So Nadella got rid of the ranking system.Instead, Microsoft was going to give much more proactive and consistent [feedback](https:www.careerfair.ioreviewstoastmasters-effective-feedback). Bonuses, too, were going to be much more at the discretion of managers instead of an algorithmic employee rating system.## Putting it into practiceNot everyone can walk the talk. But Nadella translated big words into actionable steps.Here are some cultural values Nadella outlined along with their practical implementation:i) Microsoft As One (Instead of split into the 14 different franchises)Bin the stack ranking system. Make employees collaborate, not compete. This encouraged spread of ideas amongst the company and allowed Microsoft to innovate faster.ii) Learn It Alls instead of Know It AllsInstead of a weekly 4 hour meeting where the management would speak to the employees, management implemented a weekly hackathon where they could engage with and test out employee ideas.iii) Diversity &amp; InclusionJudson Althoff, one of Microsofts Executive VPs, [explains](https:www.youtube.comwatch?v=6zYhHhq4Jhc&amp;t=940s) how his compensation package weighs his sales goal and his diversity goal equally. Althoff has skin in the game when it comes to diversifying Microsofts candidate pool.iv) Growth MindsetThis sense of curiosity and humbleness that had been bulldozered out by Balmers aggressive style was another trait that Nadella wanted to bring back.One of the ways Microsoft puts this [into practice](https:youtu.be6zYhHhq4Jhc?t=1082) is by bringing in customers they lost. They use failure as the starting point to see what they could have done better.## Growth MindsetI want to highlight the work that Nadella has done with author Carol Dweck, who popularized and wrote about the Growth Mindset.Dwecks book separates the world into learners and non-learners. The learners are able to cultivate qualities through work and effort. And the non-learners dont even try. They think everything is fixed.Nadella wanted Microsofts culture to be based on this growth mindset:And to me, that model of culture is not a static thing. It is about a dynamic learning culture. In fact, the phrase we use to describe our emerging culture is growth mindset, because its about every individual, every one of us having that attitude - that mindset - of being able to overcome any challenge. - Satya NadellaThis wasnt all just a load of fluff. One small example of Nadella implementing a dynamic learning culture was moving the firm from an annual budgeting process to a rolling set of forecasts.Things dont always go to plan. And Nadella saw that theres value in learning from mistakes, adjusting, and then heading off in the best possible direction.## TodaySatya Nadella holds a 98% approval rating on Glassdoor. People are excited about the prospect of working for Microsoft.https:preview.redd.it68avhelt9a571.png?width=2944&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=8d2d6b0e6dbc2dac2c088602c6c839a6d0b142c6Perhaps the most impressive part of this is that Nadella wasnt handed a blank slate. He didnt have the luxury of moulding the organization into whatever he wanted from scratch.He had to tackle the [cultural debt](https:www.careerfair.ioreviewscultural-debt) that had built up, throw away rigid assumptions that his predecessors had held, and envision a new future for his beloved organization.Satya Nadella turned shit into sugar. And now were all just waiting to see what he does next.## CreditThanks for reading. Theres great information available on this topic out there and I used research from Herminia Ibarra, Aneeta Rattan, and Anna Johnston to help me learn more about Nadella &amp; Microsoft.Id love for you to [subscribe](https:www.careerfair.iosubscribe) to my newsletter. Each week I spend 20 hours analyzing a tech career topic thats going to help you level up. I share what I learnt in a 5 minute email report like this one.Over and out - Shikhar","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_wlyjqp","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/wlyjqp\/my_company_laid_off_our_best_people_without\/","DATE":1660176000000,"PLAIN_TEXT":"Im a dev lead who was just promoted a few months ago at a company of a few hundred people or so. My company has always had some culture issues, but their quarterly reports were always solid and they exceeded expectations so I didnt have any financial worry about the companys future.My manager and I were in talks about expanding the team out. But suddenly without warning a week later the company fired most of our top developers despite strong financials. When I say top developers, I mean guys like our lead architect who has been with the company from the beginning. He would work 70 hour weeks, had a great attitude, and had irreplaceable domain knowledge. They also fired 1 of 2 devops people, the sole release manager, senior devs, and a myriad of others (VPs, principal engineers, you name it).They also fired the best guy on my team. I literally have told him outright that he was the best as he was shipping top features, and was extremely well liked and brought the morale of the team way up. Out of nowhere he IMs me and says, it was great working with you and it came as a complete shock to both my manager and I. Even on his way out he was all class, thanking everyone on the team personally so it was extremely bizarre that he would be let go out of anyone.From what I gather this all came from the top and there was ZERO discussion on who to keep. My manager wasnt even invited on the call to let them know they were being let go. Morale right now is in the shitter and people are honestly lost on where to go next without our lead architect.So my question is, should I throw in the towel and start looking too? I didnt anticipate that I would have to drop everything and do the Leetcode song and dance so soon after getting promoted, but now I am debating on starting the process to get out myself. Do you think this situation is recoverable or should I just start to move on?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_wqoo4r","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/wqoo4r\/not_giving_developers_root_access_to_their_dev\/","DATE":1660694400000,"PLAIN_TEXT":" I have ran across this a few times, mostly in the financial service and healthcare spaces. And it just completely sucks to high heaven. I have found that anytime I dont have access to root development is just a constant uphill battle. Everything is unnecessarily hard. And on top of that, some top level governance decides on your development tools which are often substandard. The weird thing is that companies that love to restrict developer access also tend to crack the whip more. Always imposing ridiculous deadlines. From what I can tell there is never a good reason to restrict a developers access. I get that you dont want them always pulling in tools from the wild wild web. But I feel that if youre not shopping commercial software (and oftentimes youre not in these orgs), then it should be fine to get your work done. I just never understood reducing developer choice.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_odnlh6","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/odnlh6\/meta_interviews_were_insane_but_theyve_gotten\/","DATE":1625356800000,"PLAIN_TEXT":"Just starting a new job so this is written as a retrospective. So, Ive been a professional software engineer (i.e. paid to do it) for 25 years and a programmer, in general, for years more.I just left a job. Nothing wrong, just outgrown it, and they were moving in a direction I didnt want to go. Happens every day, time to move on, so it goes. I started looking...First of all. The moment you pop on LinkedIn youre looking for work, youll get flooded with emails, phone calls at all hours of the day. I dont really do LinkedIn, and I created the profile years ago, and foolishly, I think from a CV upload, my mobile was on there. Bad idea. Fixed that. People will think nothing of calling you at all hours, even late in the evening, for jobs youre nowhere near a fit for.Secondly the testing scenario has gotten insane. In the last month or so, Ive done personality tests, logic tests, live coding exercises, live code tests, whiteboarding sessions and take-home tests. Its a serious investment in time. I think corps forget we dont apply at one place and wait for a yes or a no, but at multiple places at once. Or maybe they do know and dont care. Its a serious challenge to continue working, do all of these tests, eat and sleep, let alone spend quality time with the family.And the level of interviews is insane. Ill give on example. This is the worst one, so bear that in mind.One particular job had an online programming test (1 hour), followed by a one-hour call with a senior manager to go through the results. After that I was given a take home test. Completed that, took a couple hours, maybe three. Then, an hour team fit call with a VP. Then an hour call with the team for the technical grilling. Then an hour architectural review with virtual whiteboard designing system from an architectural viewpoint (think load balancers, caches, etc).Didnt get the job. I was a little salty about it. The feedback was, not a fit for the team. Being salty about it is all well and good, but the team fit call was early on in the process. Why didnt they stop, then, at that point? And the take home test? Never another mention of it again. Like zip, no going over it, no feedback at all. So, after several hours with this company, I get six words of feedback and a No.This was a few months ago and I finally found a place I liked and they liked me. But, please, these endless hours of tests and interviews have to be toned down.Edit: Answering some questions and points that came up:-\tNo a FANG job, or at least I did not consider them to be; maybe they thought they were though?-\tAdvertised salary was around PS90-100k. Programmers arent paid as much in the UK.-\tSome great advice here. I dont interview often; this is my third job change is about 20 years-\tI will definitely ask on the first call about process.-\tTurns out Im an experienced developer but a noob at job changesinterviews!","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_10tnhi2","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/10tnhi2\/handling_resentment\/","DATE":1675468800000,"PLAIN_TEXT":"Im approaching 10 years in the industry, having worked in different roles both in small shops and Fortune 500 companies.The amount of idiocy in the management and leadership is driving me nuts. These people are everywhere, they have spread like cancer and theres no way I can see to fight them. One useless clueless corrupt idiot isnt going to fire another one for doing exactly same things.Engineers who carry this entire industry on their shoulders are constantly belittled, made fun of, and generally treated with utmost disrespect and open disdain. The work from home debate was the final straw. The amount of shit I heard from MBA types telling the cattle to get back into the stable was truly astonishing.Working in middle management I find myself surrounded by people whose values I am disgusted by, working as an individual contributor I find myself burnt out because all my care and skill is flushed down the crapper by people cosplaying pointy hair dude from Dilbert.Is there any hope or I should go open a flower shop?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_tehyy0","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/tehyy0\/storypoint_estimates_are_a_complete_waste_of_time\/","DATE":1647302400000,"PLAIN_TEXT":"There are a growing number of software professionals who consider storypoint estimates to be a complete waste of time.The problem with these estimates is that any two people will havedifferent skillsets and experience with the product they are modifying, sotheir estimates of the complexity of a task will differ. Also everyonenaturally has more productive days or less productive days, and other workcan come up that gets in the way.The only way you can give an accurate estimate is if you have done exactlythe same thing before, to the same codebase, and you focus purely on thattask for the whole sprint. Which almost never happens.Also estimates regularly get gamed - both from developers colluding toachieve a group estimate, and from project managers who attempt toincreasingly shoehorn an inaccurate estimate into accurate ones by forcingthe developer to put effort in above and beyond what they should beexpecting, e.g. working extra hours, or changing the work so that it fitsin their estimation goals.I understand that estimates are very much desirable for the widerbusiness. But trying to do anything accurate with story point estimatesverges on the absurd for the reasons Ive outlined above. Over 16 years of software development I have never seen estimates workwhen they are not very rough, loose approximations. For example, t-shirtsizes work. Small, Medium, Large, Extra Large. It is possible to estimatebased on that.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_m57nql","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/m57nql\/the_single_most_dysfunctional_and_toxic_company\/","DATE":1615680000000,"PLAIN_TEXT":"A couple of years ago, I took a job with a well-funded startup with a very outwardly polished brand. It was a big step up in pay and title, and I thought I was walking into my dream job. Within a couple of weeks, I realized that the dream was quickly becoming a nightmare. The red flags were everywhere. We had weekly all-hands meetings where executives would remind us to report anyone who wasnt pulling their weight so they could be dealt with. People were constantly disappeared (i.e. desks cleaned out with no announcement or acknowledgement from leadership that the person ever existed). The executive we hired to oversee regulatory affairs resigned after 2 weeks on the job. We were trained extensively on how to talk about our product in order to avoid legal trouble. Investigative journals published pieces claiming that our product wasnt based on any legitimate science. We then hired a team of scientists to start doing research for us. The engineering team explicitly emphasized individualism over team collaboration, which resulted in toxic infighting. We were investigated by the US Congress over our business practices. Total turnover was somewhere between 35%-40%. Talented folks that didnt like what they saw left as soon as they could. As I write this, Im staring at their company profile featured in both Forbes and Fast Companys Best Startups to Work For lists. I shit you not, the dumpster fire of a company I just described made not one, but both of the big lists of leading startups to work for this year. I want to be shocked by this, but Im not. Tech employees have remarkably few methods of recourse to call out the kind of behavior experienced at one of the best startups to work for, due partly to the paperwork we all agree to sign and partly to the social media machine that theyre happy to spend thousands of dollars per day on to advance their brand. Individuals in the marketplace for jobs are woefully outmatched against companies that cultivate a high-quality brand image while treating their employees terribly behind the scenes. These lists arent actually for workers to make more informed decisions about where to work, they exist purely to stroke the egos of millionaires and billionaires. When searching for a job, nothing beats talking to people that used to work at a company youre interested in. Take the lists seriously at your own risk, and ALWAYS, ALWAYS, ALWAYS do your homework on potential employers.EDIT: a word","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_sugxzb","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/sugxzb\/is_it_normal_that_your_problems_at_work_are_5\/","DATE":1645056000000,"PLAIN_TEXT":"Been working at my job as a technical lead for 1.5 years.Technical wise, the job is, simply put, not technically challenging at all. Every system that Ive been assigned to build so far here is easy to implement. My engineering team of 4 handles every single thing, from tech assessment, to webpages, to mobile apps, to backend servers, to infrastructure, to devops, to publishing on appplay stores. Just tell me your problem, and the team will handle it for you.My problems start with middle management (MM). They are absolutely clueless and act as nothing more than a broken telephone. Theyll speak to upper management (UM), then speak to the engineers, butcher the message to both sides, and as a result they have to set up more and more alignment meetings where nothing of value was discovered, as all the points had already been covered months ago if MM had paid any attention. They simply go round and round in circles and drag you into meetings for context.The other engineering teams are also causing problems. For example, as my team was the first team, we established a lot of practices and documented them. However as other teams spawned, they simply ignored the practices and as a result, ended up with a new host of problems. The other teams have no idea how to solve these problems, so they end up roping me into more meetings to discuss how to fix problems that are a result of things they broke in the first place._____There are a handful of designers, PMs and engineers that I love talking to as they are smart and capable. However talking to the other 90% is frustrating because they seem to be absolutely clueless at their jobs, and creating more problems than they solve.How normal is this experience?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_zqzkiv","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/zqzkiv\/i_cant_code_anymore\/","DATE":1671494400000,"PLAIN_TEXT":"I dont know what is happening. Ive been working in software for 10-ish years and have climbed the ladder to a technical lead role for our team. Im happy with my current employment, the project and have established long term goals with a strong passion in reaching my vision of things.But every time I sit in front of the IDE and get down into a task, I cannot code at all. Ill break down the problem into small problems to knock out and then proceed to take hours if not days to implement the most basic, junior level implementations possible. Then, out of shame I back out my work and start over again. Ad infinitum.Im stuck experiencing mental fatigue from thinking about memory and data structures, whether an application should be an event driven architecture or something simpler, do I use this database engine or that one? Ive taken breaks, Ive changed jobs. It helps, but only for a little while and then Im back in the same loop condition. What is wrong with me? I dont feel burnt out to the point of being depressed, but it feels like the only option is to just give up coding entirely some days and change careers. No, thats stupid Im incredibly lucky to be in the position I am financially and career-wise, why would I do that?Anyone else ever experience this? I do enjoy coding in the abstract, but the day to day battles with my brain are incredibly discouraging.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_zwcwei","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/zwcwei\/how_to_handle_a_disruptive_overachiever_as_an\/","DATE":1672099200000,"PLAIN_TEXT":"Hi, Im an engineering manager at a mid-sized mature startup, Ive been in this role for a year and a half and was an IC before that. I manager 6 engineers, 3 of which were hired after a funding round earlier this year.Of the new engineers, the most junior is an overachiever. When he was through the ramp-up period, he would aggressively try and finish his tickets as fast as possible. Most of the work he was being given for his first six months were small feature improvements, non-critical defects, and addressing various sorts of tech debt. Hed often finish his work for the sprint well ahead of time and Id have him pitch in on various things. All of these things I was fine and happy with.More recently, weve started a project that will take the entire teams focus for what we estimate to be six months. Now that he is participating in a major project with the entire team, his desire to prove himself is starting to show itself as detrimental to the team.He took some online course related to design and architecture recently, and is now keen on proving his skills in that ream. He suggested introducing a design pattern during this project, I told him we should stick to the way we have designed and organized our code in the past. He pushed back and said it was an opportunity to do things better. I explained to him that we already had a few patterns in place serving the same purpose and a new one would just make the code base more difficult to understand. I didnt realize until recently, but he had gone ahead and introduced the pattern anyways.Another time, he was working on an early story of a new feature and was proposing to preemptively optimize and factor things. I tried to explain to him that its better to have a class that does too much than to introduce the wrong abstraction, and that its better to refactor once youve solved the problem. He dialed down his initial approach, but still went against what I suggested and prematurely factored things. Then, after his code was merged, at the next sprint planning we were talking about a subsequent dependent story and he brought up how the story as written needed to be changed because the optimizations he introduced wouldnt work with it. Which was exactly the kind of issue I was trying to avoid.Thirdly, we are working on a new set of APIs in a monolithic application. There is another team that is also working on a different set of new APIs in the same application. We introduced some new classes and namespaces for the APIs for our project. One day at standup, he expressed some distress because the other team wasnt sharing code and following our patterns. I privately slacked him and told him that it was important for our projects that each of our teams could execute independently, and that sharing code and business concerns in the past across teams had caused friction and coupling, and that we can refactor later. He told me he disagreed and suggested that he should open it up to all of engineering for discussion on slack. I then brought him on a video call, and explained that the approach we are are using was established through a process of design review and because we have had too much cross-team friction in the past. At that point, I was frustrated at being constantly challenged but I figured to wait and talk about that are our next one on one, which is later this week.Hes starting to act like he is the smartest person in the room in many situations. Hes sometimes overstepping his role and telling the other newer engineers what they should be doing. He seems more interested in proving himself than in having enough humility to receive feedback and learn from engineers more senior than him.On the other hand, he is quite smart, he is hard working, he is ambitious. I think he has a lot of potential as an engineer. I have not encountered a situation like this before, all of my other reports have had pretty mild egos and been receptive to feedback.My question is, what sort of feedback do you think might be helpful in this scenario? I want to encourage his ambition and confidence, but I also want to discourage his ego and his stubbornness. I dont want him to be trying to reinvent things or come up with design solutions, I want him to follow the lead of the senior engineers and learn the patterns we use and why we have them.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_ptiwoz","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/ptiwoz\/my_boss_the_greatest_guy_to_play_the_game_is\/","DATE":1632268800000,"PLAIN_TEXT":"Fck!This happened two weeks ago...This was one of my early hops, and when I interviewed I knew it was the place I wanted to be. He had vision and a genius for the craft. I wanted to learn everything I could from a master like this. I learned so much, but in these few short years I feel like there were still lessons to learn or maybe I took some of this knowledge for granted.He took a smartass kid, and made me into a senior developer powerhouse. I literally owe his mentorship everything. I know so much now, I feel like I could go anywhere, but he wont be there. The best personality, fun, charming, excited to do things the best way. No ego, and always about doing things right.He was the best. Ive had long term breakups hurt less than this. It was rather abrupt, and based on timing with some stuff we had planned, I suspect it may have been a disagreement with the people he worked with.Its crazy.Im heart broken.What do I do now?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_zaw4s4","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/zaw4s4\/feeling_a_lot_of_anxiety_about_the_future_of_this\/","DATE":1669939200000,"PLAIN_TEXT":"I finally started looking into the [openai chat tool](https:chat.openai.comchat) thats been blowing up on Twitter and its...astounding. Its handled just about everything Ive thrown at it, and to such an insane degree that Im feeling a lot of anxiety about what will happen to this field over the coming years. Some of the things I tested out:1. It can deal with long, somewhat complex prompts (e.g. I gave it the prompt Build me a flutter app that shows a 20x20 grid with cells that can be clicked and when clicked animate to be ten pixels larger before returning to their original size and it spit it out insantly. Obviously thats a basic example but it didnt even flinch - immediate working code that handled the use case.2. It can handle me giving it chunks of code and asking it to iterate on it. I gave it a chunk of code that was ~100 lines long from an Android app Ive been working on in my free time (its a widget for those who are familiar with that horrible API) and it was able to add an additional, working feature almost immediately. It even followed the style for the code I was writing.3. Astoundingly, it also seemed to handle _vague_ prompts. I asked it to build a beautiful podcast app with caching, queueing, and sleep timers built in. It kept spitting out super relevant, working code as long as I was able to tell it to continue.And thats just where this is _now_. I dont think Im going to be fired tomorrow but with the astounding rapidity of advancements here (CoPilot was only a year ago!!!) it seems like the days are numbered for software engineering as a field - at least for this quantity of software engineers.How are other people feeling? Id love to be talked off this ledge.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_11vqy7o","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/11vqy7o\/how_to_handle_overeager_junior_dev_who_works_all\/","DATE":1679184000000,"PLAIN_TEXT":"Update: I didnt expect this to take off like this at all. Had I known I would have put some more background on things like processes, engineering culture, my relationship with this person, etc. The fact that I am not a manager and have little control over anything, might also matter to some. I also could have mentioned that our velocities are actually similar, its just that I dont work all weekend. I still pull 40-50 hours, but not all night and all weekend. Im not overt to work, but there has to be a healthy balance. For some people here I somehow came out as a jealous person who is upset this employee can outwork me and not burn out, and that he is a shining star who shouldnt be bothered. I will let him do his thing and outwork me, and thats fine, but it is concerning for future project scopes (Product is king at this company and engineering has to more or less bow down to them).Either way, I DO care that overworking leads to burnout and I am seeing it happen. I also do care that the team will be affected. As far as I am concerned, software engineering is a team-based discipline given the many complexities involved and not everyone is good at everything.I also have a very good relationship with this person. We are borderline friends. This person is not young but got into the career later in life. Burnout will happen, but as everyone has suggested, Ill get out of the way. I appreciate all the comments, good and bad, but I think this horse is dead. Thanks all.=============================================================================Hi all,I am a tech-lead on a small team of 3 devs. We handle the client side of a complex system doing automation of large machines in Agriculture. I dont want to give too much away as to dox myself but yeah, theres a lot going on and we have to integrate a lot of native code with Android code, and is not a typical Android experience.Anyways, about six months ago we were able to bring on a test engineer turned developer who has a ton of context into what we are doing. He grew up doing the same work we are trying to make more efficient, so hes an invaluable team member, but he is still a junior engineer.A month or so ago our schedule changed drastically and we basically are fucked as far as getting the thing they want done in the time they want it. They will not give us more resources or time (for now), but I know very well that if it slips it slips.This pressure has seeped through to the new junior engineer and he has basically put the entire project on himself.He is working all dayall night during weekdays and every single weekend day. His code is not at a senior level (obviously) but he is able to make things work, which is all product cares about at this point.Hes had to refactor and redo things many times because he is trying to go fast and working so much that he forgets small things that end up causing big problems. He has admitted himself that he needs to work less, but he hasnt stopped working every weekend and all daynight.Ive begged him to stop. I told him straight up he is hurting the rest of the team because velocity is going to be skewed and next release product will assume we can handle N amount of work now. He doenst care. The only response I get is stuff like Well I love this stuff and We have a deadline!This dude is super smart and the contextual knowledge is great, but an overeageroverworking teammate makes the rest of us look like shit, even though we are all working as hard as possible during normal hours.Has anyone ever had to deal with anything like this? Should I not let it bother me? Ive told my manager about it so many times, hes talked to him personally, but it never changes. Ive talked to the director of engineering about it and he said I would never ask anyone to work weekends and he himself talked to this employee about this. Nothing changed.He seems to think he will be fired if we dont ship the code on time, which is very far from the truth. Not shipping on time shows the holes in the team structure, schedule, etc. We need to fail so we can try to get the correct resources we need.TLDR: Super smart junior engineer with tons of background knowledge refused to stop working all daynight and every day on the weekend. Should I care or just let it go?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_h972k3","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/h972k3\/keep_a_brag_document\/","DATE":1592092800000,"PLAIN_TEXT":"Hi everyone,Thought Id share some advice that has helped me so far in my Software career. It has to do with recording your wins at work - hope you like it!-----The human brain is terrible at remembering information.When we try to use the past to predict the future, we end up using our memory of the past. And our memory is extremely flawed, subject to whims and emotions.One of the biggest consequences of this is at work.You clock in 9-5 for days on days and then when you look back at what you did a year ago, you think Where did all that time go?Even worse, if YOU cant remember what the hell you did, how will your boss?In an ideal world: you do a great job, your company rewards you. Theyll notice all the hard work youre putting in. All the beautiful lines of code youve written.But we dont live in an ideal world. And the costliest mistake you can make in your career is not being proactive about recording your achievements and your little wins.Enter The Brag DocumentI first read about a Brag Document on [Julia Evans blog](https:jvns.cablogbrag-documents#template).By recording your small wins and accomplishments on a weekly basis, you accumulate concrete evidence of what youve achieved.And these wins dont need to be Olympic Gold Medals.Did you help a coworker understand how to use an API? Jot it down.Did you anticipate a nasty bug and proactively reach out about it? It goes on there.Did you help mentor a junior employee? Thats definitely part of it.Over time, I promise you, your brag document will do wonders for your career.Sure - negotiating a raise or getting a promotion will become easier. In fact, come performance review time, even your boss will thank you for it. Those things are hard to write from pure memory. More on this a bit later.But the biggest benefit of a brag document lies in identifying what you enjoy doing.Your wins are likely a representation of tasks you enjoyed. And you should be very proactive about focusing on those tasks going forward.Use your Brag Document to ruthlessly identify the tasks you want to spend more time on, as well as the tasks you dont want to do anymore.The Pareto PrincipleThe Pareto Principle states that 80% of the effects come from 20% of the causes.At work, 80% of what you can feel proud about will stem from 20% of what you do. You can think of your Brag Document as representing that 20%.Use this 20% to ask yourself questions like: Is there a common theme amongst this work? Are there topics here that I thought I didnt actually like but turns out I do? How much of this work involves collaboration with other departments  teams? How can I do more of this work?FrequencyUpdate your brag document on a weekly basis. You can set it as a recurring event on your calendar.The biggest benefit of this is that it forces you to scrutinize your output on a regular basis and allows you to be proactive about focusing on the work you want to do.Lets say that after a few weeks of work, you genuinely have nothing to put on your brag document.Theres a chance you had a bit of a slow period at work, but maybe youre just stuck somewhere you dont want to be?CollaborateTalk about your brag document with co-workers. Ask them what you think you should put on yours.Youll often find that theyre able to mention things you completely forgot or didnt even seem to think about.Remember - just because something seems easy to you doesnt mean its easy in general. 5 minutes of work may have taken you 10 years to learn.You should also encourage your team to keep their own brag documents. Help each other be accountable and celebrate each others wins. This builds a strong team culture.Your ManagerYou should try to share your brag document with your manager once a quarter.It might seem weird or unnatural - youre basically dumping all your achievements into their lap. But this actually really makes their life easier.If your manager ever needs to vouch for you internally, then boom - they have direct evidence they can use. If your manager needs to reshuffle workload, then they know what youre good at and what you can improve on.Even better, you and your manager should go through your brag document together.Tell them what you want to do more of. Tell them what you wish was on there more.Youll both be able to identify areas in which youre doing a great job and also areas in which your manager perhaps wants you to focus on more.Another aspect thats helpful here is with goal setting - your manager and you likely work together anyway to determine quarterly goals.You should use your brag document to help you identify what type of goals you need to be hitting. Very often, we will achieve goals and then think Wait..what was the point again?By using your brag document to set goals, youll be much more likely to be working towards something that you find rewarding.Ending thoughtsOnce you start getting in the habit of using a brag document, operating without one will feel like doing your work in the dark.Over time, youll develop a much clearer picture of the type of work that you want to focus on for your career.If you liked this post, feel free to check out the whole article with nice illustrations [here](https:www.careerfair.ioreviewshowtobragatwork).","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_yc1cml","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/yc1cml\/struggling_with_coworker_who_uses_git_in_a_weird\/","DATE":1666483200000,"PLAIN_TEXT":"After working on a software team as a developer for four years, I moved to a data science team at my company (my main responsibility is still writing code). Since joining the new team, I have witnessed more coworker drama and tension that I have seen at any other job Ive had. The team has an extremely high turnover rate, and there are a couple people on the team who seem to have very sensitive egos. I have managed to stay on everybodys good side so far, but this week my relationship with one coworker in particular (Im going to call him Jay) really started to break down. I am posting here seeking advice on how to communicate with this person, and how to better justify some of the decisions and work I have done in our codebase. Here are some of the conflicts we have had this week:&amp;#x200B;1. Jay REALLY wants to commit local file paths in the git repo. I have tried to explain that this isnt standard practise and that generally you want your code to be agnostic to where files are locally stored in your system. Usually these file paths point to raw data sets that our team is using. I have created a personal config file where I put local file paths, I add it to gitignore and add instructions on the formathow to create it in the README. He hates this approach because its too complicated and the code doesnt just run immediately when you pull it. He seems to get very angry when I contradict him on this.2. When Jay uses git, he will pull about once a week, work on a whole bunch of stuff, make multiple commits, but doesnt push them for days on end. Of course, when he tries to push, he has about a billion conflicts. Jay then gets frustrated with other people who have been working on the code. He called me last Friday to sort out our conflicts and despite me begging him to keep a few of my changes, he took only his and pushed. I spent all morning doing rework, but he seemed angry at me for changing the code in the first place (but it is my job, and he knew I was working on it?)3. We have a co-op student also working on the project who has been doing absolutely excellent. He has been with us for 2 weeks. Every once in a while, the student will use a formatting tool to auto-indent our code and commit the result. At the end of the day on Thursday, co-op student makes a commit with the message cleanup which was just properly indented code. Jay hops on Teams on Friday and calls him out, saying how he made a bunch of commits and then it was rude for the student to just add cleanup and not keep any of his work and that he should be discussing changes with Jay if he is going to un-do some of his work. The commit was literally just auto-indented code, and I felt bad for the student, so I hopped on the chat and explained what the commit was, and asked him to send the commit ID if he was seeing something else. Jay did not send the ID, and I actually have doubts as to whether he understands how to seereview git history.4. Overall, Jay is VERY sensitive to criticism, advice, or comments about his work and will get defensive or point out tiny things in the code in front of others to make me seem like I dont know what Im talking about. Recently I re-wrote one of our projects to use a design pattern (previously was just a set of scripts) and make it reusable for other tasks instead of being customized to one set of data. He didnt like that I was using a design pattern - he thought it was pointless since the code already worked. When presenting it, he tried to undermine me by pointing out that in one file I used a `from library import ` instead of `import library` and therefore the code was difficult to read (in his opinion).As frustrating as Jay can be sometimes, the team dynamic is such that I feel it is important for me to stay on his good side. He is the person who has been on our team the longest (1 year), he has a PhD and I do not (for data scientists this is a seniority thing), and he is definitely buddies with my boss, who sees him as a technical lead. He bulldozes over every argument and has no problem interrupting people and sort of being the loudest until he gets his way. It has put me under a lot of pressure as Im trying to deliver quality code on this team but it feels like I am being undercut every step of the way. As I mentioned earlier, Ive never had a team dynamic like this before. I feel if there is a bonafide conflict between me and Jay, my boss will 100% take Jays side and see me as a troublemaker.&amp;#x200B;What is a professional way to work with this person?&amp;#x200B;UPDATE:&amp;#x200B;I really wasnt expecting this post to get so much attention! I am looking at next steps and starting to apply elsewhere (also looking at other softwareDS roles within my same company).For the config file thing, Im going to implement a set of defaults that we can automatically fall back on.I wrote a long email when I first joined the team about using git and a typical featuremainrelease workflow, however currently we are all working on a feature branch and perhaps our feature tasks havent been broken up to be small enough. I suggested yesterday that Jay create his own branch when he wants to make changes, he generally hates when people make suggestions to him but he did seem open to the idea after I said I would handle whatever merge conflict we might have when he sends a PR.Thanks to all who suggested CI  automation and pre-commit hooks, I can bring this up to the whole team and see what they think. Its very much within reach and would mitigate some of the conflict with Jay.I agree with everyone who said that you cant fix someones personality and that I should look at other jobs. However, there will definitely be a period of time where I have to work with Jay while I figure out my next step. Punching him in the face is not an option. ;) Its also an opportunity for me to develop some skills - Im sure its not the only time in my career where I will face a difficult coworker, no matter where I go next.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_qertkx","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/qertkx\/affects_of_wfh_on_junior_devs\/","DATE":1635033600000,"PLAIN_TEXT":"tldr; WFH or hybrid WFH is net negative for the junior devs.Ive consistently hired and managed multiple co-opsinterns for the past 5 years from the school I graduated from. I gone through the same program during my undergrad to get 16 months of experience (no summer holiday, 5 year program instead of 4) so i know what its like as an intern.I remember during my time as an intern, I would frequently have long engaging conversations with mentors on work, life and many other things. Ive tried to replicate the exact same environment with my interns pre-covid.But I have to say, since covid and WFH, its been absolutely terrible in terms of providing mentorship to youngjunior devs. Its just plain impossible to have spontaneous conversations and pair program sessions thats so crucial in onboarding and mentoring a junior member of the team.I understand the need to over communicate and shift our mindset to more written communications vs verbal. But this is not an easy or fast transition.What are peoples experiences regarding effects of WFH on junior devs? What have your organization done to make the process better for them? And as a senior dev, what can I personally do to make it better for them?Spelling: Effect.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_pktwhr","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/pktwhr\/failed_as_firsttime_lead_after_six_months_moving\/","DATE":1631145600000,"PLAIN_TEXT":"lol, you can chart the rise and fall of my career from my Reddit post history. Im on my way out of a frontend lead job after six months. The role was in a small, mixed team: two (other) frontend, two backend, two QA, in a likewise small workplace.This was an absolute, stressful disaster. I gave up on serious efforts at engagement about five weeks ago and started the hunt for a new job. Parts of the failings of the job were down to me, inexperience, and outside life stresses; other aspects were down to company and culture.Takeaways:- Rock star developers are where good teams go to die. While rock stars are the darling of Product in the early days of development, there comes a point when they become an impediment to team growth. Working under an uncommunicative senior developer, one who acted as the linchpin for all back-channel feature requests, was a large part of my decision to go. It was just unnecessary stress trying to work edgeways around this.- On the rock star: There was no sense of team harmony, and it was difficult to build it in a growing team when the rock star mentality dominated matters.- Culture absolutely gets set from above. Whatever culture you find coming into a role, will be the culture youll find in one year. I was headhunted and hired under a brief to improve process and practice. In the day-to-day I found that the culture of the company and team, as filtered down from leadership through the senior, had zero fucks to give about anything but more features. This would not have been a problem to me if it had been clear (see next point). I was told one thing, then shown another. - Clear communication of expectations matters more than anything. Leadership did not communicate to the team what role I was hired into, nor did I clearly communicate my expectations in writing. A great deal of stress could have been prevented by a day-one email from me to introduce myself.- Yeah, communicate. I pushed too hard with expectations, technical feedback and thoughts, without a clear manifesto from me, or the team understanding my role. I messed up so badly in this area.- Document, document, document. Want something done in a given way? Write it down. Document snippets, show goodbad examples. Up to the point of too much, theres no such thing as too much.- Seriously, write that shit down in the README.- Weirdly, knowing more than the team about technical aspects made my job harder. It would have been easier to let some things go and find a better mesh with the team, if I hadnt been a domain expert in our particular framework and tooling. It was a unique frustration to see people tune out and churn crap, but I acknowledge that the incentives to improve hadnt been put in place by leadership.- Its better to listen, than to talk. I talked too much and listened too little, then listened too much and talked too little.- Outside life stresses matter. I had no tolerance for workplace bullshit when I was drowning in mental health stuff outside the job. My state influenced my team and the workplace, and the team influenced my mental health. Bad combination.- With outside stresses: capacity. My role required way more empathy and patience than I had the capacity to apply, and the team as a whole suffered for this.- Getting features out the door and taking on a measure of technical debt, does not mean you have to rush. Reasonable good practices and mindfulness for readability can still be applied.- Agile is too easily hijacked by Product as a mechanism to enable micromanagement. Agile as a school of thought is - as with every school of thought - consistent and true within itself. From the outside (and despite good aspects), I see a tool to apply unhealthy levels of pressure on developers. This has been true in my experience across multiple workplaces.- Culture fit matters so much. I am used to working in such a different manner than the team. I worked with projects, they work with tickets, and I was never able to adjust.- Testing matters, process matters, documentation matters, and anyone who says otherwise is full of shit.- Technical planning matters most. As others have said, its better to have a bad implementation of good architecture, than good implementation of bad architecture.- Everyone is human, even that person you dont like. Youre no better.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_nofnop","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/nofnop\/caffeinated_post_documentation_how_to_do_it\/","DATE":1622332800000,"PLAIN_TEXT":"A recent [popular post](https:old.reddit.comrExperiencedDevscommentsnmodyldrunk_post_things_ive_learned_as_a_sr_engineer) here asked someone please teach me how to write good documentation. I dont claim to be an expert, but I think I do an OK job of it. Ive had just enough coffee that Im going to try to explain what I know. TL;DR: write documentation to solve a specific problem for a specific set of people, not just to have documentation. ## Write wellFirst, you need to be able to write well. The author of that post clearly already has this part down, but that might not be true for everyone. You need to be able to take topics and distill them down to the core details to communicate. Those details need to be organized into a sensible order, and then translated into clear sentences. The skill of writing well is of course not restricted just to documentation. You can test your ability in this area with any kind of writing. Can you write directions for how to find something in your house? Can you write a quick speach? If this is an area you need to work on, I suggest practicing it by writing anything but documentation. Write blog posts, write short stories, write letters to friends, whatever. If you dont regularly read books, start now. Your brain needs to be trained on a lot of well-written text before youll be able to tell what does and doesnt work in your own writing. Also develop the skill of editing, which is a very different skill from writing (writing gets easier if you trust in your editing skills - you wont self-filter as much).When writing documentation, the biggest tip I can give is to write in a conversational tone. Its way easier to process information from informal writing.## Kinds of documentationOK, back to documentation. There are different kinds of documentation, and people tie themselves in knots trying to force one kind of documentation to do another kinds job. Broadly, you can slice documentation on two dimensions:1. Information for learning vs. information for working.2. Practical steps vs. theorectical information.(This is not my idea, I got this from https:documentation.divio.com)Information for learning that contains practical steps is called a tutorial. If it doesnt contain practical steps, its an explanation. Both of these tend to be more for beginners, so they should focus on making sure concepts and terms (and background information) is explained. On explanations, its really useful to have summaries at the top.Information for when you are working can safely assume someone already has a general idea of what is going on. Theoretical information used when working is called reference. This includes the kind of documentation youd put on each method. Reference-style documentation is an absolutely rubbish place to put a tutorial. If its not theoretical, its a guide. A guide is basically like a tutorial except with two important differences: it assumes some familiarity with the topic, and the purpose is to accomplish a specific task instead of teaching something. A checklist is a bare-bones kind of guide, but can still be useful if its easy to forget an important step. Use guides when there are steps that will have to be repeated. They are especially valuable when the person taking the steps doesnt know how to do the task (either someone from another team, or yourself a year from now).Pick the kind of documentation to write based on your readers needs. It might be the case that your code actually is fairly self-documenting, and reading a methods signature really does tell you what that method does. Great. That takes care of reference documentation. Now go write the other three kinds. If all you have is reference documentation, the information will be a useless jumble of random facts for readers who dont know the basics. Having just reference documentation is like having detailed descriptions of intersections when new readers are looking for maps of the highways.I think theres actually a fifth kind of documentation: breadcrumbs. These are little comments in code or notes in documents (or even error messages in custom linters) that point readers to the thing they need to know. You might write a small comment with a link to the Jira ticket that explains why this code is necessary, or point people to the right command to run to resolve an error. Breadcrumbs are really easy to add and save people tons of time. ## WhyIts really way too easy to forget to write about things that feel obvious. Like, of course we are building a microservice, I dont need to write down why we are doing that. Except you do.This is obvious to you, but not obvious to the reader. The reasoning behind decisions tends to feel really obvious to us because weve spent so much time thinking about it.When you explain why, your are forced to mentally retrace the steps that lead to the decision. This turns out to be a great way to introduce topics, as well. If you get stuck trying to explain why, just imagine what the world would be like if the thing youre documenting suddenly disappeared. Who would care, what would they see?Its even better if you can explain why via a story. Humans are really really good at processing and remembering stories. I like having other commentary in the documentation. E.g. we know this isnt great, and we really want to make this work like X, but that would require team T to update their stuff, and they are super overloaded, so we just live with this for now. This is the kind of information that makes everything fit together in peoples heads, and lets them feel like they get what is going on.## Non-technicalJust because you are documenting a technical topic doesnt mean that the reader doesnt also need to know some non-technical stuff. The reason why things are they way they are is a big one.Other useful non-technical details to include:- Processes to follow (like, before you update this, send an email to this mailing list so customer support can get ready).- Team dynamics. Team X over there is really worried about ensuring that Y happens, so check in with them about Z- Information about users. We have a lot of users who have built their own custom thingy, and they dont have to have to change their thingy, so we only make this update for users without custom thingies.- Fun facts, e.g. we call this system Narnia because ...## TutorialsTutorials are for introducing people to a topic. Theyre a really good way to do it because people learn better when they are doing things, not just reading. Tutorials are also a big investment to write (relative to other kinds of docs). It probably only makes sense to write them if a lot of people need to learn the topic. If its only a handful of people, meeting with them face-to-face (or webcam-to-webcam) is probably a better use of time. A pitfall when writing tutorials is to try to explain everything. Dont give in to the urge to list every technicality and every exception to rules posed. You just want the readers to understand the very basic mechanics. Gritty details can be left for the documentation aimed at more experienced people.Its also really common for tutorials to just plain not work when someone tries them out. You need to try out the steps you have written (ideally on a fresh computer without all the stuff installed already) to make sure they are complete and actually work. Then run through the steps the next time someone needs to use that tutorial and see where they get stuck. The steps will also fall out of date, so be sure to listen for people having issues with the steps.## GuidesGuides tend to be a good return on investment. Spending 10 minutes listing steps as bullet points can save an hour of researching what to do the next time around.These are especially valuable when its hard to know what the steps are or its easy to miss an important step. Write guides when youve just gone through the process yourself and are motivated to avoid having to go through figuring all that out again.## Explanation and referenceIm honestly not sold on the value of javadoc-style reference documentation. Sure, if a million people are going to use your class, go to town and document every last detail. But if its just going to be your team reading it, theyll already know 99% of what you can write.Explanations tend to be more useful, especially when they focus on explaining the reasons why. If you explain the user and technical constraints that lead to a design, you can almost forget explaining the design itself - armed with the background information, someone can figure that out for themselves by reading the code. You can (eventually) learn the structure from just reading the code, but its hard or impossible to learn the reasons why this way.## The practice of documentationWriting documentation takes time. A lot of time. Spending that time on documentation wont just magically happen because someone says we need more documentation. You have to actually budget time for it and spend the hours butt-in-seat writing it. No its not the most fun way to spent your Thursday afternoon, but you gotta do it.Or do you? You should only write documentation when it is, you know, useful. You wouldnt write code just for the sake of having written more code (or maybe you would, but I wouldnt). You write code to get something done. You should also write documentation to get something done.That something might be to help new people spin up on the team, reduce the bus number of the team, avoid mistakes from forgetting steps, save people time when taking action, provide context, build alignment, record gritty but important details, etc etc. If you dont know why you are writing documentation, dont do it. Once you do know why, pick the right kind of documentation for the problem you are solving.Please for the love of all that is holy dont write documentation like this:   @param customer The customer  @param order The order  @return The price  public Price getPrice(Customer customer, Order order) {} Its pointless, and it teaches readers to mentally skip over the comments. Theyll miss the comments that actually contain something useful. If you dont have anything good to say, dont say it.Documentation, like code, needs to be maintained. Theres a cost to keeping it around. You have to budget the time to maintain it. Fortunately, this tends to be a lot cheaper than maintaining code. A few hours a month might be all you need to read through your entire wiki and fix up the stuff thats now wrong.Tip: have an archive section in your documentation, and move out-of-date stuff there. It keeps the historical context, it feels better than just deleting the documentation, and it still avoids leading unsuspecting readers astray.One neat trick to save time is to turn other work into documentation. If you have to explain to a colleague how to integrate with your system, copy what you write in Slack into a document. If you wrote up a design doc, copy a few sections of it into documentation and spend 10 minutes polishing it. When you have to explain something to a reviewer in a code review, explain it via a comment in the code instead of a commit in Github. Does your Jira ticket explain why a task needs to be done? Cool, copy that and you have documentation. (If it doesnt, make the asker to write it!)Tell people where to go to ask questions. It takes like 15 seconds to write if you have any questions, you can reach us at #team-channel on Slack. That can save hours of being confused. Pretty good return on investment, if you ask me.---Alright the coffee is wearing off so Ill stop here for now","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_11tbgfd","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/11tbgfd\/take_home_assignment_for_senior_role_rejected\/","DATE":1678924800000,"PLAIN_TEXT":"This week I completed a take home assignment in Java using Spring (as requested) and the next day received this rejection via the 3rd party recruiter.Now, the assignment given was super basic. I wont give away the exact problem domain, but it was literally just CRUD for a particular entity type. So, given that I have 8+ years experience using Spring and am very familiar with its various facilities, I decided to just use Spring Data Rest, which I hadnt had a chance to use before but was well aware of it. It was a matter of minutes before I had created the entity, corresponding database schema for PostgreSQL with Flyway migrations, a repository interface, and let Spring Data Rest draw the rest of the fucking owl so I had HTTP endpoints with the CRUD ops.It was great! All the features the company had asked for in the assignment were implemented and it worked a treat. I then spent some time writing tests to prove that all these features worked as intended (tests were also asked for), including integration tests using testcontainers for postgres.Upon getting this rejection, I find myself more than a little irritated. Was it a little bit cheeky to use a low-code solution for a coding test? Well, maybe. But I did exactly as the assignment asked. What annoys me is not that though.What annoys me is that it wasnt rejected for using the low-code facilities of Spring. It was rejected because the person who reviewed it was not aware of such facilities and thus concluded that I just didnt bother to implement anything. They didnt look at, or run, the tests which would trivially prove the features requested are working.Of course, I went back to the 3rd party recruiter politely requesting it be reviewed again and make sure to look at the tests but Im still awaiting a response.Am I wrong to be annoyed about this? Was I wrong to use the low-code option? (I mean, I would argue that ALL of Spring is the low-code option, just in varying degrees, but thats another topic entirely)For the record, Im not working so looking for jobs is more or less my job right now. When the role seems good for me and Im not ghosted by flaky recruiters I take the process seriously.ETA: Well I posted this late last night and just woke up to all these responses. Thanks folks. Consensus generally seems to be that I wasnt wrong to use such methods, but I should have at least included an explanation so that it wasnt overlooked.Maybe Ill get another response from them today. But after sleeping on it and considering some of the perspectives here, its unlikely I will accept an interview with them.ETA2: Well the recruiter got back to me. The lead dev who reviewed it initially was apparently very apologetic and was unaware of Spring being able to do what I did and they would like to interview me to chat it over. Docker isnt installed on the company machines so he couldnt run the tests. I havent declined yet, Ive just finished another interview.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_o5rch2","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/o5rch2\/anyone_else_think_onsites_are_getting_ridiculous\/","DATE":1624320000000,"PLAIN_TEXT":"Its extremely frustrating that many companies are normalizing on-sites to be 4-6 hour ordeals that mainly end up being (subjective) quizzes. Usually these on-sites already take place after youve had a recruiter call, some sort of technical screen, and a behavioral with the hiring manager (or really your future boss).But then after that, you go to the onsite where you have a debugging session, then you have a system design round, then a pair programming session. Some places go further with a DB design or API design session. Then of course behavioral rounds and then always some VP only gives you 10-15 minutes (which, of all the people I meet, I would consider that for me the most important).Like I get companies do put in time for these interviews, but for us workers we have to take days off of work for a CHANCE to land a job, apart from the other work weve done just to get to this point. Plus the fact that if youre looking for multiple offers (in case you dont get this one), you got to do the same shit again. Not to mention the mental and emotional strain faced per candidate. And what extra information are we REALLY getting from all this?It never used to be this bad just to even land a senior role. The whole process that is (just taking into account the vast number of rounds), but especially for the on-sites. I dont understand how things ended up being so crazy in all my years. Not everyone has the time to do all this (esp if we have families or other obligations and not just some 20-something single yuppie, I guess a reflection of ageism in our industry).I want to say it was a bit crazy like 10 years ago after the recession, but now its just a whole new level of absurd.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_wdt816","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/wdt816\/realizing_i_actively_dislike_this_industry_but\/","DATE":1659312000000,"PLAIN_TEXT":"Context: I know this is partially a grass-is-always greener issue. 5 YoE, currently at a FAANG adjacent company (in terms of comp).I am graduating from feeling apathy to antipathy for my job. I feel trapped because of the compensation but I keep fantasizing about a completely different life where I am optimizing less for retiring early (which seems to be a common goal in this industry). I feel stuck even in pursuing basic things like wanting to go back to school to learn more. I dont need that for my career, and the opportunity cost is high.What I like: hybrid work my coworkers - they are smart, kind, and interesting  the financial compensationWhat I dislike: the product - I dont care about it inherently, and its also poorly designed. pervasive simping for the billionaire CEO founder &amp; the company itself (I cant even tell if my coworkers are serious when they talk sometimes; its literally just a company, and any of us could be laid off). the work - generally speaking Im ambivalent toward it, but its tilting toward dislike. I do like coding for personal projects, though.I think if I worked on a product I believed in it might help. But Im also wondering -- what kind of industry could I even switch to? Has anyone left tech? How did that work out?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_pa3bw4","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/pa3bw4\/wfh_has_wrecked_my_work_ethic_been_coasting_for_a\/","DATE":1629676800000,"PLAIN_TEXT":"Im in NYC for some context. Working as a full-stack web dev with about 4 years of relevant experience (7 years in the industry though).Things really started going to shit around this time last year. I dont like my company but I liked the people I worked with, but they all started to leave. It left me in a situation where the company really needed me to stay because Im one of the only ones left who knows the product. They gave me a raise and a small retention bonus to stay through the end of this year. However, I know I could still make more money if I made a move.The product has basically been on life-support for the past 2 years because we dont have the engineering resources to do actual development. Weve been keeping it alive, putting out fires, and making small iterations on existing features. Its not great, I kept telling myself I would look for a new job once everyone went back to office but it looks like that wont be happening any time soon.Im one of the rare software developers who actually likes working in an office. Maybe its because I live in a tiny studio apartment, but I also just like the social aspect of it and being able to tap on a co-workers shoulder and get some help or just chat about the work were doing. Having the whole team in one place really benefitted me, and it was fun. Now with work from home I do the bare minimum to get by.Around this time last year I was promoted to senior software dev by a manager who was on his way out of the company (I really liked working with him and he felt I deserved the promotion). Since then I have not gotten the associated work experience that should come with being senior.A few months ago I was promoted to team lead when our previous team lead left. Now Im leading a team of 1 engineer as we try to staff back up.I feel as though I would enjoy an actual team lead role. Im less technical than a true senior dev. I cant solve the really complex technical problems I should be able to and I dont feel I have the necessary experience, nor am I an expert in any particular technology stack. Im kind of a jack of all trades and better on the peoplecommunication side of things.Things are continuing to go to shit at my company, while there is a big effort to hire people its proving incredibly difficult in this job market. Meanwhile Im getting recruiter emails every day.I feel as though my senior and team lead titles are not really justified. If I made a move as a senior dev I might not have the skills they expected at a new company.Just looking for any advice as I jump back into the job market. Thanks","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_w2b4k8","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/w2b4k8\/any_way_i_can_not_finish_every_single_workday\/","DATE":1658102400000,"PLAIN_TEXT":"Im on my 5th YoE and its not getting any better. I miss my shitty dead end physical jobs at least once a week; it actually felt pretty good to go home and watch tv or play video games or even do a coding project. My only truly quality time is when Im on vacation and havent coded for a few days. I feel so refreshed and full of energy. What do you do after work?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_rgf339","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/rgf339\/anyone_have_tips_or_lessons_about_pacing\/","DATE":1639440000000,"PLAIN_TEXT":"This year has burned me out and 1 resolution I have for 2022 is to lower my intensity and learn how to pace myself for 20+ years of work that I legitimately enjoy.Things Ill try to keep in mind- Take work seriously, but dont let it stress you.- No overtime.- Work towards value, not to the clock. If youve made a days worth of good progress in a few hours take it easy the rest of the day.- Pad your estimates!- Even then, remember most deadlines inconsequential.- Learn on the clock, not on your weekends.- Angle yourself towards work you _want_ to do.- Pick 1 thing to learn at a time. Trust that itll add up.Theres a bunch of stuff Ill also do in my personal life to recover from the burnout but wondering if anyone has work specific mantras or practices that have helped them maintain pace over decades, instead of bouncing from motivated manic period to motivated manic period. Thanks","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_livdea","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/livdea\/likely_changing_careers_scrum_has_killed_all\/","DATE":1613174400000,"PLAIN_TEXT":"TLDR: Old guy rants about scrum and modern software careers from the comfort of financial independence that those two things gave him.To give context to my rant below: 15 years in software roles; 2 as product owner roughly in the middle currently (recently-promoted) chief software engineer 3 companies; all companies were &gt;500 engineers at my current company, review scores are done by % buckets, and I have been in the top-10% bucket each yearThree things made me realize that scrum is the primary issue for me: Much of our office is out from Thanksgiving to New Years for vacation. I was not this year, and all the normal scrum rituals didnt happen because there were so few of us working. It was the first month Ive really enjoyed at work in years. My wife recently changed jobs to a related field (data engineer). They are not doing scrum or anything similar, and its amazing.  Two friends in the industry that I highly respect left it over the past two years because of this and have not regretted the decision (one to finance, and one still in software but working for a state agency).This has built up over the years. Ive ended up with the view that scrum makes some fundamentally bad assumptions and it will generally drive away most better-than-average devs. When I look at coworkers that it has driven away in the past, I cant say that any were ones I wanted to leave or viewed as poor-performers. The primary negatives that Ive settled on are: Engineers are interchangeable: Every team Ive been on has tried to operate with this principle, failed, and just pretended to while having everyone specialize (except one that stuck to it and our project was cancelled). This assumption is just absurd. We have different interests, motivators, problem types were great at compared with others, etc. An engineer working on a valuable but not absolute highest priority thing he enjoys and has experience in will produce value way more efficiently than one just taking next available task no matter what. The repeated fear of but then youll silo...what happens if someone is busy or leaves?! has never been an issue...if one person can specialize, a replacement can be found that wants that specialty and thats always been whats happened. The cost to replace is way lower than the cost to work really inefficiently. Standups: Daily standups limit hours you can work pretty severely. They are also anxiety-inducing. You have to justify your time daily, vocally, and on the spot in front of a group thats judging you. If teams had specialties and stayed together for long periods and so on, youd build trust with teammates so it wouldnt be so bad, but that situation seems to be viewed negatively in scrum, at least where Ive worked. Most team members over the years have simply lied in their dailies. I cant think of any situation where a daily standup has been more valuable than simply pinging whoever you need to talk to. A team where they are valuable seems like a dysfunctional team. Someone in this subreddit a while back made a comment that was something like a daily standup is a daily job interview and it resonated. I dread it every day. Engineers dont own code: This is related to the first bullet. There is a strong pressure to make it so that squads own the code and not the squad members. In my experience, this has just led to shitty code because the person writing it doesnt know much about ithas no expertise in that domain, and knows that they wont have any obligation to maintain it so just pump it out before the sprint ends and fuck you next guy that has to work with it. Since the tech lead andor reviewers are also interchangeable and have no real expertise, they have no idea that its shitty. Domain expertise is not valuable: This is also related to the first bullet. You are not valued for understanding the domain well, and its actively discouraged in many situations (if domain expertise were valuable, then engineers wouldnt be interchangeable). Youre just a tool that pumps out whatever task someone gives you and you dont have the domain knowledge to make good independent decisions or question bad ones. The backlog knows all: Things come up that are expensive to explain to every team member and the product owner. I and other teammates always end up having to maintain our own shadow backlogs of things that are cheaper to implement than to explain to everyone or that we just dont feel like going through all the prioritization bullshit with but need to do.Overall, there is zero incentive to excel in any way. Solve something really cool? No one cares...take the next item on the backlog. Want to build specific expertise? Nope...take the next item on the backlog. Spot a problem, put together a solution, save or make a bunch of money for the company? What the fuck were you doing...that wasnt the next item on the backlog.I want to work in an environment where I can solve interesting problems that someone prioritizes with me and gives me autonomy to solve. I want to grow expertise in a space and have that valued. I want to leverage that to get more efficient over time. I want some sense of ownership of what I work on. I want significant input on what things are valuable to work on. I want my colleagues to be the same...I want to work with experts who understand the problem space and not just whatever group of (interchangeable) devs got assigned to that squad that year. I want to be incentivized to solve interesting things quickly and not just get ok...next item on the backlog.Ive worked in software for long enough that money isnt a big concern, and my wifes job pays well anyway, so Im very likely switching over to escape this. I havent taken the plunge yet because I truly enjoy software development and previously loved this career, but I havent seen any reliable way to avoid these issues. I was on one kanban team for a year, and while a bit better, it still had many of the same issues so I dont think that will fix this.EDIT: Theres too much to respond to individually so just to provide additional info I saw in multiple questions... Why not just retirewhat will you do instead? I might retire...I just used to enjoy this field and I still do a lot of dev on side projects at night. I dont see myself being very happy with no job, so I was thinking of trying a different career. This is actually my second. My career trajectory was csphysics undergrad-&gt;physics grad-&gt;physicistresearch scientist for 4 years-&gt;software engineer at a hardware company-&gt;one of the largest software companies-&gt;less massive software company (current). I could go back to physics but it will be very hard after being out for 15 years. I left originally because software pays so well and research has brutal hours. The job at the hardware company was actually the best in terms of cultureprocess, so I could go back to that or try defense maybe now that I think about it. As a chief, why not just push back? I do. At my current company, scrum is required for all software teams so I have little influence on that. My influence is more on technical direction and consulting on broad architectural changes...not so much on process. Not all companies seem bad, but a high percentage do and its just exhausting to push back. It also hurts your career because management does not generally want you to push back in my experience. Youre missing what scrum actually iswhy its valuable: Im not but I could have written a better original post. Dont read this as me saying that this isnt a profitable way to run a business. Read it as more something I dont want to participate in anymore because I have enough money and it stopped being a fun career. An analogy is maybe to think of this like an NFL player deciding he just doesnt want to get hit any longer...the NFL would lose money if people stopped getting hit, but some players will retire earlier because of the hits, and maybe they could reduce the intensity and still be nearly as profitable?Also, a few people noted that peers judging each other is toxic or that the reviewraisepromotion process being a competition among peers is off, but Im having trouble believing that. There is (hopefully) profit each year. That gets distributed to shareholders, employees, etc. The employee bucket doesnt go out evenly. The proportions are decided by comparing them against each other in many cases. Peer input is a large component of that decision. Whether you know it or not, you are likely directly competing with your coworkers for money, influence, etc. To the vocal advocates...you did make me reconsider one aspect strongly that Im not sure what to do with yet. Im biased towards thinking about how my peers and I operate and I naturally think of myself and them as high-performers. I need to consider it from the angle of how do you keep the worst performer from just doing nothing in addition to my how do you best enable the highest performer current viewpoint.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_wgc8s6","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/wgc8s6\/code_is_a_craft_not_a_competition_and_why_it\/","DATE":1659571200000,"PLAIN_TEXT":"Ive been thinking about and working on this question for the last five years. I would be so grateful to hear what you think. In particular over the last two years, I have interviewed more than 1000 developers all all levels of seniority but especially the senior ones about their work: what they love about coding, what theyd want to improve, and what blockers are getting in their way of achieving their personal and professional goals.My goal was to get input on next-generation tooling that could make a positive difference, whether they were working on Open Source or private projects, from minor to giant teams.More than any specific feature or need, the most important thing I learned was a metaphor:Code is a craft, not a competition.I wanted to share my thinking with you and get your feedback.Part 1 what is a craft?Part 2 is coding a craft?Part 3 if coding is a craft, and I believe it is, what are some of the implications for software tooling to support that craft?Lets delve into it.## Part 1: What is a craft?When Engineers started talking to me about craft-like elements of their work, I did some background reading on the history and nature of the craft.My favorite source was Peter Korns Why We Make Things and Why It Matters: the Education of a Craftsman. Its a biography of a master woodworker, but the first third begins with a discussion of crafts vs. arts vs. other vocations.From this book and other sources and conversations, here is my distillation of what a craft is.First, A craft is a skill that improves with knowledge and wisdom.As the old adage goes, knowledge is not the same as wisdom.Knowledge is information in its rawest form -- domain-specific facts, methodology-specific facts, and guiding principles.Wisdom, on the other hand, demands insight. It is the judgment to apply knowledge to specific contexts to pick a correct approach or approach with the highest likelihood of achieving the desired goals.When a craftsperson possesses greater knowledge and wisdom, their ability to create a quality finished product increases. So how does this growth happen?Both knowledge and wisdom can be self-discovered, passed on through codified sources, or taught. However, as with any skill, high-quality teaching is the best way to accelerate skill adoption.Heres where things get interesting. Though Knowledge is important, it cant do much on its own -- in fact, its something that seems more valuable than it is. In isolation, it can be just rote memorization or facts lacking critical context thats needed to apply in a useful way.When its combined with and refined into Wisdom, Knowledge begins to pay dividends. Wisdom is applied Knowledge - used to chart a course with the highest likelihood of achieving what one set out to do.Wisdom generally cant be memorized. Instead, its forged in the crucible of experience and repeated mistakes. When someone developing a craft is nurtured with high-quality teaching, the acquisition of Wisdom is again greatly accelerated, and so is their ability to create a quality finished product.Second, the craftsperson derives pleasure from doing the work for its own sake.Important to the definition of craft is autotelism: the principle that pleasure comes from the work itself, intrinsically, separate from any external purposes or goals.This doesnt mean crafts dont generate external benefits - compensation, critical recognition, or the delight from users appreciating a creation. But as Korn writes there is great satisfaction to be found in work that engages one as an end in itself.Third, working on a craft can generate flow state, when a creator is totally engrossed.The very smart, and very hard to pronounce, sociologist Mihaly Csikszentmihaly identified nine components of generating flow:1. There are clear goals every step of the way.2. There is immediate feedback to ones actions.3. There is a balance between challenges and skills.4. Action and awareness are merged.5. Distractions are excluded from consciousness.6. There is no worry of failure.7. Self-consciousness disappears.8. The sense of time becomes distorted.9. The activity becomes an end in itself (autoelic).Working on ones craft can generate this flow state.Fourth, the finished craft has to work.This is the single biggest difference between art and a craft. For a craftsperson, unlike an artist, ultimately, the item being produced has to function and provide utility to a user. As Korn says about woodworking:The craftsman does not have the luxury of ambiguity. Soon enough his beliefs are subject to the test of the real. Either the chisel is sharp enough to pare wood effectively or it isnt. ... The sturdiness of a table and the comfort of a chair are immediately apparent to any observer.This standard of does it work in reality, while harder to achieve, ultimately leads to more satisfaction:The satisfactions of manifesting oneself concretely in the world through manual competence have been known to make a [person] quiet and easy. They seem to relive [them] of the felt need to offer chattering interpretations of [themselves]... [they] can simply point: the building stands, the car now runs.... Craftsmanship must reckon with the infallible judgment of reality, where ones failures or shortcomings cannot be interpreted away.He wrote it about woodworking, but it reminds me of every intense conversation Ive had with devs before, during and after building a feature or driving down tech debt.## Part 2: Is coding a craft?I believe that code meets this definition of a craft. To investigate, lets compare the activity of writing code against the four tenets I outlined previously.A craft is a skill that improves with knowledge and wisdom.Coding most certainly involves the collection and synthesis of information: Domain-specific facts e.g. making a project GPDR-compliant, Methodology-specific facts, e.g. database structures, algorithm optimization and style conventions Guiding principles: both for the individual (understandable code is a priority), and for the team (code reviews are a priority)And coders develop wisdom the longer they code. The biggest difference between [Beginner, Advanced Beginner, Intermediate, Advanced, and Expert coders ](https:semalab.github.iodeveloper-skills-matrix-website)is the ability to apply wisdom to the coding situation at hand.In the world of coding: Knowledge can be thought of as the skill necessary to solve a certain problem through code Judgment would include whether to build the solution vs. use a third party libraryCoding knowledge and wisdom can indeed be self-discovered, passed on through codified sources, or taught.While it is possible to become an Advanced Beginner developer through self-discovery or research, the practice of teaching accelerates this process and unlocks far greater maturity.For coding, teaching can include informal Q&amp;A, code reviews, mentorship, and classroom coursework (if its relevant and involves true back and forth between a student and teacher).When teaching, a developer also engages in the learning process. It allows them to absorb the mistakes made and lessons learned from multiple people and angles. They can learn to communicate with various skill and competence levels.The craftsperson derives pleasure from doing the work for its own sake.Important to the definition of craft is autotelism: the principle that the pleasure comes from the work itself, separate from any external purposes or goals.This is a fundamental guiding force for almost every developer I talked to.Yes, of course, some coders see their work as a 9-5 job. Many appreciate that it is an unquestionably great career when measured by compensation, flexibility, and autonomy.In addition, almost all engineers are thrilled to see the code theyve written used in action, helping their organization (or if theyre lucky, the world) be more successful.But at the heart of most engineers I spoke with, having code simply work successfully is immensely satisfying, regardless of any other factors.At the heart of code quality is a deep passion for the code to work, and work in the right way. This speaks to engineers devotion to their craft -- a devotion to producing a workable outcome and an elegant solution with enduring value. It evokes mindfulness and appreciation for the process and propels them to explore ways to improve it.Working on a craft can generate flow state, when a creator is totally engrossed.Coding in the right environment - which of course, is not 100% of environments! - can lead to the flow state:1. There are clear goals every step of the way: Functional and non-functional requirements join themselves in code written in a flow state.2. There is immediate feedback to ones actions: The code compiles, or it doesnt, it runs, or it doesnt, it passes tests, or it doesnt.3. There is a balance between challenges and skills: Engineers can keep working on harder and more complex technical challenges in higher performing coding teams. An Engineer might get a consistent quantity of constructive feedback in their code reviews because they are enabled to keep pushing themselves beyond what they already knew.4. Action and awareness are merged: Yes!5. Distractions are excluded from consciousness: Many a teammate has wondered why a Slack message has gone unanswered during the first half of a day. A mind engrossed in the complexities of a challenging problem being solved well has no time for interruptions or context switching.6. There is no worry of failure: Yes, Business  Sales  Finance pressures do intrude, but when a dev can be focused on the task at hand, they have moments of energy and clarity without fear.7. Self-consciousness disappears. Coders get lost in the work and can code without eating, sleeping or any other need.8. The sense of time becomes distorted: Ive heard stories from hundreds of engineers losing track of time and completing just ONE more feature, or optimizing just ONE more method.9. The activity becomes an end in itself (autotelic): Timelines are an unavoidable real part of commercial software development, but flow is not generated by the prodding of a scrum master or the pressure of deadlines.The finished craft has to work.To figure out something magical in code can be a delightful feeling, but for almost all coders what matters is what happens when the code is used. Ultimately, the code needs to work.For the coder, working means does it compile, but it also means does it work for users and does it work to the level of my teams standards at this particular moment (since the tradeoff of scrappiness and excellence varies over time).## What it means to treat code as a craft, and not a competition - and how to enable it.If weve done our job, you know whats coming next: the implications of treating code as the craft it is.We are persuaded that code is a craft - which means that engineering teams and their supporting tools and systems need to be set up to support creating code as a craft, not a competition.No doubt you can think of many examples of where devs and dev teams were not treated in this way- rewarding or measuring lines of code created is our favorite, worst example.We believe any engineering manager or organization with developers should want to facilitate the flow state of craft from the folks developing for them.Heres what Id tell CEOs and Engineering leaders for what that looks like.Because craft relies on knowledge, tools that put expertise at the fingertips at developers are incredibly important.Thats why Stack Overflow has been one of the [most revolutionary tools for developer flow in the last decade](https:twitter.comSteve_Yeggestatus497658195289313281).Resist the dogma of velocity at all costs.Instead, be methodical about identifying and removing blockers to flow. Blameless, inclusive retrospectives, and continuous testing to find better methods for dev flow, are essential.Feedback methods, particularly code reviews, mentoring, and paired programming, are essential to transfer knowledge and develop wisdom.The most important measurement of code quality is the subjective assessment of engineers with knowledge and judgment. Linters have their place... but the truth is what other craftspeople say.Metrics about coders shared without permission are dangerous. The choices that coders make every minute, hour, day can not be reduced to a robots review of your code. And stay far, far away from measures like LOC  day.Finally- coding exercises during interviews need to be handled very carefully. The best way to understand how a coder works is by observing their past performance, or codingproblem solving under conditions similar to what theyll face while working. Reviewing the details of their previous work- a true portfolio, not just the front end- can help here.## Conclusion.I hope this piece persuades you, and it gives you ideas to help support the craft of coding in your own organization.But if youre not persuaded, I really hope you weigh in and help make these ideas better. A true joy for me of the community of coders is a deep belief in the power of ideas, and a willingness to jump in to improve things- whethers its twitter or reddit posts, articles or, of course, the code.Heres to the wonderful global community of coders and, yes, to the craft of code.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_oxz3qs","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/oxz3qs\/burning_out_again_how_do_you_all_deal_with_the\/","DATE":1628035200000,"PLAIN_TEXT":"New job after a short break and starting to burn out again within a matter of months. Im in the UK. I notice the same issues time and time again; Seriously over the top bureaucracy; working as a devdata scientist, but dont even have the authority to create a shared directory, let alone install a python module. Every employer has a different definition of data science! Its everything from running SQL reports to cloud computing. Interviewing is a roller coaster. Inefficient and nonexistent resources; devs get the same laptop as everybody else! Lack of investment; lets cheap out now, to ensure problems in the future. Fucking agile; I know, I know we are not using it right. In my experience the only thing agile produces is technical debt and migraines. Look I get that agile is great for consultancies, but it certainly doesnt work for things like data science. Ironically the agile thing to do would be to ... drop agile. The fact we dont ties us up in irony knots. Poor or non-existent processes. Poor or non-existent management. NAG syndrome; youre responsible for project X, thing Y needs to be done, person or team Z needs to do it, as they own the process - Annnnnnnnnnnnnnd you have no authority or influence over them. Fun fucking times. Politics; Not-my-job types; Departments playing hot potatoes.  Unrealistic expectations; whats that? you could couldnt write a code to print hello world? Please do tell me how long this task should take and what is and isnt possible. Inefficient communication; lets included everybody in every email anybody in the department sends. Lack of communication being blamed for everything. That one fucking colleague that has mastered the art of talking while saying nothing, and answers a question without actually answering the question, and talks like a fucking lawyer. Professional fuckwittery; just call a spade a fucking space!  Trying to nail down a scope feels like Im leading the inquisition. Unnecessary bottle necks; lets put a high barrier in front of everything. That way people will only bother if its really needed ... yeah its really needed, in fact you asked me to complete it. But please waste half my day on chasing your signature. Meetings that consist of bikeshedding; lets not get bogged down in small silly details like the fact we need to consolidate data from two separate databases and that doing so breaks like 16 company wide polices ... lets instead spend 3 meetings discussing the background colour of the UI! Inconsistent people; big meeting, everybodys in agree, people are contributing! Follow up goes well .... and a week later; what is this? We went through this last week Suzan, you were there, said you loved the idea .... . why is this new tool needed?- you fucking initiated it Steve ... You Requested It ... You co-chaired the meeting ..... WHAT THE FUCK IS WRONG WITH YOU? Meetings that should have been a bloody email. Constant fire fighting; because nothing is ever planned out and a your drowning in a never ending tsunami of technical debt. Having to constantly reprioritise because others didnt plan ahead. Hitting the bus factor at every turn; you need to do X, its got to be signed off by 3 people. 2 are away and one left the company a month ago. Nobody knows whos now responsible. All of the above occurring at anyone time and still being expected to deliver in record time. Not to mention the lack of freedom to run a side business; you want to use your skills to benefit ... yourself on the weekend?! Lol no. Knowing you could be doing so much more with your life. The pay, in the UK at least, is pretty shit. Seriously its terrible.Honestly its killing me. It gets to the point where I dont even enjoy programming or math anymore because it stirs up strong negative emotions. I dont know how people deal with it?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_si6zkj","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/si6zkj\/are_there_incompetent_people_at_faanglevel\/","DATE":1643673600000,"PLAIN_TEXT":"Im seven years into my career and have worked exclusively at medium to large financial companies. By and large, most of my stressful days have been a result of dealing with bad people. People who are lazy, incompetent, rude, bad communicators or some combination of the above. Most recently Ive been dealing with finance bros who seem to think developers are below them and have no interest in actually learning anything technical to make theirs and everyone elses life easier. The work is also not as challenging as Id like. I feel like a lot of my energy goes into managing people rather than my work, and Im not at a point in my career where I feel like I have a solid enough foundation to do that effectively, or even want to do that. Even though Im good at it, I dont see my career taking a managerial trajectory. I cant stand the people and the politics.But then I got to thinking, maybe I feel that way because Ive had such bad experiences. Im wondering if I should start looking for a new job at a FAANG (which in my mind is the next level up from my employer). Is there a higher caliber of people at these companies or can I expect to encounter idiots there too?And yes I have discussed all this with my manager. He sympathizes and agrees with all my points but unfortunately we dont have the people or projects right now to fully address my concerns.Edit: I was not expecting such a response to this post. I would like to clarify one thing since this is getting so much attention. Incompetent was probably poor wording on my part. What I meant was difficult to work with and incompetence is just one of the reasons why someone may be so. In my experience, it actually hasnt been the reason a lot of the time. Im reading every response so thank you all for your input. Its definitely giving me some food for thought.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_z70t3q","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/z70t3q\/not_enough_time_in_the_day_for_focused_dev_work\/","DATE":1669593600000,"PLAIN_TEXT":"Hey fellow devs. I may not be quite at the level of many of you yet, but I have been a dev for 5 years and need some advice. My typical day consists of about an hour in the morning, then a stand up, another hour, then a 30-min meeting. Lunch time! When I get back from lunch, I have about an hour until a hour-long planning meeting. I may get a two-hour block in the afternoon, or may have a couple more 30-minuters that break up my day even more.Do you see the problem here? I rarely get enough blocks of time to get a nice chunk of my dev work done. I end up working later and later, sometimes at home as well. Its not healthy. What can I do? Ive brought it up to my VP; Ive declined meetings and gotten chewed out; Ive put blocks on my calendar that rarely get honored.This seems ridiculous. Why wouldnt the company prioritize dev work?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_q2oxep","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/q2oxep\/pour_one_out_for_our_project_manager_brothers\/","DATE":1633478400000,"PLAIN_TEXT":"About a year ago my company started to overhaul the project manager (PM) responsibilities. Originally PMs were the product owners from start to finish. Under the new system they were divided into 3 specialties: 1. Interfacing with clients to gather requirements for new projects 2. Monitoring and advocating for new projects through development 3. Be the ongoing support and expert for those projects After the PMs had been assigned to a particular category, group 3 was laid off and those responsibilities were out sourced off shore. This all went about as well as you think it would. Saying youre going to split responsibilities and actually doing it are two different things. Ill spare you the details and just say that PMs are still supporting their old projects, being given new work under the new system, and having to train the offshore team that just replaced their laid off compatriots. The exodus has begun. Predictable a few PMs resigned over the last year. Yesterday I found out 2 senior PMs, each with 20+ years experience resigned. One of them said he doesnt have a new job lined up, he just cant take it any more. The other has moved his retirement up by 3 years. Today another PM who has been with the company for 5+ years announced hes leaving. I just worked on an emergency project that needed to get onboarded and moved into production in under a week. The company assigned an intern to be the project manager. A kid still in college, getting paid an hourly wage was assigned an emergency project that if it had failed the company would have been fined. Its so mind blowing stupid I still cant comprehend it. Now even intern has announced hell be leaving the company soon.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_sq2pyv","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/sq2pyv\/amazingly_talented_teammate_with_really_hard_to\/","DATE":1644537600000,"PLAIN_TEXT":"I have this close teammate who is one of the smartest and most talented devs Ive met. Really amazing and an asset to the team. They have a very strong accent. We are a diverse team and there are a lot of accents, but this persons is very strong. I can typically understand them, as we work together a lot and I have enough context to guess on mispronounced words, but I think Im in the minority. Recently, this person has done a lot of amazing work on DX and simplified some really difficult workflows, saving me personally days of developer time. When they presented on it to the team, nobody on the team reacted, and the followup questions were kind of weird, like nobody really got what they were demoing in the first place. I think this person would benefit greatly from hiring an accent coach. I dont think we are good enough friends for me to be the person to tell them that, but I think about it every time I hear them talk about their amazing work and dont see the reaction from the rest of the team.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_vfi96t","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/vfi96t\/fired_twice_as_engineering_manager\/","DATE":1655510400000,"PLAIN_TEXT":" I was fired from my Engineering Manager position last Friday. The timing was abrupt and unexpected. My boss told me last Wednesday that I received negative feedback and my reputation had taken a few punches. However, he said it was ok and he was committed to help me correct course over the next few days. The main negative feedback was: I was too hands off. I didnt have a strong enough grasp of what &amp; who each team member was working with. The last 2 software deployments required last-minute debugging. I was not equitably assigning work among the team. Some team members were working on slow-paced tech debt work while others were grinding on new features without fleshed-out requirements on their own initiative.Before receiving this feedback, I became more involved in day-to-day dev work. I met with the team and reached consensus to make sure work was distributed fairly. I also got involved hands-on to help with coding to get us on back track for the next deadline.2 days later after the Wednesday call with my boss, I was called in on a last-minute morning Zoom with my boss and his boss (VP) where I was told I was being let go immediately. When I was asked for feedback, I was told I was not a good fit. I assume the decision came at the level above my boss.My reaction to the feedback is: I dont believe in micro-managing and let the team self-organize. This worked well for the first few months but needed more involvement from me afterwards. The last 2 deployment delays were caused by issues migrating content between QA and Staging environments. This is known whonkiness caused by the content schema in each environment being in a different state. The content migration script mostly worked but required additional manual tweaking to make sure it completed correctly. I tried to let the engineers pick what to work on. I didnt expect the junior engineer to plunge ahead on features without requirements and the senior to drag their feet on simpler. I let this situation fester for too long.My biggest takeway is I didnt act as an agile agent of order in the copious entropy of the project. The main entropy of the project was: Requirements required tons of back of and forth between our product team and external client. We had to communicate delivery deadlines before requirements gathers was fully fleshed out, which was imperfect and frustrating. My reliance on self-organization failed. Junior engineer became scrappy overworking and senior was dragging their feet. The codebase was spaghettiware. The teams main tasks was added new web content using a homegrown CMS. The dev workflow required searching a 5000 line file for function roughly matching the pattern needed and calling it with different parameters. It took 3-4 classes and dozens of function to create a simple web form. It felt wrong.The entropy seemed too much to deal with and I only became involved when things got too bad. I honestly lost motivation after seeing the crappy codebase. Also, the recurring estimate before requirements and lying to clients dysfunctional patterns seemed too entrenched to change.The abrupt well figure it out on Wednesday to youre fired on Friday felt unprofessional. I feel like a scapegoat for issues beyond my control. I was given the bad feedback too late with no chance to correct my mistakes.This is the second time Ive been fired from a management position. This makes me question if Im suited for leadership. I feel I need to become more quick in my communication and action if Im to continue the engineering management path.Thoughts on immediate steps I can do to prevent this in the future? My biggest takeaway is to readjust my default to be more communicative and proactive to resolve entropy.Whats the best way to communicate this in future interviews?I feel like I need to do more due intelligence to make sure Im really interested in the tech, culture, and dev status before jumping into my next position.Im also thinking about going back to an IC role.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_lm6w8t","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/lm6w8t\/my_interview_experience_as_an_experienced_dev\/","DATE":1613520000000,"PLAIN_TEXT":"For the past few months Ive been going on interviews at various companies and Id like to share my experience as an experienced dev.EDIT: Sorry for the long and somewhat boring post. Scroll down to conclusions for tl;dr.# Background Based in Canada YOE: 13 (non-FAANG) Bachelor and Master in Computer Science Mostly backend engineer throughout my career and most recently infrastructure and cloud Have been coding since 13 but never great at LeetCode# Preparations About 150 LeetCode, mostly medium Grokking the system design interview (educative.io) System design interview by Alex Xu System performance by Brendan Gregg# Interviews## PinterestPinterest was my first interview I went on. The recruiter contacted me in October. I was very nervous before the phone screen, since its going to be my first LC-style interview, but it turned out fine. Just be sure to voice your thought process, write small functions and gradually fill in the details. The question was about intervals, which isnt too hard, but easy to mess up under pressure.Did well enough to go onsite. Standard 2 system design and 2 coding rounds, plus a manager behavioural round. The system design rounds were similar. Both related to designing a streaming system somewhat related to Pinterest. I think I did alright even though at times, I feel like they were looking for very specific keywords. The coding rounds went very smoothly to my surprise. One of them is slightly harder which involves implementing a trie. Having come across that in my preparations, I solved that with much time to spare. Then it came the manager round, which I felt is a disaster. The manager was very dis-interested when I was talking about the projects Ive been on, and in the end, asked whether I had machine learning experience, even though the JD didnt call for that.### OutcomeI didnt get a response for almost 6 weeks, until recently the same recruiter asked me if I want to try another role, to which I answered no.## LightStepLightStep is a startup in the observability space. Ive tried their product for a while, and am pretty happy with it. I was pleasantly surprised when their recruiter reached out to see if I was interested in a SWE role. There were no tech screens and I went on onsite with them towards the end of December.The onsite has 5 sessions: high-level architecture, past projects, whiteboard coding and behavioural.The format is a bit novel. No LC style coderpad questions. In the high-level design session, I was asked to design a LightStep feature, and talk about the data structures Id need to use to implement that feature while taking care of potential scalability concerns. Then theres the past project session, which I was asked to talk about a project in detail, the design decisions, trade offs, outcome and so on. For the coding round, I was a bit confused at first, as I was presented a Google doc, which I thought I need to only write pseudo-code, but half way through, they asked me to write real compilable code. I thought I wasted much time on the initial discussion, and made some mistakes in the refactoring which led to the code not being able to compile. I did figure that out after the interview was over, but I guess it was too late. The behavioural round was pretty basic - all about situations and STAR.### Outcome2 weeks later the recruiter told me they were not moving forward, which was kind of expected given that I didnt finish the coding round. I wish I hadnt spent that much time trying to convince the interviewer that you can use a stack to implement DFS without recursion.## InstacartThen came Instacart. The recruiter reached out to me about a role on the infrastructuretooling team. The coding problem in the phone screen was pretty interesting. Not particularly hard, but does involve some thinking. Not very LC-like, but does test your data structure and algorithm skills, particularly binary search.For the onsite, typical behavioural round, although I confess I didnt prepare for it very well. The system design was focused more on domain design, rather than architectural. The two coding rounds were again not very LC-like, but instead, having multiple stages. The first one was focused on parsing (FSM-style). In the end I solved all test cases, but it wasnt a very smooth ride. The second one was more difficult which involves string matching. I solved all but one test cases.### OutcomeA few weeks later the recruiter came back to me with an offer.## BrexI got the Brex recruiter contact around the same time as Instacart. Brex seems like a cool Fintech startup, and the position was very much up my alley - observability, cloud and Kubernetes. I went in with a lot of expectations. The phone screen was the most difficult among the ones Ive been on. Its related to graph traversal. I think my confidence was boosted having been through all these coding interviews and I did fairly well. The came the onsite. The behavioural round, again, I was ill-prepared for, but I didnt think I did too badly. Next was the system design round, which they asked me to design a transaction system. The interviewer was a little hostile in the beginning, but his attitude changed gradually as the interview went on. I was able to talk in detail the transactionalpayment systems and the key ideas behind many designs for resiliency and reliability. I think the interviewer was satisfied in the end. The next round was a Brex special - debugging round. They present you with a piece of code that had several bugs in it, and asked you to find them and make the tests pass. It was a bit nerve-wracking at first, but once I collected myself, this round was actually fairly easy. The bugs were quite easy to find and fix. I finished all of them with 15m to spare. Finally, the real coding round. This time it was a 2-part question which asked you to implement some kind of a linked ledger system. The problem looked difficult at first, but when parsing through the requirements, it was actually not that difficult (easier than the phone screen problem Id say). I finished this round again with 10+m to spare.### OutcomeI walked out of the interviews feeling pretty good despite the questionable behavioural round. At that time I already had the Instacart offer and I thought I was going to get an offer from Brex which I could use as leverage. I couldnt believe it when the recruiter told me they passed the next day. In terms of performance on the tech interviews, I felt it couldnt have been better. I asked the recruiter if theres any feedback he can share as to why I failed the interview, and he said hes going to get that answer for me. That was a month ago and I havent heard back from him ever since.## FacebookFacebook production engineering contacted me last November. I agreed to do a phone screen earlier this year. Production engineer, if you didnt know, is like Googles SRE - engineers with system and infrastructure knowledge. Its well-suited for my interest and experience, but I have never done any FAANG interviews before (not quite true, I failed at the Google SWE phone screen 2 years ago), so naturally I was very nervous. Production engineering has two phone screens: coding and Linux troubleshooting. The coding round was very practical - reading data from stdin, munging it and spit it out in a different format. I finished it with minutes to spare. Its not at all LC. The Linux troubleshooting round was very hard - you had to work collaboratively with the interviewer to figure out a performance issue. You have to be very familiar with the tools available (e.g., top, iostat, vmstat, netstat, etc) and what various metrics mean. The second part of that interview was about Linux memory management. I thought I failed that interview, as I wasnt able to identify Linux memory overcommit model. I was surprised when the recruiter told me that I was moved to onsite and both interviewer gave me good feedback!Around the same time, another recruiter from Facebook reached out to see if I want to do an interview for SWE - infrastructure. I already had the Instacart offer and thought I didnt have enough time for that, but they were able to skip the phone screen and fast forward me to onsite the next week.### SWE onsiteI dont know how Facebook arrange their interviewers, but every single interviewer on my SWE panel was Asian! Was it because Im Asian too? shrug. Anyway, the behavioural round was very different from what I thought it was going to be. More project focused, but not much about STAR. The first system design round was for designing a permissioning system that can scale. Then came the first coding round, which was fairly easy (2 LC-easy problems). The second system design round - thats where things got worse. I couldnt very well figure out what the interviewer was saying. She had a pretty bad accent and the line was cutting in and out too. I reckon that I didnt do well on that one. The final coding round was even worse - the interviewer dwelled so much on a single issue that she knew little about (that Pythons `del hashmap[key]` is O(n) or O(1)) - in the end, she admitted that she didnt know Python. With 15m go to, she whipped out a LC-hard problem (calculator) for me to solve... ### SWE outcomeI wasnt too surprised that I didnt pass the SWE interview. I thought there were some highlights, but the last two sessions were pretty unsatisfactory for various reasons.### PE onsiteHad the PE onsite the next day. PE interviews are very thorough - 5 rounds, each one is different. First one is networking. You need to know the OSI-layers, and popular protocols for each layer that make the internet work. I thought I did fairly well, even though Im not a network engineer. Next up was the system design round. I was asked to design a system that looked a lot like a container orchestration system (thats the most I can say without breaking NDA). Then came the behavioural round. This time I did prepare, especially for PE, they need to know if you can fit in the PEs way of working. I recommend reading the Facebook chapter in the Seeking SRE book by David Blank-Edelman. Coding round was next. It was similar to the phone screen where the question wasnt too LC-ish but rather practical. Make sure your solution scale well - e.g., for reading large files, dont read everything in memory but rather use a generator etc. Finally, the system internals round. This is the round that tests your knowledge of Linux kernel. The first question stunned me already - how the Linux glob pattern works. Then came a barrage of questions on Linux syscalls, the C-equivalent of them, process management, signals, etc. I answered them to the best of my knowledge, and still I missed quite a few, especially around the C API. It left me the same feeling as the troubleshooting one - feeling quite exposed but at the same time, I thought I did well enough that an offer is not outside of the realm of possibility :)### PE OutcomeThe recruiter called the next day and indeed I got an offer, from Facebook!## (series-A Database company)This also happened around the same time as the Instacart and Facebook offer. Their recruitment process was quite novel - no phone screen but a take-home assignment. I know some of you are vehemently against take-home assignments but I think its a fair &amp; practical way to gauge a candidates competency. The onsites are more conversational - one session on core database concepts and data structures that power databases. No actual code is required but only a high-level understanding of indexes, binary search, B-trees etc. Then theres another round on the take-home assignment. You need to be able to defend your design decisions. Furthermore, two rounds of past projects and Kubernetes experience. Finally, two rounds with the founders. Id say the overall experience was very positive and the least taxing :)### OutcomeGot an offer!# ConclusionI realized this is getting fairly long and uninteresting :) Just want to share my experience as someone who hasnt been interviewing for a while. What I learned from these interviews?- Not every company does LeetCode, and even for the ones that do (Facebook), theyre fairly reasonable (Ive been on 10-ish coding rounds and never once was I asked dynamic programming)- Similarly, dont be afraid of LC. Practice the basics and improve proficiency, especially for the Facebook rounds, where they ask you 2 questions per coding interview.- Behavioural rounds are important! Find some potential questions that you may get asked on behavioural rounds and practice your talking points. Prepare 3-5 projectssituations which can be used as examples for the behavioural questions.- System design interviews are the most unpredictable. You can prepare all you want, and if the interviewer thinks that you missed the point, its hard to change their mind. Still, prepare a repertoire of common system design problems is beneficial. Make sure you understand sharding, replication, load balancing, consistent hashing, consistency vs availability trade-off etc.- Dont overly optimistic or pessimistic about the interviews. Brex is a great example where I set my expectation too high and ultimately set myself up for disappointment. On the other hand, I thought I failed the Facebook Linux troubleshooting interview but the interviewer actually had pretty good feedback for me.- Dont get discouraged if an interview result doesnt go your way. Its natural to have the imposter syndrome when you didnt succeed in something but knowing that interviews arent science - there are lots of factors involved in whether or not you do well on them. For us experienced devs, give yourself a pep talk - you have made it and dont let one bad interview performance ruin your confidence.- Finally, dont loathe LeetCode. I know yall love to hate LC. Trust me, I dont like LC-style interviews either. I wish there were a more objective and practical way to evaluate someones coding skills, but practicing LC does help in various ways, e.g., proficiency, thinking about complexity and edge cases.Thanks for reading!","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_xjfo6t","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/xjfo6t\/am_i_just_lucky_or_is_the_engineers_being\/","DATE":1663632000000,"PLAIN_TEXT":"Ive been in tech for coming up on a decade and a half. Ive worked in 50 people startups and 150,000 people mega corporations.Of the hundreds of engineers and scientists Ive worked with, I can count in one hand the number of anti social or know-it-all engineers, and only less than a quarter of them are what I would call poor communicators.For the most part, people I have worked with have been friendly, communicative, and collaborative.Its been a similar story with managers. Ive had 19 managers in my career, only 3 of them have been bad managers. Everyone else has been supportive of my career, good at shielding me from BS, and willing to hype my work to others above them to get me some recognitions and promotions.So.. Am I just exceedingly lucky or is the stereotype just overplayed?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_wgvbhb","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/wgvbhb\/mentoring_an_employee_who_challenges_everything\/","DATE":1659657600000,"PLAIN_TEXT":"Ive been asked to mentor an individual in my department (about 60 devs) who is, by all accounts, challenging to deal with.She is good at what she does, wouldnt say she excels, but shes good. She really lets herself down in her soft skills and interactions with others. She tends to get disproportionately defensive when anyone comments on her work or provides constructive feedback. She doesnt give straight answers to most questions and will start any any answer with so..umm..like..tell me why do you think thats an important question and then Ill answer it. Its really getting her colleagues backs up and its all so unnecessary. No harm in challenging things, but challenging everything is just getting ridiculous. Shes quite new to the role, just after finishing her PhD - Im senior in the wider department and I dont manage her directly but I keep seeing this behavior from her within dev teams made up of different colleagues, resulting in people just generally disliking working with her. I have discussed this with her manager who doesnt acknowledge this as an issue as two devs he works with closely have given good feedback on her in the past. I really want to see if I can help her in some way as I think she could really be successful if it were easier to work with her.Has anyone dealt with this before? What kind of strategies worked  did not work in such a scenario? I dont want to go in saying you need to stop being an a-hole but not sure how to guide her or to broach the matter in a way that does not immediately get her into defensive mode.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_qk8xop","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/qk8xop\/interviewing_as_a_senior_leader_depression_failure\/","DATE":1635724800000,"PLAIN_TEXT":"Hello all. Im a Director level engineering manager at an org with 100 engineers, 10 reporting to me. I am having problems with depression and reaching my goal of getting a new job at a well known company.Im not sure where I am going with this. Obviously, I cant talk to my coworkers about it, and you know what they say about management. Its lonely up top. If I talk to my wife and some of my friends, I feel like Im just sounding like an entitled asshole. they have no idea what Im talking about anyways. Im hoping to just not get voted to oblivion for taking the role of pointy haired boss.First of all: depression. The reality is that Im stuck at home, and Im stuck at this company that is going nowhere. I read Blind from time to time and my TC is well below that of even a mid level engineer with decent equity. Do I want Facebook level money? No, Id be happy with just getting paid average for my role, hell at this point, getting paid as much as a Blind mid level engineer with TC of 300k would be great. I have a wife, kids, house, and all that. But what drives me, and keeps me alive is setting and achieving goals. I run 2-6 miles per session a few times (2-3) a week to treat my depression and generally it works.My goal here is to hit 300k and get a senior level management role (sr mgr) at a well known company. Ive made it to interview loops at Facebook, Twilio, but recently Im getting flat rejected after hiring manager call or even before that at places like instacart, splunk, flexport. I started this journey about a year ago when Facebook invited me to do a round. I yolod a few rounds and made it to the interview loop. I studied my ass off for 2 months and still came up short. In consolation, a VC I met on LinkedIn said, getting hired at Facebook at even front line manager is vanishingly small. Since then Ive picked up interview and real world skills like learning to do OKRs, devops concepts, engineering metrics, to name a few skills Ive forced myself to learn as I absorb and build from each rejection. Ive written elevator pitches for myself, Ive written about 60 pages of responses to interview questions. I know my content, but frankly I dont practice my delivery and sometimes I ramble and go way into details.In my current role, Im very well respected. In my last review, I was surprised to receive several feedbacks from peers and subordinates who thanked me for my selfless help in solving problems in the org, building new tools, and so on. I was moved nearly to tears because I did this because it was better for all of us, even if the other person didnt care that I was making so many self sacrifices. After a while, yes, I did feel under appreciated for doing this grunt work. Ive delivered large multi team  interdisciplinary projects that have company level  exec visibility scope.When Im mentally good, I say, damn Im fucking awesome. Its probably just not a good fit. But generally, Im not mentally good.My stack is old. Sometimes I touch a microservice here or there. Youre gonna say hey you should split out microservices, using strangler pattern, yadda yadda But frankly as the eng mgr, I got to make the pointy haired boss call and say we dont have time for a refactor. Our revenues are shit. Some of us wont be here if we dont fix that Frankly last year we did get a double digit percent headcount adjustment. I blame myself. I didnt do enough in my role to lead us to more revenue. I get choked up when I talk about that. I get ghosted by companies if I bring that up at all. I do get emotional about it sometimes. My headcount isnt huge. Ive got a team in India that I work with and kind of influence, and Ive got a team in the US. I drive a bunch of inter-team initiatives but they arent necessarily direct line reporting. I just got rejected by Splunk today via email after having a very nice call with the hiring manager a week ago. I feel kind of shitty.I have to go to work tomorrow, and i have to act like #everythingisawesome because if i showed them my true self, it would hurt team morale.EditThanks for all the responses. I dont have time to respond right now; I am directing several workflows, but I will leave this guide to management which summarizes my management values until Ive had some time to ruminate on everyones input.https:www.youtube.comwatch?v=NisCkxU544cAlso yes, I live in the HCOL region where the TCs are stupidly fucking insaneEditThanks for all your responses. I felt like I had peers that understood where I am and I could relate to. There is some good advice. I probably wont take the advice to see a therapist or take drugs; strong disappointment in myself + burnout feels like depression but it is really the result of my own actions, to push myself so hard on stretch goals. Ill continue to interview, take mental breaks to let myself recharge, practice more on the answers that Ive written already, consider M1 roles instead of only M2. To become happy without setting and achieving goals is not a mode I am in right now. I think others who are goal oriented will agree that this is something that is really core to our character and hard to change. When my children were very small, I was content with just keeping my job. But now that they are getting a bit older, I want to be ambitious again. In the last few years, Ive crushed big projects -- in a way that gives me confidence and makes me feel alive. There are some systematic problems where I am working at -- I have very few reports and thats something that I cannot fix at this company. I either have to be accepted for that and get a sr role at a Tier 3,4,5, or accept that it is unsurmountable by me and shoot at an M1 on Tier 2,3,4. I do need to focus on the journey and not the destination, but I think for anyone who has been on a long journey, it is hard to just want to reach your destination and be done with the journey. I need to do some meditation. I tried it a few years ago and it was very beneficial. I havent done it in years though. Ive only looked a Blind a few times in the past year, but its like Pandoras box. Once youve seen the numbers, verified them on levels.fyi and then had friends verify the numbers -- this kind of thing is hard to ignore.A few days removed from rejection helps as well.I will continue to be awesome until they cant ignore me.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_v4sn3d","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/v4sn3d\/meta_remove_rule_3_no_general_career_advice\/","DATE":1654300800000,"PLAIN_TEXT":"A large percentage of the interesting posts in this subreddit are violations of rule 3.&gt;Any career advice thread must contain questions andor discussions that notably benefit from the participation of experienced developers. Career advice threads may be removed at the moderators discretion based on response to the thread. &gt; &gt;General rule of thumb: If the advice you are giving (or seeking) could apply to a Senior Chemical Engineer, its not appropriate for this sub.I think that this rule should be removed for a variety of reasons: It is useful to get general career advice from experienced developers, even if it could be useful for say chemical engineers.  In my real life I have almost never asked non-tech folks for career advice. I am blessed with a large professional network. Many of those asking here are not. A lot of interesting discussions happen on these posts. But they are deleted. The further in your career you get, the more your questions end up general career advice because they become more about how to work with teamspeople and less what technical problem am I facing. These types of questions are clearly popular given how many are here, upvoted, and then ultimately deleted. More juniorless experienced folks can learn a lot from seeing this type of discussion of career advice within a tech context, even if the advice is largely applicable in other careers too.If there isnt appetite to remove rule 3 permanently, I would suggest a 30 day or 60 day experiment to see what happens with that rule being not enforcedtemporarily removed.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_raz3zo","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/raz3zo\/how_do_i_get_good_again\/","DATE":1638835200000,"PLAIN_TEXT":"Im using a throwaway account to ask this question. Im currently 5 years out of school (Bachelor of CS) and 5 years into my career at my first and only job. I recently got back to work from a long maternity leave and I feel stuck. Mostly because while Im respected and valued within my company and my team, I personally know that my knowledge is currently very limited to what Ive been doing on my team - mostly lots of Java backend code, queries, and data analysis - all of this is done within a very well built framework, so it really requires minimal thinking once you master the framework. Our company went through some major changes and weve seen many senior devs leave, so Im currently considered one of the most senior technical people in the company, and yet I know my technical knowledge is so limited. The thing is, I love my job for the most part. I enjoy the stability of it and I like what I do... and if I wanted to, I could stay and work here until I retire. Im also a mom and our company has unlimited vacation, free lunches, and a very flexible schedule which is amazing. My thing is - I have no respect for my skills anymore. I need to learn more and grow, but I feel stuck because I have work to do and by the time Im done with my actual job, I need to also take care of my family... which, combined, is pretty overwhelming sometimes. I need a starting point. Do I start reading blogs... books? Do online coding exercises? Go back to school? Change teams? I know theres no one right way, and Im not even sure why Im posting this as, clearly, it shouldnt be that hard to figure out. Im stuck between wanting a comfortable job to be able to be there for my family and also wanting to feel proud of what I do which will require sacrificing the time with my family. Anybody here who may have been in a similar position and have some thoughts they could share? Any words of advice are appreciated.Edit: formattingAnother edit: Thank you all for the great advice and for sharing your thoughts and experiences! Your responses gave me some clarity and direction. I will reply directly to the comments that resonated the most with me and I want to say thank everyone again for contributing to this conversation, and thank you for the award, kind stranger! Here are my thoughts: I really appreciate some of you pointing out that I should take advantage of the low stress work environment and structure my time to learn new skills outside of my comfort zone. I really tried to learn as much as I can as part of my job, but it can only get me so far. I like the idea of slowly but surely, so, yes, most of you who said even a few hours a week make a difference - thats what I believe I needed to hear. I agree and accept that becoming a parent is definitely an adjustment and it really is near impossible to have it all right now, so Im not going to push hard looking for a new exciting job right now, but will be more conscious and aware of how I utilize my time, so when the kiddo is less of a chore, I can explore new opportunities and be ready for them.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_rsxf9u","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/rsxf9u\/how_do_i_do_less_work_and_have_more_impact\/","DATE":1640908800000,"PLAIN_TEXT":"Im a mid level dev trying to transition to senior and Im reflecting on my work habits. Ive always tended to fall into the work hard camp, but I think I need to focus more on work smart. I want to do less work while simultaneously having a more meaningful impact on my org, being noticed by the higher-ups, etc, and eventually landing the promotion.Im already recognized as a leader on my team and even across my org to some degree. I focus on reducing tech debt, finding simple solutions to complex problems, and I have a track record of delivery on large projects. However, I tend to always feel like I have too many tasks, which prevents me from taking a step back to address more strategic concerns because Im forever trying to bang out the next ticket. I know a hallmark of senior devs is to delegate (but I dont really have anyone to delegate to as my team is perpetually underresourced) and to support the team (eg. With fast code reviews, removing blockers, etc).I guess where I struggle the most is trying to get my own stuff done, while supporting the team, and also having my head in the broader strategic initiatives going on in my org.Any tips for becoming a better senior dev?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_11ur657","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/11ur657\/it_feels_like_everything_useful_or_interesting\/","DATE":1679097600000,"PLAIN_TEXT":"Just a rant but my team has been experimenting on a project for about three weeks and I was feeling a really renewed invigoration for programming and was putting in nights and weekends. It really felt like we found a product that needed to exist and provided a novel use-case no one else offered that a lot of people needed.We had people researching for similar tools and nothing was really showing up until yesterday when we got a demo from a company working on something similar and they are basically making exactly what we were making but are way ahead of us. Project basically got cancelled immediately and our company will basically just be using their tool when it comes out now. Its not perfect to our use-case but its close enough that its not worth spending internal resources making our own.Just frustrated. I feel like when I was younger I could make things in a day or two that were novel and now it seems like almost everything you want to make or improve on you are first catching up to software that exists which might take years or just isnt even worth it at all because that thing is better.I understand not reinventing the wheel, but I just feel like I can have the most random idea in the world and theres already something similar out there.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_twabd8","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/twabd8\/is_it_stupid_to_leave_a_job_because_you_despise\/","DATE":1649030400000,"PLAIN_TEXT":"I have been in a new role for about a month. When I was hired it was communicated to me that it was going to be a Java role, with lots of distributed systems work, and some ops work. One of the things I was very clear about was that I didnt want to work with JavaScript.Welp. It is all Node lol.Its not that JavaScript is a bad language, its just a personal preference as every JS project I have ever been on has been a dumpster fire. I am a few tickets in, but they are taking longer than estimated because of the learning curve. The learning curve is way worse because with every hiccup I hit, I just.. curse the language.This makes me sound old and stagnant as all hell, but I dont want to learn Node, because from my point of view I was very upfront about not wanting to work with it.Anyways, I am an intermediate dev. 5 years of experience, I am ready to be told to get over it. I dont know what I wanted out of this post, I just want to talk about it with people who get it.Edit: Ok, I am being encouraged to move on. I want to pivot my question.Should I talk to my manager about other opportunities in the company or just find a new job and bail?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_w0iun1","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/w0iun1\/juniors_leaving_for_want_of_mentorship_how_do_we\/","DATE":1657929600000,"PLAIN_TEXT":"QUICK EDIT: comp and other reasons are also part of the cause for attrition. Not denying that and the company is adjusting fairly well to the market. But the sentiment from the post was a common one expressed in several private conversations. Im more mid level and hang out with some of these juniors so Im taking these convos at face value. OP: Were pretty entry level heavy, have a handful of mid levels and a few senior engineers. There is a ton of opportunity to take on important projects and little pressure when you do (company has several revenue streams and development is generally low pressure) and some juniors have done so. But weve had a several juniors leave in quick succession, and a common sentiment has been that they have little access to mentorship. More specifically, they are getting to put these big projects on their resumes but dont know if theyre actually doing technically correctrigorousoptimal work. From the companys pov the functionality and quality of these projects has been totally fine. Still, a totally legit grievance for juniors to have. So the company is looking to restructure teams. Do yall have 1 senior per teamproject? Floating seniors and more static mid levels? Even if a junior takes on ownership of a project should check insdesign sessions with seniors be regularly scheduled?This probably has a cultural component to it as well. Thanks for any advice!","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_qm15cf","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/qm15cf\/a_few_tips_on_presentation_and_communication\/","DATE":1635897600000,"PLAIN_TEXT":"## Intro, Background and MotivationYesterday, there was a post on this subreddit about a dev who had the credit for their work stolen by another dev. Now, Im not about to make a post talking about relationships and managers or office politics. Rather, Im going to talk about presenting yourself and communication.Ive seen many times people talking about devs needing to develop their soft skills like communication, but not as much information on actually HOW do to that. I made a comment yesterday on that reddit thread that was well received, so I figured Id expand it into its own post and maybe some people will find it helpful.Im a 5 LOE dev and Ive been on two awesome teams at this point. Ive never been the highest paid dev, nor the highest ranking, nor the most competent (even I will admit that there are a lot of devs Ive met that work way harder and way more effectively than I do). But the one thing I consistently get praised for is my exceptional skills of presentation and communication, and it bothers me when I see other devs make mistakes in this area that can be easily (well maybe not easily) rectified.## The Default Developer DispositionAs I said in my original post, Ive seen a lot of devs tend toward being humble and quiet about their work. I forget where I read it, but there was an article that talked about the currency of developers, specifically why non-dev managers find it hard to motivate dev teams. The main point of the article was that we developers hate people who are loud and brag about their own accomplishments. Why?The currency of a dev team is not time, nor money, nor attention, nor the threat of failure, nor the allure of success. It is competence, plain and simple. We devs have a very fine tuned sense for competency. We dont care if your title is Senior Executive Vice Dude of the World. We care if you can code, thats it. Oh, youre the best developer on the Eastern Seaboard and Google pays you $500,000year for ten minutes of work? Thats cool, now show me your commit history.We devs favor this silent competence so much that at times we go out of our way to seem like were that guy. The silent guru in the corner of the office who understands the black magicks of manipulating the source code, down to the assembler. We hate people who brag so much that when it comes time to present ourselves, we discount public praise, even if its praise for ourselves, which we earned!The thing is that this is how dev teams work and I would never ever try to change that. However, This is not how other teams in the office work. Like it or not, were all human, and as much as wed like the world to work as logically as a computer does, it just doesnt. Ever hear of the availability heuristic? Its a psychological principle that states the more you hear about something, the more you will think it likely to happen again. Think about that for a second. Ever wonder why people are afraid of sharks or afraid of flying even though statistically youre more likely to get run over by a drunk driver on your way to work? Its because of the availability heuristic. The thing is that a lot of other people dont realize that their opinions and perceptions are based in emotional responses and biases rather than facts and reasoning. And by the way, I do not hold this against them. Its NOT their fault that humans evolved to be this way, why should it be held against them? On the other hand, it does mean that you are now placed within a system that doesnt always rely on pure facts and logic to make its decisions. And so it is YOU who must adapt, not the other way around.Which brings me to the topic of presentation.## Presentation, Tips and TricksI dont want to rant anymore, I want to get to the actual tips and tricks that Ive accrued over my life (thanks for reading this far if youre still here) and give them to you. Ill just leave you with one last thought before I get into this section. Your goal is not to brag, nor to be loud and obnoxious, nor to be something that you are not; and I would never ask you to be something you are not. Im assuming that youre the type of person who values the truth and values the accuracy of the truth. Im simply saying be that, continue to be that. BUT, while youre doing that, PROVE IT to other people that you are indeed that person. Market yourself. It doesnt take much, but eventually you will come to be respected as someone who tells the truth and can always back it up. There are very few things more powerful in an organization than being the source of truth. So, onto the tips:## 1. Present EarlyEver hear of the primacy and recency effect? Essentially, it says that people remember things that came first and things that came last (recency), but not so much for the things in between. What does this mean for us? I cannot begin to tell you how many times Ive seen people who are afraid of public speaking refuse to go first. Everyone wants to go last because they are so scared of presenting, they, for whatever reason, want the anxiety of having to present to last as long as possible (Yeah, I dont get it either).So all thats to say that you do NOT want to go in the middle, people forget the stuff in the middle. Go first or go last, period. And I gotta say, its a whole hell of a lot easier volunteering to go first than to go last. So for me, I always ALWAYS go first, given the chance. If you plan on going first all the time, that presentation anxiety actually goes away somewhat, because you sure about at least one step of your game plan.##2. Present OftenThis one is pretty quick, but motivated by two factors. First, you need to, you NEED TO, get as much practice as you can in for presenting publicly. I know its scary, I know its hard. But no presentation will be harder than the last, I promise you that is true. It always gets easier, you just have to get there.Second, again, recall the availability heuristic. Or better yet, read up on the mere exposure effect. Both of these psychological principles boil down to one thing: the more people interact with you, either directly or indirectly, the more highly they will value you (side note: this is why dating works). Or at the very least, when they think developer they will think of you before anyone else.## 3. Regulate Your PaceOkay so now youre up there and youre presenting, now what? Ive seen a lot of people get tripped up over this small but incredibly useful protip, mainly because no one ever explained it to them. SLOW DOWN. FFS SLOW THE FUCK DOWN. People when theyre nervous tend to speak faster. It even still happens to me all the time. The thing is, when you speak faster, your mind cant keep up with your mouth. So maybe you get through the first minute of talking well enough, but then you get to a part where you have to think and recall some key fact or another talking point. And what do most people do at that point?Um, err, uhhh. The thing is, your audience doesnt remember the things you were just talking about, they remember this, the part you got lost at. Why? Its NOT because they think youre a bad speaker, its NOT a reason for you to feel embarrassed. The reason they remember this is because youve been KNOCKED OFF YOUR CADENCE. Like, imagine youre sitting in a theater, listening to an orchestra. All of a sudden, a violin string breaks. I dont care how incredible the orchestra is playing, people are going to remember that break in the rhythm of the piece. This is NOT your fault.We all have to think, we all have to process, we all trip over our words and have to recover. So what do you do?SLOW THE FUCK DOWN.Take a breath, pause, think, relax. Better yet, slow your ENTIRE presentation down. This way, you can give yourself time to think ahead to your next talking point before you get there, you would not believe how easy this actually is in practice. When youve already done all the prep work, its easy to be able to elongate a word or a pause while youre internally processing your next thought. And the thing is if you do it this way and slow down your whole speech, not a single person will notice when youre doing this.You know who I like to think about when Im talking? Willam Shatner.Thats right, James T. Motherfucking Kirk himself. Ever notice that every person doing a Shatner impression slows way down and pauses incessantly? Well its because theyre doing a bad Shatner impression. If you really watch how Shatner speaks, he slows down when he needs to think and he speeds up when he wants to blaze through a part that doesnt really matter. Be like Shatner. Dont say um. Say...nothing ;)##4. Eliminate Unnecessary Information and Play To Your AudienceI dont think I need to tell you guys this one, but Ill say it anyway, play to your audience. Think about what your audience is actually interested in and then talk to them about that. Dont bog your presentation down with the technical details of your solution, its just going to go over your audiences head. What does your audience like? Probably conclusions, quick facts and the impacts of a product. Also statistics, people love hearing about statistics, especially surprising statistics. Dont be afraid to be a little clickbaity## 5. Bullet PointsFFS, do NOT write out your presentation like an essay. Do NOT practice your presentation like an essay. And for the love of god, DO NOT print out your essay and read it like a book. Youre not a professional voice actor, you cant make that sound good.Instead, outline your presentation. Create single sentence bullet points of the key topics and facts. The big mistake people make here is thinking that you need to say the exact same thing every single time. That you need to memorize every word of every sentence in your entire presentation or you will mess it up.Wrong.You know your facts, you know your stuff, otherwise why are you up there presenting it? Believe in yourself, believe in your knowledge. When youre practicing your presentation, look at the bullet points and just say whatever comes to your mind. Chances are itll be messy and incomplete. So say it again, and again, and again. Until you get to a point where you can read that one bullet point and spout off a paragraph of information on the fly about it.And dont worry about it sounding the same every single time. It shouldnt! Because the you on day youre practicing is not the same you on the day youre presenting. So if you end up saying something totally different, but with the same core information, awesome! Congrats! You just presented what you needed to present. And the only person who knows how many other ways it could have gone is you. To everyone else, you nailed on the first try. Way to go champ!## 6. Look At The WallsThis one is a small one, but a helpful one. People like it when you make eye contact. They like it when youre not staring down at your notecards the whole time, and if you followed the previous tip, you shouldnt need to look at your notecards except for the occasional reminder. So where do you look?The Walls.People like eye contact, but making direct eye contact can be off-putting either to yourself or the person youve been staring at for the past five minutes. Instead, stare at the walls behind a persons head. Then look at another wall behind someone elses head. This way it gives the illusion of presenting TO your audience without you needing to remember to look away. ## 7. Pay The Upkeep of AppearanceThis is more of a general LPT, but put some effort into your appearance. Buy a nice shirt, get a nice haircut and spend the five minutes (for guys at least) it takes in the morning to style it. Your presentation matters and the medium through which you are presenting the information matters as well. In this case, you are that medium. If you dont look at least adequate, thats something people may or may not remember. Plus there have been studies that prove that people will treat you better if you look better. And Im not talking about winning the genetic lottery. Im talking about being comfortable with yourself and presenting yourself confidently. And just from my own experience, I feel way more confident when Im wearing a nice button down shirt that I know I look sharp in. Look sharp, spend money on your appearance, pay the upkeep.## 8. PassionThe last thing Ill say is that Ive seen a lot of good presenters over the course of my life. But Ive also seen several great ones, truly amazing ones that kept my attention throughout the entire presentation. You know what they all had in common? Passion.If you havent caught on yet, a lot of how you come off to people is in the body language, in your speech cadence, in your tone of voice. Emotional responses, not informational. The forebrain of an audience member is going to hear the information. But the hindbrain, the part of the brain that deals with emotion; the part of the brain that LIKES YOU OR NOT, that hears the passion. And surprisingly (or maybe unsurprisingly), sometimes the actual content of the presentation doesnt matter. If youre passionate enough about a subject, you can be speaking about your thirty favorite flavors of cheese and the audience will hang on your every word.## ConclusionIve taken enough of your time. But I hope what I wrote above helped. I would never say that you have to master every single one of these things overnight, in fact it took me years to do it. But I will say that the faster you try them, the faster youll get better at them.Thank you","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_mhh0rs","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/mhh0rs\/why_youre_bored_at_your_job_and_how_to_fix_it\/","DATE":1617148800000,"PLAIN_TEXT":"In the 1950s, Frederick Herzberg developed a theory that states there are two dimensions to job satisfaction: motivation and hygiene.Hygiene factors can minimize dissatisfaction at work, but they cant make you love your job. These are factors like salary, supervision, and working conditions.When you look back at the best moments of your career, they wont really include the perks or the free lunches you got.Instead, youll look back and remember the motivators. These are factors like recognition and achievement. They mean that your work is challenging and that youre learning about topics that youre intrinsically interested in. These are the factors thatll be the predominant source of your work satisfaction and what contribute to your personal growth.Heres the thing though. If the hygiene areas arent properly addressed, you wont feel satisfied regardless of how fulfilling your work is.No matter how challenging and exciting your work is, if youre not getting paid what you deserve, youll constantly have a nagging thought at the back of your head telling you to leave.On the other hand, only having hygiene areas resolved is the reason why you constantly think somethings missing. Youre puzzled over why youd be unhappy - you have a high status job, plenty of cash, and great coworkers.But we need challenge and growth to drive us forward. And thats why the motivators are integral. Without the motivators, we go to bed at night dreaming about what wed be doing in an alternative world. Just look at these Hacker News posts:&amp;#x200B;https:preview.redd.ited99k3mjsfq61.png?width=2360&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=d839e9d762bf3c5ed210a685634a719f84f6bc87The reason this can be hard to identify in our day to day is because we wrongly assume that just because were not fully unsatisfied, we must be satisfied. And when we inevitably dont get that resounding feeling of congruence with our work, we get puzzled.Here are some potential combinations of hygiene factors and motivators:&amp;#x200B;https:preview.redd.it7lh6amqpsfq61.png?width=2360&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=0692ef38523bd80e3d6c1446d2c48945e131d373One of my favorite examples of someone who prioritized her intrinsic motivators over factors like money or status is [Kristina Lustig](https:www.linkedin.cominkristinalustig). She quit her high paying Director of Design job to retrain as a Software Developer.It might not have made sense to others around her, but only Kristina knew what motivated her intrinsically.https:preview.redd.iteupvenmrsfq61.png?width=1308&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=b5946231fc78fdd9100c2cef2624daf4520a684e## Loss AversionLets assume you realize you want to make a career change into something more rewarding. Your brain is going to freak out.Its going to start screaming: What if I dont like my new job as much as my current one? What if I dont end up happier? I cant change if i dont make as much money.The key to overcome this thinking is to separate short term losses from long term losses.https:preview.redd.itqevrohgtsfq61.png?width=2360&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=c4fd19239cf74e39eae3e918f660688571224498## The Next ThingIts really easy to fall into the trap of thinking that the nicer office, the next pay raise, or the more prestigious title is what will make us happy. After all, its what your friends and family see. Its the labels that stick.Instead, we should aim to ask a different set of questions: Is this work meaningful to me? Is this job going to give me a chance to develop? Am I going to learn new things? Will I have an opportunity for recognition and achievement? Am I going to be given responsibility?These are the things that will truly motivate you. The rest is just noise.-------I hope that was helpful! If you liked this post, you might like [my newsletter](https:www.careerfair.iosubscribe). Its my best content delivered to your inbox once every two weeks. And if Twitter is more your thing, feel free to follow connect with me [here](https:twitter.comOGCareerFair).","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_tcc512","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/tcc512\/how_to_deal_with_an_underperforming_teammate\/","DATE":1647043200000,"PLAIN_TEXT":"I have a teammate, well call him Jerry, who Ive been having trouble with at work. This is Jerrys first dev job, but hes been at the company for about 2.5 years and on my team for 1.5. After a year and a half, he still asks me and other devs on our team (most of whom have less experience than him) very basic questions about how our only product works. He is mostly given unimportant tasks that he takes weeksmonths to finish while asking tons of questions and scheduling one-on-one meetings with other devs on the team. At the end of this process, he shows up with something thats borderline unusable and fights tooth and nail to avoid making any changes during code review. Hes completed two projects since joining, one of which had to be completely rewritten by a more junior dev while he was pulled away for budgeting reasons to help another team implement something using open source tool X. The other is a testing suite that is mostly ignored and has multiple failing tests in our master branch because its painful to deal with.&amp;#x200B;My solution to this is to try and avoid Jerry as much as possible, so Im not the person hes scheduling meetings with or downstream from his work. Recently though, after pushing for quite a while, I got the green light from my manager to start working on a solution for our team that involves X. I was told it wasnt a high priority for the business, so I wouldnt be receiving any help from the rest of the team. But, after Jerry directly asked me, my manager, and my scrum master multiple times to help with the project, my manager agreed. I wrote him a straightforward and relatively small story to take an existing feature from our product and implement it using X. As I expected, its now almost 4 weeks later and despite all of the one on one meetings and DMs weve exchanged hes not finished and the solution in his working branch is way off the mark. &amp;#x200B;At this point, Im beyond frustrated and Im finding it hard to stay professional when communicating with him. I dont want to get the guy fired, I just cant stand having my time wasted by him. The trigger for this post is when I checked my email and saw that he scheduled yet another meeting (this time before my working hours) to discuss not only the story weve talked about plenty already, but the other, unrelated task hes assigned that he also cant figure out by himself.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_q4udlt","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/q4udlt\/30_years_of_experience_in_a_shop_where_the_next\/","DATE":1633737600000,"PLAIN_TEXT":"I think Im ready to throw in the towel at this place I joined less than three months ago. Its a well-funded startup in a space I thought was interesting. They seemed like they desperately wanted my skills to move forward and promised me autonomy. They gave me every reason to believe that my input would have an impact on the company.A week after I got hired, new managers joined. Friends of the CEO from a previous company. Then over the next weeks, dozens of more people from the same company got hired in management positions all through the companyThe new engineering manager fancies himself to be the authority on all things having to do with architecture, data, and development. Unfortunately, he has shown himself to have a nebulous grasp on any of those at best. He has resorted to micromanagement to enforce his visionI asked questions about why were adopting microservices, I was met with vague answers delivered with defensive hostility. Same for when I asked why were implementing a distributed database architecture for less than 10 GB of dataTheyre going all out to design an extremely complicated clusterfuck for an application that should otherwise be much simpler to create. The devs there are nice enough, but they have no idea how databases work, they have no concept of what theyre facing when implementing an event hub as a way to synchronize data inside their service silos (we shouldnt even be doing this except that somehow we have to use microservices now). They think wireframes replace specs so we have no real requirements, but we need to start now!.I tried to at least get them to articulate why were making these technical decisions, and the few times they agreed to verbalize anything, their answers demonstrated inexperience in developing larger systems like this one. They think replication is a backup solution, functional programming is ivory-tower bullshit, and JSON databases like MongoDB are the default solution because RDBMS engines are for boomers.For some context, Ive written two books on databases and data warehouses, Ive written compilers in C++ and Rust, I used to be a certified instructor for SQL and also TCPIP networking. Ive written high volume, low latency TCP servers, HTTP servers, and SQL engines. Ive spoken at conferences, taught courses, and led teams to develop mission-critical applications for fortune 500 companies.Fast forward to now and I no longer get invited to technical meetings and Im reduced to maintaining undocumented Go code written by a 25-year-old kid.So fuck this. Im going back to contracting. Im very proficient in Rust, so Im sure Ill find something I can do.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_o4qv1d","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/o4qv1d\/i_realised_today_i_hate_working_with_other\/","DATE":1624233600000,"PLAIN_TEXT":"So ive been working for about 6 years coding for over 15 and I realised I just cant work with developers.I am a strong developer when Im working alone, my productivity sky rockets if Im alone, bugs are low, tickets are finished fast, and generally I make (in my opinion) pretty good code.Ive been told by every employer that my code is incredibly readable and many of my lead devs and managers have commended the simplicity of my code. If I work with friends its the same.My problem. There is a type of developer, I dont know how to describe them but theyre opinionated, insecure, argumentative, and theyre stubborn. Every meeting becomes about how THEY want things to work, they dont listen and have already assumed they have the correct answer to whatever problem they face. They leave every meeting annoyed if they dont get their way, and any deviation from their views is incorrect.I cant work with these devs and there is always one dev in every team like this. Blocking every PR, dictating proper code, pushing their preferences into the code for no reason, demanding optimisations where speed isnt important making the code unreadible. There is always something wrong and you will always be arguing with this developer.Im done arguing with these guys. Im tired of every meeting being an argument about what THEY think is best instead of listening to the team. Im tired of having to secretly message my teammates to approve my PRs because they have blocked it over some dumb shit that doesnt matter. Im tired of everything being about dealing with their insecurities rather than doing whats best for the team.Some people can deal with these people, I just cant. Im not built for it. I became a developer because I loved code but I never expected to spend all my energy on one team member at every job, having to placate his ego instead of just doing my job.Im sick of having this thought of if I write it this way Terry is just going to argue and I cant be bothered. My motivation is gone, Im genuinely sick of these devs, I took two months off because of this shit and my new job is the same. Theres always one, theyre always completely useless, and theyre always fighting about something.Im honestly considering quitting this whole proffesion just to get away from this shit.I love coding, I code with friends, I code in my free time. I love my work, I really do. But Im not built to deal with this shit all day.rantEDIT:I made this post because of a PR I made the other day.I have spent every day waiting for this dev to go through it, and each day he will find something new, something meaningless, but something he missed the day before.Its been a week of this back and forth.The lead dev got back from holiday today, read through it and immediately approved it. LGTM.I have had a week of pointless changes to keep this guy happy and he still wouldnt approve it.I had the same shit at my last company, I would message my friend to approve my PRs because they wouldnt go through other wise.Ive come to realise that these devs are just everywhere, in every team, and I dont think I can stay in this proffesion knowing that the next job will be the same.The conclusion:---------------After reading through this Ive come to a conclusion.Both me and my team mate(s) are toxic :).While its shitty for them to be overly conflicting and difficult it is ALSO a big problem that I allow their shitty behaviour to effect mine.I am avoiding conflict and as a result allowing this sort of behaviour to continue rather than accepting that the team should trust each other and building a constructive enviroment. Im disregarding the enviroment due to a single toxic employee.Two sides of the same coin I think.I got me some thinking to do :DIt would make sense that if a team mate is reluctant for conflict either shitty people will try to take advantage or decent people will consider their opinions as less valid, due in part to either the uncertainty of it being a genuine opinion or them just going with the flow.Its hard to know if someone truly agrees if they dont disagree sometimes.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_udea3v","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/udea3v\/is_the_tech_lead_position_the_short_end_of_the\/","DATE":1651017600000,"PLAIN_TEXT":"I feel this can easily vary from company to company, but right now I am working as a TL that feels like is doing a bit of management, scrum master, dev and just now Ill be doing PO work while we look for one. I work for a well funded startup that is looking to hire more at the moment.Is this common? Is it the exception?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_11rnbx1","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/11rnbx1\/decline_in_code_quality_as_the_team_grows\/","DATE":1678838400000,"PLAIN_TEXT":"Im the lead developer(9 years total exp as a dev) for a Seed A startup, and things have been going pretty well. Our team has grown from 2 to 7 developers(5 mid, 1 senior, and me), which has been great for releasing updates quickly to meet customer demands.To ensure quality, Ive implemented automated analyzing tools, test automation, and coding standards. But even with these measures, Ive noticed a decrease in our coding quality. Its becoming harder and harder to work with code thats not up to par.&amp;#x200B;When Im not around, I notice that code reviews wont be as strict or effective, and low-quality code will slip through to production. Its exhausting to keep catching these issues, especially when it seems like the higher-ups may(Head of Technology and CTO) not value coding quality as much as I do.Has anyone else been in a similar situation? How do you deal with feeling like youre the only one who cares about the code quality in your team? Id love to hear your thoughts and experiences. PS. Its my first time to lead a team","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_p7slei","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/p7slei\/is_oncall_a_nightmare_for_everyone\/","DATE":1629331200000,"PLAIN_TEXT":"I work at a mid-sized business-first company with a lot of tech debt and very unstable systems. My on-call week is a 24x7 hellish nightmare for an entire week (Monday morning to next Monday morning). This means that I cannot go out for even a 10 minute walk, because the SLA is 5 minutes, hands-on-keys, regardless of the actual business impact some issue is causing. It also means that my wife cant sleep peacefully for a week because of the my being paged round the clock (Edit: now I sleep on the couch during my rotation).It has often been raised as unhealthy, but the management just puts it back on the developers saying we need to build better systems. The issues themselves to get fixed eventually, but the rate of growth of systems is just overwhelming, creating problems faster than on-calls can resolve them.Apart from the on-call work, I still have to meet my sprint commitments. Whats more, since my joining predates the on-call process, my job contract does not state requiring to work after hours, especially weekends. I know that some companies offer extra pay for on-call duties, but mine does not.Is it always this bad? How can I make my situation better?Edit: Thanks for the words of encouragement, everyone!","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_xbck1p","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/xbck1p\/how_do_you_manage_time_and_energy_to_upskill\/","DATE":1662854400000,"PLAIN_TEXT":"Hey fellow developers, I plan extensively to upskill myself with either Leetcode or studying System Design or any other subject. But Ive observed this pattern with me from last few weeks that after completing my office work, I become exhausted and dont have any energy left to study. My brain craves for entertainment in that point of time and so, I either watch YouTube videos or play video games. But from inside, Ive this guilt feeling running around in my mind that Im not upskilling myself. I feel like I need tremendous willpower to accomplish my goals, which I lack most of the times. So, I want to know how you guys do it ?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_113th66","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/113th66\/how_to_work_constructively_with_good_enough\/","DATE":1676505600000,"PLAIN_TEXT":"Over the years, Ive worked with various engineers who write good enough code and push back hard in code review when asked for changes. The argument typically goes It works fine unless there is something obviously breaking. On my current team I have run into two of these types of engineers.During code review I constantly have to address very basic problems. For example:```const firstItem = feed?.items?[0];```&gt; Reviewer: Lets avoid creating references from hardcoded indexes. Looks like the feed may not even exist. And if it does, it may not have any items in the list, so the index will be out of bounds. If you know the feed and items should always exist, please update these types to reflect that. If not, lets add a default case as close to the API boundary as possible, so we dont have to do this in multiple places across the UI.&gt; Engineer: I dont think thats necessary. We should always have a feed - if not, the whole UI would break - and I know that this query will always return at least one feed item. We dont do this anywhere else, so I can just add the default case here to keep it simple.```const ratio = selected!.items!.length  feed?.items?.length```&gt; Reviewer: Are all of these properties actually nullish? Please check the types to make sure they reflect the data model, and lets avoid making non-null assertions. If they are nullish, this could lead to bugs where we either the numerator or denominator could be undefined. Lets pull this logic into a separate function where we can handle these edge cases and add unit tests to cover the undefined and divide-by-zero cases.&gt; Engineer: I dont think thats necessary. The selected items should always exist, not sure why they are nullish, so I added the assertions to get the build to pass. Also, the API guarantees at least one item will be in the list, so I dont think we need to worry about handling a case where there isnt.I work at a FAANG and tbh I was surprised to even be giving this feedback to begin with - at my last job I would have gotten ROASTED for submitting this code to begin with. It seems like these engineers view any sort of feedback as nits, and will circumvent comments by going to other team members to approve PRs. This has lead to a lot of cruft in our codebase and we are constantly have to put out hotfixes for runtime errors. My manager is very hands off and when Ive spoken to him about this in 1:1s, he basically says hes aware of the tech debt but we need to agree on a solution collectively. But getting the other engineers to admit that there even is a problem has been fruitlessGetting into this company took almost 3 months and I had like 5 intense technical rounds, so its kind of mind boggling to be handling such basic stuff but Im stuck on this team for the next year. Right now like 90% of my time is spent debugging these kinds of avoidable errors that often our own users are catching before us!I can only think of a couple ways forward.- Stop doing code review entirely and just focus on my own tickets until I qualify for a transfer.- Add comments and let myself be overridden but dont approve PRs. If something breaks, at least there is a record of me surfacing the problem. Apply for a transfer.- Start interviewing. I could probably find another job in the Bay Area pretty quickly.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_rh1s8y","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/rh1s8y\/a_dev_on_my_team_told_me_to_go_and_figure\/","DATE":1639526400000,"PLAIN_TEXT":"Im a team lead and one of the devs on my team is working on a feature. She is fairly new to our team and Ive done a lot of hand holding with her to show her how the application works and basically walk her through the changes she needs to make. She is supposedly an experienced developer with a CS degree and at least a year or two of experience.We basically got the code change done together to a rough, POC state and then her task was to productionize the code and add some tests.She didnt really add any tests and only added the new variable to some existing tests to prevent them from failing. So in our code review the feedback I gave her was that these tests were not actually testing the new business logic and we needed to add tests to do that.Now this was the part I didnt like, she told me she had no idea how to do that and asked me how so I could show her. To be honest, I didnt really know either and it would take me a significant amount of time to really figure it out.We spent some time looking at the code together, but ultimately I see this as her responsibility, I have other tasks to do. When we spent 30min looking at the code and I explained to her what I wanted her to actually test and she just told me she had no idea how to do it and I should let her know once Ive figured it out so that I could show her.How should I handle this? Im also new to being a team lead so Im wondering if this is really my responsibility or not.Thanks for any advice","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_11wlcob","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/11wlcob\/managers_want_to_build_a_web_rich_text_editor\/","DATE":1679270400000,"PLAIN_TEXT":"My managers are trying to convince me to hire someone who has the ability to build a rich text editor from scratch, Im trying to argue that this professional does not exist easily in the market, and if it does, it is not cheap. I dont think that 1 developer can take on a project of this size, this editor needs to read documents in .docx format and be compatible with Word.We are not a text editor company, my managers argue that there is no editor on the market that meets all our demands and I agree, but I think that getting into this idea of building an editor from scratch that meets our demand is like getting into a black box that can bankrupt us.Building a rich text editor is an extremely complex task, Im a .NET software engineer focused on APIs, microservices, Events, business rules, etc; My focus is not on low-level coding, which I believe is necessary to build a rich text editor, so my opinion is easily discredited even though I am the lead engineer in charge of the project. So what to argue? Or should I embark on this idea that it is possible to build an editor even if it goes against my principles of ethics?Edit:There is a module in our system that automates the creation of official Brazilian government documents, these documents are then generated in docx format and sent to the screen for the user to review, edit and approve their creation, these documents being official must strictly follow rules imposed by the government in terms of spacing, ruler, margin, height, width, etc.This editor should also have advanced Word features like MailMerge as we work heavily with this feature and also the ability to edit partially protected documents, enable and disable protection.We tried some solutions like [DevExpress](https:demos.devexpress.comblazorRichEdit) or [Syncfusion](https:blazor.syncfusion.comdemosdocument-editordefault-functionalities?_gl=11cpm5a7_gaNTYwNzk0OTY5LjE2Njg2OTQ2MTk._ga_WC4JKKPHH0MTY3OTMzMTQ5MC42Ny4xLjE2NzkzMzE0OTcuNTMuMC4w&amp;_ga=2.52439277.490072562.1679318347-560794969.1668694619), despite these solutions having almost everything we needed, our business team was still not 100% satisfied with not allowing the customizations we would like (they are closed source paid commercial solutions) and they think that is expensive. They want to have the code in hand so they can make the necessary changes in the future.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_s9rpk0","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/s9rpk0\/flunked_out_of_faang_zing_and_realized_that_my_6\/","DATE":1642723200000,"PLAIN_TEXT":"First thing: I believe its important that I tell you how I got here.The first 5 years of my career were spent working on legacy projects at a couple different companies. I fixed some bugs and pushed some features, but I knew I was falling behind wouldnt ever be able to call myself a senior engineer at this rate.This past year I fumbled my way into one of the Big-N and got my face ripped off every single day until my manager finally got fed up with me and PIPed me out the door.Two main takeaways here. Im much slower than most people when it comes to becoming competent with new stacksframeworks and code bases. This cannot continue. I desparately need some sort of experienceproject that will fool myself into thinking Im good enough to apply to senior engineer roles.To address the slowness, I believe trying to get up to speed on and making contributions to some open source project would be best. Maybe Firefox or the Linux kernel (please dont laugh). Ill also have to torture myself to learn as many bullshit toolsframeworks I can think of to get used to learning fast (Ruby on Rails, React, Spring, Kubernetes, Gradle, AWS, kill me).EDIT: I come off a bit too salty here, and my internal monologue is a lot more vulgar than most peoples. By bullshit, I mean arbitrary. As in, I dont care about the quality or utility of a given frameworktool. If its new and unfamiliiar, Im going to learn just for the sake of doing so. Learning new things is also mildly stressful for me (if it isnt, it means I already kind of knew it). Its really not that bad once I get started, but the energywill required to get myself to start can be monumental.For senior engineer experience, I can make some sort of large personal project and have pretty architecture diagrams and docs for it. Maybe a hefty game or some technically complex (yet elegant) website thats can withstand the weight of public popularity. The problem with the website is I dont think I can make one popular enough to drive enough traffic to be impressive. Can I really call myself a senior engineer if all Ive made is some no-name site thats never been under real load?EDIT: I do plan on job searching while also working towards these targets. These are just extras that I think I need to catch up to everyone else.Thats enough whining from me today. Feedback and comments are very much appreciated. I guess I could use a mentor too, if thats a thing that still exists. I wonder what its like to be good at your job. I imagine its nice.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_11y8hys","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/11y8hys\/chatgpt_resumes_accounted_for_30_of_the_ones_we\/","DATE":1679443200000,"PLAIN_TEXT":"TLDR: we are seeing a lot of candidates applying for senior devops positions using ChatGPT to create their resumes. What questions would you ask a candidate that are outside the scope of what ChatGPT can do and would give you confidence they know their stuff?Was inspired to create this post based on a bunch of the comments listed [on this post](https:www.reddit.comrExperiencedDevscomments11xq5czthe_developer_job_market_is_insane_right_now) earlier today.Background:Myself (senior backend engineer) and our senior site reliability engineer were going over resumes looking for another senior devops person on Friday. We noticed the following sentence used on three different resumes: `Wrote Ansible playbooks from scratch in YAML. Installing, setting up &amp; Troubleshooting Ansible, created and automated platform environment setup.` Many of the other resumes also included things that no senior, or even junior devops person would put on their resumes. For example: `Setup repository on GitHub, merging code from develop branch to master branch and make it ready for deployment.` This line was on at least 5 of them.We put it aside and discussed other topics for a bit and the conversation turned towards ChatGPT. I decided to see what it would produce with the prompt of senior devops resume. Low and behold the format and sentence structure it spit out aligned with many of the resumes we had just been looking over. It even listed Nagios on the resume which has less than a 1% market share, but somehow 10% of the resumes featured nagios experience... so those resumes were a big red flag.We tried doing a couple of the initial interviews the other day on the phone before we caught onto the chatGPT resumes, the interviewee on the other end didnt have a clue about what was listed on their resume. It was only after a couple bumbling answers that they regurgitated what seemed to be a wikipedia type summary of how they used that technology. My guess is it took them a few moments to read over the chatGPT prompt and determine what pieces were relevant to the question we asked.What we have decided on so far:Our approach is now going to be to sort the wheat from the chaff, any resumes that look suspicious go in one pile and the rest go in another pile for a second read through. From there we setup a video call with people who would be their peers, followed by a manager and the CIO. The hope is that this ensures they are focused on us and wont be reading a prompt, if so its easier to spot.The problem:On the ones we choose to interview, we could assign take home work if the interview goes well -we typically dont and for devops it doesnt make much sense- but they might use ChatGPT to fake it till they make it. So the question is, what types of questions would you ask a ask candidate to confirm that they are the real deal ? Would you go for depth into a specific thing listed on their resume or breadth and hop around a bit more; e.g. tell me how you would architect a solution that involves these specific technologies? Essentially what questions would only a person with experience know.P.S FWIW we have about 100 employees and 25 devs who touch code on a regular basis. The managers above us devs all have deep backgrounds in tech and are happy to dive into the weeds of code or infrastructure when absolutely needed. In the past year we have had no one leave and only one dev was let go due to performance issues; essentially really good team cohesion. We just want to make sure whoever we choose will mesh us.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_ug5cuv","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/ug5cuv\/experienced_dev_with_adhd\/","DATE":1651363200000,"PLAIN_TEXT":"I have struggled with severe procrastination and focus problems for my entire life and it has recently been causing a large amount of stress because it is impacting my performance at work (Tech Lead, 7 YoE). Reflecting on my career, I have consistently struggled with things like deadlines, estimation, and long term solo work. I tend to thrive and receive praise in areas like technical expertise, collaborative work, mentoring, and responding to emergencies. However, whenever I am given a large independent task, my procrastinationanxiety kick in and cause me to seek out other, less important tasks. For the past two years, I have found more success as a tech lead, but the stress from difficulty delivering on time for individual work has become high enough that I dont feel like I can continue on this path any longer. I am aware of typical solutions to help with procrastination and time management. I have tried them all, and continue to work to improve my habits. In particular, exercise, diet, medication, therapy and time management techniques like pomodoro have been helpful. However, Im starting to feel like no matter what I do, it will always be an uphill battle and I should be spending my time working on something that I excel at instead of something that is fundamentally hard for me because of brain chemistry problems.Im looking for advice from anyone who has experienced these issues before. Here are a few options Im currently considering: Talk to management about my issues. This has gone poorly for me in the past (an old boss started calling me Fidget in public meetings after I told him I had ADHD), and there is a lot of stigma around time management problems that Im worried would hurt my career. I also am skeptical that I could improve my issues even with supportive management.  Try to move into a full-management role. I think this might go better for me as the management aspects of my current job do not cause me as many difficulties. However, Im not sure Im ready for this from an experience perspective.  Try an entirely different role. Im not sure what this would be, although a friend recently suggested Sales Engineer to me, although Im not sure what that role entails. Thank you in advance for any advice!","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_pqlc6e","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/pqlc6e\/update_in_loving_memory_of_a_great_product\/","DATE":1631923200000,"PLAIN_TEXT":"OP: [In loving memory of a great product manager and a solid startup: a eulogy, rant, or romance.](https:www.reddit.comrExperiencedDevscommentsoqs66bin_loving_memory_of_a_great_product_manager_and_a)Tl;Dr: A good friend and excellent project manager was fired without reason. I get emotional.---Almost two months have passed, and I think its time for a promised update.Why was Bob fired?I think Ive been able to piece together a complete story from a few different sources.When I caught up with Bob the week after, I learned that he was told he didnt make enough impact in 3 months, and the leadership felt it wasnt working out. This was the first time theyd expressed any sort of dissatisfaction. He was surprised that he hadnt had any impact - in this time, wed been working on a rewrite, so new product features were halted. Towards the end of his time he had organised workshops to plan new features, leadership was invited, they didnt attend.Over a month later I finally got an answer from the CTO. His official line was that they wanted a product owner, but Bob was a product manager. He also mentioned that Bob was very expensive and disagreed with the CEO too much.Ultimately, I believe he said things the CEO just didnt want to here. The product sucks. It still does. Senior engineers fed back that new features were built on sand, and Bob was the only person who actually listened to these concerns. Leadership were upset by this - the feature freeze had now gone on 2 years, after 18 months of frontend rewrite and 6 months of backend. Rather than accepting this reality, they just blamed Bob.What happened to Bob?Id like to take a moment to thank everyone who reached out to me regarding Bob. Im truly sorry if I didnt respond to you.By the time I spoke to Bob on Monday afternoon, hed already had 4 interviews and accepted an offer at a more established firm. We spoke a few days ago, hes much happier.What happened to me?Its a funny story. So, the day before everything went down there had been a COVID scare at the office. The CTO had tested positive, as had the head of sales. Because I had helped the head of sales do his test, I figured I was a close contact. This became something of an adult test for the organisation. Bob went home, as did I. I think HR (just one person) and sales did too. No-one else did. Children.The next week, post-Bob, I was working from home when I had my quarterly review. It was fairly funny, honestly. I was on zoom with the (infected) CTO and CEO, who were both in the office. I assure you Im not exaggerating, and the review went like this: &gt; Its a bit 50:50. &gt;&gt; On the one hand, the backend architecture is incredible, its so much faster, all the new engineers say its the best architecture theyve ever worked in, its going to be a fantastic base for years to come. Also your code reviews are amazing and the way you teach juniors is perfect.&gt;&gt; On the other hand, you push unit testing too hard and spent too long working alone on the authentication mechanism. Why are you working from home?&gt;&gt; As such you were not sure if youll be receiving a bonus this year.I took two weeks of leave, did a 21 interviews in 5 days, accepted a new job for far more money and less responsibility, and chilled for another week.About 3 weeks ago, I quit. They were surprised.What happened at the company?As a fairly small team there were two senior engineers. Im out, what about the frontend lead? About a week ago, he quit. They were also surprised.The team is, to put it mildly, absolutely fucked. The CTO is an engineer and has 3yoe, but is an Expert Beginner. The other 4 remaining engineers were recruited through the French graduate internship program, from the same school as the (French) CTO. This would be a red flag in France, but were in London.They cant recruit any engineering roles. Frontend and backend roles (not senior or lead) have been advertised for two weeks, they havent had one screening interview. They cant even recruit a recruiter.When Bob was fired they didnt have a replacement in mind. They offered to three people this week, all turned it down.Last I heard, the plan is to outsource work to eastern Europe. My final thoughtsIm actually pretty sad about this whole affair. There are just two people in this company (of about 30) I dont like. [They are the two CEOs.](https:i.redd.itjohk7diuzh821.jpg)The CTO is an awful engineer, but hes a good person who was overpromoted. Thats not really his fault. Were leaving on good terms and will probably stay in contact socially.I feel truly sorry for the two junior-est engineers, who started as interns shortly after I arrived. They achieved more than I would ever expect from interns. Theyre in an especially difficult spot, being French in post-Brexit London, where it is very hard for them to move on.A few of the client accountants (were a fintech company, rather than a fintech company, if you catch my drift) know somethings up too. Aside from the bullshit, my core complaint about the company is that engineering experience is not valued or respected. Amusingly, the accountants have the same problem.All that said, I dont think the company is going to fail imminently. Its tempting to say that engineering is collapsing, the org is doomed, but Im really not qualified to make that call. The engineering is salvageable - recruit a proper engineering manager and install qualified senior engineers. If nothing else, I learned a valuable lesson if Im ever a startup founder: Dont play the CTO card too early. Sometimes you need space to insert into the hierarchy.One more thingI know some of you want me to explicitly name-and-shame. Im not going to do that. I am easily identifiable from my writing, and I do not want this post to be found. I am not burning bridges.Tl;Dr Bob is fine, I quit.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_zty4ij","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/zty4ij\/am_i_overreacting_about_my_company_equating\/","DATE":1671753600000,"PLAIN_TEXT":"I work at a mid sized tech company. The company itself has been around for 15 years and from what I can tell gone through a couple iterations of dev leadership. It is a pretty chill place usually. Like most other companies, during the pandemic, they grew in staff (including adding me) and probably have more engineers than they ever did. When I first started things seemed a little ad-hoc. While there are some core teams, each team more or less runs however they want. The team I joined was mostly new (including my engineering manager) . Slowly we started solidifying some agile (using that loosely) processes: daily standup, refinement, retros.The product team is obsessed with dates. On multiple occasions they have mentioned how a story point of value 1, is roughly equivalent to 1 day. A couple devs have corrected them in saying that isnt how it works, and trying to estimate like that is more or less going to be inaccurate. Recently, the director of engineering has started polling teams on how they do standups and what storypoints mean to them. Fast forward a couple weeks and my engineering manager has decreed that we are going to do two things: add a t-shirt size field (which more or less replaces the existing story points) that we will add as a team, and when we assign someone a JIRA they will assign a day value to it. Leadership is insistent they arent tracking velocity against people.Some devs dont seem to be bothered by this (even though in confidence, they agree it is difficultimpossible to estimate down to the day), but this is causing a bunch of red flags to me. Just like how many companies over-hired during the pandemic, in the last 6 months they have laid off some people, revenue is tight. Product is obsessed with dates... Is there probably something more evil going on then what it appears? Even though they will most likely be wrong and inaccurate..someone is definitely using these metrics for something right?I know companies generally just bastardize everything agile, but this just feels wrong and I feel it shows some underlying lack of trust that I just cant quite put my finger on. Am I overreacting? Should I just ignore it and carry on? Is it time to start interviewing? Anyone else have a similar experience?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_rhox0a","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/rhox0a\/am_i_getting_oldexperienced_or_has_product\/","DATE":1639612800000,"PLAIN_TEXT":"Background: 8 yoe in multiple companies in Europe.Now, first of all, I should say, at the end of the day, we work for a product, and I am not looking down on any product people here. I highly respect their work and I have good relationships with all of them, or at least, with the reasonable ones. I just had a number of bad examples.Over the years, Ive worked with many PMs and POs. Here are the things I observed frequently which bothers me the most:- When a new PM joins the team, they always push their strong opinions on agile software methodology. We are imposed all agile rituals, even though we dont need them at all(and we tell them). It feels like, those rituals are must-have for PM people to track our work. We are doing demo at the end of each sprint in a highly backend team and product loves this. Is this a new style of micromanagement?- Changing team names. In many occasions, one of the first things PMs did was to change our team name. I think I am getting a bit older for this sit and honestly think thats a very lame way of trying to have an impact on a team. We used to be called Authentication team, a name that perfectly resembles what we do. PMs think its not fun and unique. Now we have an anime character name and for some reason, it really bothers me. I feel like this is a kindergarten level management. Also, none of my teammates watch anime.- It really takes away all the joy of programming. Yes, we are a business. Yes, ultimately we are building a product. Yes, we are not a FAANG company. However, Id really really love if the product only gives me a roadmap and business value, then they should just get out of my way. I can hear you saying Then its not a good PM. Where are those good PMs? Its not different than saying Then its not a good agile coach or thats not really agile. Where are all the good agile coaches? Where is that real agile? I am yet to find good examples in my career.- It is greatly disappointing when new PMs join the team, and in multiple cases, they patronize us as if we are their subordinates. Arent we supposed to work together? Countless times I heard, Where I come from, we pushed developers in order to get things done or someone needs to babysit developers. I really cannot take this after all these years.Maybe I am just unlucky to have worked with such bad examples. Maybe I am just a bad colleague. I really want to get to the bottom of this. Maybe an individual contributor path would suit for me but I really want to enjoy working with product. I love explaining technical topics to a non-technical audience. I just dont think, we, developers, dont get the respect we deserve and we are nothing but a headcount.Whats the way out of here? What are your opinions? Am I taking things too seriously or am I just being an ahole?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_sewbhy","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/sewbhy\/i_dont_get_the_corporate_take_on_compensation\/","DATE":1643328000000,"PLAIN_TEXT":"Can someone involved in comp decisions help me understandI stress this is an open question, I really dont understand.1. Collective knowledge suggests that the best way to earn more is to switch companies every two to three years. No need to put in the extra hours to get things done, just show, up, do a reasonable job and then move on.2. So taking two people of equal ability, the one who goes the extra mile to meet corporate needs, really knows the code base and produces solid code quickly (a product of knowing the codebase) will end up financially worse off than the one who is just grinding stuff out for a pay check3. From a corporate perspective, why would I encourage the good, knowledgeable, competent, reliable people to leave so I can pay a less committed dev who lacks corporate knowledge in the company more to do less? Why not give healthy pay bumps to the vets?I ask because I feel I am the former now. 3 years in at my company. I am good at my work, enjoy it, and deliver. I like my company, like my work, but would be better off practicing leet code in my free time rather than taking on way more interesting code challenges that are an actual real part of my job and super fun","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_xsw2bf","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/xsw2bf\/approaching_the_end_of_my_first_year_as_a_team\/","DATE":1664582400000,"PLAIN_TEXT":"Its been almost a year since my team lead left and I got promoted to take over his data team of 10 people.Fast forward to today, and I am still as overwhelmed every day as I was on day one. Overwhelmed by all the meetings and people reaching out on Slack with their stupid requests day and night. Stressed by having to deal with underperformers, and by how the better ones keep being unhappy with comp and the boring projects we have to do (heck, so am I). Annoyed by all the pressure from my LM to start delivering more (as if we were not overworked already, which he knows very well).Even in better weeks where I dont have to pull 50+ hours, those 8 hours each day are so intense that I have absolutely zero energy to do anything in the evenings, and feel exhausted for the better part of the weekends too.It just feels like I no longer have control over my life anymore. Work hard during the week, have a couple of days to lie in bed and recover, then get slammed again. Rinse and repeat. Yes, I got a 15% raise, but the extra money just doesnt feel like enough to justify being so miserable every day.Thing is, I totally see why the higher-ups picked me for this role, and not someone else. I know I objectively have better soft skills and deeper domain knowledge than most people on my team - I can see it very well after one year of managing them. But it is the passion for technical work that got me into CS  ML, and do miss the joy of coding so much.Perhaps above all I am annoyed by how I just feel dumber and dumber every day without practice, and Ive reached the point where Im seriously afraid I wont even be able to go back into something like an ML Engineer role.To those who have been through this, does it ever get better?.. Or am I just not cut for this job? Is there any advice you can give so that I can find balance, and take my life back?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_npy9to","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/npy9to\/just_switched_to_a_new_team_found_out_coworker_is\/","DATE":1622505600000,"PLAIN_TEXT":"Been working at my current company for about a year now, and just switched teams. Management doesnt encourage working over 40 hours. I seriously doubt my coworker has any pressure from higher ups to work overtime. And yes it is salaried. But he just told me he worked all weekend and even pulled an all-nighter last night before work. Not in a bragging way but because hes trying to learn more on the frontend and trying to complete tasks before a demo. From everything Ive seen within my org at current company, this is not normal and not encouraged. They would much rather push demos to the future then let something like this happen. Im really concerned because IMO this is super unhealthy, and I want to reach out in some way but because Im new to the team Im not sure how or if I should. Any advice?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_oqs66b","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/oqs66b\/in_loving_memory_of_a_great_product_manager_and_a\/","DATE":1627084800000,"PLAIN_TEXT":"Just in case Ive unintentionally click-baited someone with my title, no-one has literally died. Figuratively, a few are now dead to me.Its really hard to do the process well. While most successful processes look like a form of agile, agile-off-the-shelf is almost never a successful process. Every hole is different, but pegs are either round or square.Indeed, the process must morph. It must be a clay, which once piped into the hole may not set until each nook is filled, each cavity consumed. The flexible peg defies structural engineering, yet a greater achievement has been won: the panes of business and engineering are bound as one.If you asked me 3 months ago, Id have expressed doubts about this idea. I had never seen a person fit such a peg. Until then, they were but a figment of my imagination, ceasing to exist outside a scrum master initiation.Then Bob walked in.Lets wind back a bit. In January, I chose chaos. I left my long term junior-&gt;senior engineering role in a multinational logistics company for a FinTech startup. Thrust into an ill-conceived and unmanaged backend rewrite, I quickly grew frustrated with the process. Product decisions were made by senior management, and never considered the existing technology. A specification would often be simply a competitors feature, or a Rube-Goldberg-esque attempt to circumvent frustrating anti-money laundering regulations. Technical decisions followed the path of least (developer) resistance, yielding great decisions like letting the ORM update the database schema when the app starts.Around easter time Bob was appointed VP Product. As a late-stage parent, he was by far the oldest member of the startup. He was straight yet diplomatic, and was quick to start establishing his process. It was simple and effective. A well groomed backlog, a form for honest and anonymous feedback, and significant time to be allocated for technical improvements. The responsibilities were to be split, with the business bringing problems and development bringing solutions. Senior management would no longer dictate solutions.It took a while for Bobs vision to fully arrive. The backend rewrite had halted all work, but with its near completion just this last week we entered a transitional phase. An OKR was pulled from the wall, and the team was bought into the planning process. Many ideas were shared, a few workable solutions were isolated, and engineering left feeling valued. I was optimistic. On strength of business, the startup should succeed - they solve a real problem with no competitors in Europe. The company culture is vibrant and organic, and doesnt really fall into any tech company stereotypes. The only issues I had were the process, and widespread delusion over the quality of the product. On Tuesday, Wednesday, and Thursday, we took the first steps towards fixing these.Bob was fired yesterday. Bob spoke last at Fridays end-of-week company meeting. Id spoken first, and by that point Id zoned out. Id heard the good news - my excellent interns were to transition into junior roles. Reports from sales and client services were less interesting. My attention returned when Bob said ...and Ill be watching, but from afar.. The zoom terminated immediately.I was stunned. I checked with a friend that Id heard it correctly. I thought back to Monday, when Id got lunch with Bob, and wed talked about how wed know if this startup had a future. I thought hed decided it didnt, and was angry he didnt tell me.I get a slack alert. Sorry guys. Says Bob, to me and the other senior engineer. Not my choice, and its the wrong decision.I furiously delete private slack messages. I talk to client accountants, who are equally stunned. Bobs process gave everyone a voice, not just engineering. The head of sales, employee number 1, offers his opinion unasked via signal. The CEO calls me. Nothing has happened. Hi uddek, you might have heard in the meeting but our plan is to integrate XXX accountancy software for some clients, and write our own general ledger for others. Do you have any thoughts on that? I take a deep breath. Hmm. We would probably do the integration first, so we can keep the surface API similar, which should reduce maintenance long term. He approves, and asks if Ill have the time in Q4 to work on it; I bite my tongue, but my response is affirmative.Bob emails my personal address. Lets catch up next week. Yes, lets.Off slack, I talk to the other senior engineer. We agree to suspend opinions until more information surfaces, but we open our options. I talk to a client accountant, who tells me this (firing without notice) has happened before. People are scared.There are many theories circulating, and I think Ive got a firm grasp of whats happened. Im incorporating information I havent shared here, so I wont summarise yet.Overall, its been 24 hours and Im still angry. Im angry for Bob, whos just a fantastic person and he doesnt deserve this shit. Im frustrated for the team, because the process is likely dead. Im angry for the junior engineers, who just took permanent roles, and dont understand how bad their situation likely got. Im angry for our recently recruited sales exec, who moved half way round the world to learn we dont care for job stability.Anyway, thanks for listening to my rant. Please dont give me the obvious advice. If anyone here is London based and has a senior product management vacancy, let me know. Fair warning, if you recruit Bob, you may be recruiting me too.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_115zye1","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/115zye1\/what_is_your_expectation_of_a_senior_dev\/","DATE":1676678400000,"PLAIN_TEXT":"In my current company Im a senior developer. I recently interviewed for a senior dev position at another place and the feedback I got was terrible. Personally I think the interview didnt cover enough areas at all, but thats just me trying to rationalize a quite shocking result. Either way, its led to me questioning what the most commonly accepted standard for senior devs is, as I know that it can vary quite widely.For me personally (6YOE, non FAANG, mostly web work, .NET if it matters) my standards are:- Can take any general software development task and just do it, using the full suite of features and syntax available in the framework being used- Writes quality, readable, efficient code with few basic mistakes- Knows the wider impact of their work, either through innate understanding or from repeat experience of standard development tasks- Knowledge of databases and how to manage and interact with the data via queries and stored procedures- Has a good understanding of the most important software architecture principles, common design patterns, etc- Can contribute to discussions on any new task or feature and play a part in agreeing on any final decisions - Understands and experienced with project management concepts like agile, scrum etc- Ability to mentor or guide junior members- Ability to perform code reviews - Knowledge of CICD and unit testing (though in my company thats left specifically to DevOps QA teams)To be honest this is more like a list of the level Im currently at (and incidentally is all the things my recent interview experience did not cover). Personally I think it might be considered midupper-mid level by some standards, which is fine by me because I know it can vary from place to place, but my latest interview feedback left me feeling like I was only a junior in their eyes. Strange because Im surrounded by juniors at work and its clear to me that Ive advanced way way beyond that. But now Im just ranting.So lets see what standards you guys have for senior devs, according to your own  your companys way of thinking.Thanks.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_vfybfx","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/vfybfx\/consultancy_three_years_in\/","DATE":1655596800000,"PLAIN_TEXT":"I thought Id give an overview of what is been like to work as a contractor  consultant for the last three years, as it might be interesting for someone considering getting into this. I work daily-rate contracts in Europe earning EUR450 per day as a frontend dev using React  Angular. Im writing this after drinking about 1.25 litres of beer. Contract 1: Working with horrid amounts of technical debt. I worked on a project that had some of the most disgusting code Ive ever seen. Truly revolting garbage. Frontend code written by backend devs who were deviants who should have been murdered at birth. On a positive note, the company culture was really good - free food, no expectation of overtime, very supportive managers. My tech lead was an incompetent moron clearly suffering from a cocktail of narcissistic personality disorder, social awkwardness and a spectacular lack of engineering talent. Contract 2: UX design agency. Building inhouse app. No expectation of writing any tests at all. Tech lead seems totally out of sync with what any current best practices entail. He asks me the question: so why use frontend frameworks? Why cant we just write JavaScript  CSS? (The answer is very simple, by the way, its because HTML has no concept of state and if you work without a framework youll end up writing your own which will nearly undoubtedly end up worse and less scalable than modern options like React) Contract 3: Working in Angular for a Unicorn startup. Brilliant, extremely talented dev team. Great manager. Unfortunately they let go of all consultants due to the pandemic so this was short-lived. Contract 4: Working on huge React enterprise app used by millions of people daily. Very mixed level of talent in team. Mediocre mid-level engineers, shitty tech-lead, brilliant senior dev. A very frustrating dynamic as senior engineer was far more talented than tech lead and had to constantly deal with bad tech decisions. 100% test coverage requirement which I liked although you realise after a while that that metric does not, in any way mean that your software has been tested properly. Contract 5 (Current contract): Working on enterprise software for agency with huge client (world-famous company). Tech lead: autistic genius who doesnt realise that not everyone is as smart as he is and inflicts horrid, completely infeasible deadlines on his team. Manager: a total sweetheart but completely ignorant of what this jobs entails as they have virtually no dev experience. Im currently doing twelve hour days in order to meet an impossible deadline and am not happy. Theres no real lesson to any of this other than that: its all about the people. Work with assholes  idiots and your job is going to suck...EDIT: a few random observations on what the difference is between working as a contractor and as a normal dev: - Youre expected to be able to be productive and FAST on a new code base in 1-3 weeks depending on team  culture- Some people on team will resent you because you earn twice as much money as they do - this manifests in them being unwilling to answer simple questions that might help you in your job (this is rare in my experience, but does happen) - You need to identify who can help you on this huge new project that youve started on and you need those people to like you! - You have to deal with the fact that your tech lead may suck. Its your job to support them. Ive learned to shut up in meetings even when they are spouting obvious nonsense. You need to learn to just suck it up...","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_wjh3kj","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/wjh3kj\/deadlines_imposed_without_taking_into\/","DATE":1659916800000,"PLAIN_TEXT":"Im just wondering if this is normal and how to best handle it. Im a team lead and my team is part of a larger group in my organization that is working to build a bunch of new microservices and front ends for v2 of our SaaS platform (a lot from v1 is being reused).Apparently this thing is supposed to go live in October, a date that was seemingly pulled out of thin air by our VP. I was never asked for any estimates, nor was my manager or anyone else on my team. I have been saying all along that it will never happen, Ive been vocal about it to my manager and other folks I talk to in the organization from the start.My team is doing good work. In fact, our work is lauded as the example and we are well ahead of other teams (part of the reason for that is because we are 100% focused on the project while other teams have to manage legacy applications). We are setting standards and writing robust, fully tested code, and working with our dev ops person as the new environments and CICD pipelines are built out for this platform. Other teams are heavily utilizing offshore developers and their code is a mess, but thats not my responsibility.Im constantly being praised for me and my teams work, they even gave me a bit of stock options last month because I apparently won some award. I am considered a high performer and it seems the company clearly wants to keep me.Even though were ahead I still know that even my team cannot finish all our obligations by October, never mind all the work that will be required when these 10+ new services that other teams are developing all start trying to talk to each other. Were still mostly building in isolation since other teams arent ready with their services.Our VP and project managers and other folks are still talking about this October date like it has any chance of happening and I just laugh every time. Everyone agrees with me, but it seems like they are still telling our VP that it can happen. I dont get it. It has to be apparent to our VP at this point that there are still so, so many things to get done before we can even hope to sell new customers on it.Ive made it pretty clear that I will not be crunching to get things done. We are not sacrificing on quality nor are we working overtime to get things done. I will leave before that happens. Maybe I have a bad attitude, but my feeling is kinda like what are they going to do, fire me? Im a key developer part of the best team working on this platform. Im not being difficult, everyone likes working with me, Im just being realistic.So I guess Im just wondering if anyone has been in a similar situation and how it was handled. Appreciate any advice.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_y0gkpg","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/y0gkpg\/pregnant_and_first_trimester_is_killing_my_work\/","DATE":1665360000000,"PLAIN_TEXT":"Im only 6.x weeks into pregnancy, but my first trimester sickness kicked in last week (I refuse to call it morning sickness, I havent talked to one person who was only sick in the morning including myself lol) and my work is definitely being affected. Because of that Ive already told a few people on my team what was going on.I cant stop stressing about how this is affecting my work! The thing is, everyone is chill and supportive. But like most places, its not like we have a surplus of devs to help with the workload. Im at an agency and do client work, I have to show up today with nothing done, after promising I would finish up my feature task this weekend (Im not even close to done). Im having negative thoughts like, will I get pulled off this project? Are people low-key going to start getting annoyed if this goes on for weeks? Being nauseous 247 with intermittent migraines doesnt help. I know a few people who have gone through pregnancy, but they werent in roles like this where work output and productivity is tracked and measured so much, so Ive been feeling extra pressure. To be honest, Im not a particularly great developer in the first place and already have imposter syndrome, and this isnt helping at all. And its not like Im skipping out on work, any time Ive taken off during the day to rest I make up in the evening or on the weekend, or I take time actual time off.If anyone has any advice or can share their experience, either as a lead or manager to someone in my position, or if youve been in my position, or anything really, I would appreciate it so much!&amp;#x200B;EDIT: To clarify, my work and everyone is super cool. Its just been really hard going from doing my best, to barely functioning some days and feeling kind of uselessEDIT2: WOW thanks everyone for all the responses! I wasnt expecting this much advice and so many stories and comments. I feel so much better and a lot less nervous about the next few months now!","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_sah0rd","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/sah0rd\/how_do_i_identify_good_places_to_work_in_an\/","DATE":1642809600000,"PLAIN_TEXT":"I just want to work at a place where I work 40 hours a week and have a straight forward process. I dont want to be part of  changing the culture. I want to solve technological problems and go home to my family with bags full of money and forget about work.Part of me just wants to say that during an interview, but that seems crass. What questions do you ask during an interview to get these things?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_y2r041","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/y2r041\/compensation_and_level_issues_in_big_tech\/","DATE":1665619200000,"PLAIN_TEXT":"Two jobs ago, I was a newly-senior engineer and tech lead, but grossly underpaid. I found a solid mid-level position at a profitable startup that came with a moderate pay increase and jumped at the opportunity, not worried about the regression in title as this startup had a pretty stellar reputation, at least much better than my job at the time.Fast-forward a little bit and this startup gets acquired by a Tier 1 tech company. I get my offer letter from FAANG co. and rather than slight increase in pay as I was told to expect, the compensation plan is basically unchanged and the offer unfortunately included a down-level. After more than a few failed attempts at negotiating (wouldnt budge), I convinced myself to just take it because at least I finally wouldve made it somewhere from crap dev shops I started at (without a degree), and figured with a little grinding a promo to mid-level would be no problem.Unfortunately, that has not been the case. Although Ive been the key contributor to a few medium impact ships, I write docs to inform andor collaborate with senior and staff engineers, Im primary stakeholder of multiple public repos with millions of users, my title is the same as the new grads on my team and I know my pay is less than some.The real kick-in-the-pants came last week and it has been eating away at my subconscious ever since. While speaking with one of the senior engineers of which I have a pretty decent rapport, they were all ho-hum about you know how it is with having to sit through all of those interview loops. I replied, No - no I dont know - Im only E3L3SDE1. After they removed their jaw from the floor, this person replied Oh, Im so sorry, I guess I had just always assumed... well, you should be.Although I put together an arguably solid narrative for up-level in my last review cycle, I only managed to receive a good jobkeep up the good work response and a laughably-less-than-inflation pay increase with a small stock bonus. The whole situation is kind of demoralizing at this point.My question(s) to those who have made it this far:Where do I even start in approaching this kind of discrepancy with my manager?Have I already painted myself into a corner at this company?Is there some big tech game afoot that Im too naive to pick up on?Does this just sound like the natural result of my manager not going-to-batadvocating for me?Should I just cut my losses, polish up the system design chops and try to jump to a different Tier 1 company?Will my lack of upward progress at current company impede job prospects at other big tech companies?tl;dr: ~6yoeno degree - took a down-level to get my foot in the door at FAANG, feeling stuckundervalued, feedback from manager and peers has been favorable, yet minimal career progression. What do?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_l2ikvc","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/l2ikvc\/i_have_found_that_asking_interviewers_in_the\/","DATE":1611273600000,"PLAIN_TEXT":"Now disclaimer first: This does not always work, people lie exaggerate etc. But I was surprised by asking out a couple of questions related to agile:-1. Sprint length? Frequency of sprint retro(start with easy questions and mix them with the real qs)2. How do they consider estimates and formulate deadlines for features?3. How much velocity do they assign to team members? any buffers?4. How do they handle ad hoc situation which may arise during the sprint?5. How do they handle requirement changes when the development has already started?6. Prodding about scrum masters also helps a lot. Many places have a seperate scrum master, rather than lead or manager taking it up. Usually these are nothing but micromanagers most of the time. yet to meet a standalone scrum master that has been useful in their role. Best ones in my experience have been tech leads taking up the scrum duties.7. If they r open, asking about their release process, or proccesses in general can be revealing as well. U can potenitally identify a well organised workplace from a disorganized or overly organised one(too many processes that eat up developing time).Now u might see this questions as quite trivial, and this method is far from being foolproof, but many interviewers ended up answering to this, and it was really revealing about the workplace.One guy told me they considered estimates as deadlines, it became devs responsiblity to deliver. They communicate these estimates given by dev to sales team and upper management. No intervention by product owner, I got to know by further prodding. Needless to say, devs were overworked most of the time.At another place, they expected devs to roughly estimate requirement changes in their estimates(lool).One place chastised devs if they added buffer to their estimates.Obvious red flags sure, but a lot can be learnt if u know where to prod.If anyone has their own methods to share for getting to know about the working condition, lets discuss in the comments.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_v17k8x","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/v17k8x\/making_a_dev_hire_without_doing_a_code_writing\/","DATE":1653868800000,"PLAIN_TEXT":"Im reworking our interview process and Im considering removing any technical exercisesWhy am I thinking this? Having somebody do a live fizzbuzz (or similar) really doesnt tell me anything other than they spent a bunch of time doing interview puzzle practice Take home projects feel like too much to ask of somebody given our company is not a name brand development team that people will jump through flaming hoops to get on (were not facebook, stripe, etc) The work we do is mostly simple CRUD with reactnodejsgraphql why am I interviewing them like were Google and theyll be in charge of creating googles new programming language from scratch lol? I feel like I can discern somebodys level of code understanding though casual questioningconversation... e.g. there are certain subjectstoolsproblems that youre only going to be aware of if youve actually worked day-to-day with reactnodejsgraphql for some time... Im a developer myself, so I feel like I can discern this. I can see how if the engineering manager or whoever is in charge of hiring is entirely non-technical that you may need a test For the near-term, were not hiring junior engineers-- so trying to weed out people who literally cant code what-so-ever isnt as top a priority... looking at their resume, their github activity and maybe sharing some code theyve previously worked on can easily solve this evaluating somebody on easy-to-change habits makes no sense (e.g. if during their live ocding session they choose a variable name I disagree with... why test for this? We can easily discuss and agree on variable naming heuristics on the job) The whole coding exercisewhite-boarding stuff seemed to be very dogmatically enforced in the 2010s... because it worked or because it was the fad?Of course there will be evaluation on other aspects, behavioral etc but as far as technical evaluation goes-- can it not be done without putting them through a programming knowledge bar trivia live coding test?Am I crazy to remove technical exercises in exchange for morelonger technical conversations? UPDATE: Some great feedback, ideas and shared experiences. Leaving this up to hopefully hear more. One recurring criticism is my comment on looking at their github-- point taken. I should have phrased that its more of a smell test for those who actually use github personally or professionally-- of course not everyone does though. ","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_103fncc","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/103fncc\/performance_review_not_as_good_as_i_was_hoping_it\/","DATE":1672790400000,"PLAIN_TEXT":"I feel like I had a very strong 2022. I became the lead of a work stream within my platform, got recently promoted to Engineer III, became a people manager, onboarded new team members who needed a LOT of help, and delivered several features successfully. Ive received nothing but good feedback from my manager, peers and juniors (he literally read me their feedback).However today I was told that the other managers and higher level leads do not feel like Im doing all I could be doing. Apparently I am not, in their eyes, the lead of this work stream, and that I need to be doing more to free up the time of my boss and the other senior employee that they see as leads (who is not even part of this work stream anymore).Both my boss and I were baffled by this. We both agree that I have already been doing all of this, and have grown a lot this year. Both boss and other senior employee have had next to nothing to do on my stream for months now, since I have been handling things. Apparently what he was told is that due to my work stream dealing with reference data (as opposed to others that work on transactional data), the impact of the work that I have done is not as great. My work stream has had the fewest production bugs by far (less than a handful) and so we stay relatively quiet in production and are not part of high profile issues. As such, I havent had the kind of exposure that some of my peers with better ratings have had.Im absolutely devastated. Ive worked my ass off this past year, especially the last six months. Ive given up many weekends and significantly compromised on my mental health. Ive only ever received stellar feedback from my manager who constantly sings my praises and thanks me for all the work and help Ive been providing. He told me time and again that he sees me being the long term lead of this work stream, even though its relatively quiet (which we both see as a good thing). Im considering asking for my rating to be reevaluated, if that is even a possibility. How do I handle something like this?ETA some more info- I got a meets expectation rating and was expecting more- I care because at this company the performance rating has a direct impact on compensation - the promotion I got was only effective January 1 2023- I have got higher ratings at this and previous companies before when the work I did was arguably the same or lower impact","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_rf3ptr","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/rf3ptr\/in_a_managerial_lead_position_one_of_my_junior\/","DATE":1639267200000,"PLAIN_TEXT":"So Im an engineering manager and I recruited this junior dev 7 months ago.Im in charge of 12 developers so Im not really near all of them most of the day but Im starting to get the same feedback from different peoplefrom the team and from other departments. Feedback includes:1. This person talks a lot and takes everyones time.2. People avoid speaking to them because they talk a lot, and very slow and without any point.3. They dont get along with their product managers and I get feedback that the communication with them is very hard in stand up meetings.4. They are not good listeners.5. They dont read social situations very well and causing cringe for people at the office.6. They get into every conversation even if its not related to them in any way.7. On after work activities, Ive been told that they are causing stress, cringe and awkwardness to the level people prefer not to engage with them in any way.On the professional level, theyre ok, but I dont really see them improve because of all of the other issues.Not sure what to do here, giving this feedback seems to me like something that can devastate them since its like criticising who they are as a person.Would love to hear your thoughts and advices about my situation, thanks;)","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_t3k8sl","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/t3k8sl\/managers_why_do_you_want_devs_to_participate_more\/","DATE":1646006400000,"PLAIN_TEXT":"In my previous role at a Fortune 500 and my current late-stage start-up, my managers have both recommended in my reviews to participate more in meetings. Im a highly introverted person and contribute if I feel my input is necessary, otherwise, Ill message relevant comments in Zoom, Google meets chats. Can you explain why it is important to speak in meetings, and what information are you looking for from me as a developer that Im not already doing in my regular job? (code reviews, story refinements, standups, etc)Edit: Thank you for all of the responses. Ive read through them all thus far and what I can take away from this is that:In order to get recognizedrecommended for promotions, a dev is not only valuable for their technical contributions but also their ability to communicate such that anyone involved in these meetings can understand what must be donewhat has been donewhat cannot be done from me (high level, more details would be involved depending on scope).From my perspective, I can say that I definitely lack certain soft skills which I will improve on going forward. I will try not to take my managers feedback personally but use it as a guideline of how to approach my work responsibilities. This is not only by performing but also by communicating my thoughts (technical or subjective).","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_woeo96","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/woeo96\/how_do_you_retain_everything_youve_learned\/","DATE":1660435200000,"PLAIN_TEXT":"Ive been in the industry for 6 years working at different companies, technologies and domains, but Im having a really hard time remembering all the work Ive done, skills Ive learned and even started to forget some basic concepts. If I think back to my first 3 years I was a code whiz but now a days I cant even accurately write a class or struct without making syntactical errors.This is giving me huge anxiety in my career that Im not really growing as a developer but just replacing older knowledge with recent knowledge, instead of compounding my years of experience.I have definitely improved in problem solving, understanding designs and architecture better but when it comes to coding in interviews Im mortified, and I tend to be fuzzy on the concepts. (Ie concepts like how we use stack vs heap for memory, processes, etc. off the top off my head)Even when I review old material, my brain tends to cross syntax from different languages (ie Id get mixed up on how to declare an array and write it in the wrong language)What are some strategies you use to retain the key skills youd need?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_ytrllz","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/ytrllz\/tech_downgrade_with_acquisition\/","DATE":1668211200000,"PLAIN_TEXT":"This is a weird one for me. My company was just acquired by another similar company that was more successful than us in our line of ecommerce. The painful part is that it feels like a huge tech downgrade. Our company has a pretty modern backend system with microservices in .NET and node, using a kafka message broker, tons of unit and integration testing, top notch observability, etc. Their backend does more or less the same thing, but is a php monolith, mostly written by one guy who chose what he was familiar with. They are going to throw out our stack and switch everything over to theirs. Similarly their website is much less advanced than ours technically and from a customer experience standpoint. I havent touched any php since about 2005 and certainly never considered using it for a backend order processinginventory system. Their philosophy is to just keep things simple and get things out the door fast even if theyre not perfect, which I can appreciate on some level. I guess they won the war with this approach, given that they were the company buying us and not the other way around.Anyway, I have to decide if I fight through it and work on what feels like an archaic tech stack, try to improve what they have, or just quit and go somewhere else. Ive never been in an acquisition where the software that we spent years building is just being thrown in the trash. Usually the company buying you wants your technical knowledge and code base. Its pretty heartbreaking. It also calls into question everything we believe - why do we build systems with modern languages and architectures when any old monolith talking to a single database will do the job adequately. Maybe I just need to adjust my mindset and think about the success of the business and not worry about what tech I find interesting.Anyone experienced anything like this?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_qtqw31","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/qtqw31\/senior_developer_asking_to_be_relief_from\/","DATE":1636848000000,"PLAIN_TEXT":"We have this pretty much the typical problematic junior developer e.g. messy work, immaturity, need A LOT of guidance, and somewhat having this not my job attitude every time a new task that may require the person to do some exploration e.g. we ask the person to write some agile Stories so they can get an idea of how to write Stories but the junior just said thats not my job scope.I dont really want to go into the details of this problematic developer - but one of the senior developers had enough of the junior. The senior developer asked to be relief of the responsibility to watch over the junior as the senior is also have tons of work, and its getting on their nerve to babysit this developer.To be fair, the senior does have a lot of work.Is this a fair request from the senior? Did anyone faced any juniors that needed a lot of handholding? ","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_ph7yeo","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/ph7yeo\/what_made_your_favorite_manager_a_good_manager\/","DATE":1630627200000,"PLAIN_TEXT":"So Im moving into management for what Im hoping is my last time. Ive made this transition from lead dev to manager a couple times at different companies, but I think Im finally ready to commit to being in management from here on out for my career. Which is a little frightening Ive always had dev to fall back on, but if I fully commit my safety net is going to eventually disappear as my skills atrophy. As a result Ive been doing a lot of thinking to make sure I get this right. In some of my evening ruminating I was kind of thinking back over what made my managers good managers and I had a sudden panicking realization that most of my best managers just left me alone and I kind of didnt really need them. The skills they brought were they were friendly and kind, but just let me do my own thing which worked out for them but I was often just kind of doing their job. So in a way, they were bad managers?Which made me start thinking, is my role completely unnecessary for a good developer? Or have I just been missing out on what makes a really excellent manager? Or maybe my good managers were doing things behind the scenes they probably should have been telling me about so I could appreciate it?So have you had a manager that was amazing and you absolutely credit them for providing value to the company, the team and you? What was it they did? What made them a great manager?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_inl1na","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/inl1na\/random_mistakes_and_opportunities_after_14_years\/","DATE":1599350400000,"PLAIN_TEXT":" Built my brand, but associated it with things in my life that werent work related. I made the mistake of tying my Github username to all sorts of random other accounts, so if you google me, you will see my projects, website, AND my favorite games that I played in 2012. Got in to arguments about code quality and following conventions, to the point where I was feared by older members on the team. At the time I convinced myself that it was a 100% valid expectation to have every team member competent in the newest frontend hotness. I threw React and modern ECMAScript in to the stack and expected everyone else to be as excited as I was to use it. Oh was I wrong... And when they didnt seem to get it, I got defensive and turned in to a jerk. Dont be this guy. Code always comes second to revenue. You should be able to quantify any library you add to the stack in terms of ROI. Otherwise it is at best undefined risk, and at worst, a performance degradation that could harm ROI. Were here to build things that make money.  Dont treat it like a competition. I always pushed myself to be the most knowledgable member on the team, but what I came off as is not a team member, but an ass. Its not worth being the best if no one can work with you because youve zoomed off towards some new language or paradigm that the team hasnt adopted. Ask lots of simple questions. I set a low bar for the types of questions I ask because it helps bring everyone in the conversation up to the same level of understanding, it can catch projects straying from their key tenants, and it also defuses the know it all mentality that Ive carried for a large portion of my career. Dug in deep. I spent 6 years being underpaid (salary $67k-$95k) working on a really well known brands web experience. My salary was low, but my resume was incredibly rich. I was able to field offers for $150k+ without even looking. I took the bait and left, but only after I felt like I learned everything that was on the table. Spend money on a really nice office. Its your domain, dedicate some cash to the best desk, chair, monitor, keyboard etc. that you can afford. Pick your poison and commit to it. Ive worked at agencies where every job is a different stack, and Ive spent 6 years on a specific platform. I was scared to get locked in to a subset of jobs on this platform, so I quit my job and went back to generalized frontend development. It ended up being a mistake for me because I was getting paid $105k a year when I could have been making $150k a year as a specialist. Talk about money in the open. I do this with all of my close friends in the industry, and it was eye opening to hear what they made and how they achieved it. Once I was able to talk openly about my salary, it made it very easy to do negotiations when I was in interviews along with giving me confidence to turn down lower paying offers. You dont have to be a manager. I always thought that was the progression in this career. I knew that I would not make a good manager, so Ive decided to continue programming indefinitely. So far its worked out fairly well. Making mistakes is fine, just fix them quickly and learn from them. Ive made a borderline egregious number of both technical and professional in my career, some of which Ive documented here. Theyre all reminders for how to be better in the future. If youre not making mistakes, are you learning at full capacity? Just dont burn the house down.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_svne6y","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/svne6y\/is_it_still_burnout_if_it_stems_from_apathy\/","DATE":1645142400000,"PLAIN_TEXT":"Hi.CONTEXTIm two and a half years into my second position in the industry, with 7 years of experience overall. In my previous position at a medium-sized startup I was deeply interested in the work we were doing, worked incredibly hard (60hr weeks for multiple years), became the lead developer on a team of senior engineers, and performed well enough to warrant the business granting me multiple 5-digit raises a year and very positive recommendations from the most experienced and respected devs in the company. I still view what I did then as my best, most intellectually-stimulating work.I got my current job at a Fortune 500 because I wanted to move to a new city and see what other (larger) companies are like. Within the first few months I realized it was absolutely not a good fit (was going to elaborate, but after I wrote up paragraphs I realized its unnecessary), but I canceled my job search because we were printing money hand over fist at the start of COVID and I had some serious personal issues I needed to address.Two years later, Ive basically worked myself into a comfortable position where I cash a fat paycheck every two weeks while doing the bare minimum with my incredibly dull work on a cobbled-together dumpster fire which doesnt solve the needs of our stakeholders (wanna guess how I knew the position was a bad fit so early?), is therefore being EOLd, and is an insignificant component of a product I dont give a shit about. I think that last point has proven to be far more important to me than I ever expected and its a direct contributor to the apathy Im currently experiencing.Im basically at the point now where I find it incredibly difficult to give the slightest shit about my work, my deadlines are slipping and the quality of what I do is going down, but Im able to stay up until 3am working on developing personal projects (showing me that spark of curiosity and passion still lives on within me). Not good.QUESTIONAs shameful as my current situation is I have a pretty good understanding of whats got me to this point, and I know I have to dig myself out of this rut. Im wondering if anyone can relate to this sort of scenario, and if any of you have an answer to the question in the title.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_po65ji","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/po65ji\/first_time_lead_at_big_tech_unable_to_meet\/","DATE":1631577600000,"PLAIN_TEXT":"This post is to rant, hopefully get some good opinions from fellow seniors, and warn future seniors about the types of challenges your new role might bring.I accepted a SeniorTeam lead role at a Big tech company, after having spent the first 7+ years of my career at a smaller place. My day to day job with my larger team (~15 people) is to support an internal system that is in the critical path of many use cases for engineering, customer support, and sales. However, I was also tasked with delivering Feature X a shiny new set of functionalities that would improve one particularly important use case that our application supports. Feature X is more than code, it also introduces an improvement in business processes, documentation, etc. I lead 5 junior devs for Feature X.I spent a lot of time talking to stakeholders and devising a plan to deliver Feature X with incremental releases. I presented this to leaders in my org and they loved it, and I am now known as the Feature X guy; I am truly passionate about solving this problem and I think we can make a big difference in our company with it. A lot of people across the company are looking forward to having Feature X in place.The problem is that supporting our internal system is a full time job, as this is a giant legacy application with a myriad of problems that need to be fixed, plus a lot of manual work that is not yet automated. There are very little tests, a non-existent test environment, and an unstable deployment pipeline; basically, this thing needs work. My team and I have basically had no time to work on anything Feature X for a couple months since we presented the plan and the team was formed. It is embarrassing and disappointing when I get tagged in emails or pinged directly to ask if this particular part of Feature X is ready so we can solve a problem, and I have to explain that no, it is not ready yet, and I cant provide a clear timeline at the moment. To make matters worse, our team is operating without a manager or a PMbusiness owner, so the team leads are the ones dealing with the constant stakeholder communication.I explained the situation to our VP (who we report to until we find a manager), and while she is understanding, she just asks that we find a way to make progress on Feature X while keeping up with the daily toil of our main system. This whole thing is killing me mentally, I have thrived in this field because I enjoy helping others solve difficult problems with code, and I take pride in delivering on my commitments. At this time I do not see how we can possibly make any significant progress without hiring like 20 more people, which wont happen anytime soon. Oh, and theres already talks about Feature Y next year, so I gotta get ready for that.I will not get fired if Feature X falls through, people have seen my value in working on the main system and other areas so its not like my job depends on this. But it hurts to have a project associated with me that might completely flop.What would you do in my situation? Have you faced similar problems? Is this what people mean when they have to work 60+ hours a week in Big Tech? No one ever asks me to stay overtime, but the amount of work Im expected to deliver certainly asks for it. Maybe Im not cut for this type of environment? Should I just give less of a fuck about this project and simply work on what my capacity allows?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_u3mj33","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/u3mj33\/how_many_hours_of_deep_work_do_you_get_in_a_day\/","DATE":1649894400000,"PLAIN_TEXT":"Background: Ive been at my company for 7 years now. I consider myself to be a mid-senior level engineer, have been promoted a few times, and always get pretty good reviews.Being honest here, I know that Im a bit of a slower developer and get less PRs out than my colleagues but my code is well documented, solid, and not buggy. I do not miss hard deadlines. If anything, I thrive on having hard deadlines with my work cut out for me and find it fun.Right now Im on a team with a greenfield project with lots of moving parts and changing requirements. I love it and am extremely excited to work and learn, however, Ive had problems in the past separating the end of a workday to my leisure time in the evenings. I want to get better at that, though its made much harder as I work from home with my setup right in front of my bed. Id say that my company is great at respecting boundaries.There are times where Im like, Ill make sure to do... 5 hours of deep programming today! and hit it. But maybe the next day I feel a bit sluggish.Sometimes Ill have meetings and say, 3 hours! and hit it but feel kinda like I didnt do much.Sometimes a high carb meal gets me and I feel zapped after lunch -- sometimes I push forward anyway and sometimes I bend a bit if theres a good soccer game on.Im really trying to set some targets that I can hit daily so that I can experience good flow and clock out at the end of the day feeling, okay, I did a great job, lets tune out until tomorrowIm just looking for strategies, numbers, and any advice you can give. Thank you so much, this is a great forum.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_sltu6r","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/sltu6r\/20_yoe_11_at_current_job_staff_eng_interviewing\/","DATE":1644105600000,"PLAIN_TEXT":"Started with a big local team but the company was soon acquired by a big (50k+) global one with a heavy focus on foreign outsourcing. Went mid-senior-staff pretty reliably, with glowing reviews.I didnt know about this acronym, but for the last 8 years, Ive been playing managertranslator for team after team of WITCH contractor teams (WIPRO, INFOSYS, TCS, COGNIZANT, HCL) that we hired for contract dev work. Finding theres enough of a reputation with those companies to earn an acronym explains a lot about my situation =I stuck around, picked up a lot, but being one of the only US employees, my soft skills were more in-demand than my dev skills. I became a master troubleshooter and great at applying band-aids to keep the org chugging. But then kept being that for 10 years straight. My prior growth in a single stack was exchanged for enough experience to use just about anything, but not with best practices, or in a way Id be happy for others to see. But it keeps management happy, compilesships, and they wont pay for more. They win, my skills lose. Feels like Im a successful assassin but my weapon of choice is a butter knife.Ive been studying up on newer technologies (ES6+, ReactJS, .NET Core, DevOps) and making slow progress, but the after-work responsibilities for my day job have really started cutting into my progress. It feels like saving a couple hundred a month, expecting to have a 20% down payment with todays rising housing prices. 1 step forward, 1.5 steps back.Staff Engineer in this company has really dulled my on-demand skills but if I look behind me, Ive got a trail of successes. Its just that every situation has been so different that its hard to cram all that varied experience into an on-the-spot live coding interview in a single language.Has anyone here prioritized leaving a troublingtoxic situation vs leaving the way theyd LIKE (more prepared and a much better candidate)? Howd it go?Have you had any luck with interviews that focused more on your work history, experience, than on-the-spot demonstrations?Im not big on half-assing, so I wanted to just apply and ace an interview. My first 10 years was in a smaller pool (full-stack web dev in a now-dead server language) so interviews were never a problem. But Ive also never been someone as long as Ive been here. I guess I feel like a new middle-aged divorcee trying to date again. Ive got a great recommendation letter from my most recent Director, 2 decades of proven growth and a history of being able to pick up brand new stuff, but stage fright with this many YOE keeps messing with my head. Has anyone here had luck with a company that looked for experienced engineers first, then mentoringtraining them where needed to get them rolling?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_pbjmz8","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/pbjmz8\/devs_from_80s_and_early_90s_era_seem_so_cool_that\/","DATE":1629849600000,"PLAIN_TEXT":"Maybe its just selective bias or something but the devs from the early era of computing seem so cool to me . It was a time when one one person could do so much and have so much impact . If someone wanted they could know the whole machine inside out . If someone was passionate enough they could tune the machine at hardware , bios, os, drivers , networks , display drivers . One person could know about all this and know their machine . This is simply not possible today. In such a short amount of time weve come from devs who could build their open computers to people who are specialist at some particular framework in a particular language . I had this realisation when 6502 was first introduced to me in college and it was like the floodgates were opened . It was like so much power . I could write my own os for it , write my own display driver, keyboard driver , my own EPROMs ....etc . I wish I could feel like that with what I have today but I know its just not feasible or is it ? I dont know . I am not a rock star or 10x Dev . I am pretty avg at most things I do but I do love diving into intricacies of what I work on and I am always excited by everyones work not just mine . But it seems that kind of god like knowledge and power over the machine doesnt seem feasible .What do you guys think ? Do you know someone like this ? Am I wrong in my assumption ....or whatever . I would like to know your views and what do you think about it .","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_10g7334","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/10g7334\/getting_over_fear_of_being_let_go\/","DATE":1674086400000,"PLAIN_TEXT":"Ive worked in the field for 10+ years and am still always afraid of being let go despite: - never being written up or having negative feedback - progressing to around the seniorstaff level via multiple promotions (internal and job hopping) - starting as a support dev on a tiny team to now being at a faang level companyDuring my career Ive unfortunately (or not, maybe its just unavoidable) been through 3 different acquisitions and made it through without ever being let go. At times Ive even gotten retention bonuses.However, literally every day, if I am not performing at my best or if I just dont have much to do, I feel like I could be fired.I think this fear comes from the uncertainty of the layoffs Ive seen but also because Ive never actually been fired so I feel psychologically more scared of it.Anyone else have feelings like this and have you been able to get over them? What helped? How can I have a more healthy relationship to the daily ups and downs in productivity without feeling worthless and expendable?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_gsu8i0","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/gsu8i0\/not_so_obvious_hints_gauge_a_developer_while\/","DATE":1590710400000,"PLAIN_TEXT":"Throughout my career I have interviewed dozens of candidate and I have developed some theory of filtering out bad apples.When I started, I used to go to interview help websites and collect toughest questions available. However soon I realised that1) It does not filter the bad apples - those people already memorised answers to such questions2) It actually harms the good candidate who were not fortunate enough to read such question before. Due to the pressure of interview they might not even come up with an answer of their own.Slowly I started evaluating people after they are hired and I get to work with them. I keep a very detailed log of interviews - right from the question I asked, to how they responded - sometimes even their expressions.One thing that stood out to me very clearly is that developers who went extra mile to make the code clear, readable and happy to explain it over and over again - were my best hires.Hence it became my mantra while interviewing candidate - to look for those who care about other people that read their code. Those who are happy to explain in detail. I keep the questions at reasonable level of difficulty. Not something that would scare the candidate at the same time not something which is out right obvious.This technique has immensely helped me to find a needle from haystack. Recently I was watching uncle Bobs videos and he mentions that primary value of a software is that its easy to change. And that is when I realised why this method of evaluating a candidate has some credibility. Because people who take extra pain to make their software maintainable are best value addition to your company.Ofcourse nothing is foolproof and there would be exceptions to this technique as well. However it has served me pretty well so far.Wanted to share this here and would like to hear what are the other not so obvious traits that you focus while interviewing candidates?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_n2j0yt","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/n2j0yt\/learning_to_let_go_of_a_project_you_created_being\/","DATE":1619827200000,"PLAIN_TEXT":"I made a name for myself at my current company by building a particular project from the ground up. I was the first engineer to work on the project and oversaw the design and implementation of every major component. The project functioned so well that our higher-ups gave us extra head count to hire resources to grow the project and expand its scope. The problem is that most of the people theyve hired to grow this project are quite bad. Heres a small sample: Senior engineer - doesnt contribute technically to the project, only sets up meetings. Mid-level engineer - hoards tasks, doesnt apply PR comments long-term, refuses to write code in the style we set as a standard. Manager - pushes unrealistic deadlines forcing other engineers to work late  weekends, refuses to confront problematic behavior of engineers.I tried to make it work and brought my complaints to my boss, who agreed changes had to be made. I gave it a few months and they were never implemented, so I asked to be moved to another team he runs, which wasnt an issue.My issue is that Im having a hard time letting go of watching something I carefully crafted be turned into a dumper-fire. Although Im on a separate team we are still part of the same organization, so I still see their PRs in passing. The code quality has gone downhill and tasks linger in progress for weeks. Thankfully none of this is my responsibility anymore, but I am struggling to remove myself emotionally from the process. Witnessing the complete mismanagement of something I created upsets me. Any advice of how to truly let go would be greatly appreciated.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_11bml32","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/11bml32\/are_all_the_bigger_companiesover_1bil_market_cap\/","DATE":1677283200000,"PLAIN_TEXT":"I started working for a public company 8 months ago, not super big or anything but between 1-2billion market cap. Before this, I worked mostly for small startups... like a max of 25 employees so lots of pre-series A. I personally have 11 yoe.I initially sought out work for a biggerpublic company because I thought I could get paid a lot more than all the small companies I had been working at... I was right, my TC jumped 2.5x(more like 1.75x now due to the stock taking a hit).The company has a legacy rails monolith that around 70% of its business logic runs through. Working in this thing sucks, not just because its rails. The dev environment is always a pain in the ass to set up... Im not exaggerating, whenever I want to run it locally there is about a 50% chance I need to fix something that broke it, other devs agree with me. This means a 15 min bug fix I want to test quickly can turn into a 4 hour ordeal which happened to me last week.Everyone knows this at the company, the plan is to break this monolith up into smaller go services; however, Ive been told this has been the plan for the last 3 years. There isnt enough push to get it done faster which I understand... you cant just hold back on ALL features until the refactor is done otherwise the company will go bust... but when Im asked to build something in the monolith because otherwise we would need to wait for another team to refactor that portion of the monolith it feels like were going in the wrong direction. Im typically told that its much more complicated than I think and our team definitely doesnt want to take on the refactoring of X.Anyways... my question is really about if this is normal. This is my first big company so I can only assume this is a symptom of being on a bigger ship that is harder to turn. I dont want to go back into the job market just to discover that the next big company I work for is exactly the same. I feel like that spark of joy I used to get from building a feature is gone because I cant build very impressive things anymore due to how hamstrung I am by our environment... I cant be creative in my work anymore.Is this normal for bigger companies? If so, how do you cope with it?tl;dr: My companys legacy codebasedev env is awful, Im forced to do work in it and I hate it. Do you guys also have the same issue at your large company?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_p3c98a","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/p3c98a\/anyone_ever_given_a_pip_to_an_employee_before\/","DATE":1628726400000,"PLAIN_TEXT":"Been a software engineering &amp; devops manager for a little bit now, but Ive never had to give someone a performance improvement plan before. Im really dreading it but getting, we will call them Pat, off my team is the only solution to the problem at this point. No matter Pats shortcomings they are somewhat of a human with a family so personal feelings aside, I would like to make this as painless as possible.Does anyone have any advice on delivering performance improvement plans? OR has anyone possibly received a PIP from management and thought the situation was handled well?# More Background InfoPat is a slightly above-average engineer. The issue is that they are toxic to the team. Pat is passive-aggressive, very opinionated, argumentative, and very immature (they are in their 40s).Not only is Pat a non-communicator in that they hide important information such as being behind schedule, but when they do communicate they have shown a blatant disrespect toward not only me as their manager but to other people in the company. Ive had to have numerous private conversations with Pat about how they speak to people. There have even been times where Ive had to break my rule of not criticizing my employees in front of others due to Pats outright disrespect.Everything is a battle. Code reviews with them are like the Thunderdome. Pat will attempt to derail a code review over the most minuscule thing like white space before a comment character. If you try to move onto other real issues in their code, they will circle back to the minuscule thing and simply cannot move past it. If anyone actually stands their ground and Pat doesnt get their way then Pat pouts and will spend valuable time looking into peoples code or a system someone on the team set up with the intention of picking it apart. They will open bug tickets for things that usually arent bugs or pointing out a non-optimized function in legacy code that has no impact on anything of importance. Not only is this immature and petty, but this interrupts what other team members are doing. To Pats credit, they have on occasion found a real issue which I would conservatively say is 1 out of every 10-15 times they do this. Coincidently that is just enough to keep them thinking they are always right and the smartest person in the room regardless of who else is in the room. The Dunning Kruger Effect is strong with this one.That being said, Pat doesnt commit their code unless I repeatedly ask them to, hardly follows the company coding style guide, spends hours or days refactoring code that doesnt need to be, obsesses over speed and memory optimization for one-off scripts, and thinks they write incredibly clean code (spoiler alert: They dont. Unless youre the kind of animal that likes your comments in all caps).Now to the piece de resistance, Pat cannot hit a deliverable deadline even if I were to promise them a lifetime supply of the moon pies they always seem to be eating. In my 15+ yoe Ive encountered many people who had one or many Pat-like qualities, but Ive never worked with someone with all of Pats adorning qualities before.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_ibxk5w","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/ibxk5w\/meta_so_long_and_thanks_for_all_the_fish\/","DATE":1597708800000,"PLAIN_TEXT":"Hey guys. Just wanted to let people here know that Im dropping my mod status in this sub. Ive been a mod for a while now (was made mod shortly after [this post I made](https:old.reddit.comrExperiencedDevscommentsf6a7t5meta_time_to_crack_down_in_questions_from). The primary reason for me is that Im more or less going to stop participating in any of the IT beginner sub because frankly, its costing me way more energy than it should.Secondly; if I carry responsibility I also want to be in control. Thats not really how the modding system works at Reddit; I dont feel like doing a ton of work in a sub where the actual control is still with a few completely inactive mods.And third; we Dutch have a saying dweilen met de kraan open which literally translates to to mop while the tap is open which is what modding a sub like this feels like. No matter the goals we set for this sub; even with clear beginner questions, there are WAY more people actually responding to the question than there are people reporting them. If this community actually wants a group for experienced developers, it should stop accomodating the much larger group of inexperienced devs that over time will turn this sub in a smaller rcscareerquestions.Cheers :)","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_yjewy3","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/yjewy3\/got_promoted_to_director_after_boss_quit_any\/","DATE":1667260800000,"PLAIN_TEXT":"Currently a high level IC with 2 decades of software dev experience. Happy being an IC. Boss put in his notice and I was asked if I wanted the role. Never really been interested in management track. Took the offer because I figure Id give it a shot and see if I was any good at it and liked it. Also figured itd be good (maybe) on my future resume. I have a fallback that if I dont like it or its not working for any reason I can go back to my IC role. Looking for any advice from anyone who might have been in this situation before. Thanks.Update: so thank you everyone for your sage advice and recommendations. To answer some repeated questions, its a small company with 1 team of 5 people who will all report to me. There is no engineering leadership outside of the director role, no SVPs or CTO. Were just not that big. Ive been in the lead IC role now for over a year and my boss leaned on me heavily to own and direct the technical aspects and of our product, which Ive done and proven to be good at. The biggest difference with this new level of responsibility I think will be that I will now have a seatvoice at the executive table and will have direct reports from an HR perspective. Ive always subscribed to the servant style of being a leader, even in my IC role, providing direction, feedback and helping teammates where I can, but more specifically from a software perspective vs career perspective. I always look out for the team. My last few roles have had me basically being the right hand person to director and Ive always paid attention to the politics of it all, at least what Ive been exposed to. So I dont think Im going in blind. I agree it will be hard for me to let go of the day to day IC but there is a strong Sr Eng on the team who has been stepping up and I have all the confidence he will do great taking over my old duties and I will support him to the best of my abilities.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_y26xkp","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/y26xkp\/tough_manager\/","DATE":1665532800000,"PLAIN_TEXT":"Hello friends,I recently moved into a new role as a senior engineer. Its been 3 months. Im finding my new role to be demanding, which is in and of itself is fine. Im happy to take on new challenges, learn and put in the work required. What I am finding difficult is, my manager who is a workaholic. The expectation seems to be that I must be productive every minute of the day. Theres a sense of urgency on every new task, even though the real deadlines for us are quite far away, in fact months away.Im finding this very challenging. Im ok to work on hard problems, but I expect to be given that space and trust to excute. The manager expects a very productive update in our everyday scrum. Im disliking the daily scrum because of this expectation.Overall I find that my manager being a super workaholic and being anxious about every task and trying to squeeze every ounce of productivity from me is very very exhausting. I have no idea how to handle this. At the moment, Im just trying to focus on getting things done as fast as possible at work, but this is taking a toll on my mental health. I feel like I have no life other than work.Any suggestions and help, other than quitting my job are very welcome.Thank you for your time.EDIT: Thank you so much for all your responses and your time. Except for one response, every one of you have been very supportive. Its been heartening to read. I gather that my biggest and perhaps only option is to try to effectively communicate with my manager. Im also going to try and be objective as one of the comments suggests, about this problem. Perhaps I will try to ignore my manager and focus on my pace, which is the most important. Thank you again for engaging in this.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_tpw59v","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/tpw59v\/crude_sprint_bug_count_next_to_developer_name_per\/","DATE":1648339200000,"PLAIN_TEXT":"So there was a chart shown unexpectedly in the scrum of scrums with developer names and crude bug count. So me as a dev who usually takes more work than others was in top place with 6 bugs, followed by two other devs with 5 and so on.Here is the messed up part: I had 19 dev points in all my stories, while other people might have had anywhere from 6-12 or maybe max 16 in average. There was no breakdown in correlation with amount of work just crude numbers in that chart of shame, which of course made me furious. Honestly, its a good company, but that unexpected chart really tilted me and i find it offending. Offending to the amount of work i did, profits i brought and client facing portals i built. Been with the company for almost 3 years and tbh i am still mad about the whole thing and i think i might want to jump ship.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_pk8nv2","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/pk8nv2\/how_can_i_get_practical_system_design_experience\/","DATE":1631059200000,"PLAIN_TEXT":"I have about 7 years of experience working in scientific computing at a large oil and gas company. So far, I have worked on single node applications only and have some web development experience on LAMP stack from college. In my work experience, I have gotten pretty good exposure to DS and algorithms as performance is a key concern in scientific computing applications. Now I am thinking of applying to other tech companies as the market is currently booming for cloud services where I live (India). However, I have never worked on any distributed system. I know system design interviews are the norm now. I have been studying the commonly recommended resources for SD (Martin Kleppman, Gaurav Sen on YouTube, etc) and I am able to somewhat understand them.My question : How can I further solidify my system design sense if I am not getting exposure to it in my day job ? Should I undertake personal projects ? What sort of personal projects are good for a beginner ? How can I go from zero exposure to some practical exposure to distributed systems ? Any help in this matter will be appreciated.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_r0kblk","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/r0kblk\/im_going_backward_titlely\/","DATE":1637625600000,"PLAIN_TEXT":"I downgraded my role from tech lead to senior. Less responsibility, more hands on work and salary bumped 50%. Im happier but others would perceive Im going backward instead of forward, my LinkedIn profile look weird though.Does anyone here going backward for the sake of a bigger paycheck? I think Im making more than my manager of my prev company.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_tvya5d","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/tvya5d\/how_to_reign_in_junior_team_member_with_lot_of\/","DATE":1649030400000,"PLAIN_TEXT":"I wasnt sure how to headline it. I will preface with by saying that I am not trying to micro-manage or curtail existing freedom. We are a small start-up with people having lot of freedom in terms of what they want to do and how they want to do.I actually do think that the junior is a smart person and can work on their own most of the time. Its just I feel like they only want to pick-up cool stuff. By cool I mean - avoiding writing unit tests, investingminimizing any work which directly doesnt show up in product. I thought I would act as a good example and I wrote unit tests for the code written by the junior team member but that didnt lead to junior adding more unit tests in newer code.I was on vacation and there was some deployment issue and even though I posted the solution for the issue, the junior didnt fix it. I fixed it once I came back from vacation. I have spend quite a decent amount of time trying to show them how to solve issues with the hope that they would in future fix it on their own.The junior team member is ambitious and wants to progress and hence only tries to do work which shows visibility in front of higher management.EDIT: Thank you all for the advice and suggestions and I do agree its more team process and organization issue.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_tqszul","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/tqszul\/how_to_deal_with_pip_where_performance_issues\/","DATE":1648512000000,"PLAIN_TEXT":"Swe 4 yoe. Not from the US. So I had a call with my manager today. I have 1-1s with him every 6 months, just after performance review season. Apparently thats quite normal here. He informs me Im not performing up to expectations and will be put on PIP, failing which I would be terminated. My other option is to resign. The reason given was that some of my projects have had delays due to external blockers (other teams, or external contractors), and I didnt push hard enough, resulting in my velocity being lower than my peers. The problem is this was not communicated with me beforehand, and this is the first time Im hearing that this is a problem. Ive just pivoted to other work items while following up with the blocker regularly, and the PM is always informed. I guess my fault lies in not escalating it Earlier? All the blockers have been from other teams failing to deliver. Just last week I found out a dependency that is supposedly live in production is actually still undergoing fixes and has never been in prod, and I rushed my feature for this shit. Ive decided to look for a job elsewhere and not go through pip, I was thinking of applying anyway. Any advice is greatly appreciated, let me know what I could have done better, or what my next steps should be. Honestly I feel indignant, I can understand why I would be blamed for being blocked, but i dont get why it wasnt brought up until now. Also its not like the PM and other stakeholders werent aware. And its not like I was slacking off in the meantime. Ugh.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_qx5age","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/qx5age\/9_years_into_careerhate_it_but_resigned_to_fact\/","DATE":1637193600000,"PLAIN_TEXT":"Going to try to keep this as short as possible.36-M. Ive worked as a software developer since 2012 primarily within Microsoft technologies (C#.Net Framework, SQL Server, IIS) and currently work for a Fortune 500 in a LCOL city in the South that I love. Im aware that although Im unhappy, Im statistically living the American dream...I grew up in the projects to parents on government assistance, went to school (scholarships and small loan), got a degree (actually 2), and am fortunate to be making just over 100k while WFH.My career has left me bitter and both mentally and physically unhealthy. Life seems to follow the same trend. I burnout at a job, suffer massive weight gain, start a new job, learn the ropes, do good work, lose the weight, live well, eventually get bombarded by technical debt left from predecessor(s) and new incoming project requests, and suffer burnout once again. Cant even enjoy successful project completions because I know theres just going to be something else that comes down the line and causes shit to hit the fan. From what Ive seen this appears to be not too far from the expected norm across IT unless youre lucky.I would like to escape the cycle but honestly think this is unavoidable. Luckily Im great at saving but behind on retirement due to personal life occurrences. Honestly dont think Im ever going to be able to retire or enjoy it that long at the rate Im going. I would love to make more money to offset this but pretty sure that that would just mean more stress which at this point Ive proven I cant handle well.Not asking for career advice as Ive accepted the circumstances (and I honestly have grown tired of looking for only incrementally better jobs). Can anyone provide any life advice? If I could find a sustainable way of dealing with stress, Id consider it a win. I already have hobbies but nothing seems to offset the effects of the job.Thanks.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_rs5181","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/rs5181\/who_gets_to_review_code_at_your_company\/","DATE":1640822400000,"PLAIN_TEXT":"I joined a company 6 months ago as a senior and team lead. One thing that I find weird about this company is the breakneck speed at which PRs are reviewed and merged.We have an internal Slack channel for posting our PRs that need review, and this channel is open to all devs from all teams, and I see many devs reviewing and approving things from other teams.At first I thought wow this is some great cross team collaboration but after a few months of working here it seems like the whole thing is just a formality. People review code based only on the green and red lines in the GitHub diff. Syntax errors will be caught, but thats about it. Most PRs are reviewed and approved in about an hour, by people on other teams, who are not even in the loop about the project.Im having a hard time leading a team with this sort of PR process. Bad code is getting approved and merged just because there were no syntax errors. Nobody is thinking about the big picture of these PRs except me. Many times Ive exited a meeting only to find a subpar PR that was approved and merged, but with implementation issues (some people on my team are junior). It makes following up on these issues really annoying because the dev willalso move their Jira ticket around, causing a QA person to review it.Sometimes 2 juniors from another team will approve a PR in 15 mins that contains thousands of new LOC and deletions. We dont have tests or pipelines or even TypeScript linting enforcement, so the PR process is the only line of defence against regressions and bugs.I joined this company thinking I would be able to learn about the best practices for this sort of stuff (its my first time at a company larger than 10 people), but their whole affair is worse than what I had at my old jobs at tiny agencies. Ive lost all motivation to do a great job because it would be like putting lipstick on a pig.Honestly Im not sure how to find enjoyment in my job now when nobody on the team (except literally 1 other person) cares about code quality. Its like the only priority is reaching the sprint goals because they know they wont be working here in a year or two anyway so wgaf if theres technical debt right? Thats the exact opposite of my attitude and I dont know how to mesh with a team like this, because ultimately when the system fails, itll be on me to fix it as the team lead for multiple projects.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_szf8a0","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/szf8a0\/what_is_the_purpose_of_a_dev_manager_if_they_dont\/","DATE":1645574400000,"PLAIN_TEXT":"During one of those one on one meetings, my dev manager hinted (actually it was clear) that he doesnt want to hear any complaints or issues that I am facing during my job and to get the job done, or deal with it myself.During these meetings I normally talked about situations that I faced, pressures from internal and external, other roles involved in my work and its impact, etc. I do complaint, yes, e.g. the tester has not done their test and delaying the sprint, or the requirements are not clear and I have mentioned it to the analyst, etc. And I honestly believe these are normal and healthy conversations any developer can bring up to their manager?Im totally flabbergasted - I mean sure I can deal all the problems from the other developers, the PMs, the support emails, the productions issues, etc. But where is this development manager in my role as a developer then?Shouldnt I have at least a place where I can have an adult discussion about work through someone who I reported to, instead of dismissing me back to my cubicle? Where should I go then if I needed help then if the manager dismisses me? Or have I understood this wrongly?I am sorry if I sound upset but I actually am. Am I wrong to feel that my manager has treated me wrongly?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_106dt09","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/106dt09\/returned_from_maternity_to_a_different_developer\/","DATE":1673136000000,"PLAIN_TEXT":"Ive returned to work in October following a year of maternity. As you can imagine I was extremely anxious till I could learn everything about the site thats been built while I was away. I was welcomed with open arms and complete understanding from the team which was wonderful. For context before I left and since Ive returned Im on track to be made senior in the coming months.Unfortunately the developer culture was not how I left it. For context I felt it was a standard way of working: Pick up tickets, discuss anything needed regarding implementation, code it, demo and code review with the team once PR goes up, address comments from PR reviews, get approvals, merge, test etc etc. I came back to developers allocating tasks to each other when a story is subtasked, they mob tasks by getting on an untimeboxed call to work on a single task and easily spend over 2 hours watching one developer code the task. The PR then goes up and is expected to instantly get approved because we were all there for the PR call (the development call actually). This is all one developer that primarily micromanages the tasks and the team and is coding in these sessions. The issue is this guy was my maternity replacement and he started the week after I left so I never got to do a handover. He is also inexperienced in the framework we were using so he learnt on the job this past year. Theyve done an OK job but when I returned I spotted some serious issues which I highlighted. Im also the type of dev that needs to mull over the code so after these sessions Ive been going through the PR and adding comments, they didnt like that. Ive then been trying to be vocal during these calls and even then Im met with excuses for not making changes or fixes. This guy and the other front end developer on the team have created quite a bond over the last year, so I dont have the backing of another experienced dev to what Im trying to say. The other 2 backened devs on the team back me up on standards and best practices but dont go as far as to disagree with the frontenders because they deem it a different domain which has its own way of working. This guy was a lone wolf coder in his last place and is quite loud with his opinions. The dev that has glued to him can be hesitant in her skills and therefore has gone along with everything he says and does, even though she had more experience than him. Im feeling completely alone and like the asshole for disturbing their perfect way of working. How can I deal with a team like this? I feel they dont respect me or my opinions and dont want to change anything or learn anything new or different so why should I stick with this team?Update: Sorry for not responding to people but balancing toddler and free time as most of you know is not easy. Thank you all fornyour feedback. Some of you brought me awareness to the different ways of working while others gave me some sound advice. Ive been doing some soul searching into what I really want and frankly I want to feel part of a team. I made a suggestion on a PR, in chat and on call with the team backed with video evidence. A one line change that has blown up into a potential improvement ticket, a meeting with 8 people to implement a whole thing just to avoid my suggestion. Im basically outvoted and outnumbered on anything really. I have a few chats to make with people and then will see how things progress from there. But thank you all for your input, its been a great help.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_uicxbw","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/uicxbw\/careers_doing_nonethically_dubious_ml\/","DATE":1651622400000,"PLAIN_TEXT":"I feel Im possibly at a crossroads in my career. My most recent job was started doing data engineering; I built MapReduce and Spark analytics jobs and scaled up ML models that our data scientists prototyped. It was my first introduction to ML and I really fell in love, read a lot of books and academic papers, hung around the DS team and soaked up all the knowledge I could. I learned enough to start collaborating on model development, eventually was assigned an initiative with someone on the DS team to take a new data product from soup to nuts and we killed it.Despite being at the brink of a promotion to Senior Software Engineer, I asked instead to change my role to MLE. My manager felt it was appropriate but warned it was more of a side-step than a promotion. I felt there were more interesting things to learn down this path than focusing exclusively on software engineering, and possibly higher compensation.The problem Im facing is when I look around at careers in ML, the overwhelming majority seem to be in ad-tech, financial engineering, market campaign optimization, etc. While my work as a software engineer hasnt made any measurable benefit on society, I think I have to draw a line at working on things that I feel are a net negative to society. ML is a tool like anything else, and can be used for good or bad. But Im struggling to find a career doing ML for even non-bad purposes.I have found few interesting applications here and there that dont give me the heebie-jeebies, but it seems those tend to require a graduate degree or a level of expertise I dont yet possess. Should I suck it up for a while and build skills at an ad-tech firm; would that make it easier to find work on non-harmful applications of ML? For now Im considering putting ML aside for a while and returning to focus on software engineering again.As an aside, am I alone in noticing the trend of more sophisticated ML tech correlating with less ethical uses, at least in terms of volume of jobs? Is there an underlying reason behind it?Edit: I really appreciate everyones sincere responses. I was worried I was just self-sabotaging my career out of fear or that I should get over it. Youve all given me good ideas of places to look.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_gme8ux","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/gme8ux\/i_built_something_4_years_ago_to_meet_the_needs\/","DATE":1589760000000,"PLAIN_TEXT":"Backstory: Joined startup early on around 5 years ago, i joined as a mid level developer. Company has had a lot of growth since then. We offer a SaaS.Four years ago i made a very specialized service (tl;dr; OCR documents, blank out any regex patterns, and pump into elasticsearch) for a certain one of our customers who basically wanted to archive a ton of older data. I ended up spending a few weeks and built something to meet their needs. When i built it the system i speced the worst case as something designed around something 10x the size of this customer, which at the time everyone was fine with. In the past few years we have had very few other customers use this system, and such it is more or less a legacy feature that we do not offer to anyone.Last week our sales exec announced that we managed to sign on a new company. This company is huge compared to the other companies we work with. Not long after that announcement CEOSales Exec dragged me into a meeting asking about the legacy service.Apparently this new large scale customer is planning on submitting 30+ years worth of historical data (several PB). This is 1000x+ of times more then the next largest company using this service. This isnt the only problem many requirements that i made the system around (i.e. lacks PDF support, doesnt support handwriting, etc). On top of this sales apparently promised this to them by the end of the month or we will fail in our contractual obligations.My biggest question was why werent we told in advance, and apparently our sales exec thought it would just be a button press and thus nobody told dev until basically the very last minute. Our CTO is on pat leave, and wont be back for awhile, the person acting had no idea about this. For the last week i have gotten a ton of flak from various teams about this. I have teams trying to use the legacy system and nothing is coming out right because it doesnt understand handwriting and other things. On top of this even after spending the last week with a handful of my team members trying to meet the requirements outlined we are nowhere near ready. After letting people know about the status that we are behind our CEO is not very happy at all. Tommorow we are supposed to have a big meeting with the customer, and nothing is ready and nothing works. I dont really know what to do, i have honestly never been in a situation like this and i am furious.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_zeldlz","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/zeldlz\/how_to_best_present_resume_with_20_yoe\/","DATE":1670284800000,"PLAIN_TEXT":"I am a recently laid-off, older software engineer (mid 50s). My resume is 2+ pages long, with relevant experience dating back to 2002.The last times I did a job search, I started getting more responses once I eliminated the first 10 years from my experience. I theorized then and now that it may have been a smart step to take to avoid ageism. And it may have very well worked. However, I feel that I may be missing out on roles where that experience would be valued, as I would like to level up to Lead and EM roles. I also feel that the very large amount of experience may help to make up for my lack of a degree.I would be interested in hearing peoples thoughts on this, from those who consider resumes and filter them, and from older engineers like myself.Edit: I want to thank everybody for their responses, Ive made some great resume edits as a result, its leaner and meaner now and will get better with some more revisions. Great discussion! And nice to see Im not alone in this agerole.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_zxq7si","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/zxq7si\/how_to_handle_the_strongest_developer_wanting_to\/","DATE":1672185600000,"PLAIN_TEXT":"To preamble I am the teams technical leader. Given an ample amount of time I am amicable to the idea of letting our team completely and freely choose the stack for their respective micro services.We are on a tight deadline to create a micro service for our company that will be used by every other single team.My teams best developer has taken point, being the leader of this area. While consulting with me on design and architecture.I suggested that he use Language A (I am keeping it vague to separate any biases out).My reasons being- Language A is known by our ENTIRE team besides him (he was recently hired on).- Language A is very flexible.- It is one of the most popular language world wide, and has some of the most support.He however cant budge from the idea that Language B. Should be what we use.His reasoning is:- I dont know language A, and Im leading this subproject.- Language B is better suited for speed, and is more strongly typed to enforce a higher quality on a service that is so centralized.- Language B would upskill the other developers on our team to learn.I fundamentally do not disagree with his counterpoints, except for the first one.But given our common understanding that our project is on an extremely tight deadline. I do not want everyone besides him learning a new language and developing on a tight deadline (n people learn language B vs 1 person learn language A).I also brought up the bus factor that he is the sole go-to Language B guy.Am I being unreasonable in my pushback with him? Ultimately this is my call but I want him to feel like he has ownership. I trust him to develop high quality code either way but I worry that he will be getting little quality support if he does decide to use Language B.What are your folks thoughts?EDIT FOR CONTEXT:1. Despite him being new to the company he is not new to me. I have worked with this person for several years in the past at other companies and he was hired specifically for this role on my recommendation.2. He has never died on a hill like this before in our past work together. So him being so adamant about using language B is new behavior.3. Our company uses two primary languages, Language A and Language C.Language C and Language B are comparable. He wants to introduce Language B as a substitute for Language C, Im arguing to just simply continue using Language A because our entire team knows it, and all of our stack for our teams microservices are written in Language A.EDIT 2, FOLLOW UP:Through discussions with the broader team we went with Language A as that is what we are all comfortable in today.The developer in question was satisfied with that, and will learn Language A just fine.We also needed a side project that will spawn off of this project but is much less sensitive.I am a rather unopinionated tech lead when it comes to projects, and I want to encourage my team members to bring new great tools to our systems. That being said, I proposed to this dev that we have him handle a related side-project that will spin off of this project. And he can do so in Language B.This will allow him to prove out the capabilities to the team in an environment where there is less heat and he can enjoy showcasing the capabilities of his favorite language!EDIT 3:STRAWPOLLhttps:strawpoll.compollsNoZrLjDBkn3Do we want to have the languages revealed? I feel as if it detracts from the main point of the conversation but other people feel differently.I would reveal A, B, and C, as well as the deadline timelines, and the context of the project in questionEDIT 4:The languages are:A = TypeScriptB = RustC = GoThe context, I am tech lead and ultimately it is my call. I try to give my team some leeway so they can introduce tech if its safe and they can feel more ownership if the team agrees to try a stack.This is why the discussion was entertained.The service is a centralized service that two other of our micro services will talk to at a high frequency.The service is not doing anything super advanced but it is highly reliant on uptime, ease of use, flexibility (flexibility in the model).The backing database for this service is Mongo, due to the nature of needing a flexible schema for the problem were dealing with.Deadline is about 2 months.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_soi4h2","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/soi4h2\/potential_employer_doesnt_think_im_a_sr_engineer\/","DATE":1644364800000,"PLAIN_TEXT":"Recently talked to a recruiter and agreed to be submitted to their client for a Sr. Engineer role. At my current company, I am a Sr. SE and serve as tech lead on my team. 4.5 YoE, bootcamp grad and 4-year CS grad for context.Titles are mostly arbitrary in my opinion, but I architect apps, participate in business meetings and oversee more junior devs while building out products. Not saying Im the smartest guy in the room, but I am good at what I do.This morning, I get an email basically stating that the client company is interested, but doesnt think Ive been a dev long enough to be a senior, and also that the role would not be as a tech lead (which is fine with me). Per the email, they may want to bring me on in a role more in-line with their org levels (i.e. not a senior, or at senior level pay). Recruiter wants me to interview anyway cuz I can convince them Im a senior in the interview. I sent a response essentially being professional but stating that while titles are arbitrary, taking what is essentially a demotion along with a paycut to join them would be a non-starter, among other things.What really surprises me here though is being told Im not a Sr. Engineer while currently employed as exactly that at my company. I get that everyone has opinions and we could argue all day what a senior is, and how much experience is enough, etc. And companies can require anything they want.But why tell a candidate they arent qualified for a role they are already doing successfully elsewhere and imply they should join your company at a lower level for less pay simply because they havent been a dev long enough? That cant be a successful recruiting tactic.Any similar laughable experiences out there?Edit #1:Thanks for all the feedback. To clarify, Im not hung up on this specific company its just the first time Ive been told up front that I would need to step down to join someone. Im currently in a senior role at a large corporate enterprise-level company (that I earned promotion into), and this move would have been to a much smaller company.I dont care much about title, but dont want to take a serious paycut either.&amp;#x200B;Edit #2:Things Ive learned in this thread:1. Dont take less money, thats dumb2. Everyone has different opinions and metrics of what qualifies as senior3. By almost all of those metrics, I am not a senior.4. There is much value to be had in this subreddit. Edit #3:This is probably on me for the way I summarized my response in this post, but I did not turn down the opportunity, I simply asked for clarity. I am open to going in as a mid provided that the responsibilities and salary are in line with what Im looking for. Meaning that while a demotion isnt a big deal, if it is accompanied by a serious paycut from my current salary that its a non-starter for me. I pointed this out because in my initial conversation with the recruiter, we talked about my salary requirements in the context of taking a senior role.I was a bit insulted, true. But in retrospect thats probably due to some un-registered arrogance and or entitlement on my part. Its not easy to move up at my current company, and I had to work my ass off and lead some major product and feature deliveries under not ideal circumstances to get to where I am today. 100% earned my senior title at this company, and didnt fully appreciate the truth that senior at X doesnt mean senior in the market. Ive also has a couple of job offers to join other companies as a senior over the past few months, and have only interviewed for senior roles. This was the first situation where my senior status was ever questioned, so it did initially seem laughable to me, given all the context here.&amp;#x200B;","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_117cd4i","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/117cd4i\/to_the_studio_gaming_devs_how_similar_is_one_game\/","DATE":1676851200000,"PLAIN_TEXT":"My last question is really the main question, but I really have no insight into the life of a game dev, and Id love to see behind the curtain!The new Hogwarts game has piqued my interest. By all accounts, its as well a polished game as most games put out nowadays (sure, there are some [performance issues](https:www.reddit.comrHarryPotterGamecomments116o8mkdigital_foundry_has_released_a_peformance), but when is the last time a game dropped that didnt need a few early patches? 2003?).I recently saw in a video, and confirmed on [Wikipedia](https:en.wikipedia.orgwikiAvalanche_Software), that the studio who developed the Hogwarts: Legacy game has recently put out blockbuster titles such as Disney Infinity 3.0 and Cars 3: Driven to Win.Now, Im sure there are a few ways that a shift from a lukewarm childrens game to a potential GOTY candidate fantasy open-world RPG comes about - obviously hiring talent must happen at some point, but how much? Do you need everyone who is hired on to have experience working on big games running on UE, or just a few key architects and leads?I cant even begin to imagine the undertaking of building such a huge codebase as these large open-world games - but how much of it is actually written by the team? How much of it is already built into the engine? Just how similar is this game to Skyrim, or Witcher 3, RDR, or other recent open-world games? Are the performance issues seen in the new Hogwarts game an indicator of inexperience?Im coming at it from this perspective - Im familiar with, say, web, and how there are a few monolithic JS frameworks (plus WordPress!) which drive a good chunk of the web. Now, I think its safe to say that a framework like UE4 or Unity plays much of the same role. On top of the web framework, most people are doing generally the same thing, and generally are implementing it in similar ways. Is this roughly the same in game dev? Are we just talking about FAANG companies who have those ridiculously talented people who have been working withdeveloping from the ground up these huge frameworks, who are able to eek out that little bit extra in performance, or integration, vs. smaller start-ups - is that what were seeing here with big AAA games vs. newer studios who do things 98% right, but have issues with some of the more specialized stuff?&amp;#x200B;Sorry, it feels like one big tangent, but lately Im just really curious about how this sister industry chugs along. Im totally open to blog posts that talk about this, too. Thanks!---Disclaimer: I know the new Harry Potter game is a little controversial, but I dont want the discussion to be based around it - its just what made me think of these questions. Hopefully we can avoid discussing anything off-topic or political.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_pgcgyd","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/pgcgyd\/code_foundations_things_i_would_tell_myself_if_i\/","DATE":1630540800000,"PLAIN_TEXT":"I have been typing code for over 12 years and at least 8 years professionally. I dont want to write a lot of dense stuff but I want to make small tidbits that can compress the most information in the least amount of words.1. Breadth-first search over depth-first search especially for Knowledge. 2. Engineers are value centers when organizations start and become cost centers as organizations grow large. This is important to know because it will help understand your teams leverage in a company. 3. Computer science is a field whose theoretical foundations allow you to break apart any new development in this field. 4. The best way to become a better coder is to read more code. Read how people make the libraries you use often;5. You dont need 1000 engineers to maintain a huge codebase. You do that for redundancy. 6. Testing is pointless unless your test doesnt assess the fundamental assumptions of your system. These require time to think and digest. Autonomous testing for the win.7. Learn javascript; Functional programming is very powerful when you are just starting out. relating Anecdote from a past job: understanding Node and event loop allowed a full team of frontend engineers to become full-stack in a couple of years.8. The ability to code anything does bring a level of arrogance. Be humble. You literally know nothing!. 9. If you wanna play this game for a long time, write code for yourself. 10. Technology industry is a continuous loop of hype cycles; First, it was mobile computing; then it was the cloud; then it was crypto; now its ML and AI and it will keep going on. Every hype cycle someone gets rich. Identifying the next one and finding good ways to ride them is the secret of the silicon valley technology model. 11. Specialization is for Insects. Knowing many things allows you to learn new things even quicker.12. Discovering and designing abstractions is the most powerful tool in your toolkit. 13. Linear regressionFunction approximation shouldnt be called machine learning; It turns science into snake oil; 14. Programming is code you write for yourself. Software is code you build for others.15. A code comment is great. A thoroughly written commit message is the best. 16. Software is a field with asymmetric value creation; You can make Billions of $$s with tiny tech teams. Its worth taking risks on ideas. 17. Ads have ruined the internet; Facebook and Google fucked up access and distribution of content on the web. 18. Building software and technology is like art; Leet code is like telling an artist that your creative capabilities will be judged by how well they draw straight lines. 19. Knowing how to cleanly experiment with git is one of the most underrated skills. 20. Learning any new techlanguage etc will always have high inertia when you are new and starting off. The more you know, the easier it is to pick up new stuff. 21. Be kind to your coworkers in reviews. We all should be allowed to make mistakes. 22. Runaway from a workplace where you cant ask or are not comfortable asking stupid questions. As a dev, I have realized no question is silly or stupid; Any person who labels them such is too arrogant to productively work within a TEAM;23. Layered design is seen across all subfields of CS and software. Understanding it will change the way you view technology. 24. Preferring older tech over new tech is the way. Older tech generally is stable. New fancy shiny frameworks will get replaced by better fancy shiny frameworks. Old technology will stay where it is. Read about the Lindy Effect25. Better Type Structure to Information == faster performance especially with compiled code. If you know strict types you can reserve memory and compile compute more efficiently. 26. Super powerful usability can generally come at a tradeoff with performance. (writing code in C will destroy any counterpart python code in a few orders of magnitude.)27. Never be afraid to wipe off the SW you have written and start from scratch. Sometimes, after the same codebase goes through many dirty iterations, there is a possibility that this spaghetti code has many bugs. Writing from scratch helps clear the fundamentals of abstractions and understand your own codemethod better. You can apply this advice to many things outside code. The fallacy of sunk cost is real. 28. The software industry incentivizes instant gratification by switching jobs; this is due to the constant demand for good engineers. But sometimes sticking somewhere a little long term can bring exponentially larger gains. 29. Be mindful of all new software features you create. Every new feature will create a cycle of creating new software to manage old software. 30. Learn new discrete math, Probability theory, calculus, and statistics. It will have a profound effect on your thinking patterns about software; 31. AI wont take your job because understanding a business user still requires a coder. 32. Read books, even seldomly is fine. But keep reading new things;33. Its better to write Open source software over leet code. OSS has the potential of creating world value, Leet code creates no value but for Leet code. LC has ruined the way our industry hires people.34. All technology has tradeoffs so its important to find the best tool for the job. 35. It is better to be right most of the time than being fast; Talking and being thorough of what should be coded will make translating that to code even faster as you type more code.36. Shame on you if you are testing engineers for algorithms in an interview. Interviews should be about what your day-to-day work is like over algorithmic testing. 37. If you are gunning for knowledge-breadth growth aim for startups. 38. Learning DevOps amplifies your abilities as an SWE; You will realize this once you can easily deploy and scale your own application seamlessly.39. AIMLData Science is importantuseful but overinflated; Real-world problems in these domains need as much engineering as math;40. Moores law is not dead. Jim Keller makes good points. ","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_m20zkv","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/m20zkv\/took_me_almost_1_year_to_find_the_courage_to\/","DATE":1615334400000,"PLAIN_TEXT":"I saw a post here yesterday by uhello_world_19 about mental health and wanted to share my journey as well. TL;DR: Experienced dev, lockdownwfh, personal life challenges, got COVID, brain fog, stress, anxiety, lost all productivity, zero motivation to do anything, acknowledged something was wrong, seeing a psychologist, taking few weeks off to reset. About me:Im currently working as a Senior DevTech Lead at a FinTech company and have been with the same company for almost 11 years now. I started off as a co-op and made my way to where I am right now slowly over the years. Ive had lots of junior, intermediate and senior roles in various divisions, been part of multiple social, tech, recruitment, and cultural commitees. Been the face and voice of company at many events (internal and external), just a very happy, involved and satisfying experience overall. Never had any mental issues and always kept my personal and work life separate. The sky was primarily blue. ___Where it all started:It took me a few weeks to adjust to working from home on a daily basis when COVID lockdown started. At one point I couldnt differentiate between what was work time and what was my personal time when I was home, all the time. Someone with my life and work experience shouldve been able to handle it well, and quickly, but that wasnt the same. Fast forward a few months and now I had a proper rhythm, things had started to look good again, almost normal. ___It got worse:On a bit more personal side, my wife and I had been working with a fertility clinic but after many failed tests and attempts, and a lost pregnancy, we got the bad news that most likely well never be able to have children. This was around August, 2020. Okay, life happens, this wasnt the end of the world but something triggered in my brain and it went downhill from there. I was no longer the same person that I was before. ___It was a shit show:I found myself to lose majority of my productivity and focus at work, and in my personal life. During work hours I couldnt concentrate at all, mind would just wander away and then Id work after-hours, nights and weekends to make up for the lost time. That slowly turned it me not looking forward to the evenings or weekends as I know I probably had something to make up for. My work was suffering and so was my personal life. ___Got COVID:I still continued to work this way for a few months until by wife and I both got COVID in December, and so did both my parents (they live with us). At this point I was mentally broken and physically tired. Just given the mental state I was in, the mental fog (one of the nasty after effects of COVID) was just bad. Even if I forced myself to do something, I couldnt. I would stare at the screen for hours only to realize I had barely typed a few lines of code, or just replied to a few emails. ___Then it got worse:Submitting PRs seemed like a chore, and reviewing PRs was a nightmare. I had lost all confidence in my technical abilities and was extremely fearful of what the rest of the team members would think when they saw my PRs or read my comments on theirs. I stopped ignoring messages from pretty much all the tech communities and committees I used to volunteer at, ignored a lot of speaking invites (virtualonline). This used to be my passion, but I couldnt get myself to even think about it now. Another month or so went by, and now were in February. Still dealing with this mental state, working with the fertility clinic (and getting more bad news), and now, all of a sudden, my wife falls down the stairs and breaks her ankle. She had to get a surgery done and fully dependent on me; walking with crutches, heavily medicated. ___Out of control at this point:My stress, anxiety was through the roof, I felt so alone, so useless with zero productivity, motivation and willingness and drive to do anything. I then realized it had been over 4 days since I showered and was in deep depression. My sleep pattern had changed, I was either only sleeping for 2-3 hours or some days I was sleeping for 10-12 hours. I had gained 40 lbs over the past few months. At work I was setting such a poor example, especially being someone with a senior role, I wasnt even doing or delivering half of what I wouldve normally delivered on an easy day. Impostor syndrome was real, as real as it gets. ___Acknowledgement:I took a few days off of work where I would leave home, drive to an empty parking lot and just sit in silence. It was through these silent sessions with myself I realized that this had to change. I started to write all my emotions, failures, day to day struggles down and reached out to my family doctor and told him I need help. He was already aware of all the other ups and downs in my life but never exposed to this extent about how I was feeling. I finally gathered the courage to reach out to a psychologist and had my first session with her this past weekend, next session is this Friday. As I was explaining my entire situation to her, I started to realize that I had been in an unhealthy mental state for almost a full year and shouldve addressed it long times ago. ___Current situation:After discussing with my doctor and psychologist, I finally decided to take 2-3 weeks off of work and purely focus on myself and the immediate needs at home, especially with the support my wife needs right now. My company, and especially my team has been extremely supportive and understanding through this ordeal and my latest decision to take time off. Ive started to meditate (I can barely last 30 seconds without mind going nuts, but at least its a start). Ive started to monitor my diet, and am trying to apply a mindfulness approach whenever I get stressed out. I dont really know then purpose of this post, but just wanted to share my experience with mental health, and what Im trying to do about it. If youre in a similar situation and would like to talk about it, please feel free to DM me.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_nrxe83","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/nrxe83\/after_a_reorg_i_am_now_a_manager_and_have_been\/","DATE":1622764800000,"PLAIN_TEXT":"Background: Company went from 10 of us 6 years ago to 400 people. We are growing rapidly. Our CTO left on extended maternity leave which they will not be back until most likely in 2022 (afaik they are not even legally allowed to work from my understanding).In preparation for this we did a reorganization of development, many other departments are also going through this right now. Before dev was essentially 30 people who flipped between projects at will, we didnt have a dedicated opsdevops team. Our CTO gave general guidance, but it was extremely informal. Things like tickets, issues, etc. did not exist everything was done extremely ad-hoc, there was a lot of chaos and dev could probably be broken up into 5 little tribes with the more experienced people unofficially acting as team lead. After the re-org dev was broken up into proper teams. I was promoted to be the backend manager, which this is my first time being a proper manager. I acted as a team lead for roughly 3 years before this, but right now I have 18 people reporting to me.Most of the company is going through something similar, and frankly there is a ton of chaos right now from this. There are so many things that we never really cared about, things like compliance audits, to processes, even I will be honest security stuff. My big task right now, that our CTO dumped on me is trying to get some degree of sanity for some upcoming compliance audits, a big requirement of these are things such as documented processes, audit logs of processes being followed, proper change management, IT security, etc. We now have 3 contractors who are basically vomiting out requirements that we need to follow. Last week i did a workshop going over the new processes that people are going to be expected to follow. I broke it down by teams, and went over the overview of the processes for each team. I explained to teams like support, to marketing some things they will not be able to do anymore, to things like outlying processes how we will interact with the different teams. Some teams were ok with it, however others were not. There was a lot of push back from some other teamsdepartments about the changes and how it will slow them down. I had a VP of a different department come to me and tell me that this sounds like it is going to slow the company down drastically, and if this is going to slow down the roadmap in anyway we are not going to do it. I also had a few developers come to me and tell me that frankly this sounds like red tape, and they will probably jump ship and unfortunately some of these people are not really replaceable. However the most frustrating thing is our product managers seems to disagree with each other on what is important, and it is extremely confusing. They cannot even come to an agreement on a roadmap, we are starting a compliance audit in 2 months, and another one the following month. Yet they dont seem to care about that. Even worse when I explained according to one of our audits we are required to have a certain process that starts at product, yet none of them seem interested in doing this.I have talked to our CEO half a dozen times about this stuff over the last two weeks, only to be told he will talk to them, or he will discuss it with the board. Yet he never has anything for me. All the stuff our CTO prepared for me flew out the window almost immediately. Our ops team who is trying to untangle our cloud infrastructure with some help from our cloud provider, they will closerework something they deem is an issue or problem. We enabled SSL on our databases, and it completely broke numerous internal tools owned by other teams, that i didnt even know existed. Even something as simple as rolling out MFA across the company and for all employees in our product was a disaster. It broke some workflows i didnt even know about. Which resulted in me getting a ton of flack. I feel like i am in a terrible situation, if i do what is asked of me, I get half the company pissed at me (i have had several people internally flip out at some of these mandatory changes). Yet at the same time I have our CEO, VP of Sales, and apparently the board uncomfortable because we are rapidly falling behind schedule for our mandatory compliance. Even worse they are talking about wanting us to start preparing to work towards HIPPA compliance early next year. This really feels like i am completely out of my depth here and it has made me hate this job. Do i keep trying to make this ship work?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_pnc71f","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/pnc71f\/when_do_you_know_its_time_to_switch_jobs\/","DATE":1631491200000,"PLAIN_TEXT":"I have around 9 years of experience and switched companies two times before. Both times I quit it was because of higher offers but now, being 31, Im starting to care more and more about companys management, strategic plan, scope of work, culture... I never really cared about these things but Im slowly understanding how much of these are affecting my overall happiness and basically willingness to work for the company.My question is simple: when did you figure out its time to switch jobs? Even if you had a relatively ok gig? Im not really talking about abandoning a ship when a startup is going under, or if youre joining FAANG for 40% raise... its more of a I have a good thing going on but Im thinking of leaving.At my current job, after 3-4 years with the company, Im almost starting to hate my day-to-day. Its kind of ok, but also awful at the same time. Im no longer learning anything, Im not progressing, the management is making some god-awful decisions, they started outsourcing to third-world countries instead of investing in local youth (juniors), the upper management isnt listening to any complaints, middle management is made out of inexperienced people... I mean, almost every aspect of the company-employee relationship is in my opinion completely meh or ok. There isnt anything thats really great about this job (except from the job description).Were you in a similar situation? What made you quit your job even if you had a relatively good thing going on?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_tgmquh","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/tgmquh\/is_it_common_for_engineers_to_be_doing_product\/","DATE":1647475200000,"PLAIN_TEXT":"Im wondering if its a common thing for engineers to unofficially be designing the product and its features on top of implementing them? Then what are product managers for, apart from creating tickets?Ive joined a new workplace as a senior engineer recently and it feels unconventional to me that the product manager is often pressing me to give her a roadmap or ideas of new features so that she can create them on Jira or present them to her bosses. Her tickets are also just empty tickets with just a title of what I said to her because she doesnt know the details. No specs, nothing. Its insane. I will end up being the person coming up with the ideas for new features based on what I think the users might want and then implement them myself. Honestly, sometimes, I dont even care if a feature is useful at all because I just wanted to try out using a new tech or library. I believe my predecessors (who have left) did the same too. Lots of legacy over engineering work. I was told by other engineers on the team that the product still has zero users in production after 3 years and a handful of potential clients the PM brought in to trial on our staging site. I hinted on the issue where I have to do product design to my manager but he is sympathetic of the PM as he said the PM isnt technically knowledgeable and so she will need my help. My manager even said that its better that we dont draw lines and work together as a team. Its still manageable at this time since Im literally cooking up any BS features that I want to try and the PM would just take it. My manager pretends he never sees anything too. The only catch is when after things are built, the PM gets to see it by then, she would start questioning why it was done this way and not that way, which Ill have to defend it. The PM is almost like a client to me. The PM is occasionally passively holding me responsible for the lack of features too when Im busy with development work. I feel like Im doing someone elses work. That someone is having a good life and drawing an easy pay check creating tickets on Jira. It doesnt feel fair to me unless Im paid in addition to her salary, which my manager surely wont agree to. Product design isnt officially recognised in my job KPI too. To my manager, Im just helping out by giving advice to our PM. Do I look like Im a Chief Product Officer to him to be able to advise our PM? Nuts. Is it normal that senior engineers be involved in the product design and development? If so, whats the job of a product manager? Its a helluva good life to just create Jira tickets and get paid. Or am I being petty here?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_n7zcqb","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/n7zcqb\/the_year_is_2120\/","DATE":1620432000000,"PLAIN_TEXT":"All jobs have been automated bar software engineering - which is required to maintain the machines and the React applications the machines refuse to work on (they hate the front end).The entire world is owned by the Five Corporations - Tesla, Amazon, Netflix, Facebook and Google.Humanity now lives in vast urban slums, feeding off rats and insects and selling their organs for water. No one has access to gas, piped water or electricity. Every year, the Five Corporations open their recruitment process for 30,000 engineering positions. No one can apply more than once in their lifetime, and the Great Assessment is their one shot at leaving the slums.The software engineers of the Five Corporations are the only people allowed to live in the luxurious residential quarters those companies maintain. There the successful applicants will find food, heating, air conditioning and clean water - all of lifes essentials, and more. No other building on Earth has access to those resources anymore.The vast number of applicants - numbering into the billions - has necessitated brutal hiring conditions. To apply, all applicants must climb to the peaks of the worlds five tallest mountains to submit their hard-copy resumes. Only the owners of the Five Corporations have access to aircraft, so many cross entire continents by foot to reach one of the mountains.Those who survive this are then subjected to the Great Assessment. This is made up of a series of LeetCode Assessments - named after a website that started before the Great War and has since passed into legend. The corporations long ago decided that of the hundreds of millions who enter these assessments, only 30,000 may emerge victorious. To prepare their children for these assessments, billions of parents leave their babies at the steps of the LeetCode monasteries, set up by monks of the LeetCodeism faith that was established by their prophet Hercy Chang - the legendary founder of the ancient website LeetCode.com.Once they are taken in by the monks, these children are exposed to a brutal daily training regime designed to turn them into LeetCode masters before the Great Assessment. They rise at dawn and grind until dusk, under the watchful eyes and brutal canes of the monks. The showers are cold, the food is plain and the floor is hard.The children sleep on the floor without sheets or pillows.To maintain the selectivity of the Great Assessment in the face of the monasteries vicious grinding, the Five Corporations have set up research labs to discover new algorithms for it. These algorithms are kept secret, but over time the monasteries learn of these algorithms from their former students at the Five Corporations. The algorithmic research of the Five Corporations never ends. Only the best applicants who pass the Great Assessment are offered positions in the research labs of the Five Corporations.The Great Assessment itself lasts for 15 minutes. During that time, the applicants must solve 1800 problems with 0(1) solutions.The best 30,000 are then selected by the Five Corporations and the rest return to the slums of their birth.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_qhmei7","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/qhmei7\/getting_screwed_over_on_every_job\/","DATE":1635379200000,"PLAIN_TEXT":"I have been a dev for 9 years now. Worked for 7 years with .NET. 2 years ago I decided I need a change from typical maintenance development and wanted to create something from scratch using modern tech (.NET Core), so I started looking for that kind of work.Every job I found since the I got screwed over. I have completely lost faith that I will find a good, modern project to work on. Each of the positions I held for the past two years I had a same recurring theme happen to me. On the interview its all fine and dandy and everybody is telling me what I want to hear (no legacy, just greenfield development or adding features to a modern, clean codebase), but when I join it turns out its a shitty legacy code base and zero greenfield development. This happened to me on my last 4 jobs.Am I doing something wrong? Has anybody had something like this happen to them and if so, did you manage to find a job where you did all the stuff you wanted to? Or am I doomed?--------------------------------------------------------------------Below are what some of those conversations looked like. This is here just to paint the picture and maybe someone will relate.# Job #1 (a software agency)We have a bunch of projects in the pipeline and some on-going ones. Our policy is each new hire gets their own brand new project to work on.Oh really, that sounds great. Id like to join.Two days into my new job Hey there is this on-going project the team got stuck on and you are now assigned to it. Good luck!# Job #2 (big local corporation)We have all sorts of applications running on our internal systems, its mostly .NET Core and Vue. We spin up new projects often, there is some legacy but you wont work on that.First day - fix a bug on the legacy code (Visual Basic at that). Then it turns out my team is in the middle of integrating some horrible 3rd party HR software and they are ripping out all they have created over the past 5 years and are rewriting all the database queries to fit the new database model (why?).The icing on the cake came when another guy asked when are we going to start doing some real development and the answer was in 6 months, maybe even a year.# Job #3 (actually another software agency I worked at earlier, not listed above. They reached out to me to see if I would like to come back)We have a bunch of projects in the pipeline and some on-going ones. There is this one project the guys are struggling with that is a crappy legacy app the client doesnt know what to do with, but dont worry about that, we have something else planned for you. We know you want a greenfield project and we have several that might be a good fit for you.First day on the job - remember that one project we mentioned?# Job #4 (my first contracting gig. If I am getting fucked, why not get fucked for proper money, right?)Hey we have this legacy app and we want to get it modernized. We have a team that is developing new features on it, but we want you to work on modernizing it - new platform, new architecture, yadda yadda.Will I add new features on this legacy thing?Most definitely not. Only modernization for you.Two months in - Hey, several devs left and we are having some trouble delivering this new feature, wed like you to help us out.-------------------------------------------EDIT:This got a really nice number of responses and I am grateful for every one of them. Some answers really had an effect on me, much more than I thought possible.After going through all of them a few times, several things became more clear:1. This hit home the hardest. I was rather naive when I believed these companies would really let me work on new stuff like they promised. Up until now I didnt quite see this as an error in my judgement, but rather as them being dishonest with me. I took their words at face value when I should have looked at a wider picture. And I should definitely loosen up regarding legacy (more on that below). 2. A significant number of responses mentioned changing tech stack from .NET to something else. I am still not considering changing tech stack because there is a long list of stuff I want to learn before I switch to something else (if ever), but the answers have gotten me to think whether at some point I should try applying for jobs using different tech, if nothing at least to see what those companies are like. But deep down I still believe I will find something that suits me using .NET.3. Legacy is something I will have to accept. Unfortunately, after almost a decade of working with legacy I often have a feeling like I am dragging my feet through the mud, having to take into account a hundred little things before I make a change. This is quite different to writing something from scratch. I guess I will just have to get used to it and take it as a challenge.Again, thanks for all the comments, they really put things into perspective for me.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_v39oqy","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/v39oqy\/my_manager_is_leaving_and_im_being_asked_to_step\/","DATE":1654128000000,"PLAIN_TEXT":"So, my manager who I have decent to good equations with, is moving to a different role within the same company. He called me yesterday and mentioned that I will have to take over his responsibilities and started talking about planning the handover and in general where Id need to be filling in. He is (was?) primarily a manager, without much involvement in technical stuff.Ive been doing the technical stuff, and have been his deputy for times when he was on vacation, but he would almost always cover his portion of the work before going on vacation, so I never really had to face up to his management stakeholders directly.Now Ive been asked to take up this role full time and this basically adds more responsibilities on ~~my daily work~~ my plate with a bit of residual work (20%) from my current role, but my role is not being formally changed, nor is my pay going to be increased.Im assuming this is not a very uncommon scenario. So Im reaching out to you folks to understand what are my options here in this situation. I understand that one of the favoritemost common options is to quit and join another company, but other than quitting, do I really have any options to utilize as an opportunity to go up the ladder or something?PS:The reason my manager is switching teams is he has not got promoted for a few years now, while his peers and some of his juniors have been promoted already.Edit to add: My current (outgoing manager) asked me to delegate my work to someone else within the team, so that I can take over his role full time. I apologize for not making it clear in my original post. So Im not being asked to officially do two peoples jobs.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_qkmn8f","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/qkmn8f\/im_the_only_full_time_engineer_working_on_a_saas\/","DATE":1635724800000,"PLAIN_TEXT":"Basically the product was acquired from my old company to this new company. A handful of our feature developers and I went along with the acquisition to the new company but they all left pretty soon after. There are some big culture differences (new company is much more corporate, not based in NYC, and not really a tech company nor are they product-driven like my old company) that I think will ultimately lead to my product not being as successful in the new company, but whatever.The reality is that it makes a ton of money and Im the only full time employee that actually knows how it works. During the acquisition I was given a stay-on bonus of $100k to stay through the end of the year and complete the technical transition of the product to the new owners (it is not cloud based, so this was a huge data center transfer process). I stayed and collected the bonus.Now the other developers have left and Im the only one who knows my product outside of our (fairly large) outsourced team. However I am the only one who actually knows my area of concern in the product, which is arguably the most critical piece of the whole thing. If I leave tomorrow and there is an outage, there is a real possibility the product could be down for weeksmonths.I was given another stay on bonus of $15k by the new company (you can see the differences between the companies just in the stay on bonus amount) and they raised my salary to $160k. Im a senior developer and team lead on paper, but I really consider myself more mid-level and have a team of one very junior person. I have about 4 YOE on modern tech stacks (3 more YOE doing SQL scripting but I dont really count that).Anyways, its clear that they corrected my salary because they are scared Im going to leave. Im wondering if there might be a way to get more $$ out of them without being hostile and potentially burning bridges. Is there a respectful and professional way to try and take advantage of this situation?Edit: I should note that I really dont feel like interviewing around for a better offer right now, I know that will probably be everyones first suggestion. Ill probably be at that point soon, but Im decently happy with my pay right now, like the immediate people I work with, and the product, and have that small bonus coming at the end of the year. Im just wondering if I may be able to make some more without having to change jobs.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_rk4men","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/rk4men\/are_all_projects_always_late_andor_badly_written\/","DATE":1639872000000,"PLAIN_TEXT":"Slightly bait title, but if you talk to anyone in the industry it seems ALL projects suffer from constant changes, bad management, bad developers, bad code, half-assed systems, legacy code, not enough time etc.Wondering what the cause is. Or if its really true. Do you have had projects where everything was great?I think its weird for me because I was a freelancer working alone for years and I delivered everything on time and well tested (since thats the only way to get paid on time). But once I joined an agency all the above started coming up. Now Im a CTO and while our own projects are going ok, not perfect (mostly due to lack of enough people right now due to funding) I see the same things from external systems we are using: all development is always late, full of bugs, people cannot answer an email for weeks etc.Is everyone but me terrible or its just the way it is? Just joking, but seriously youd think something which is named engineering would feel a lot more organized.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_fxs9h5","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/fxs9h5\/unpopular_opinion_job_hopping_is_a_luxury\/","DATE":1586390400000,"PLAIN_TEXT":"I see posts that say if you dont like whats going on, if it isnt perfect, if they arent doing things exactly like you want, just leave for another job. Little to no advice on how to make things better or improve the situation, just email your bevy of recruiters and find something new.This is a luxury not all developers have. Not everyone work in areas where we have a dozen friends working at a dozen different companies each with openings ready to take new people without a problem. Some of us cant just move eight states away at the drop of a hat, some of us want more from a job than just technical superiority, some of us need specific work conditions. Ive always wondered what hiring managers think of someone who has had X jobs in X +- 1 year.There are absolutely times when you should get out of a company. And I hold no rancor towards those who have no patience for companies that arent doing things the way they want - if you can pop off to the next adventure after 6 months without screwing yourself, Im happy for you. No one should work in a job they hate, but find something else isnt a great option at the first sign of difficulties.I just think we need to foster a bit more resilience to adversity in technical positions. Work a bit on being the change you want to see. Push back on the shitty managers, push for better technology, put out initiatives to improve the state of things.The advice we provide people should be based on our experience at dealing with challenges, not on how to find another job. It should be focused on helping people in bad situations improve those situations, not leave them behind. And, yes, it should eventually be how to find another job when it is clear things are not going to improve.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_10djr7y","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/10djr7y\/any_of_you_thought_that_maybe_youre_not_made_for\/","DATE":1673827200000,"PLAIN_TEXT":"I understand I am on a fine line here of getting flagged as venting but I think its an issue that a lot of devs can face later in their career and is worth discussing about. Ive been doing this for more than 5 years now and it seems like the more experience I get, the less gratifying it becomes and the less I care about bettering my skills and advancing my career forward. Once youre past the initial excitement of getting into the field and the grind mindset that comes with it, you come face to face with a career that basically asks you to always be on that hyper-motivated, curious to learn anything and everything mode, but the honeymoon has passed. These days I am hardly functional on a basic level if I am not fueled on cafeine. I have a coworker that says he just cant code without adderal. Im sure Im not the only one thats looking for a way out, but when you are used to the salary and WFH lifestyle, it is extremely hard to justify making that change. Now I am aware this could just be a necessary obstacle to get over and is the main reason why I am writing this here. Did you at some point experience something like this? If so what did you do? How do you take care of your mental health as a software engineer?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_oupn01","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/oupn01\/from_superstar_to_average\/","DATE":1627603200000,"PLAIN_TEXT":"Curious if anyone here has been in a similar situation or can relate. Ive always been the classic over achiever, great performance reviews, multiple promotions, etc.I recently joined a new company (better pay, permanent WFH), and I just want to do my work and log off. I dont want to over achieve. I just want to complete my tickets (and do them well), contribute meaningfully to discussions, etc. but I think Im done with trying to be the best. Dont get me wrong, I still love learning and love solving challenging problems (part of the reason I started looking for a new role in the first place - my old job felt too easy).I have a lot of anxiety about my performance when I feel like Im not giving my job 100% at all times.Anyone relate? Any advice?","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_wbirzh","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/wbirzh\/how_to_deal_with_new_hires_if_they_are_not_doing\/","DATE":1659052800000,"PLAIN_TEXT":"I was put in charge of on-boarding and helping new hire which is a new grad since I have joined the company for 2 years now and I have pretty good knowledge of the codebase and all the features. Since the he joined the team, I scheduled multiple meetings to introduce Backend, Frontend projects and other tools we are using. I have been very vocal about asking for help if you are stuck and every member is here to help if I am not available. Now in week 7, it took 3 days for him to finish 1 hour ticket. The issue was way easier than the coding assessment given during the interview process. I had asked for the update and if he was blocked or needed help but he said he was not blocked and that was it. I reviewed his codes and requested some changes and he didnt push the changes until I asked him for update 3 hours later (This repeated 3 times). The fix has 2-3 lines of codes (if else and return statement). This makes me wonder if the new hire actually spends time working. What are your advices? I want him to strive but I cant teach or help if he is not asking. I am not sure if my communication or his is the issue.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_otfvuj","URL":"https:\/\/www.reddit.com\/r\/ExperiencedDevs\/comments\/otfvuj\/anyone_else_getting_really_tired_of_wfh\/","DATE":1627430400000,"PLAIN_TEXT":"Our WFH got extended. Im so tired of wfh, I feel so burnt out, just sitting in front of my desk for 16+ hours a day. I get so distracted so I dont end up doing a lot of work during normal working hours and instead try to make it up at like 12am-4am. My sleep schedule is completely messed up. Im unhealthier than Ive ever been and I eat terribly. I feel like theres probably going to be another variant like Lambda thats going to delay returning to office yet again. At this rate, well be lucky if we get to go back to the office by mid 2022.","SOURCE":"Reddit \/r\/experienceddevs"},{"ID":"t3_e08d5","URL":"https:\/\/www.reddit.com\/r\/programming\/comments\/e08d5\/from_the_guy_who_makes_smbc_to_the_guy_who_keeps\/","DATE":1288656000000,"PLAIN_TEXT":"UpdateHeres the whole story: http:www.theweinerworks.com?p=86My sites are down, so perhaps I can reach out through reddit:Dear dude who keeps hacking my sites,A lot of people would take this opportunity to rant about hackers being dickheads. Im not going to do that. Its unproductive, and it fails to recognize the contributions hackers and ex-hackers have made to society. I firmly believe that a strong community of hackers is part of citizens protection from government encroachment on freedom of speech online.That said, let me tell you why you shouldnt hack my site.First, the professional. Regardless of what you think of me personally (though I dont know if this is whence the maliciousness), SMBCs success helps a lot of people. I have a part time assistant and a business manager who make an important part of their income off my ad revenue. Whenever you knock down the site (or lessen its traffic by loading trojans), you decrease my income, and thereby decrease my ability to pay for these people.Additionally, the success of SMBC helps pay for SMBC Theater. SMBC Theater is a project that, on any given weekend, might bring together one or two dozen talented people putting in their spare time for something they love. When you mess with my revenue stream, you also jeopardize that. Again, regardless of how you feel about me or that project, what youre doing poses potential harm to a lot of nice, intelligent, hard working people.Whenever you knock down my servers, other websites go down as well. This includes Snowflakes, The Weinerworks, and Weinersmith. All of these are sites that I, James, Chris Jones, and Kelly work on without making much of return, and all of them are educational sites. When you down these, the way I see it, it makes the world a teeny tiny little bit worse. I dont consider myself to have a great amount of influence over the way people behave, but in my short career I have the privilege of helping a lot of young people. Ive gotten countless emails from people saying I helped them through depression, inspired them to take on challenges, and encouraged them to stay in difficult academic programs. I dont believe for a second that they did these things BECAUSE of me - nobody does anything hard without putting in the bulk of the effort personally. But, I do believe SMBC provides a helpful service to a lot of good people, and Im very lucky to be the conduit for that service. When you down my site (or any of the others), this goes away.I suspect a lot of the above could be said about many websites, and thats sort of my point. I understand hackers who try to get at sensitive information, or who try to harass jerks. I dont understand what the value is in taking down a site like mine, which provides nothing but jokes and information.Lastly, whenever you hack my site, it causes a lot of anxiety for me, and for everyone who works with me. Right now, because of this latest attack, my brother (who was at work, and who has two lovely kids) had to run home to deal with this problem. In other words - when you attack my site, youre not just attacking some abstract thing on the Internet. Youre causing physical distress to a lot of people who dont deserve it.So please, please just stop.Thanks,Zach Weinersmithtl;dr: When you hack my servers, you distress me and others physically and financially. Were not a black box - were real people. So wed all take it very kindly if youd stop.PS: Because this is reddit, I want to be clear: Im not asking for any internet justice. Just sending a message in a bottle, hoping it falls into the right hands.EDIT: Holy crap! Thanks for all the upvotes and advice. I think we have resolved the problem, and Ill see if I can get Marty (webmasterbrother) to post about it. Thanks nerds!","SOURCE":"Reddit \/r\/programming"},{"ID":"t3_9tcn5","URL":"https:\/\/www.reddit.com\/r\/programming\/comments\/9tcn5\/the_riaas_favorite_thread_of_all_time_a\/","DATE":1255305600000,"PLAIN_TEXT":"I feel like there are a bunch of ideas floating around right now and if they were combined in the right way, then the game is over.Any successful sustainable file sharing needs to offer the following features:-High performance (this is why Kazaa, Limewire, Bittorrent, and Rapidshare all did so well in their respective heyday periods, slow will always fail like [Freenet](http:en.wikipedia.orgwikiFreenet) and [Tor](http:en.wikipedia.orgwikiTor_(anonymity_network))s current state)-Anonymity between the uploaders and the downloaders to prevent MAFIAA B.S.-Useful search tools (any number of solutions for this, but it is tricky on a [DHT](http:en.wikipedia.orgwikiDistributed_hash_table) system)-[Poisoning](http:en.wikipedia.orgwikiTrade_group_efforts_against_file_sharing#Peer-to-peer_network_poisoning) resistance (basically, better hashing than was done in Kazaa, modern stuff generally has this solved)-Incentives to share (the BT trackers get this right)-All traffic encrypted to prevent ISPs and proxies from observing traffic (TorFreenet style to keep everyone that forwards traffic blind)-Prefer to keep everything internal to the network and have no concept of exit nodes (like [Tors hidden services](http:www.torproject.orghidden-services.html.en) or something similar)-Open to anyone that wants to join without invites (this eliminates [friend-to-friend](http:en.wikipedia.orgwikiFriend-to-friend)[darknets](http:en.wikipedia.orgwikiDarknet_(file_sharing)))-Flexible routing and robust storage (DHTs are great for this, also makes F2F useless IMHO)-Completely open source and decentralized so no companies can be sued to take the network down (BT already figured this out). More on this here: http:www.eff.orgfilesp2p_copyright_wp_v5_0.pdfThere may be more requirements, but I feel like if all of these were combined, then the game is over and the nerds win. In particular, with anonymous communication and incentives to upload, downloaders can just leave all of their files available permanently, vastly increasing the performance, which further adds to the utility in a positive feedback loop.Obviously, some of these requirements seem to conflict at first glance. But given how fast P2P systems have come in a decade, which includes the entire history from Napster to DHTs to everything else, I think they will be overcome in the relatively near future. This is a classic example of how arms races promote technology. I feel that without extremely draconian laws that outlaw cryptography and network neutrality, there is absolutely no way for big content to win this in the long run. Digital information is, for all practice purposes, a [public good](http:en.wikipedia.orgwikiPublic_good) (it is non-rival and non-exclusive thanks to the ability to make infinite copies for almost free). The legal system is set up assuming that IP is a [private good](http:en.wikipedia.orgwikiPrivate_good) and will not change unless it is forced by outside pressure. Eventually, they will either accept file sharing or not. But if the technology makes enforcement impossible, it really doesnt matter.One protocol that looks promising to me is [BitBlinder](http:en.wikipedia.orgwikiBitblinder). I have not been able to test it yet though (havent got an invite), but the [incentive structure](http:bitblinder.comlearndev) they present might be enough to get a fast onion routing network working. Although onion routing adds computation overhead and 3x or more latency, in theory it should be able to sustain high throughput (which is all we care about for high performance file sharing) if there are enough routers in the network.Please reply with comments on the issues I mentioned, any additional requirements you can think of, any systems you know of that meet these requirements, and anything else related.Note: I am not here to discuss the morality of file sharing. I am not even a file sharer myself (havent even used BT in a couple years). I just want to see innovation and see some good old fashioned [creative destruction](http:en.wikipedia.orgwikiCreative_destruction). In Reddits meme language: I just want to see the world burn.Edit: added links.Edit 2: Holy shit. Great response. Thanks for contributing and keep the good info coming. Im going to try to comb through this info and hopefully can refine this idea further. Maybe a Wiki page is in order. Any suggestions for where to post?Edit 3: OneSwarm has been nominated. Im still a bit skeptical bc its F2F, but within that constraint, it seems to be otherwise ideal.Website: http:oneswarm.cs.washington.edusub-reddit: http:www.reddit.comroneswarmEdit 4: Other links...#http:en.wikipedia.orgwikiEigenTrust#http:en.wikipedia.orgwikiI2P#http:en.wikipedia.orgwikiOFFSystem#http:offsystem.sourceforge.net#http:www.anomos.infoDid I miss anything?Edit 5: This is a great idea: http:www.reddit.comrprogrammingcomments9tcn5the_riaas_favorite_thread_of_all_time_ac0ecxtm","SOURCE":"Reddit \/r\/programming"},{"ID":"t3_azdd7","URL":"https:\/\/www.reddit.com\/r\/programming\/comments\/azdd7\/programmers_sit_your_butt_down_i_need_to_have_a\/","DATE":1265587200000,"PLAIN_TEXT":"Programmers,I am one of you. I live and breathe code; its what puts food on my table. However, in a former life I was a DBA. During those few years, I learned a tremendous amount about relational databases. I learned how to properly design them and why doing so is critically important. I am absolutely sick of seeing 90% of the programmers I encounter using SQL databases as if they were nothing more than bit buckets. And your fancy new ORMs only compound the problem by further abstracting you away from your choices in schema design. So, please, at a bear minimum, please spend the next 30 minutes learning these few things. Youll become a better programmer because of it.- Understand the relational part of relational databases. This means that various columns between tables are interlinked using [foreign keys](http:en.wikipedia.orgwikiForeign_key). Doing this will help keep your data consistent by preventing the data in two tables from getting out of sync, so to speak. If you use MySQL this also means you need to stop using the default MyISAM engine and switch to [InnoDB](http:en.wikipedia.orgwikiInnoDB) (or better yet, switch to PostgreSQL).- Just like your favorite programming language, your database also uses various datatypes. The next programmer who defines a column like this is_active VARCHAR(100) DEFAULT T is going to get cock punched. For those of you who think youre too smart for this tip, let me ask you this: Are you storing IP addresses as VARCHARs? Why? Its just 32-bit integer written in dotted quad notation. You save yourself almost 4x the storage space by using an INT column. - Understand [normalization](http:en.wikipedia.orgwikiDatabase_normalization). Nailing this down will make it easier to figure out in your head how to represent the data you intend to store. Normalizing your data will help reduce redundancy and enhance data consistency. However, sometimes normalizing it to the extreme will affect performance and be a bitch to write code for.- Read up on [check constraints](http:www.w3schools.comSqlsql_check.asp). You stick these simple little logic checks on your column definitions and they work wonders at preventing bad data from getting into your DB. I know that you write your code to prevent bad data from getting in, but simple little things like this act as a last line of defense. And when your code is rewritten, refactored, or just plain hosed up by a dumbshit coworker, that last line might be your only line.Thank you. That is all.","SOURCE":"Reddit \/r\/programming"},{"ID":"t3_ai9ab","URL":"https:\/\/www.reddit.com\/r\/programming\/comments\/ai9ab\/has_anyone_else_been_asked_to_program_something\/","DATE":1261612800000,"PLAIN_TEXT":"I was working for an HMO. All the people I interacted with were good caring folks - really working hard to make sure patients were treated well. But there was one person who issued a directive...The HMO had just purchased a new system to replace their old one. I was asked to do a dump of all the patients from part of the old system into the new system. It would have been easy to just export then import but no... I was told to exclude patients that met certain criteria. By exclude I mean they would still be paying their premiums but would no longer be counted as patients of the family practice doctors. The criteria were those who hadnt contacted their doctor in X years where X was very short (sorry - leaving vague on purpose). Much shorter than most people would see a doctor if they were healthy. I asked why? It was much easier to just re-import but was told that the HMO paid the family practice doctors based on the # of patients assigned to them and had a new patients fee. This would have two benefits for the HMO. 1) Reduce the fees paid to family practice doctors 2) make patients pay a new patient fee when they tried to get into see their old doctor. Basically it would be penalizing the healthy. The number of people affected? Again - I have to leave the number vague so Ill just say it was huge. So I interpreted the word contact to mean what the system defined as contact which could have included letters, bills, emails, reminders, etc. But even with that criteria it was still large. Sigh All those people penalized because... they were too healthy. All those doctors who had their pay cut. :( In some case I was told that patients who had been seeing one doctor for years were told they had to pick a new one since in the time that they had not come in that one filled up. :( This is a throwaway account. Ill stay on this public site for a while to try to answer questions but theres no guarantee Ill be able to stay on. ","SOURCE":"Reddit \/r\/programming"},{"ID":"t3_aue06","URL":"https:\/\/www.reddit.com\/r\/programming\/comments\/aue06\/going_back_to_c\/","DATE":1264464000000,"PLAIN_TEXT":"When I was 12 someone gave me a Metrowerks IDE to learn programming on my mac. I learned a lot with it, and got programming in C. I never really wrote a large program in it, only things like ROM hacks that extracted levels and models from snespsx games I liked. Later, I got a windows PC and messed around with MFC in C++. That was the end for me, programming UIs was too much work in C++ and I couldnt handle the encyclopedic knowledge needed to program the Microsoft framework.Later, I learned Java, which was also the language most commonly in my college. Making UIs was a blast with it, I could factorize anything and really loved making as generic code as possible with it, even for small projects. Everything I made was made in Java.Later in uni, I started learning functional languages, we used Haskell in one class. I got intrigued with Haskell and started solving Euler problems, up to this day I still have not written anything useful in Haskell but I love using it.In the mean time I did some jobs for writing web sites. I used perl and php. After a while I only used php and used it more frequently. After working for a while as a programmer I started to love higher-level languages, most of all Ruby. I became convinced that higher-level interpreted languages were the future because the slower execution times were to become meaningless. For any web projects I started using Ruby on Rails and to this day it still is my favourite framework. Then, I learned Erlang because everyone was talking about it, and it showed me how to unleash parallellization, in whole new ways. I still think Erlang is the most amazing language I have ever seen. But then I found out it was also rather slow for the things I had in mind with it. I just didnt find any use for it and never completely learned the language.Last week I wanted to make a big poster of a fractal. I wanted to compute it on a friends octocore, and write a fast parallellized program.At first, I used Ruby, thinking it would perform better than I thought. And I quickly abandoned the idea because it was too slow.Then I rewrote the same single-threaded algorithm in Haskell and saw that it was much, much quicker. But when I tried to parallallize it, I couldnt fathom how to do it in Haskell and abandoned the idea.I tried to write a parallellized version in Erlang, and while it spreak across the machine nicely, each individual process was way too slow, the parallellized algorithm was hundreds of times slower than the single-threaded haskell.Because I really wanted that poster, I decided to switch to C because I had this idea that nothing could fail in C. And I started to code in a language I hadnt used for years, even a decade.And suddenly it hit me, everything made sense. Sure, I was writing so much boilerplate but it didnt bother me. I suddenly realized that everything I wrote would be inside the programs code, and that nothing more would. It was a great feeling. I used simple pthreads to do the parallellization, and I used libgd to output my data to a png file. I started learning about mutex lock hierarchies to make the parallellizations overlap without endangering thread safety, it was all ugly code and the APIs felt horrible compared to what I was used to.. but it all worked out.The resulting program was thousands of times faster than anything I had written. And now, I am seriously wondering where I have been all this time. Sure, I still think C is incredibly clunky. But now I got the dust off of my old course on writing compilers (Modern compiler implementation in C), and I want to write a compiler in C for a small programming language. I want to get down to earth again, and write things that are efficient and just run very quickly. I want to write lots and lots of code and know exactly what every line does.Has anyone else had this feeling, this evolution? Am I going mad? Do you think C will last, and there are intersting jobs left for pure C developers?EDIT:Some people asked for the source of the fractal: http:pastie.org795264 for the C source. Haskell is somewhere down in this thread. The actual image is composed of different R,G,B channels defined by the 8 images created by the program.Example output: http:dl.dropbox.comu3545003buddhabrot.png","SOURCE":"Reddit \/r\/programming"},{"ID":"t3_a505h","URL":"https:\/\/www.reddit.com\/r\/programming\/comments\/a505h\/25_years_later_why_isnt_the_website_finished_a\/","DATE":1258329600000,"PLAIN_TEXT":"The following is a short list of excuses cut and paste from emails a freelance web developer my company used for over 2 years sent me. 2.5 years and the website was still non-functioning and incomplete. He was working with the company when I was hired and it took me that long to convince my boss to fire him, and allow me to take over.(after which I had a completed site launched within 4 months, and i still get paid half of what he did) The list of excuses was a final blow that helped me get my point across to my boss. enjoy This weekend I had an unexpected death in the family.. the funeral was yesterday. I will get on it Shortly Its been hectic, my uncle past away in my grandmas house Sunday with a massive heart attack in his chair... My laptop processer decided to Burn out on me last week, so I had to go thru the trouble of getting another laptop Configuring everything from scratch and moving all my data over... so that why I didnt get a chance To work on the site.. I would have been done, but Monday and Tuesday I was real sick and sun burnt On top of slicing my hand open chucking wood upstate NY on Sunday then having to get a tetanus shot in the emergency room, which sucked bad... I was mad sick this weekend, but I made some progress today on the admin.. Besides my jaw killing me, due to 3 dental implants I got put in Friday.... I have been very busy building out a hosting platform for a company and this is why I was booked this week. I was hoping to get these items done during the weekend and I am well aware of the list and a few other things, but thank you for the reminder.... I will get moving on your stuff shortly, I have had a hectic week Todays my B-Day, so Im trying to kick back and forget about the world as much As I can.... I will be spending time with fam and friends tonight, so I cant promise you Any work tonight .. but I will call you this afternoon and well get stuff sorted Out Sorry, I didnt get time to work on the site tonight, I forgot I was invited to my good friends birthday party. I will have something for youTomorrow as far as the homepage. I had to put my 14 yr old dog to sleep on wed so Ive been kind of miserable.. I needed a day to chill.. Ill send you a log with the current stuff. Talk Monday. This is the last day I have to run around like a gravy covered cat in a dog pound!  I have to cancel our meeting today and wait till Monday... One of my servers went down and I have to fix this This is Rich, I just got back from vacation and got your message. I will give you a yell tomorrow as Im am still getting settled in Sorry to drag this on longer than expected, I had in plain English A screwed up week. I got into an accident last week so I had to have my car fixed.. So I had no car, then me and my girl got in a huge Fight to breakup... so I didnt have her car, then I finally got my car backYesterday from the body shop but I had to take my cousin to a doctor in Brooklyn, cause he had another apses, the doctor recommended we take him to Coney island hospital and we didnt get out Till 5AM in the morning last night, 11 hrs of waiting... horrible I will work on the issues as of tonight, Ive had a busy schedule and Iplaned the work for this evening. Sorry for the wait, I will look into the category issue 1st thing. Ok I have had a family emergency this week and its been a little hard on my schedule. I plan to start the next steps, this weekend or early next week, call me if you have questions. Today is bad for me, I have to do a lot of running around, I have a weeding rehearsal I have to go to tonight, so I gotta Pick up the tux, haircut etc... My good friend is getting married this weekend. Ill contact you first thing Monday..","SOURCE":"Reddit \/r\/programming"},{"ID":"t3_b1vtx","URL":"https:\/\/www.reddit.com\/r\/programming\/comments\/b1vtx\/so_im_making_an_internet_query_language_iql\/","DATE":1266105600000,"PLAIN_TEXT":"WHAT? - I always thought programming should be as easy and intuitive as possible, while still being powerful. Query languages like SQL are a great way of doing that, but are a bit limited in that they can only operate on special databases. I wanted to tap into the biggest information source there is, the mother of all databases - the Internet.WHY? - The internet mostly uses HTML for structure, which is great because it offers so much possibility to identify the data you need inside a page. As a programmer Ive always found myself looking up info on it in different ways like a good-ol browser, but often I needed to build some script to extract information into a database because the particular challenge was too daunting to do manually. Or simply because the information was there but not sorted in some useful way, or I wanted it grouped or presented by some other criteria. Dozens of scripts later I realized there should be easier, friendlier way to do this.HOW? - Unlike a standard database, the internet is structured hierarchically, not in tables, but it turns out thats even better for working with data - sorting, grouping, selecting, joining can all be done more efficiently in a hierarchical model. And you can even simulate tables in it (&lt;table&gt; anyone?).SO? - Ive built a very flexible query language parser, which means I can use any syntax my imagination can conceive and have it parsable within minutes, but just because I can doesnt mean I know best how to, which is why Im posting here. I would like to present the syntax Ive devised so far as simply as I can, and hope Ill get ideas and constructive criticism on it.READY? AIM. FIRE! - Heres a couple of examples of what some basic queries look like: GET http:www.google.comsearch?q=reddit SELECT a@href gets all the links from a google search GET http:en.wikipedia.orgwikiComparison_of_file_archivers SELECT #sortable_table_id_2 tr[td:first(:contains(winrar) || :contains(^powersarchiver$i))] gets the two rows from wikipedia comparing Winrar with Power Archiver GET http:en.wikipedia.orgwikiComparison_of_file_archivers SELECT #sortable_table_id_2 ORDER tr BY td:contains(YES):count DESC select the table of features sorted by most features GET @url SELECT  LEFT JOIN ( SELECT li.critic_score AS critic_score, li.community_score AS community_score FROM ( SELECT rowid, row&gt;th&gt;a@href ABSOLUTE_URL @url AS address ) ) USING(rowid); a somewhat more complex exampleThese show very basic syntax like GET (theres also POST ... WITH BODY ..., HEAD, READ for local files, etc.), SELECT to extract nodes and their children (SELECT TAG does the same but only selects the tag not its children, and recurses the search inside found nodes), ORDER selector BY selector [, selector], and selector syntax which is almost identical to CSS selectors (similar to jQuerys).WE DONE YET? - Right now Ive done this in C#, but once the framework is functional it should be easy to transpose in other languages. Im sure it will be very useful once complete, just like SQL saves everyone a ton of time. I will provide more information in the comments. I welcome any questions, ideas and suggestions.Edit: [Heres a screenshot of work in progress](http:i.imgur.com6U8rX.png)Edit 2: One of the major differences between IQL and SQL would be that, while SQL uses tables, IQL uses trees (hierarchical data). Tables can be emulated with trees (think &lt;table&gt; tag), and any operation SQL can do with a table can be emulated in IQL.Edit 3: Ive been asked if I have a twitter account where I could post updates on the projects progress. The whole code is in debug mode since Im the only one working on it, so Id have to do some serious cleaning before any code release. But I will do so as soon as I have the time, so Ive created this twitter account if anyones interested in getting info on its progress - [https:twitter.comIQLproject](https:twitter.comIQLproject).","SOURCE":"Reddit \/r\/programming"},{"ID":"t3_9n379","URL":"https:\/\/www.reddit.com\/r\/programming\/comments\/9n379\/a_bunch_of_whiners\/","DATE":1253577600000,"PLAIN_TEXT":"Ok ... dear god! I cant stand the programming related whining anymore! The Why-It-Sucks-To-Be-A- posts, the offshore-paranoia, the buhu-nobody-gets-what-I-do-blattering, the My-Respected-Company-Is-Full-Of-Amateurs-Complains, the I-Feel-Like-A-Code-Monkey posts, oh and best of all the escape-the-profession advices . I mean come on ... can you point out another profession that is equally busy at shedding depressing outlooks on itself. COME ON! GET SOME PERSPECTIVE! Have a look at how other people have to earn a living. I have a seriously fucked up sleep cycle at the moment, which results in me having been awake past 5am for the last three days. At around 4:30 am when I look out of my window I see the cleaning dude pass by. 4:30 am on his cleaning machine, up and down, scrubbing the pavement of other peoples rubbish. Night after night after night after night. And dear god when I hear the escape-the-profession advices I always ask myself: Escape to where? Come on do you really want to go into accounting!, banking!!, administration!!!, service!!!!, law!!!!!, or medicine!!!!!!? When I was 18 I had to do a compulsory 13 months of social service in a nursing home. Thinking back to these times makes me feel so glad about my choice of becoming a programmer. At one point you get somewhat terrified on walking in on a dead person on your morning routine or night patrolling. Thank god I did not have to diagnose them. Oh and concerning the offshoring-paranoia, I think that should be best discussed with manufacturing and engineering folks whose jobs were off-shored some good twenty years ago. And it is not only IT! When working for HP Consulting in Germany the only major off-shoring I witnessed hit the administration department. A couple of hundred guys who were replaced by minimal-wage stuff scanning relevant business documents and e-mailing them to India. That is until management figured out that it was cheaper to snail mail everything to the Czech Repuplic and scan it there.And speaking of amateurism: Wallstreet just sank the global economy.Get some perspective: Coding is awesome! It is one of the most international professions. Study law and youll likely be stuck in your country forever (like my girlfriend :-( damn!) Employment opportunities are still so so so sooooooo much better than in most other professions. All you need is a 300$ computer and by the power of your mind you can build amazing stuff! Which results in very low upstart costs when you want to start your own company. It is probably the fastest changing professional field of all. You constantly can learn new stuff, new things are happening, and you can spend your free-time AND work-time enjoying browsing the web to find out about them. Without us, no banking, manufacturing, and communication. I know the discouraging effect of a couple hundred thousand lines of legacy code, but come on someone has to face it and keep this planet running. You can go into THE ZONE! You are not one of those helpless unknowing victims in front of their computer. In contrary to all those folk who loose days of work, lifetime memories, and lifetime savings to crashes, double-negation delete dialogs, and Trojans, you will actually have a clue why it happened to you! And most important of all you are usually surrounded by genuinely nice and uncomplicated people. I first wanted to study business and went to a university open day for school kids: Half the kids (17-18) appeared in suits, and even there and then had this unnerving competitiveness streak, false smiles, and slyness. No thank you! I so much enjoy working with most other programmers. Say what you want about compsci-people, compared to other professions, we are an easy-going laid back bunch.Programming is cool! What do you love about the programming profession?","SOURCE":"Reddit \/r\/programming"},{"ID":"t3_9ai2n","URL":"https:\/\/www.reddit.com\/r\/programming\/comments\/9ai2n\/interested_in_hardware_but_just_a_software_person\/","DATE":1250121600000,"PLAIN_TEXT":"I received mine about a week ago and have been having a lot of fun. It was quite easy to jump in and get an LED blinking. If you have used processing before the interface will be familiar.There are additional shields you can place on top to extend your arduino for things like ethernet, bluetooth, audio and more!Their main website is here: http:www.arduino.ccLanguage reference here:http:arduino.ccenReferenceHomePageOne of my favorite pages, listing examples of other hardware people have interfaced with, is here:http:www.arduino.ccplaygroundMainInterfacingWithHardware My Project:I am making a little LED array to show the current status of our continuous integration tests with Hudson. SuccessBuildingFailed RedBlueGreen It will eventually just hit the RSS feed and get its information from there. However right now you can view a little web page running on it and change the LEDs. Ill leave the link up to it over the weekend. More than likely it will be DoSd seeing as it has an amazing throughput of 4 requests per second.Pic Here:http:timelessname.comjunkarduino.jpgHere is a link directly to my Arduino:http:75.135.207.42:8070","SOURCE":"Reddit \/r\/programming"},{"ID":"t3_9numu","URL":"https:\/\/www.reddit.com\/r\/programming\/comments\/9numu\/the_duck_tape_vs_architecture_discussion_is_based\/","DATE":1253750400000,"PLAIN_TEXT":"Theres been a lot of buzz around this today, but everybody is taking it as a given that there is a spectrum, that one side has fastsloppy code, the other side has over-architected unbelievably slow code, and that Nirvana consists of finding the middle path.Stop it.Simple code and highly architected code are not at opposite ends of the same spectrum. Truly good programs are small AND simple AND architected in such a way that makes them easy to modify and extend.Its true that there are people who hack together code with ugly dependencies, repetition, and hardcoded nastiness that make it a nightmare to modify. These are bad developers, and some develop quickly and some develop slowly. Fast ones do often endear themselves to managers, but it doesnt mean theyre good (although they are better than slow ones who do the same thing)There are also people who go bonkers over design patterns and architectures without stopping to think about it, resulting in bloated applications with thousands and thousands of classes like AbstractConcreteFactoryDelegateManagerImpl. These are also always bad developers, though you dont find too many fast ones.Good programmers are not midway between these extremes. Good programmers dont write moderatly quickly, they dont write moderatly convoluted code with a moderate degree of architecture. Good programmers write small, elegant, perfectly designed programs quickly. They dont compromise: They are orthagonal to these two sterotypes, although like the others, some good developers work quickly and some work slowly. The quick ones are the true coding superstars.Good architecture simply means that a program can be extended in expected and unexpected ways without extensive redesign. Architecture astronomy is just as bad for this as overcoupled spaghetti.Similarly, code speed and ship-it-ness come from conciseness and simplicity and good architectural practices (such as reuse). Ive seen spaghetti code just as bloated, heavy and slow to develop as overarchitected code.tl;dr - Good programming is not midway between duck tape programming and architecture astronomy, but a completely different dimension which means the ability to quickly write small, well-designed programs.","SOURCE":"Reddit \/r\/programming"},{"ID":"t3_b4zel","URL":"https:\/\/www.reddit.com\/r\/programming\/comments\/b4zel\/hey_reddit_i_hate_memorizing_foreign_vocab_terms\/","DATE":1266796800000,"PLAIN_TEXT":"EDIT: Okay so this is long dead because Google killed their free translation APIs back in 2012 but I made a new extension that does the same thing.You can learn more [here](http:www.glossolaliasoftware.com)=======================================================[Heres the link](http:chrome.google.comextensionsdetailplpjkjplknknmhfhkjgcfgofclmlnine)It works by replacing randomly selected words on the sites you visit with translations from Google Translate. The translation is done without regard for context so its not going to help with your grammar and verb conjugations, but Ive been using it for a week now and it seems to be a pretty good way to build vocabulary. You can mouse over the translation to get the original word if the context isnt enough. Ill probably add transliteration support and some basic word-joining functionality as soon as Im convinced that the existing features are stable. EDIT: Screens:[Arabic (Text color can be changed or deactivated, so its okay if youre not crazy about neon-green)](http:imgur.comGmczd.png)[Spanish](http:i.imgur.comiSyW8.png)[Settings Page](http:imgur.comscclO.png)","SOURCE":"Reddit \/r\/programming"},{"ID":"t3_cvykd","URL":"https:\/\/www.reddit.com\/r\/programming\/comments\/cvykd\/my_gift_to_rprogramming_rd_the_command_line\/","DATE":1280534400000,"PLAIN_TEXT":"I wrote this for myself and figured I might as well share. It allows you to browse reddit, with subreddit and comment support, from the command line.\r\rMy motivation\r\r Coworker who sees me looking at something in a browser: Glad youre not busy; I need you to do this, this, this...\r\r Coworker who sees me staring intently at a command prompt: backs away slowly\r\r\r\rIts written in C#. Uses .NET framework 3.5. I couldve used 2.0 to widen compatibility, but LINQ to XML makes RSS parsing so much easier. It works exclusively with reddits RSS feeds, which sort of hinders its capabilities. For instance, it doesnt have access to votes or anything like that. Also, comments dont get nested (although they are in the correct order, so they are readable).\r\r\r\r[Download](http:dl.dropbox.comu1203225rd.zip)\r\r\r\rScreenshots:\r\r[reddit homepage](http:dl.dropbox.comu1203225reddit.png)\r\r[programming subreddit](http:dl.dropbox.comu1203225programming.png)\r\r[reading a self.reddit post](http:dl.dropbox.comu1203225self.png)\r\r[options for external links](http:dl.dropbox.comu1203225link.png)\r\r[reading comments](http:dl.dropbox.comu1203225comments.png)\r\r[viewing help page](http:dl.dropbox.comu1203225help.png)\r\r[boss mode](http:dl.dropbox.comu1203225boss.png)\r\rEDIT\rWorks in linux with mono too according to comments. Yay\r\rEDIT 2: As requested, the source is available here: [http:github.comfoxingworthrd](http:github.comfoxingworthrd). As I warned though, I threw this together in an afternoon and the code is pretty ugly. Dont judge me :-)","SOURCE":"Reddit \/r\/programming"},{"ID":"t3_bg12b","URL":"https:\/\/www.reddit.com\/r\/programming\/comments\/bg12b\/what_did_i_do_wrong_or_how_are_you_supposed_to\/","DATE":1269043200000,"PLAIN_TEXT":"I work for a small company that does ghost and historical tours, and in the fall we decided we should switch to an online scheduling and tracking system. We first tried to find an open source solution or pre-existing program, but found that our needs were very customized and not suited to a generic program. At that point, we decided we should hire someone to developprogram a system for us. In trying to find someone we sent out RFPs to many local companies, as well as posting on Guru. We received a lot of interest, and carefully went through all of the proposals we received. We narrowed down the list to the three individualscompanies that seemed liked the best fit. One of these was a local company (in Canada), one was an individual from the US, and one was a company from India. I should mention that these were not the cheapest offers we got, but rather those who we felt could do the project quickly, efficiently, and with a high degree of quality. We did extensive interviews with the three finalists, to ensure clarity of what we were asking for, and to get more information about them. After the interviews, I did reference checks on all the companies about some of their other recent projects.In the end, we went with the Indian company, as they seemed to have the best grasp of what we wanted, had the best presentation with a full mock-up, and came in with a competitive quote. We were a little nervous about working with a company so far away, but they seemed very professional, confident, and offered a reasonable payment plan. The entire project was to take two months to complete. I worked very closely with their project manager and things seemed to be proceeding on schedule. However, two weeks before the project was to be completed the project manger unexpectedly quit, as (he claims) he had not been paid for a month by his company. When the new PM took over, I had to retrace many of the conversations and emails I had with the original PM - which was extremely frustrating. However, after several days and hours in communication, he seems to be on top of things and had the project finished (pre-testing) only a few days behind schedule.However, once I began testing the system it was clear only about 50% of it was working, and on top of that, many features were completely missing. Some of the mistakes were so obvious (like dates in several time fields) it was painful.The project is now 6 weeks late, and we are running out of time to train our guides on the system for the start of our busy season. At this point it is clear that we will need to take the 80% completed code from the Indian company and get someone else to properly finish it.As this experience has been so bad and stressful, the thought of hiring another programmercompany is terrifying. However, as we have invested significantly in this project (time &amp; money), and he clock is against us, we will need to hire someone very soon.Does anyone have any suggestions about a better way to hire a programmercompany? Or, is there anything we could have done differently to get a better result?Please tell me this is not how things usually go and this was just a really bad situation. Thanks for giving this a read. ","SOURCE":"Reddit \/r\/programming"},{"ID":"t3_uxqaf9","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/uxqaf9\/update_i_broke_production_and_now_my_tech_lead\/","DATE":1653436800000,"PLAIN_TEXT":"[Original Post](https:www.reddit.comrcscareerquestionscommentsuurkw4i_broke_production_and_now_my_tech_lead_says_he)I actually cant believe how this turned out. I think this might be the best thing that has ever happened to me in my entire life.I ended up having it out with my tech lead. We got into a couple of heated exchanges when I pushed the cause of this incident back on him since he knew production was vulnerable, and failed to address the root issue for over a year. He didnt like that, so he tried to have me demoted and removed from any development tasks, so I quit on the spot. The next day, the CEO called me, and we had a pretty productive chat about the whole situation. Our chat ended with with him telling me, I like you. I respect you, and I am definitely listening to what youre saying. I hope we can work together again sometime in the future in some capacity.&amp;#x200B;Now for the best part...&amp;#x200B;I had mentioned in some response comments in the previous thread that I had been applying for jobs the previous week before this incident occurred. As of today, I got an offer for a much larger, more established company for a 100% remote position with a 133% increase in salary, full benefits and all.&amp;#x200B;As for whats next, Its a 2 week process for on-boarding at the new place which is mostly handled on their end, so Im going on vacation. Im taking my girlfriend to every beach town in California for the next 2 weeks.&amp;#x200B;Edit: I forgot to mention that the tech lead went to the client and named me personally as the one who broke their production DB. That sent me over the edge with him which is what made me walk on the spot.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_oosru6","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/oosru6\/i_went_to_the_office_for_the_first_time_i_fucking\/","DATE":1626825600000,"PLAIN_TEXT":"Not my main account because I know some of my coworkersfriends browse this sub and would recognize me. I just want to rant and encourage people to keep looking for remote jobs and make the transition if they canprefer it.So last week, after a year or so working from home, I had to go back (for the first time in my career) into the office. According to my company, we should work from the office because it will increase collaboration and people will perform better. Bunch of bs, but I had no other choice at the moment.So first things first, instead of waking up at 8:20 and join a useless meeting at 8:30, be on mute and proceed to go make my breakfast and take my dog for a walk, I now have to wake up at 7, get properly dressed (no more comfortable clothes), make sure I have lunch and breakfast prepped, get on the highway, drive, get there at 8:15, mindless chit chat till 8:30, join the same useless meeting on zoom (with coworkers from around the globe, whats the f. point? ) and now I HAVE toMUST pretend to pay attention to something that has no relation to what I work with because well, I got no more flexibility on my surrounding environment.At home, I invested in a nice work setup. I have a nice chair, a stand-up desk, wireless keyboardmouseheadphones, 2 monitors that I can adjust, plus a private kitchen to make my snacks, and teas.The first time I went to the office and I saw the work environment I felt ridiculous. Its a fucking cubicle, with a shitty keyboard, mouse, and headset. The best part is that the cubicle doesnt have tall walls so I can literally seehear everything, including other peoples monitors. The monitors, of course, are facing the hallway, so you cant see whos walking behind you, but whoever walks past you can freely see what you are doing. Managers dream.I also have to wait in line now if I want to make some tea or something, delightful.At home, I am able to have a quiet environment and be super productive. When I get a card, depending on what it is, I can finish it in 2-4 hours, and then I can focus on doing something else for the rest of the day (learningtraining, other meetings, or just not work at all since I was able to be productive).At the office, because of being constantly watched, I became lazy just to have something to hold on tolast for the rest of the day. I also noticed that my team members do the same. Also for me, IT IS EXTREMELY HARD to actually focus with a lot of background noise and as I mentioned above, because of the cubicles, every time someone gets up (every 10 mins), or gets a phone call, my attention is drawn to that and I lose what focus I had.The company kept saying we will be more productive at the office. Thats the opposite of what I am seeing. My team is now taking longer for cards, and the amount of time wasted in the office is ridiculous. The number of people, mindless walking around, chit-chatting in cubicles, going out for lunch coffee breaks just to fill in the time is a joke(nothing wrong with that IMO, but Id rather do that at home).I loved having a private bathroom at my house. I can go and do whatever I want to do in peace. At the office, welcome to the shitty stalls and pooping side by side because, yes, I do love the smell of people farting in the morning.The people that wanted to go back into the office, after a week of going to work and lunches and whatnot, started to mention some stuff during the stand-ups and I quote:Are you guys feeling more tired than usual? I forgot I didnt enjoy the commuteMan I forgot it sucked to have to prep a meal every day and wait in line in the cafeteria to reheat itI actually didnt realize I was saving money eating at home, I spent over 100 dollars last week on coffee and lunch.At home, after work, I could go for a jog right away or just go watch some Netflix and chill out.At the office after a long, tiring day? Nope, get in the car, you are going to waste 40 minutes in stressful traffic to get home.&amp;#x200B;I am FUCKING glad, I am putting in my 2 weeks this Wednesday and going fully remote. I started looking 4 months ago when the company announced their plans because I was feeling that this office thing would be horrible. I tried it out and it just doesnt work for me.If you are looking for a remote role, keep applyinginterviewing, you will get something too.If you likeprefer going to the office that is fine. I am not trying to say we should all be remote. Companies should offer FLEXIBILITY to let employees choose where to work from.We have different personalities and different preferences. Just because some people enjoy going into the office (or because management needs control) doesnt mean everyone has to.&amp;#x200B;I am gladly never going to or near an office ever again.&amp;#x200B;TL;DR: Went to the office for the first time in my life. I hated it and makes no sense to me. Companies should let employees decide where to work from. If they cant offer that and make their employees lives easierbetter, they shouldwill lose all their talent to companies that do.&amp;#x200B;EDIT 1: There seems to be a lot of people saying that I am entitled. For a bit of background, I started working a couple of years ago as a dishwasher and made my way to where I am right now. I never had an easy path nor a college degree (I am self-taught with a small coding Bootcamp).Just because I prefer having a better quality of lifework, doesnt mean I am entitled. Instead of bickering with each other about who works harder or whatever, we should focus on having a better quality of life and trying to make it the norm. If you are working 6 days a week and you feel proud, good for you but I dont want that for me.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ujjhpi","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ujjhpi\/not_all_can_make_top_5_salaries_by_definition_but\/","DATE":1651795200000,"PLAIN_TEXT":"Heres some general advice that if everyone followed, salaries across the country would go up (Weve seen this happen already with the service industry! #GreatResignation rWorkReform ). And of course, so could yours if you follow it.&amp;#x200B; Dont try to get a job  You are offering a service, selling your labor. imagine youre a basket weaver. Selling baskets is your only source of income. You just opened shop, if I show up and offer $10, would you take it right away? or would you research how much baskets are being sold in your area first? they could be going for $1000 instead of $10. And of course, you would set the price right? not the first customer to walk in.  So research. like you would if you are a business owner. at the minimum, once a year, because salaries change fast!  Know not just how much people get paid in FAANG, tier 1, startups, average F500, banks, etc  but know as well their WLB, weekly hours, etc  Do NOT be the guy that thinks that everyone in good paying companies works &gt;40h and thus, doesnt try to go into these companies, or accepts &gt;40h and bad WLB because they are paid well - you can have both  Do not be the guy that assumes but doesnt verify, that to reach X salary you must pass leetcode hard and get into FAANG or Quant, when many lesser prestigious companies have started paying higher and higher - be the guy that verifies  Your labor is worth what you decide, not what the first company decides Keep your secrets, reveal your strengths  You are letting companies blindly bid on your employment - which is even more advantageous than selling on a shop like the example above  its a blind auction. And you are in control of the information, they dont know if you already have offers for 200k, if you are earning 180k right now, etc  Keep them in the dark of what doesnt help you and inform them of information that helps you  You got a Google offer? tell everyone  Google low balled you to SDE3 instead of 4? Just mention Google offer, not the pay  level  No name company offered big bucks? Just leave the name out, show the number  You are making more than their offer? reveal  You are making less? keep it  reveal the best, hide the worst  if you say you earn X, now the negotiation is more restricted to X + 10% - 30% even though they had budget for more. not completely impossible to negotiate more, but harder  and never say can you do 100k? you just cut yourself out of the rest of the budget, now you look rude if you then say theres another offer you are considering, etc Write down all offers. keep track  write down what was said verbally, the written offer might change  the offer is more than the written contract. Hints about good WLB, red flags about long hours, theres a ping pong table at the office and you are a fanatic for ping pong...  on the other hand, whats not in written contract is not guaranteed, and a lot of things dont get written down like a ping pong table  you might forget things as this could be a long process Never say the first number is good but not enough. And not always possible. Better is: Never say the last number  if you can be the first to ask about pay before they ask you, then great, ask them for a range. Keep in mind, the range they give you is not truly the highest they are willing to pay  if they insist hard on asking a number from you first, before interviewing to avoid wasting time, dont say the minimum I would take.. or I would sign for...  Do not, ever, put a hard ceiling or limit on what you would accept!  when you say any number, always keep higher pay as a possibility  Answer if you have to: Im looking for at least averageabove average market pay for my experience, which would be at least X  then you are not an asshole if you come back with an offer of X + 40k, and they cannot tell you that you said you would accept X - you never said that Stack offers. Dont stop interviewing because 1 company made an offer - you are just getting started  keep your job as long as you can - its leverage  keep interviewing as long as you can - you gain leverage with each offer  first thing you do when you get an offer - ask for time to decide, more on this later  When you get an offer that expires after 10 days, only sign it on the 9th day. Let them sweat, let them consider offering you more - so really do, unprompted even  leave all offers open  you might think its good to tell no to the company that offered you 100k after you get a 150k offer - dont  never say no, or that you are moving on, or going for other opportunities  leave every door open until the day you sign your best offer  you might be surprised that the cheap-ass offer suddenly becomes your best offer  Inform all other companies, hell, even the ones that rejected you before if you have a recruiter email, about the best offers you received  Hello X, I just wanted to updated you on my thoughts regarding the decision to join COMPANY. I just received a strongcompetitiveenticing offer from CORP. I am still very excited to join your team as I had a great experience during the interviews, as such can we ...  for companies you are still interviewing ..can we expedite the interview process as my timeline is now tight?  for companies that made you an offer .. can we revisit the offer and make this work? The offer I received is... X salary, Y RSU.. How to get more offers  You might be feeling hopeless. you applied to 200 jobs, passed only 3 resume screens, passed only 1 on-site, and have only 1 offer  you will be tempted to accept  you will doubt yourself and think you got lucky to get 1 offer  As I said, you are only getting started.  Linkedin, find recruiters, say you are very excited about their company, want to interview, etc..  say you already have an offer from X  Watch them scramble to get you (the better X company is)  Then do it again whenif you get an offer from Y where Y in (F, A, N, G, tier1List, unicornList)  You might be surprised how many resume screens you will skip straight to interviews, because if you passed Ys interviews, you can probably pass their own interviews. your weak CV doesnt matter as much now  going back to applying seems crazy: but you are not starting from zero - you have proof of your competitiveness now, x10000 more proof than a resume can give referrals, referrals, referrals  Your friend saying hey, my friend is looking for a job = not great, another guy trying to get his friend a job  but definitely helpful, and do that to try to get your first offers!  hey, my friend got an offer from X, hes really good, would you like to interview him before he accepts? = wow I just got a chance at fishing a competitive candidate because of this guy is in my network! Im on a time limit to get this guy!  So absolutely leverage your network  ask them to refer you to their companies to get your first offer  re-contact everyone AGAIN when you have an offer  heck, re-contact everyone again and ask for referral again if you get your first FAANG offer, suddenly the referrals that did nothing, that went ignored, will be calling back because you are the guy they heard about twice and is now about to get fished by Google Exploding offers (when they ask you to sign in less than 2-3 days)  these might be one of the hardest things to deal with if circumstances are wrong  No job, no other offers? Youre fucked. Either accept, or if you have balls of steel and confidence that you will get other offers? then keep applying  exploding offers are negotiable too. everything is. deadlines are.  show them the offers that are bigger (and dont necessarily tell deadlines unless they keep insisting about the expiration)  My offers for X and Y will expire significantly later, and I want to take time to make this important decision of which company I will work with for the next years. I will get back to you at that timeline  insist that you, while very excited to work for them, want to finish X recruiting process, and or go into your cavelake side housespend the weekend with familyreflecting on all the opportunities you have before making a decision  Calling this bluff is hard - but worth it for many circumstances. usually companies that do this dont have great offers - thats exactly why they do it  if you need a job, theres zero shame in taking this kind of offer, in letting their bluff win. next year, you will have more leverage (a job, +1 YoE) Say that you cannot reach a final decision without first sleeping over it, or talking to your family, or spending a weekend reflecting, anything.  prepare this line  when you are on the phone, and you are being told your offer, dont say amazing, whats the start date - then the negotiation is over, or if you re-open the negotiation, it will be bitter and hard and wont be a very successful one  dont also say can you do +30k. theyll do that or 20-25k and its over. never finish a negotiation early, never close doors voluntarily - they say you can decide in a week, then ask for 2 weeks, and decide on the last day  with email its easier - with phone its more rewarding if you are a fucking boss with better social skills than a recruiter  Instead reply:  thank you for your offer, I am very excited about COMPANY, I loved meeting the TEAM  STAFF, and I know I will be a good fit and Im happy you agreed as well. Im not ready to discuss the offer at this point, but I am confident we can find a package both sides would be happy with. I will still sleep onreflect over the weekendtalk to my family about this before making a decision  when you are not the sole decision maker, you will be pressured less. because the other side cant talk to your family to convince them - this is huge if you are not the most confident person, and can be persuaded to say yes by a strong willed recruiter be excited, positive, kind, never rude  you want them to want you, and no one wants someone that isnt happy to work for you  even when you get a low ball offer, dont reply in a negative manner  thank you for your offer, I am excited about [... same as above...] I believe am good fit and Im happy you agreed as well. The offer is not meeting my expectations, but Im sure we can work on this and find a package both sides would be happy with. At the moment, Ive been offered...  and show them your Ace of Spaces offer  if you are lacking a trump card offer, then instead say ..for my level of experience and considering the market value, we should work towards X value and then keep applying  never say you are negotiating, or lets negotiate or I want to negotiate  instead say lets work towards finding a package we are both happy with  im excited about joining the company, but for the sake of my family I have to re-consider because the salary is Companies have no idea if you are good.  thats why they almost never offer the full amount they would be willing to pay, the real amount, the amount only available after a recruiter goes to his superior to increase the budget  even after 6 or 7 interviews. on-site. leetcode hards. Companies are stillreluctant to hire you, even those that made you an offer.  but if you have other offers, this signals more strongly than the interviews that you are competitive  just like a married man with a wedding ring is much more vetted to not be a total creep, to be at least a somewhat decent partner, and thus more attractive or easier to be around, if you have a job vs not having one, if you have multiple offers vs not, you are vetted, you have proof, that you are a hot piece of juicy steak You are also blind to their budget  You might think that because you were offered 100k at first, this company would never pay you 200k  Yet on blind, blogs, and here in rcscareerquestions many people have gone from 120k to 200k, or on rarer occasions even more, at the same company, same position, same interview performance, just from having higher offers  Dont believe when you are told the max is X, the range is X to Y, just keep the door open: meaning, the way you reply to them is neither accepting the offer, or giving up on the company  to each companyoffer, you are either reflectingtalking to your family, or if their offer is less than another offer, you have emailed them about it and are waiting for them to get back to you with a counter-offer (again, keep track of what each company is doing, who is the blocker, you or them, dont leave anyone without reply for more than a day!) Finally, you have tried your best, you are tired of applying, or the deadlines for several offers are coming in the next 2-3 days  time to pull your trump card  Contact your favorite companyoffer (not necessarily the highest offer!)  Say Im very exci-- you know by now  I have this and that offer, can you do X to help with my decision, and I will sign?  if( company never did a counter-offer )  then X = +20% of original offer  else if ( company is not the highest offer )  then X = highest offer (and maybe +10%)  else  X = +10%  This is on top of the possible counter-offers you got in the previous phase  No one gives their best price on the first offer, so ask for extra 20% from original offers at least. if you followed the advice from earlier, they already increased their first offer  Dont make the same company counter-offer over and over, except with this trump card, then you can ask for either your highest offer (of course, why would you take less than highest?) or for 10% if its already the highest offer as a bonus that you will sign and stop considering others  this is the one and only time you will put a hard limit on your pay  the only circumstance that you reveal the number that would make you sign now  never go back on your word and take that offer to another company, because you could have done earlier in the process, to get that same amount of $$$ while being polite in your negotiation, not like a lying asshole. You might the higher pay anyway, but you do it at the expense of burning a recruitercompany after saying you would sign if they did X. And I dont believe doing that can get you a significantly higher pay than this strategy that it would be worth it  then sign on the last day of expiration (beware off by 1 errors, check if 0-indexed or 1-indexed) bonus: Pay is not all you can negotiate. More vacation days, work from home, etc. but going that way right at the beginning of negotiation, will make it hard to compare offers. its easy to compare 140k and 150k, but hard to compare 140k+5 extra vacation or 150k, or compare 140k plus some equipment you like and 150k  so start with salary. later, if theres something you prefer over higher salary, ask for that in your trump card move  of course, negotiating full-remote when you are about to sign, might not work at all if the company doesnt do full-remote bonus: Oh shit, a company went back on their offer Immediately re-contact your second best offer, explain that the position was closed  the project abandoned (aka not your fault, you didnt kill the founders dog) and hope for the bestThis post was inspired by many posts and blogs, personal experience, but primarily this: [https:haseebq.commy-ten-rules-for-negotiating-a-job-offer](https:haseebq.commy-ten-rules-for-negotiating-a-job-offer)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_101db50","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/101db50\/anyone_else_dreading_going_to_work_after_the\/","DATE":1672617600000,"PLAIN_TEXT":"Basically the title..I have a great job, interesting, good co-workers, sane management, awesome work life balance, fully remote.. but Im still dreading having to work tomorrow. Going to really miss the holidays.What about you?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_r67an5","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/r67an5\/fired_on_my_5th_day_because_i_asked_a_basic\/","DATE":1638316800000,"PLAIN_TEXT":"About me: 21F, I have roughly a little less than a year worth of experience as a dev. Bootcamp graduate. Based in the UK.How the interview process went: CEO: is impressed by resume, thinks Ill be a great fit Lead dev: Asks me some React questions - I answer them. Asks me if I know Redux and I said no. Lead dev: Gives me a React challenge which is apparently one of the features of their product. I finish it and add some extra features I think will make the app have a better user experience. CEO a few days later says lead dev was really impressed by my workI get an offer. I am very happy. The lead dev seems extremely nice and tells me to ask him any question whenever I might need help or get stuck.Day 1 - Day - 3: I see that the codebase is really messy. Some parts use JavaScript, some use TypeScript. Some use class components, some use functional components. Some files are extremely massive which can be broken down into smaller componentschunks. I was already told that they hired lousy devs in the past and that the codebase is trash now. I am given to implement some design changes for the login, sign up and a forgot password page. Its my first day and I dunno where is what, I make some simple changes on my own branch. Second and third day, I am almost done. Just some design tweaks here and there.These 3 days I asked the lead dev lots of questions, most were on git as I was struggling to rebase my branch off of development and merging with development instead of master. He happily helped me and in some cases he told me to problem solve it on my own, which I successfully did.Day 4: I have to make two components interact with each other and from the codebase it wasnt obvious to me that they are parent-child. Even though I dunno Redux, I thought that is possibly the only way to implement the interaction. I ask the lead dev about it (previously he told me before my first day that he will give me a crash course on it) and he said well jump on a call soon (we work remotely) - so he offered to help.He sees the problem and lets me realize that they are parent child, and so I can just pass props (no prop drilling required). I had to pass the prop from child (written as function) to parent (written in class) and I got a bit confused and asked him what will be the best way to tackle it - he says `${myName} thats very basic`. I realize its probably a dumb question and asked him not to worry about it and that Ill figure it out.NOTE: I know Im expected to know React, which I do and would have solved this on my own - just got slightly confused and since we were already on a call and I have been told before that I can ask for help whenever I need, I went ahead and asked it. As you know I was initially expecting some Redux topics to get knowledge on and how it has been used on the codebase.Day 5: Starts with a meeting, where the CEO says that the lead dev said that I ask a lot of questions that I can just google. The lead dev said I asked a very basic question and that I dont know how to pass props. Funny thing? - the feature I worked, I literally made an extra component myself to keep my files cleaner. The component is of course reusable and can be used throughout the codebase. So I respectfully told him that if I didnt know how to pass props I couldnt have created the component and used it.He didnt reply to that and just closed of saying I wouldnt be a good fit. He further added something like, Ik I said, you can ask for helpask questions. Well that isnt quite true. I was shocked.P.S: Worst thing about this experience? The first 3 days of my work, I had 3 interviews (one with a very big company). When I got the job, I cancelled interviews with all 3.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_vykch4","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/vykch4\/my_first_day_in_office\/","DATE":1657670400000,"PLAIN_TEXT":"Been working remote for 2 years, and had my first day in office.I couldnt find parking so was late, then got lost trying to find my desk.Finished my work in about 2 hours, so spent the rest of the day trying to find something to dopretend to work. Realized bathrooms were very busy and very open, making it hard to pee.Started to feel like shit the last 2 hours, got home and tested positive for covid. Now I never want to go in office again.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_qv7shz","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/qv7shz\/update_just_got_fired_what_to_do_next\/","DATE":1637020800000,"PLAIN_TEXT":"Hey everyone! In my [last post](https:old.reddit.comrcscareerquestionscommentsoz52wwjust_got_fired_what_to_do_next) I had been fired for a very minor company policy infraction at a larger company. As an update, I found another job pretty quickly with a small company, but that turned out to be kind of a nightmare. It motivated me to hit the books and study hard for another round of interviews, which helped me land a great new gig! I went from making $110k TC at the company that fired me to $205k TC at my new gig! And its all remote, so I dont have to move! Its been a sucky few months, but everything worked out in the end. So if you ever find yourself like me and get fired unexpectedly in the future, hopefully you can take inspiration from my story!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ih1coi","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ih1coi\/i_finally_got_out_of_the_kitchen\/","DATE":1598400000000,"PLAIN_TEXT":"Ive been working in kitchens my whole life. I was expelled and dropped out of 4 high schools. I had a 9th grade education until I was 25. Ive been in college(didnt finish, gotta work) or self-studying ever since. I turn 30 in January...I just got a job as a Computer Technician.Im not a Software Developer yet...But I finally got out of the kitchen.No more asking to use the bathroom. No more being on the political whim of opinionated and equally uneducated managers. No more grown ass men (or young assholes) making inappropriate comments about underage coworkers, race, politics, or drugs; Im an internet edgeboi, but even I know when to stfu and focus on my work. No more 135degF(57degC) kitchen with face masks. No more broken air conditioning that corporate cant fix or turn on remotely.I get to swap RAM, flash BIOS, and do general stuff a pc user with a sliver of curiosity could find out...But Im out of the kitchen.Im touching computers for a living. Thats all I can ask for right now.rants over...go code something!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_j810n5","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/j810n5\/big_m_is_letting_employees_work_from_home\/","DATE":1602201600000,"PLAIN_TEXT":"From now on, all Microsoft employees can work from home for &lt;50% of their work week or 100% if approved by their managers. Employees who opt for the permanent remote work option will give up their assigned office space, but still have options to use touchdown space available at Microsofts offices.Employees will also be allowed to relocate domestically with approval, or even seek to move internationally if remote working is viable for their particular role. While Microsoft employees will be allowed to move across country for remote work, compensation and benefits will change and vary depending on the companys own geopay scale.[article](https:www.theverge.com202010921508964microsoft-remote-work-from-home-covid-19-coronavirus)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_j2ilvu","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/j2ilvu\/just_so_were_clear_working_remote_during_a\/","DATE":1601424000000,"PLAIN_TEXT":"I saw a highly upvoted post where the theme of the post seems to be that, people enjoyed working at home in the beginning of the pandemic but now they feel depression, loneliness, lack of motivation.Im someone who not only greatly enjoys working from home, but also benefits from it personally due to having a newborn baby in my life.But despite the fact that me enjoying working from home is somewhat biased, you should understand that right now youre not working from home because of company policy or because rent is expensive for an office. Youre working from home because we are in the middle of a pandemic due to a respiratory disease carrying virus that has officially killed over 1 million people (probably more, realistically) that has no vaccine yet.This means:1. You typically cant go out as much as you could during normal times.2. You dont see your friends as often as you normally would.3. A lot of movies, TV shows and sports events have been cancelled.4. People are terribly sick or their close family or friends have died from infection, therefore people are just generally down.5. Fear has a huge impact on your well being.6. A lot of slowdown in the economy, and the economy health has a direct impact on overall social morale.7. Civil unrest because people arent happy to be locked down or shelter in place, this civil unrest leads to political and social unrest and protesting.8. The gym is considered a super spreading area, so a lot of people are going to the gym less and working out less. Physical exercise has a direct correlation with reduced depression.9. Even if you have vacation days, borders to a lot of countries are closed so most people arent traveling and instead just saving up vacation and not taking days off since they dont have anything to do with the time off.During normal times, if you were allowed to work remote, you would be able to go to the gym, visit your friends, have parties, go to the movies, your favorite movies would actually be released, your favorite businesses would be open and healthy, youd be able to eat out with your friends, socialize, go on dates, be in large crowds...Right now, you are working remote as a form of staying SAFE, but not as a form of finding a healthy alternative to working in an office. This would be like hating basements because youre stuck in a basement during a tornado.A lot of companies are taking solace in the fact that the pandemic has led them to realize how unnecessary expensive large offices are. And how wasteful they are. Time you spend on trains, buses or stuck in traffic is time you dont spend resting, enjoying your life, being with family or even just working while your energy is high.Companies are hoping that they can find some new way of normal work life after this pandemic that is surviving and strong, something that wont just shut down if another pandemic happens. When the vaccine comes, I encourage you to try working from home again when times are normal and you have a normal social life.I promise you, youll enjoy it a lot more when its not just work from home but also stay home as much as possible so grandma doesnt die.If you are feeling depressed during work from homepandemic precautions: I encourage you to please do yourself a favor, take a day off and try to go somewhere where a crowd isnt large and try to relax and enjoy yourself for a day. Your mental health should come first over any decision about efficiency or saving your vacation for when the pandemic ends. I took a week off even though we cant really travel and I played my favorite games, had a picnic on my balcony, went for a walk in a mostly empty park with my dog. I felt really good when it was over even though I didnt travel. ","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_okdb1o","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/okdb1o\/update_something_i_have_to_get_off_my_chest\/","DATE":1626220800000,"PLAIN_TEXT":"This is an update to a post I made about 3 months ago: [https:www.reddit.comrcscareerquestionscommentsmq2q2msomething_i_have_to_get_off_my_chest](https:www.reddit.comrcscareerquestionscommentsmq2q2msomething_i_have_to_get_off_my_chest)One correction on that previous post: hes definitely mid-level, not junior. While hes only been with our company just shy of 2 years, hes got about 8 years total industry experience. I apologize for incorrectly listing him as junior.I went on my 2 week vacation about a month ago. Like I said, I was completely incommunicado for the duration and it was the absolute best thing for my health, both mentally and physically. I spent the first week hiking and camping, and the second just home taking care of little projects that I had been neglecting.When I got back, all hell broke loose. Apparently there was an MQ issue that caused customer updates to not make it into our system for about 4 hours. Before I left, I created a detailed wiki entry that detailed how to deal with this exact situation, including screenshots and step-by-step guidance on how to resolve the issue. I also sat down with him and went line by line through the wiki and validated that he had the appropriate access to the various systems needed to resolve the issue. I also stickied a link to the wiki, which contained various other troubleshooting steps for other common issues, in Slack. He apparently forgot all about it and eventually someone from the Ops team did a search, found the wiki, and resolved the problem in about 5 minutes.But thats not all! There was also an issue that caused one of our test environments to go down. Instead of taking a look or maybe engaging the Ops team to resolve, he just ignored it. Problem is, the CICD pipeline wont deploy to higher environments unless the lower ones pass, so not only was code not deployed to UAT, but we missed a production deployment deadline. I also looked in JIRA and no progress whatsoever was made on any of his tickets. Im not sure what he did in those 2 weeks, but working wasnt it.I had a meeting with my boss and he wasnt pleased. They tried messaging me on Slack, sending me emails, and calling me, but again I was completely off the grid. I explained to him everything I did to get this developer up to speed, but it fell on deaf ears. He mentioned this was going in my performance review and that Id be docked on my yearly bonus.That last bit flipped a switch in my head and I decided to reach out to an old recruiter friend and he quickly got me in touch with another company. Its larger than my current outfit and offers better pay, benefits, and perks. Oh, and I can also work remote 100%, which is great because the company is 2 states away. Im putting in my 2 weeks notice this Friday. I dont want to deal with this management and this situation any more, and frankly, I dont have to.Thank you again for allowing me to rant again.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_st6l7f","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/st6l7f\/lpt_working_remote_jobs_from_anywhere_and_on_the\/","DATE":1644883200000,"PLAIN_TEXT":"Thats it. I just wanted to tell people who are dreaming about working on the beach that in almost all cases it cant be done consistently. In order to property work from home, you need a proper desk and chair, good internet connection, etc.BTW I prefer remote work to on-site but Im talking about realistic expectations.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_i0kdyd","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/i0kdyd\/remote_work_is_a_nightmare_for_junior_employees\/","DATE":1596067200000,"PLAIN_TEXT":"Its very hard to get mentorship and learn from senior people if you are a junior who has a ton of questions when starting out their career and dont have experience handling a project end to end. Every question or doubt you have in mind now has to be either a meeting or a ping which can get annoying to the other person if done frequently over the course of the work day.I am a junior who came into the workforce less than a year ago and finding it very hard to cope with deadlines as I am given new technologies to work with little mentorship.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_t5tc7k","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/t5tc7k\/the_red_flags_i_saw_at_my_job_screening_yesterday\/","DATE":1646265600000,"PLAIN_TEXT":"Went to an in person job interview for a software developer position. It was a software consultant company, but they also do in house development and this is what the position was for. While my interview wasnt stellar (Ive been babied by my current job having me do non performance sensitive python dev and graph database stuff and all the questions were about sql, what does rest mean, object oriented programming definition questions, and design pattern questions). But I noticed a lot of red flags. Thought Id share them. For starters, they emphasize that ramp up will need to be done on personal time. Like, talked about that for ten minutes. Gave me sceneries where I had 12 hours left of work do do by tomorrow with only 4 hours left in the day (where the correct answer was to stay until it was finished). No option to work remote, in office every day. They kept emphasizing that the single most important thing is product being finished by deadlines. They said were working as fast as we can all of the time, so tensions are a little high, but its good, it makes you sharper. We have a very diverse team here. Many of our devs are from India and Mexico and they had teams IN India and Mexico. To me that says we wanted as much cheap labor as possible. They have 45 people working on a single project. Theyre split into 6 teams but all the teams are identical. Theyre just split for communication lines. Before I even made it back to my car I knew 3 things: that they were going to offer me the job even though I had less .net experience than they wanted, that they were going to offer me about 10k lower than the listed salary for the position, and that they were going to cite my inexperience and act like youre lucky, were making an exception and hiring you anyway. Within 3 hours all 3 of those had come true. Obviously Im going to turn them down","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ofa0of","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ofa0of\/i_got_brain_cancer_should_i_give_up_my_internship\/","DATE":1625529600000,"PLAIN_TEXT":"I was supposed to intern at a FAANG company this summer, but I recently found out that there was something abnormal in my brain MRI result. I postponed the internship to the latest possible date and got a surgery to find out what it exactly is. Turns out, I have cancer at the age of 21. One consolation in sadness is that the tumor is very small and they think that the whole chemo process would take about only 4 months. However, I wont be able to meet the starting date for the internship anymore. I worked really hard and have been looking forward to this.... The question is do I tell the company about my situation honestly and ask if they could save me a spot for next summer, or do I just forfeit it? Im worried that telling them that I have cancer would give me disadvantages when I try to get a full-time job. Does anyone have any ideas about this? Thank you..&amp;#x200B;&amp;#x200B;EDITED : Hey guys, I dont know how to show my appreciation for all the supportadvice and heartwarming comments.. Never have I ever thought I would get so much love and comfort from strangers on Reddit. I couldnt reply to every comment since there were too many, but I did just finish every single one of them and gathered some commonly asked questions to answer!&amp;#x200B; Dont do the internship, take care of your health first  I wont be doing the internship during the chemotherapy. Of course, health comes first to me as well, I just wanted to decide whether or not I should tell them about my cancer and ask for a spot next year, since I thought maybe telling them about my cancer could affect me later on when I look for jobs. Cant you work during your chemo?  Im currently outside the country where my family is, and Ill be getting the necessary treatments here. So even if I wanted to, I wouldnt be able to... unless they allow remote working from outside of US. Props to op for making this fake sob story up  thanks How did you know you had cancer? any symptoms?  Lots of people were asking this. I didnt feel too comfortable sharing this at first, but I got so much support and advice from you guys so... My tumor is near the pituitary gland, and I was suffering from Diabetes Insipidus, where you drink a shit ton of water(crazy thirsty) and pee every 20-30 minutes since your brain doesnt release the hormone that prevents diuretic action.(ofc I didnt know what it was for like 10 months) I got blood tests and urine tests several times, but everything came out normal. The doctor could suspect that it is Diabetes Insipidus only after I brought it up. Then, Brain MRI and PET scan, and biopsy to find out what it is. Did you remove the tumor during the surgery?  No, the surgery was solely for biopsy. Do doctors think youre going to make a full recovery?  Yes, I was diagnosed with Germinoma, with a very small tumor size too. They think it would take 2-3 times of chemotherapy and 6 weeks of radiation therapy. around 4 months of treatments Work on side projectslearn if you can  I thought I was finally done with side projects after securing an internship but Ill try to work on side projects and do more leetcodes.. Plus you now get to look like Jeff Bezos  Fuck. Beware of the laws around cancer and disability  This is probably really important to know.. Does anyone know where I could find more information about this?Anyways, thank you so much everyone once again. Also, I really appreciate everyone who messaged me to give helpadvice. I just emailed the company to connect me to an HR person so that I can stay in touch with himher to discuss some health issues. Im a young healthy big boy, and like many of you guys have said, I will kick this tumor shit out of my brain ASAP and keep you guys updated. Feel free to ask any questions about cancer or whatever here and Ill be more than happy to answer them. Sending love and huge hugs to everyone!!!!!!! ","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_tbr4id","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/tbr4id\/i_was_not_prepared_for_how_sad_i_would_be_to\/","DATE":1646956800000,"PLAIN_TEXT":"I got an offer at a new company that had a much better salary, and full time remote work, with much better ratings for senior management. I was so ready to leave my current job for this new one, and its the right decision. Even though senior management is the leading factor to me leaving, I was NOT prepared for how sad I was going to be leaving my team. I still havent reached out to my unofficial mentor as I know that will be the hardest goodbye. Just wanted to share this that its ok feel sad about leaving for a better opportunity, youre not making the wrong choice, youre just moving on in life. Goodbyes are hard.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_sq1g5z","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/sq1g5z\/dear_recruiters_if_this_is_you_stop_we_have_the\/","DATE":1644537600000,"PLAIN_TEXT":"TLDR; if you want to not get ignored by talented engineers include at a minimum a pay band in your email or the company and or its mission and what we might be working on.Stop reaching out to people with more than a few years of experience who are already employed with a role with no actual information about what your role will be supporting and at least a ballpark on pay. Believe me when I say this, we get several invites a day to apply and or interview with someone. Like you, we dont like having our time wasted. We already have a job and the experience youre looking for. You do not have the leverage, we do. Youre going to get ignored by talented engineers.Here is an example of what not to do.Hey Developer,I have an opening for a .Net developer which is looking to hire ASAP! The position is a fully-remote, 3-6 month contract with a 40hrweek guarantee!The ideal candidate will have: 5+ years .Net 3+ years AWS 2-3+ years Angular 3+ years sqlserver, postgres 3+ years git 2-3+ years LinuxIf this sounds like you or someone you know then please dont hesitate to reach out!PS DM me if you want me to connect you to this guy. I dont want or need any referral money. Also saw a few comments shitting on recruiters. That is not my intent, dont mix me or anyone who up voted this post with that crowd. I respect your job, and some of you are awesome and really try and make a positive impact other than your commissions. To the good recruiters out there, this is clearly not a rant aimed at you.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_v5mxpa","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/v5mxpa\/i_was_just_hired_as_a_sr_dev_with_the\/","DATE":1654387200000,"PLAIN_TEXT":"Im pretty frustrated. My recruiter and the team told me this would be a remote position, and I turned down other offers that were definitely fully remote. Its all at-will employment though so they can just tell me to take a hike if I dont play ball. Additionally, the only office space they have is 40min away driving, and I dont have (nor want) a car. I need to talk with them tomorrow to find out what they expect, but going to an office 3 days a week is not going to work for me. I had a second offer from a company that is definitely fully remote. Is it out of line for me to email them to see if that position has been filled? What would you do?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_kxok9g","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/kxok9g\/finally_got_an_offer_yeayyy\/","DATE":1610668800000,"PLAIN_TEXT":"Graduated last year with a CS degree. July 2020 to be exact.Since then till today, I have applied to 370 jobs and HECKIN FINALLY got an offer today! God is great! I guess I got a total of 10-20 interviews. Reached till the last round of 3. Make a list of all the companies you apply to! I mainly used Glassdoor, Indeed and LinkedIn to find jobs.A little about me: Im based in Vancouver, Canada and the job is remote. Which is great because I cant afford a car. Ive no past internshipwork experience. I learned React because I like front-end and also coz i needed to fill my resume with projects lol. Learned Postgres as well. Refined my skills on data structures and algorithms.It was inspiring to see so many of you get jobs, it really motivated me that if I just keep trying my day will come as well, and all thanks to Almighty it did. Fully agree that its just a numbers game and you need to just apply, apply and apply AND constantly update your resume if you keep making betterimpressive projects + improve your coding skills. Also make your resume one page. Highlight key features. Make sure recruiters can spot all key things on your resume with one easy glance. If youve LinkedIn Premium try messaging recruitersCEOs (yes I even messaged CEOs lol, youve NOTHING to lose - worst case they ignore you). One CEO to my surprise, was even kind enough to get back to me. My prep days these last \u00105-6 months since I graduated was 90% working on projectslearning new tech stackspolishing resume and 10% applying to jobs. Had loooong days, working almost the full day 09301030 am till 7-8 pm. After that I relaxed, had a chill dinner and watched Lost till I go to bed at 111130 pm.A little nervous tho because I really wanna excel at the company, do well and contribute a lot. So if any of you have any advice on how to not feel nervous during the initial days and be confident - Ill appreciate it!To everyone whos still applying and looking for jobs, fam YOUR DAY WILL COME GOD WILLING! Keep working hardkeep polishing your resume and youll get that job!Like youre reading my success story today, Ill be reading yours soon! ;)PS: if possible and if youre religious try to pray, it keeps you humble, calm and peaceful.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_qwthbl","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/qwthbl\/i_did_it_i_finally_found_a_dream_position_no\/","DATE":1637193600000,"PLAIN_TEXT":"I feel this type of obligatory post for this subreddit, so here it is. A bit about myself, I returned to school for computer science in my 30s. I came from a healthcare background where I worked in the realm of physical therapy. I started school in 2018 and finished in 2021. Due to some circumstances, I could not get any internship experience, and I knew this was going to hinder me.The process was tedious. There were 400 or so job applications. 200 LC questions, which I actually enjoyed and will continue to do them. I worked on three different side projects. I received plenty bunch of We love your personalityenthusiasm, but we need someone with more experience. I eventually reached a point of stopping caring, or I was numb to the generic email rejection. When I achieved that mindset, things were much more freeing.In the last few weeks, I casually entertained the hiring process with different companies and attended career fairs. In one career fair, I had some was quick banter with someone, and I was invited for an interview a few days later. After that, I offered me an SRE position. I conditionally accepted it. They said its fully remote, FT, full benefits, and unlimited PTO. There is room for me to move laterally and vertically.They asked about my salary range, and I said Id need to get back to them since I didnt research this topic much. After some research and discussion with other people in the field, I concluded on $80000 - $85000. They agreed.A couple of days later, I got another call from a company that I interviewed with, and they offered me a $100000 full-stack role, but they have a hybrid working model. I asked them to give me a few days to decide.With the help of this subreddit, with the notion, It is okay to ask for more money.  I decided that I would ask for a small salary bump from the original company. I asked them for $92500, to which they agreed.Yes, I know this isnt FANG money, but I dont care. The position is entirely remote, with good benefits and good PTO. Furthermore, with no internship experience, Id be a bloody fool to say no. As well, I confirmed this is more of a SWE engineering role that, DevOps, so Ill be writing code, which Im excited forThe silly thing about this whole interview process for this company. . .I wasnt asked a single LC question.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_hfrlg1","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/hfrlg1\/just_a_friendly_reminder\/","DATE":1593043200000,"PLAIN_TEXT":"The majority of us are currently working remote, and some of our companies have even begun hiring again. With this in mind, its important to note that written communication is inherently received with a negative bias.A simple message over Slack, especially to a new employee or employee in training, may be received with a negative tone. For example if a new Associate SWE asks you question and you reply with just a no or ok, it may not be intentional negative but could be read that way.Ive seen this quite a bit with newer SWEs where they start off by asking a lot of questions, but if their mentor is very short with them, the questions start to slow down as they feel like they are negatively responding to them by being short.Just a simple reminder to us all!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_nork5y","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/nork5y\/i_dont_wanna_be_an_asshole_but_ive_had_it_with\/","DATE":1622332800000,"PLAIN_TEXT":"So my company is fully remote right now. Recently (3 months ag) my boss, a smart and chill guy hired 4 new Data Scientists.He wanted capable junior DS persons who would be starting a role where at least 1 year prior DS experience was the minimum requirement.This new guy S, from day 1 annoyed me.I was demoing some stuff I spent a couple of months working on and his commentary throughout my whole demo was saying things like, Oh yea, this looks easy or Nice work, yea I can definitely build something like this and fix those bugs you mentioned.My initial impression was that he was gonna be a hot-shot show-off and I was fine with that once he did his job. I knew once he started, hed run into the same issues I did and learn to not prematurely say something is easy.Well, he was put on a different project for the first 6 weeks and my friend had NOTHING but complaints about him.Saying his work ethic was horrible, how hed disappear for entire days and then say, oh my slack wasnt working etc.My colleague complained to the manager who gave him a stern warning and deducted pay for the missing days.I assumed hed buck up after that, however for the last month hes been assigned to work with me.I have 3 other employees (2 from his batch that joined 3 months ago) who work under me.This guy, wow its ludicrous how annoying, inefficient, and how poor his communication has been.I ask for daily updates, not even a meeting every day, just a tiny update. Ive gotten 2 in the last month.I called him Friday after getting no updates since Tuesday. His response was, Remember I told you slack doesnt send me notifications, so I didnt know I needed to update you. So yes, Im still working on that API, i think I found a way to do it now, but getting the info I need is proving problematic.Mind you, he had a month to create a simple API that connected to a few a other APIs to collate, clean and standardize some data we needed. It should not take more than a day to do this.Its been a month officially and he still has nothing to show expect ONE simply notebook of him using a similar API that someone already made. We can use that API but its not free, so I asked him to make it for us.What do I do? Ive sent him resources, tutorials, gave him instructions on how to do it. I dont get updates, I dont get questions......all i get is him snickering about how hes making good progress.&amp;#x200B;Now, its partially my bosss fault for hiring him as my boss didnt want to do coding interviews. He said he trusted that someone who did a full CS masters Data Science degree would be capable enough.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_mu0ny2","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/mu0ny2\/candidate_if_you_dont_provide_a_flexible_working\/","DATE":1618790400000,"PLAIN_TEXT":"My company has had major financial troubles since the pandemic began. So Ive slowly been looking for work over the past few months. My wife works too and we live well below our means and have a lot in savings so theres no rush. What Ive encountered is a lot of misleading job postings andor offers regarding working remote vs. in office post pandemic. For example:- Posts labeled as remote then in the description remote until after covid. Bait and switch nonsense. - Companies already back in the office for months, well before vaccines. 5 days a week in the office was expected even though they did well with people working remotely. - Companies offering flex between in office and remote during the initial interviews, but backpedal as you interview further- One company who said your entire team has to determine whether or not you can work from home that day. Yeah, because I want a committee to decide whether or not I can leave my wife home alone with a strange contractor who is working on the house that day. Fuck that. So some of these places I bailed early, and others I bailed after I got an offer and got the real truth in the final interviews. Their reaction was always the same, total shock that I would remove myself from contention or turn down an offer because I was unable to choose my working environment. Some even reached out to me twice and sent me surveys asking what happened (I never respond to these, they know already). Full disclosure, I just want flexibility to determine whether or not I want to be in the office that day, or remote, or full remote. Trust is an important part of any relationship, and right away if I dont have that trust from an employer than our relationship is already off to a bad start. I dont want to be treated like a baby andor lied to. Also there is a massive financial cost to consider with owning an extra vehiclegaswear and tearand above all time when commuting. That is a huge financial factor that I just cant gloss over as a candidate. So yeah, talented candidates are going to shop around for flexibility in the future and companies will either have to adapt or get left behind. Remote flexibility is not only the future, but the present in tech. What do you think is the future of employees who demand flexibility like this? Have you turned down offers due to remote or lack thereof?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_lwxadd","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/lwxadd\/does_anyone_else_not_want_to_go_back_to_the_office\/","DATE":1614729600000,"PLAIN_TEXT":"With vaccines becoming more readily available, it seems like many of us will be vaccinated by summer. Plus, my current company tentatively wants us all back by June.The truth is, I just dont feel like going back to the office. During the past year, we demonstrated our jobs can all be done remotely. A lot of companies seem to be going in the direction of 2-4 daysweek that we are allowed to work from the office, but thats too much even for me. I want the freedom to move around where I would enjoy.I dont see the need for my position to require me back in the office if we got so much work done in the past year and showed that collaboration can definitely be done over zoom instead of in person.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_t2tdrq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/t2tdrq\/thoughts_and_lessons_from_a_22_year_career_in_tech\/","DATE":1645920000000,"PLAIN_TEXT":"Ive been a professional developer for over 22 years now and thought Id share some of my experiences and knowledge learned over that time. Sorry its long, but you can skip to the important bits at the bottom.From the time I was 6 years old and played my first video game (Missile Command) I knew I was going to be a programmer. I didnt set out to make money; writing code was the only thing that made sense to me. So I went to college for CS. I graduated right before Y2K and got a job for 42K and moved to Austin. I know this sounds ridiculous today, but it was really good money. I was an excellent CS student (3.7 GPA) from a very good engineering school, and I interview well. Among my CS friends only my roommate was making more (49K). After a year I got bumped up to 49K too because salaries were going crazy! and they didnt want me to jump ship.Life felt good! I liked the company, and my coworkers were my best friends. I had a lot of shit going on in my life (marriage, divorce, other peoples mental illnesses, death in the family, etc.) and the job was very stable. I didnt notice for a loooong time, but the work really sucked. I was doing desktop development in C (notice the lack of ++) on a legacy app that was started in 1986. Eventually I got my life in order and I realized that Id already spent 13 years at a job I actually hated but hadnt realized, because it was the only thing in my life that made sense. I was making 82K a year at this point and had been promoted twice (note: this is a very bad sign).Id been playing around with JavaScript, writing little browser games, Greasemonkey extensions, etc., and I really liked it. I decided I should become a web developer. Deciding to do this is one thing; getting a job doing it is another. You can imagine how hard companies are fighting to hire experienced devs with zero professional experience for their entry level WebDev jobs. I studied and practiced and talkedinterviewed with two dozen companies over a solid year. Finally I found a startup-ish company that was willing to give me an offer -- the interview had zero coding so I aced it! Id been with my previous company for 14 years and again was making 82K a year. The new one offered me 85 (benefits were worse) and I negotiated to 90 (ALWAYS NEGOTIATE!).I walked into my new job at 8AM on day one and the dev room was empty. 30 minutes later another guy walked in. It was his first day too. An hour later our manager walked in. Turns out the other two developers had quit or been fired the previous Friday. Our manager was completely non-technical -- hence the zero coding interview. This sounds like a disaster, and it was, but it was also an amazing way to start. No senior devs to tell us not to do anything, so we did what we wanted, broke shit, fixed more shit and generally molded the tech stack the way we liked. After 3 years in that job I had been promoted to manager of the team, hired 8 devs and I was the big fish in a very small pond. I was making 120K.Thats when a big company expanding into the cloud space came knocking looking for experienced front-end devs. After some intense negotiations I jumped ship, and my TC hit 185K. Life actually was good. Now I was in a massive org with all the incumbent politics and nonsense that comes along with that. However, I was working with people much smarter than me (you never lose imposter syndrome folks) and had an amazing manager, and I actually felt pretty confident in the work I was doing for once. Our stock almost tripled over the next couple years and I got some good raises and my TC hit 235K. I got promoted to Staff engineer and expected the big money to finally come in. I got a 10K raise, but refreshers were piddling. Id vested all my initial stock and my TC dipped back down to 220K.In December I realized that while this company had been paying top of market when I started, the market had moved and they werent near the top anymore. Corona and fully remote companies had changed the game and salaries were insane. I started interviewing in January with a mix of late stage unicorn startups and some bigger companies. I could get my foot in the door with anybody now (except Amazon who just rejected me outright without even a phone screen lol). Google and Meta were calling me. I could afford to be picky. I spent my nights and weekends in January doing some LC and more studying JS fundamentals. It sucked, but it was worth it (although I probably studied too much in the end).This week I accepted an offer for 385K TC with a company that ticked all of the boxes for me (pay, WLB, low-stress, room to grow, some namebrand status) despite the fact that I got kinda down-leveled. For a tier-2 location (Austin), Im at the very top of their pay scale which made up for that. For 22yoe this isnt amazing these days, but I only really have 8 years of relevant experience, so it still feels pretty good.Lessons and things I wished Id known from the beginning: Dont stay somewhere out of loyalty or because you like your coworkers. You can still be friends with them. Dont be afraid to switch career pathsspecializations if youll be happier or more interested in the work. If you arent getting promoted at least every 4 years something is wrong. Change yourself, your group, or your company. Nobody values you more than the company that doesnt have you. Job hop if you want to make big bucks. Everything is negotiable. Be a hardass in negotiations and never take the first offer, even if its more than you expected. If you dont feel comfortable, pay a negotiating service like Levels to help you. Everything you do in your free time can help your career, so never stop learning and playing around with new technology. Youre going to have a lot of setbacks, and fail a lot of interviews. Try not to get discouraged, learn from the experience and try again. Most people are average. Half your co-workers probably think youre the guy who knows everything. Dont let imposter syndrome hold you back.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_kbrhxz","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/kbrhxz\/i_made_a_database_of_software_remote_jobs_across\/","DATE":1607731200000,"PLAIN_TEXT":"All jobs are free listings, none are payed to promote.Link: https:remotists.comsubssoftware-engineering-remote-jobsI have been working on this since august as i was laid off due to covid. Still continuing to do it with some friends. I am thinking of adding a sort feature moving ahead. Apart from that, If there is any more feedback, do share. :)Thanks.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_epdkbd","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/epdkbd\/i_have_decided_to_give_up_and_just_be_happy_with\/","DATE":1579046400000,"PLAIN_TEXT":"I work as a Software Engineer at a scaling start up in San Francisco.Im single (unmarried) and living in the East Bay making $100k base, $125 total comp. I know it isnt much (many here will say its peanuts), but I get to work remote a day or two a week. There are perks like free food, we get to travel on occasion, and I like my coworkers. I also like the work and tech stack, and I learn more at my own pace.Ive been studying and leetcoding for over a year trying to get into any bigger, bestwell known company. Any of them.Ive gotten interviews, but its never enough. I know how to code, but I fail their challenges.So Ive recently decided to give up and just be happy with where I am. Im coming up on a year at my current job in a couple of months and may get a raise. Im just tired of the anxiety and the rat race. Im tired of leetcode. Im tired of the gamble I take with my self esteem every time I take a chance with these companies.I do okay for myself and I have a simple life. I dont spend much, so I dont need much. My happiness is worth more than this never ending stress... Where does it end?Does anyone else feel like they are getting interviews just to fill the interviewers time? I honestly feel like most of these people know if they want to hire you before you even go in.Anyway, thats my rant. I just want to know if anyone else feels this way. Thanks.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_i3n1cy","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/i3n1cy\/name_and_shame_epic_systems_for_unnecessarily\/","DATE":1596499200000,"PLAIN_TEXT":"Just as an FYI to anybody looking into working here:The healthcare organization Epic Systems is pushing over 2,000 software developers to be back on campus by August 24th, and will have all of its 10,000 employees on campus by September 21st, even though many of our employees have successfully been working remotely for the past 3 or 4 months. Anybody at increased risk for COVID will have to be back by November 2nd.They did a recent [interview](https:www.youtube.comwatch?v=EwQCVIXmJok) with CBS on this recently, although I have no idea why they agreed to this.Honestly, before this COVID response I really enjoyed my time at Epic. The tech stack was a bit outdated, sure, but I was given lots of responsibility and was given lots of chances to grow. Unfortunately, the companys push to have its employees work on campus (for the sake of culture according to our CEO), combined with the fact that this increases the risk of a COVID outbreak in Madison, has made me lose a lot of respect for our company as a healthcare organization.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ohcowe","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ohcowe\/take_stories_in_here_with_a_grain_of_salt_with\/","DATE":1625875200000,"PLAIN_TEXT":"Theres many posts in here about how people have great qualifications but cant find a job, causing everyone to circlejerk about how bad the market is, and vice-versa for people who find jobs with minimum qualifications. The problem is that little context is given, and these posts skew readers attitudes towards the industry in harmful ways.For example, I know someone who on paper looks amazing: 3.8 GPA in Computer Science BS, Computer Science MS with a good thesis project, three semesters as a tutor, side projects, etc. However, its been 11 months since she graduated and shes unemployed, despite having applied to hundreds of places.If she posted on here, everyone would think wow, the job market is horrible. The truth is, she cheated through most of her classes and took the easiest electives possible, she was a tutor for a class where no one showed up to tutoring, and her final masters project was part of a group where she did minimal work. She has minimal to no work ethic, has turned down interviews because she did not want to get up too early, etc. She doesnt want to do any leetcode or prep because it is irrelevant to the job, but its obvious to people who know her that it is out of laziness.If I were to hear all of her stats in a vacuum, or a reddit post, Id be impressed, but it doesnt reflect reality at all. Some people are just lazyincompetent, and everyone needs to stop blaming the job market when unemployment is at a huge low. Ive seen posts on here where almost everyone agreed with the OP that the job market was terrible, not even entertaining the remote possibility that the OP was just not good at CS. Everyone I know with a good work ethic and who can code well has a decentgood job, no matter their GPA or college.The point of this post is that many stories on here should only make you question the posters capabilities, not the job market, and that you should not become disheartened from the posts.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ju6qgt","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ju6qgt\/learnings_from_a_successful_cs_career\/","DATE":1605312000000,"PLAIN_TEXT":"I wanted to counter some of the selection bias on this sub by telling a bit about what I consider to be a successful cs career.A little about me Went to an OK school (uva undergrad), got OK grades (2.95) Never ground leetcode Applied to only a few jobs after school, nothing crazy. Entry salary was 50k as a new grad at a no-name government contractorOutcomes several years later: 300k total comp 250k in the bank  investments 100% remote position (even before covid) Own a home in Santa Cruz county. Early employee at a tech startup which was acquired recentlyThe prevailing view on this sub seems to be that in order to have a successful career you need to: graduate from a top tier school with a high gpa get into a big-n, unicorn, or fintech company with 100k base salary directly out of school Grind leetcode all day until you can do hards without thinkingId like to provide my career as a counter-example, which doesnt seem too rare among most software engineers that I know.My learnings: Start small and work up. Software companies want experience first, not necessarily good grades or algorithms chops. Since its your work history that stands out, work on that first. Sure, apply to google, but also apply to that non-tech shop that needs software engineering. Stick around long enough to learn something before moving on. When you are done or if your wage is stagnating, apply somewhere else. Lose the ego and be friendly. Learn to work well with other people. My best references now are people Ive worked with amicably. Improve yourself over time. If you arent learning what you want to on the job, learn about stuff out of the job. Always be learning. If you arent learning at work, go to tech meetups, use online courses, and hack for fun. If you can, go back to school. Pick up a Masters degree and specialize in something you are _interested_ in. At some point, work at a small startup, and really invest your time and energy. You will have significant equity, which means you will have a chance for a large payout if the company is acquired, and the harder you work the more value you are creating. Do your diligence to find the right company for you: good, savvy leadership, in a promising field. This is a gamble of course, but even if the company goes under, its an incredible learning experience. demonstrate your value, and draw on that to ask for what you want. Get involved in projects, and be do your best to be integral to their success. Another way to demonstrate value is to apply elsewhere and get offers. Remember once you have some experience, you will be in much higher demand. If you can demonstrate value, you can ask for things you want for your career, e.g. cooler projects, better pay, better title, better benefits, remote work.This has been my experience. Hopefully it gives some hope to other people who may feel like their grades or resume isnt stellar. Tldr: get any job programming, do awesome at it, get better yourself, jump to better jobs every so often, and build your resume.Edit: a lot of people are asking about timeline. I graduated in 2006. I realize this may change the tone of my post for some, as the tech job market has changed somewhat since then. I hope that the pointers are helpful anyway!Edit: formatting","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_sqsojw","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/sqsojw\/linkedin_took_me_from_83k_to_133k\/","DATE":1644624000000,"PLAIN_TEXT":"Im studying CS at a large state school in the Midwest and Im graduating in May. Ive had 4 SWE internships at 3 companies (1 small business, 2 non-tech F500 companies) in my hometown, and I have a high GPA. Ive participated in hackathons throughout my time in university and I have a few decent personal projects to show for it. Im staying in my hometown in the Midwest after graduation, so moving elsewhere in the US was not an option. Last summer, I interned at a non-tech F500 company in my hometown. I really enjoyed working there, and they offered me a job at the end of the summer. Although the compensation was below average (67k salary + 6k signing bonus + 15% annual bonus = 83k total compensation) according to my schools career services department, I really liked the people I worked with and I thought I would get promoted quickly. They had a good IC track for a non-tech company. Ive followed this sub for a while, and I decided to follow some of the common advice for my LinkedIn profile. I changed my profile picture to one of me in a t-shirt while I was on vacation, my banner to a local landmark in my hometown, my title to Aspiring Software Engineer, and my about section so it highlighted my technical interests, experience, and coursework. I removed all of the bullshit in my skills section (bye bye C from low-level programming, Ruby and Rails from my web apps class, and HTML because I already have CSS and JS in there). I also filled out the rest of my profile thoroughly. I occasionally got messages from recruiters for companies in the Midwest, but none of them were particularly enticing.Then, I got a message from a tech company about a fully remote position. I checked levels.fyi and saw that I could be making 6 figures! I went through the phone screen, hiring manager interview, and two technical interviews. I studied for technical interviews for two days by reviewing the Wikipedia pages on basic DS&amp;A and completing around 20 LeetCode easy problems. The hiring manager said the technical interviews wouldnt be too intense and that informed my studying methods. Yesterday I accepted a job offer (103k salary + 10k signing bonus + 12% annual bonus + 7.5k RSUs per year = 133k total compensation)!TLDR: I had a non-tech F500 SWE job lined up for after graduation, but I got a way better SWE job at a tech company because a recruiter reached out to me on LinkedIn. Use tools like LinkedIn and levels.fyi to your advantage!EDIT: Perhaps some of that LinkedIn advice is not from this subreddit. I searched around and cant seem to find some of it. Heres an [article](https:www.linkedin.combusinesssalesblogprofile-best-practices17-steps-to-a-better-linkedin-profile-in-2017) with some of the advice I mentioned.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_xy0kfl","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/xy0kfl\/landing_a_job_has_nothing_to_do_with_technical\/","DATE":1665100800000,"PLAIN_TEXT":"Piggybacking off [the discussion in this post](https:reddit.comrcscareerquestionscommentsxxg9agnow_i_understand_why_it_took_me_so_long_to_land) to give some advice to those frustrated with landing an internship or full time interview. ___First, a bit of background:1.\tWent to a medium sized university with a mediocre CS program2.\tLanded an internship at a large non-software company in their IT department from going to a career fair3.\tUpon graduating, had an offer from Amazon for SWE and an offer from the company I interned at, among others not worth mentioning4.\tTook the cushiony non-software company position and couldnt be happier. Years later, Im very involved in our college recruiting process. Based off the above, I would like to think that Ive figured out the important pieces to landing an interview relatively well. The biggest advice I can give is as follows:Landing an InterviewAs pointed out in the aforementioned post, most job openings have hundreds of applicants, of which only a handful get interviewed. Usually those in the handful have referrals. A referral does not necessarily mean your friend or family member works at the company. The most common referral, in my experience, is one where a recruiter got a positive impression of a candidate and passed their resume along with a positive note. -\tGo to career fairs, events, clubs, etc. Even if you hate meeting new people, find a way to get yourself out there. Quantify it, gamify it, whatever you need. -\tAt career fairs, have copies of your resume to hand out, and use the resources on this sub and elsewhere to make your resume stand out. -\tI feel like I shouldnt have to say this, but PLEASE, take a shower and put on a business casual outfit for any networking. Its astonishing how many unpresentable people we see at career fairs. If you cant put in the effort to present yourself, we damn well wont be hiring you. -\tSmile, make eye contact, stand up straight, speak with confidence. Many take these things for granted as they come naturally, but for those that they dont, practice these things. -\tFollow up! If you met a recruiter, gave them your resume, and had a quick convo, reach out to them on LinkedIn! It puts your name in their head again, and shows your interest in the position. While most of these may seem obvious, the overarching theme is this: landing the interview has almost nothing to do with your resume, and everything to do with networking. I hate that its true, but I would rather hire a personable, outgoing, mid-tier student than a technical genius who cant communicate. Passing the InterviewOnce youve got the interview, youve already beat 90-95% of applicants (pulled that number out of my ass but still), so go into it with confidence.-\tIf youre remote, have your resume open. When answering questions you can refer to your experience directly on your resume, asking the interviewer to do the same. If you have my resume handy, position X mentions Y. In that role... This is huge, youre painting a picture of yourself and your experience, help us use the tools available to paint that picture. -\tSmile, make eye contact, stand up straight, laugh if they make a joke, share an anecdote where appropriate, etc. Most companies are hiring for culture fit, so rather than getting bogged down by the details, show that youre someone they would enjoy working with. -\tFor technical interviews: vocalizing your thought process is #1, so practice this. Also, if you dont know an answer, share how you would find it. In my Amazon technical interview I didnt get a working solution at all, and literally said if I was solving this for work rather than for an interview I would google &lt;exact query&gt;. I failed the technical interview, but still got a handsome swe offer because of the other things. -\tShow that you have a passion for tech. If you arent passionate about it and just want a paycheck, pretend. Hopefully this helps, and I will be glad to answer any questions! At the end of the day, there are countless applicants, many with great resumes, and many with awful resumes - the main thing that will set you apart is everything that isnt on your resume. Hell, the #1 candidate Im looking at right now has 0 relevant experience, but he was the most enjoyable to talk to, showed a passion for problem solving and tech, and showed hes eager to learn. Its the intangibles that count!Edit: I definitely shouldve worded my title differently - its not so much that you can be a great person with no technical expertise and land a SWE role. It is more so that the technical skills you build are your foundation, but that is the same foundation every other grad is building. The tips above are things that allow you to differentiate yourself from all the other qualified resumes in the stack. Also shouldve mentioned in experience that I interviewed with multiple FANG companies and countless tech-adjacentnon-tech companies during my undergrad. The Amazon role and my current role (which includes recruiting) were just most relevant anecdotally.Finally, this is just my advice from my experiences - by no means do I think this is all encompassing, but I hope it helps a student or two land a job!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_i8gkbg","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/i8gkbg\/if_an_employer_doesnt_have_a_remote_policy_after\/","DATE":1597190400000,"PLAIN_TEXT":"I have been doing some job searching and interviews off and over the past months and I am seeing a theme in my area: employers want you in the office 5 days a week after COVID is over. I just talked to a company whose entire office is working from home right now and their profits went up 11% last month. When I asked what their remote policy would be ifwhen COVID calms down they said you would have to be in the office five days a week.To that I say, fuck that. No one knows what the state of the US will be with disease and social unrest at that point. If you can get all the work done and actually have an increase in profit whats the point of having archaic remote policies? Why not have it flexible for those who want to be in office part time? Not to mention companies save money with having remote employees, there is less traffic and pollution, and there is less demand on Americas aging infrastructure.Im at the point where if there is no remote policy for companies that are already remote then they are not worth my time. It shows there is no regard for employees right from the start.Am I being unreasonable here?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_jsbmyq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/jsbmyq\/had_a_one_way_video_nterview_with_a_company\/","DATE":1605052800000,"PLAIN_TEXT":"Im a senior developer who lives out on the west coast. Ive currently employed but I have been looking for work because my companys financials arent doing so well. A few weeks ago a recruiter reached out to me about a remote job and it looked like it was a good opportunity. It was for a family run company that was located in rural Ohio who was just recently getting into the idea of remote workers.Recruiter was very open and honest and said this was an old school company. I thought I knew what that meant, but man there was a whole other side to that statement. So I had a few screening interviews with the recruiter and she told me that they wanted me to do a 1 way video !nterview (I have to format that word that way or else this post will be auto filtered out). For those of you that are unfamiliar, these are one of those shitty audition type !nterviews where you get asked questions and record your answer to the camera. There is no other person on the other side, so you dont get to learn anything about the company culture or anything. I was told to dress up for it despite it being in my own house, which again was weird as hell. So I shaved, put on a nice shirt, and did this thing in my own home.Recruiter got back to me the next week and said they werent going forward. She said the feedback was they didnt like your look or poise. Not my technical skills or my experience.... my look. I should point out that Im latino, and I have a latino name. This fucking INFURIATED me but I hid it from the recruiter. I looked up the towns demographics and its 99% white and the county went 80% for a certain presidential candidate. I didnt even think about any of this until I got the news that I was denied because of my look and poise.I know this topic can be uncomfortable, but its something I felt I should share. Im shocked that this kind of thing is still going on. Im not going to name and shame them in case I decide to escalate this, but I had to share. Have you ever experienced anything like this? Is this kind of an unspoken thing that people still experience in the Midwest or elsewhere? I would never expected this coming from the West Coast.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_nbki8u","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/nbki8u\/my_job_is_too_comfy\/","DATE":1620864000000,"PLAIN_TEXT":"Ive been a full time dev for 3 years in a non-tech company. Being one of the few developers my life is quite easy.I probably work a total of 30ish hours a week, fully remote and can come and go as I wish. Pay is pretty good but not big n level. I could essentially dick around 70% of my time. I also get a huge amount of research and self training time. I sleep in, no hard set hours, go for walks, basically I get my small amount of work done and the rest is an open book. No one tracks me other than my end result output which is very easy to meet.One sad thing is that I dont really believe working hard here will help. I busted my ass when I first got here. Due to our type of work, people dont care, its all about meeting the bar, exceeding doesnt do much imo.Basically there are not many people here who can do my type of work so my productivity is relatively very high.I even received the highest performance marks and will be getting a promotion soon.Problem is I just dont see myself getting great experience and I would like higher pay.I feel like I have gotten soft or something though. The idea of leaving and going back to deadlines and stress sounds... awful.But I also dont want to be the guy who coasts for 10 years and ends up with nothing to show for it.Any insight or motivation would be great. I also acknowledge my privileged and lucky position.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_p638m3","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/p638m3\/the_one_thing_wrong_with_remote\/","DATE":1629158400000,"PLAIN_TEXT":"Not exaaactly a new grad, I guess? Joined my org as the only junior on the team post graduation towards the end of 2020. Its been remote and great. I spent ~6 months in a learning curve. Org culture is great. Ive been appreciated at work, so its not the whines of the fallen either.Org opened on-site optionally. Decided to visit one day just to feel the vibe of bullpens. Most of my team moved cities, so only had like one senior person on the team with me. And we mostly chilled the whole day, I was told stuff about the people I was working with that I could never find out remote. We discussed work for like an hour and BOY OH BOY. I learnt so much! I learnt how skilled Devs think in terms of projects, how they approach problem, what to use what not to use. Faced a common system issue that I would usually take 2 hours to resolve, and sr gave me a solution and it was resolved within minutes. Everything was surreally efficient.I get why people who have had experience in the industry might want to stay remote. But that leaves the newer grads with a lot steeper learning curve. Things are terrible on this end. I love the WFH benefits but for at least the first 2 years of my career, I should be able to work with an in-person team. So while theres a whole give us remote agenda being spread everywhere, Id urge yall to consider this point too?---------------------------------&amp;EDIT : Ok wow this got a lot of traction. I want to address some major themes that I found in the comments. I am not advocating WFO. Im simply saying that if we are continuing with WFH the way it is, this is a significant problem that needs to be addressed ASAP. My company does not have terrible documentation. Everyones helpful, and we actually had half-remote model since way before the pandemic. So Im talking about a general issue and not one caused due to mismanagement. Yes, in a sort of optional WFH model, if best-case scenario, I get to meet 410 people on the team - its still great for me because I get to learn from their experience, their knowledge, their perspective. Im still sort of missing out the load of information that the other experienced 60% people have to offer, but I guess something is better than nothing. I get that theres no personal incentive for the sr. Devs to come to work once in a while to offer technical mentorship. But if this continues, were gonna end up with ~shitty~ not-the-best Devs when yall retire.  I dont think this experience can be replicated in remote at least with the current structure followed by companies. I can ping people when Im going through an issue and the issue is resolved.But this is about bigger the questions that I dont know that I can ask, those that dont even occur to me.Even as a Sr Dev I dont think anyone in remote goes Oh let me ping the new grad to show them how I filter this huge data for getting the most value from it. And its not a question that I can ask either because I thought I could just go through the whole data to figure stuff out, dont need help here. In office though, if I notice them doing it and I go oh why did you do this theres an explanation behind it. Other way round, if the sr sees me there theyll just go hey, I think this is something you should see. And theres a lot more learning there.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_iycxd4","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/iycxd4\/i_have_7_years_of_professional_experience_as_a\/","DATE":1600819200000,"PLAIN_TEXT":"I share this for people starting and for letting them know that failure and rejection can also come for experienced developers.I have been working remotely for US companies since about 2 years ago, before that all my work was on local (Guatemala) companies. I started looking for relocation jobs at the end of August, because I really wanted to grow my career and also improve my quality of life. My first go to was New Zealand or where ever in Europe, since the visa sponsorship paperwork and so on is way easier than for US o Canada.Given that Ive worked in a little bit of everything in a lot of side projects, I applied to Python (6 years of experience), Data Engineering (2 years of experience) and React jobs (1.5 years of experience). I only received positive replies from 3 companies, one from Netherlands (React), one from NZ (Python) and one from Germany (PythonDjango). By far the one that excited me the most was the Django one, since I worked with it for about 4 years and really loved the framework.That company set a very open 7 steps hiring process, which included everything from code challenges, questions and pair programming. I really liked their openness and culture they seemed to have just by talking with the guys from the hiring process. I prepared as much as I could, given that I havent worked with Django in the last year and a half at this point. I had 2 hours to complete the code challenge part, but I got a bit too nervous and miss understood the instructions for one question. That held me back and I almost didnt make it to the end with the other. In the end, I only finished 4 out of 5 challenges.After reviewing, they replied back saying they were not going forward with my applications given my performance on the challenge. The guy who was guiding me through the process was very kind and gave me general feedback about what I could have done better and what other key points I missed. It turned out I miss way more than I thought (around 4 key aspects), so it made sense for they not to choose me.Still, I am very disappointed on myself and it really, really sucks. I just wanted to share this with the community because failure and growing still comes even after you have been doing this for a while. I will go back to the training grounds and try to get better in order to land that dream job that allows me to relocate.Best of luck to everyone looking for that job.Edit: For clarification, I got rejected in the 4th step of the process and it was just one challenge with 5 different questions  tasks. I honestly dont feel like the company had a bad process, given that the things they looked for on the feedback were not there and it wasnt like you have to finish 5 out 5 and thats it.Then, it wasnt just like You didnt make it, better luck next time. The guy reviewing actually took the time to give deeper feedback with links and references on how to improve. In the end, I am by no means mad at the company, just a bit mad at my self lol.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_dlsew1","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/dlsew1\/tech_is_magical_i_make_500day\/","DATE":1571702400000,"PLAIN_TEXT":"[Update at https:www.reddit.comrcscareerquestionscommentsu5wa90salary_update_330k_cash_per_year_fully_remote]Id like to flex a little bit with a success story. I graduated with a nontech bachelors from a no-name liberal arts college into the Great Recession. Small wonder I made $30,000year and was grateful. Then I got married, had a kid, and I had a hard time seeing how Id ever earn more than $50k at some distant peak of my career. My spouse stayed home to watch the baby and I decided to start a full-time masters in computer science. Money was really tight. But after graduating with a M.S. and moving to a medium cost of living city, software engineering got me $65k starting, then data science was at $100k and Im now at $125k. Thats $500 a day. I know its not Silicon Valley riches but in the Upper Midwest its a gold mine. That just blows my mind. Were paying down student loans, bought a house, and even got a new car. And I love my work and look forward to it. Im still sort of shocked. Tech is magical.Edit to answer some of the questions in the comments: I learned some BASIC in 9th grade but forgot pretty much everything until after college when I wanted to start making websites. I bought a PHP book from Barnes &amp; Noble and learned PHP, HTML, and CSS on my own time. The closest I got to a tech job was product manager for an almost broke startup that hired me because I could also do some programming work for them. After they went bankrupt I decided I needed a CS degree to be taken seriously by more stable companies. And with a kid on the way, the startups bankruptcy really made our familys financial situation untenable and we wanted to take a much less risky path. So I found a flagship public university halfway across the country that offered graduate degrees in computer science in the exact subfield I preferred. We moved a thousand miles with an infant. My spouse left their job so we had no full-time income. I had assistantships and tuition assistance. I found consulting opportunities that paid $100hr which were an enormous help. I got a FAANG internship in the summer between my two years. The combination of a good local university name and that internship opened doors in this Upper Midwest city and I didnt have any trouble finding an entry level software engineering job. Part of my masters education included machine learning, and when my company took on a contract that included data science work, I asked to transfer roles internally. Thankfully my company decided to move me into the data scientist title, rather than posting a new role and spending the resources to hire and train a new person. That also allowed us to make a really fast deadline on this contract. I spent three years as a data scientist and am now moving into management. The $125,000year level was my final year as a data scientist. I dont know what my manager pay will be yet.A huge part of my success is marketing myself. I spend a lot of time thinking about how to tell my story. Social skills, communication with managers and skip-level managers, learning how to discover other peoples (or the businesss) incentives and finding how you can align your own goals with theirs: all of these are critical to career growth. The degree opened doors and programming skills are important, but growth comes from clear communication of my value to others, as well as being a good listener and teammate.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_uurkw4","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/uurkw4\/i_broke_production_and_now_my_tech_lead_says_he\/","DATE":1653091200000,"PLAIN_TEXT":"So, long story short, I was in charge of writing a data migration script that I had been testing on my local DB. It looked like everything was working properly, so I went on to the next step which was testing the script in a staging environment so that the results could be checked by others. This is where the fuck up happened. I pasted the address to the remote DB environment, but forgot to change the name of the DB to the staging name. It just so happens that the local DB name is the same as the name on production so the script ended up corrupting data. Production was down for about 10 hours, but we were able to roll everything back without losing any data. By the way, this script was running from my local testing environment, so dev environments can reach production at this company. There are no safeguards in place. This is the one and only time I have ever done anything like this, but now my tech lead is acting as if I do this kind of thing constantly. Im now being micromanaged, and being threatened with being put on PIP. My tech lead even said to me, I dont trust you to not do this kind of thing now. I know this was a careless error on my part, but is this warranted for a mistake like this?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_10q61ix","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/10q61ix\/blind_leading_the_blind\/","DATE":1675123200000,"PLAIN_TEXT":"I regularly browse this subreddit, as well as a few other sources of info (slack channels, youtube, forums, etc), and have noticed a disturbing trend among most of them. You have people who have never worked in the industry giving resume advice. People who have never had a SWE job giving SWE career advice, and generally people who have no idea what theyre taking about giving pointers to newbies who may not know that they are also newbies, and are at best spitballing.Add to this the unlikely but lucky ones (I just did this bootcamp course and got hired at Google! You can do it too!) And you get a very distorted community of people that think that theyll all be working 200k+ FAANG jobs remotely in a LCOL area, but are largely moving in the wrong direction to actually getting there.As a whole, this community and others online need to tamp down their exaggerated expectations, and check who they are taking advice from. Dont take career advice from that random youtuber who did a bootcamp, somehow nailed the leetcode interview and stumbled into a FAANG job. Dont take resume advice from the guy who just finished chapter 2 of his intro to Python book. Be more critical of who you take your information from.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_r6osqe","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/r6osqe\/my_company_sent_out_a_nonanonymous_survey_asking\/","DATE":1638316800000,"PLAIN_TEXT":"I am a remote developer for a midsize software company. The company has been going through a ton of turmoil at the executive level and the culture there is rocky at best. But the pay and the benefits are good and I just keep my head down and work on my stories and no one bothers me (which I like).Recently the company sent out non-anonymous surveys tied to our email and slack handles about the workplace. I honestly had no intention of filling it out because there are no upsides for me. Then we get a message that they required every single employee to complete the survey (lol) from HR.To my surprise, there are questions on there blatantly asking if I was gay, trans, and what my race is. I work from home and slang code, why is this necessary? Thankfully you could decline to answer, but I found it very off putting. Why the fuck is my employer asking me what is in between my legs and what kind of legs I like to go in between? Its just rude and completely out of line.Not long after this, half of our HR department announced they are resigning. Apologies if this is not completely CS related but I needed some kind of perspective. Is this a normal? Some sort of weird red flag? What do you think?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_so4vr4","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/so4vr4\/its_sad_to_be_from_a_third_world_country\/","DATE":1644278400000,"PLAIN_TEXT":"The title says it all. I work remotely for a US company. I earn good money if we compare to the salaries in my country. However, people are ambitious. I am the only latino in my team and I am the most experienced among them, but I am the one who earns the least just because I am from a third world country. I see recent grads making twice as much and I have more years of experience, AWS certifications, Linux certifications, good softtechnical skills. Life sucks.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_mbbp92","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/mbbp92\/finally_got_a_job_offer_and_accepted_it_after\/","DATE":1616457600000,"PLAIN_TEXT":"I have like documented my entire journey from May 2019, So this may be long to read.&amp;#x200B;Little Background I graduated from a reputed college in India in Computer Science in May 2019. I hated coding during college and never tried to focus on it. I felt overwhelmed in college due to the competitive environment there. After May 2019, I had no idea what to do after graduation. I never sat for campus placements even though my college had a very nice record. At that time I didnt want to end up in this area. 3 months passed by, I did nothing (I live with my parents) and was just home. Fortunately I had some good friends during college, who suggested me that theres still a chance that I can try to get in the field, If I start fresh, as theres no college pressure now and assured me that I can do it. I was already familiar with python and spent like 2 months (Sept-Oct 2019) doing easy level and then medium level leetcode questions, 1 problem daily. (Focused on only Basic Arrays, strings, linked list and Tree questions). Then my friend suggested me to try Flask, which led me to enroll in a course named Web programming with Python and JS (CS50 WEB) by Harvard University. This course entirely changed my perspective, and was like a direction that lead me deeper in the web development area. I spent (Oct 2019 - Dec 2019) 2-3 months trying to finish this course at my own pace.  I already knew HTML and CSS before. Some stuff I learned through this course were Git, basic db stuff, Flask, Basic JS concepts, Django, dom manipulation, and concepts related to scaling, security etc. So with this course, I created like 4 projects from scratch, some using Flask, and some using django. And I hosted this apps on Heroku. And then started applying for jobs(Jan 2020 - ) So initially I felt overwhelmed while applying, as I never interviewed before. But eventually coped up with it and kept applying and interviewing. I got very less interviews.COVID period  Then COVID came around March 2020 first week and it added to my already demotivated journey of job hunting. During that time I learned Angular. And tried to revamp my previous projects (which were just static sites) with angular and I integrated them. During this time I learnt many new things about JS, I deeply learnt about how Web works, how Internet works, Networking concepts, HTTP, REST, OOPs and all the basic stuff. So I had a pretty good idea about what kind of questions I should expect from an interview and I would prepare accordingly. Around August 2020 last week, one of a no name angel list startup offered me an internship role for 2 months with a joke of stipend. As I was desperate and had no prior internship, I accepted this opportunity and spend two months remotely doing this internship.Internship (Sept - Nov 2020) Even though there were like literally 5-6 people in the company, and I knew that Im just a cheap labor in name of an intern, I tried to make most out of it, and learned many new things there as well. I had no regrets. They even offered me Full time role, again with joke of a salary. But this time I declined, as there was no proper structure, no testing, nothing. And I had a feeling that I would now get a new job quickly but it wasnt like so.After Internship (Nov 2020 - March 2021) So again I started applying. Usually Id try to apply like 20 companies on a single day. Or some weeks Id apply daily to like 4-5 companies. From when I started tracking (from July 2020) of which companies Ive applied to in Google sheets file, Ive applied to around 250+ companies. I know thats a huge number of companies. It has come down to how good your resume is, and whether your cover letter is good enough. Mostly from these applications I had potentially like 15 companies where I had gone through at least one round of hiring process seriously. I had many phone screens as well, where sometimes the company didnt considered me a good fit, while other times it was vice versa. And also Ive been ghosted by many after interviews. During this period, I have encountered mostly take-home tasks and very few leet code style screenings. I would only do the take-homes If I feel that Im not being used as a free labor. Also I had learnt about Nodejs during intern, So I would try to learn new stuff, and also try to create new projects. But mostly I would try to revamp or improve my existing ones.Breakthrough So I came across the company (which is a well known startup in India) from which I got the offer. I came to know about this company in Feb 2021 when I saw a tweet from someone on my TL related to the company. So I went on their website and applied from there. So I had like 4 rounds with them which lasted for almost a month  Basic Technical Discussion  Take home task -&gt; Code Review + A Live task was given, to make an improvement in the code that I submitted.  Another technical round (DS, Algorithms and System design questions)  Final round with CTO (technical discussion type, cultural fit check) I knew that all of my rounds went well and I had cleared all the rounds as HR informed me that they have positive feedback. I usually try to avoid initiating salary discussion from my end and try my best to not give a number from my side, during initial phases. After all rounds were over they then asked me about the expected CTC. So I was prepared for that, I had already researched on glassdoor like what the company provides to same role in the same location. Now I had this range with me which I needed to mention when asked. So I quoted for a salary range that I never would have even thought about an year before. I was undervaluing myself very much to like almost half of what I quoted. They accepted my quoted range and offer me the lower bound one. I wanted to play safe as I had no other offers, but even though I tried asking if theres any room for increment. HR said they might need to discuss internally. When they shared the letter, it was more than what they initially offered and I was happy with that.Some thoughts Approaches that I followed I am from India, so there might be some different approaches in reaching out to companies as this sub is mostly US based. Mostly Ive applied through Indeed, Linked In, sometimes through angel list and through any leads I could get. I even try to get list of some good companies and would literally apply on their career section. Obviously I didnt aim for any FAANG. I just wanted to enter in the industry with average salary (that doesnt mean you aim low). Although this approach has very less success. One advice I got was to get referrals from your network. But I didnt try getting referrals as I was kind of shy in asking (big mistake and setback for me).  I prepared a Google keep, where I stored all the links to blogs, concepts, articles which I could refer to before interview. My intern role was more frontend based, but I tried to learn backend as well and would apply for Full Stack roles. So this was kind of slow down factor, and I believed that I should have just focused on one of them.  Before an interview, I say this to myself that its nothing but a discussion, and no one is gonna judge me. Most difficult thing when an interview begins is to answer the question Tell Me about yourself?. Your answer to this question would be like a foundation for how your rest of the interview is gonna be.  And I know when you have a gap and no prior experience, it kind of becomes awkward answering that.  I would begin describing my graduation year and major.  What I did after college, how would I utilize my time, which technologies I learnt.  Whats the most recent experience I had, If any. I knew that I have drastically improved my communication skills over this period. And I added that to my advantage. I would always try to be humble when interviewing, and would always speak softly. If I didnt know about something, I would simply say that Im not aware about that and might have to look. Or I would politely ask them If they could tell me the answer (depends on situation). Reverse interview questions are important and you definitely need to ask interviewer questions at the end, to standout from others. Questions should be interesting and should be framed in a way that can make the interviewer more attentive towards you. After every interview, I would note about which things I wasnt able to answer in a doc file, so I wouldnt miss that next time. There were times were I felt burn out and demotivated. So its okay to take a break and one should know when to take them. I have been an active member on this subreddit since I started job searching, also I followed some cool people on tech twitter, which were helpful in some way or other. At last, Im satisfied with what I have presently, and the wait and journey was worth it.&amp;#x200B;&amp;#x200B;TL;DR Began my job hunting journey from scratch after my graduation in CS. No prior Internships. Built projects during the time. Landed an internship in a small startup. They offered full time, but I declined. Started job search again. 250+ applications. Got an offer I never would have imagined one year before.PS This post was meant for motivating others who are on the same boat. If someone like me could do this, you definitely can. I wont mention the company name or my college name as I prefer to be anonymous on reddit. I dont want to directly reveal the CTC as well but for those people who are asking me, its closer to the lower bound of 10-15 LPA range","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_fyahcd","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/fyahcd\/growing_within_the_same_company_isa_joke\/","DATE":1586476800000,"PLAIN_TEXT":"I see some people talk about whether they should work long hours or not to keep management happy and get a raise or whatever. Im here to tell you that you should put yourself first, that keeping management happy is a joke when they are abusive, and that whatever opinion they hold of you will be completely insignificant after you get your next job. You are at your current company to acquire enough experience to be able to get your resume looked at by companies that didnt look at it before. Besides, the promotion you work so hard for? It will be nothing in comparison to hopping into a higher tier company, one where the people arent so mediocre, where people understand that productivity is maxed when you have good work-life balance. And if they dont understand that, well, at least theyll pay you more! As long as you keep your skills sharp this will be true, which leads me to another point: do your work well because it benefits you, not because it benefits the company.Save enough money so that you are not afraid of losing your job. Finding your next job becomes so much easier than when you searched for your current one, especially after you go from 0 experience to 6 months...1 year...or more.Every job you have is a stepping stone into a better job. Make jobs work for you to stay, not the other way around. And make friends with the other developers, they will be your network, they are on the same maze that you are, they are your comrades, unlike your manager.Im just some angry junior developer, but Im on my way to my third job after being used as a scapegoat by my last manager, even though I gave them a lot of unpaid extra-effort thinking it would be recognized. Next job is 100% remote for a change though.Thanks for coming to my Ted Talk---Edit: I am a simple man, if you scratch my back, I scratch yours. This isnt about chasing money, this isnt about being angry forever, this is about having the freedom to demand to be treated with dignity, and that if you step on some toes while you do that, know that you and your career will be fine, actually, you will be better off. And also loyalty doesnt exist, people have to prove to you that they care.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_z0vyny","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/z0vyny\/my_junior_is_finally_starting_to_get_stuff_so\/","DATE":1668988800000,"PLAIN_TEXT":"So about a 3 or 4 months ago we had a new hire and it became mine and the teams job to train her. Just to note Im in no way a senior developer, Im a junior myself, however I pretty much know the ins and outs of what I work on (Im a devops engineer), so this girl was straight out of collegeuniversity and she needed lots of hand holding. Time seniors did not have, so as being trained I was tasked with giving training. Now I had made some fantastic notes and a training plan and I was so excited. I thought that it would be a breeze, but I was wrong. She was struggling to understand things and didnt ask any questions, never made any documentation on anything I taught her. She would just watch the training and then forget and complain to her friend (who was also one of the people I was training) that she was learning too much, how can she keep up with the pace. Now dont get me wrong, Ive automated most of the processes. Theres hardly any manual things to do, I was simply trying to ensure she understood how weve set up our environments, cloud infrastructure, Jenkins etc. I realised this was going to be a very long and hard task and so I decided to set her some training activities make a very simple pipeline which uses the cat command and then emails the output to the user. She struggled so much with this one task I think it took her total 1 month to complete - and even that I had to go in and hold her hand and show her how to do it.Unfortunately at that point I was lost, I had no idea what to do. She was deleting important Jenkins jobs, she was destroying environments which were being used for testing (after she decided to use it and I asked her why are you using that environment? Who asked you to etc?) then when the team asked her why she simply blamed me, they obviously knew it was not me, and that I didnt tell her to.Even as Im typing this I gave her one ticket this sprint in which she simply has to ask another team to complete their task. Its small steps and she asked me how can she get in contact with that team, but at least shes taking initiative to start her ticket! This to me is progress and not even in a condescending way. Genuinely, the fact she is starting to take her own initiative makes me proud. Having to give micro level instructions is very tiring. Thursday evening I had a long talk with the girl and said look if you dont care about the work then ask to move teams. You arent making notes or documentation, and I have to give you micro level instructions for you to complete any task. Youre not understanding anything and you keep telling me youre doing stuff (such as learning Linux or git - no cap she literally claimed to be learning the cat and find command for 3 weeks and l asked her to use it and she said she didnt know it). We work remotely. So I asked her again what she does when she doesnt have any active tickets to do and she simply said she does nothing. I honestly didnt know how to react I was shocked, anyways it seems she pulled her socks up she sent me some documentation this morning about a few of the basic processes we have. Its not much but it is some progress.Anyways Im leaving the company in like a few days so at least I am done with that. But I have some advice for new joinersjuniors.Please record training sessions. This will help you review and understand in the future. You need to want to learn, be proactive, read the emails that come to your team debug them in your own time, understand what solutions your team have given. Make draft solutions to automation tasks and ask your seniors what they wouldve done differently. How could you improve it etc. talk during scrum calls highlight what youre struggling with, what youre doing.Overall just have fun, otherwise youll just resent the work youre doing.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_qg6agu","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/qg6agu\/heres_our_internal_salary_bands\/","DATE":1635206400000,"PLAIN_TEXT":"I wanted to share the internal base salary bands for my last company. YOE would determine the level, then how well you interview would determine where you landed in the level.Level 0 - AssociateJunior SWE - $80-100kLevel 1 - SWE - $100-135k, 0-2 YOELevel 2 - Senior SWE - $125-165k, 2-3 YOELevel 3 - Lead SWE - $150-195k, 3-6 YOELevel 4 - Staff SWE - $175-220k, 4-7 YOELevel 5 - Senior Staff SWE - $200-250k, 6+ YOELevel 6 - Principal SWE - $225-280k, 8+ YOEThis is a good reference point for the average VC funded startup. Good product-market fit, but not hyper-growth and hiring 100s of people a year. My startup was based in NYC, but hired 100% remote. Levels used to be 3-4 years but are trending towards 1-2 years with all the job hopping and demand for talent.Happy to answer any questions about how levels work.I hope this encourages people to look for new jobs if they are underpaid.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_11xng9v","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/11xng9v\/very_valuable_advice_i_found_on_blind_to_cope_up\/","DATE":1679356800000,"PLAIN_TEXT":"As an engineer who has been through this way too many times, Ill try to give a real answer:1. Do your job to the best of your ability because its what you are a professional. To be in upper management you have to know how to play politics, to be an engineer you have to actually understand your trade. Do your best so you can look yourself in the mirror and know your worth isnt what a bean counter says it is. Its about self-respect. and if you end up laid off or even PIPed, you can hold your head high. That confidence will move you to the front of the line for the interviews to come.2. Keep records of what you do. Once a month update your resume. Stand back and look at what you did in a way that will stand out when interviewing. Dont wait until after you are locked out - write it down now while you can review your own work.3. Listen to your teammates - are they allies or adversaries? Are their review comments helpful or building a case against you in the next ranking. Not everyone is your friend and not everyone is your enemy. Always treat both with respect, but dont be naive. Quickly discovering who is on your side is the number one thing you can do to protect yourself when politics are played.4. Talk to your manager, regularly. Never assume they know what you are doing even if they are in stand up. Get yourself on their calendar at least every other week. Make your work visible to them, document it every week. If they like you, it will be used to defend you. If they hate you, they will let you know where you stand earlier.5. Be visible to your skip level and to other team leads This protects you if your manager isnt liked. Ive seen way too many great engineers suffer because of a manager that wasnt liked by their boss.6. Pay attention in all hands - not the pre-prepared, highly sanitized slides but listen careful for how they respond to questions. Management are employees too - they have been told what they cannot share but they will slip up. Micro-mistakes usually. Chat with a least one co-worker about what you heard, they will hear something different.7. Watch how your company (all companies actually) treats its employees in bad times - take note of the companies that violate their principles when things get hard. Watch which ones do rolling layoffs, forced URA, prefer hiring over promoting. Do they offer remote and then demand RTO? Take note of this - its indicates a company that doesnt respect you.8. Watch what the CEO does - does he play follow the leader? Is he afraid of making announcements? Does he hold all-hands and then announce a controversial policy the next day? Take note of this - these are weak leaders and forecasts more of the same in the future.9. Remember, if you are laid off - its never your fault. I know this seems like an obvious thing, but your mind goes there and will stay there. Layoffs are always mistakes made by upper management - they over hired, they tried to market something that wasnt selling, or they just want their stock options to go up. If you do #1, then dont blame yourself - you did your job. If you did 2-5 you did everything you could to protect yourself. If you did 6-8 you knew it was coming.10. Finally, and most importantly, make sure you spend time every day becoming better - do a LC problem, update your resume, spend 30 minutes learning something that will get your next job. Take the power back into your hands.If this sounds like a get over it post - it isnt. I just spent 30 minutes typing it out because of Gobbles weak leadership. Im in the same boat, but I decided to think about the 10 things I could do. #11 is GTFO when I find something that makes me not worry as much. Respect matters more than a big paycheck. Most of big tech has now told us who they are, never forget.Source: https:www.teamblind.compostHow-the-f-do-you-work-S8VqobOs","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_zyahf4","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/zyahf4\/i_found_out_today_my_employer_tracks_my_computer\/","DATE":1672272000000,"PLAIN_TEXT":"I got an email from him saying that he got an alert on his email saying my productivity was extremely low. And that he mentioned that there were a few other days where my percentages were less than 50%. The company monitors mouse movement and key strokes. What are your thoughts on companies using this to track employees productivity?Update:He sent me this email todayOnly fair that I go over why I bring this up. Our systems monitor activity on all users, especially now that we have gone a good majority of remote. Activity wise we can tell when someone logs in for the day and the amount of time that they are working on the system. I do hold a lot of trust in all my employees, and really do not look at the reports, just happen that I did this week and say that you had not been putting in full days. If you read this it says, based on EST1227 you started at around 9 stopped around 12 came back on around close to 2 and stopped for the day around 4.1228 started around 10:30 stopped around 12:10 came back around 2:11 and ended the day at 5.1229 started around 11:14 and ended the day around 5So let correct this and make sure you are giving me the whole day. Also bring me up to date on your projects, since I havent been in this week just wanted to get an idea on where we are with the x and x. X looks really good, you did a great job on it. FYI at any time please feel free to reach out to me.2nd Update: I sent him a two weeks notice, as Ive already been interviewing for other places and things seem promising.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_pcoqo7","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/pcoqo7\/if_companies_go_fully_remote_whats_stopping_them\/","DATE":1630022400000,"PLAIN_TEXT":"I work at a Big N and our org in the past few months already they have hired 2 extra devs per team (so about 20% workforce) that are fully remote from Latin America. They are technically strong and their English is perfectly fine. Time difference is only 2 hours with West Coast. I just found out they get paid about 60% and they are very happy with their salaries.If the company goes fully remote as everyone is pushing for, why wouldnt they just continue to hirereplace with devs from other countries at lower cost? Im honestly worried.Edit: I incorrectly used the term outsourcing. What I mean is hiring as full time employees, just fully remote from different countries.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_qlmlui","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/qlmlui\/my_team_just_announced_everyone_is_expected_to\/","DATE":1635897600000,"PLAIN_TEXT":"I finally managed to snag my first job as a junior developer since graduating in June. I joined at the end of September, and i am pretty happy. The role was advertised as being remote friendly and during the interview I explained how i have no plans to relocate and explicitly mentioned that. They were fine with that and told me that the engineering team was sticking to be remote focused, and that if the office did re-open then i can just keep working remotely.Well today that same person told our entire team that the entire engineering staff is expected to return to the office by Dec 1st. When i brought up what he told me during the interview he said i misheard and that there was always a plan to return to the office.From what i can tell most of our team is very happy to return to the office, only me and another person are truly remote. I explained to my boss how i cannot move, since I just signed a lease a week ago with my fiancee and my fiancee needs to stay here for her job. He told me that it was mandatory, and he cannot help me. Am i just screwed here?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ilcype","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ilcype\/i_got_my_first_job_offer\/","DATE":1599004800000,"PLAIN_TEXT":"So I interviewed with a company last September during my last year of college for an internship with a pretty well known company. I got the internship offer in October and I started in June. The internship was for the summer in software development on one of their teams, with the possibility of full time at the end of it.The pandemic happened and I was so afraid of my internship getting cancelled, but nonetheless they decided to continue remotely and luckily I have been able to work from home since then. These past months have been tough, I wanted to quit because self doubt and just stress of learning on the fly, feeling hopeless, and most importantly imposter syndrome. However, yesterday I was offered a full time position with the company with pay more than I would have ever imagined. Im extremely happy and grateful for this opportunity especially in times like this. Im also extremely grateful to have the same company I interned with offer me a full time position as a full stack developer. Im excited to start my career with this company. Just thought Id share my excitement. :)Edit: Thank you all for the awards. :)Edit: I appreciate everyones positivity. Thank you all so much!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_dmybah","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/dmybah\/does_anyone_else_feel_like_this_subreddit_is_a\/","DATE":1571961600000,"PLAIN_TEXT":"Been lurking a bit, and honestly, 90% of this sub seems to think everything is a bad thing. Someone finds something good, everyone starts coming in on how its probably a trap.If you get a role that isnt SWE youre wasting your time or going to be trapped. Basically, if you have a CS degree, its SWE or the highway.All start ups fail.Anyone who doesnt make you white board has awful codersor even vice versa, reject all companies that give you a coding test.Dont speak to recruitersIf its family or team oriented stay away.If you arent offered remote, dont apply. (Literally saw this one 2 days ago in a comment. I get it, remote sounds great and a lot of jobs offer it, but people have to go to work in other jobs. Dont avoid an opportunity because they want you at the office)If theyre not offering top pay, dont take it. Its entry level roles, and people are talking about you shouldnt accept lower that $70,000 in an averagelow income state. These kids are coming out of college, if someone offers you $55k for a junior role, its not ideal, but take it to start racking experience, and apply for other jobs while youre already in the field.You should expect 200+ applications and maybe 10 call backs and even then probably no offers. Takes months or years.Financial SWE is a poor role. Looked down upon.I dont know. I feel like this subreddit is for new grads, but were basically pushing them away from so many jobs. Your first job probably wont be your last. Or maybe its not ideal, but its your foot in the door. This subreddit seems to tell people, there are 500,000 jobs out there, but only 2,000 are perfect or great quality. Only apply to those 2,000. Theres a lot of missed opportunity. Tell people to be cautious, but dont tell them to be scared. Also remember, if you have 15 years of experience, of course you wouldnt accept half of these entry roles, its because youve been in the business so long that you know your worth. But getting your foot in the door, just so you can put on your resume I have ____ years experience. Or so you can atleast start to see work life.Now im not saying, stay in a company you hate. Im saying, for you students just graduating, your focus is getting in. Once youre in, and you know your worth and quality and have that leverage, then you can start being picky, but there are a lot of jobs, and not all of them sound ideal, but sometimes you get there and youre like Wait this isnt bad.Also, can we kill the I want to go to work, and go home attitude. Not saying you should stay at work and work OT. I mean, graduates are coming in so independent, that they are a pain to work with. Dont talk to me. Im putting my headphones in, and im working so I can go home, I dont want to be here. Projects revolve around a team, you dont have to go to parties and all these events, but come in with an attitude of Teach me. I want to be here. I want to be better. Im ready to learn.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_rxrcey","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/rxrcey\/does_anyone_else_take_long_breaks_when_working\/","DATE":1641427200000,"PLAIN_TEXT":"I moved companies to go fully remote about 6 months ago, I now have about 2 hour lunches and multiple long breaks in between doing bits of work.I think Im maybe working 34 hours a day but apparently Im doing great according to my performance review, anyone else doing the same and feel a bit guilty about it?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_nuovvj","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/nuovvj\/received_first_offer_new_grad_no_internships_sub\/","DATE":1623024000000,"PLAIN_TEXT":"After ~50-200 applications, with ~15 cover letters, 4 interviews, I just received my first offer! The compensation is average for a junior software dev in Canada, but Im relieved I get to make the next step after being in school forever.My approach:Instead of getting internships and doing leet code (Im an idiot lol), I just did projects or researched what I was passionateobsessed about and helped out the family business (manufacturing). I also started applying for remote positions across the country, where the job market is a bit better.The dots connected and I got a job offer for a software developer position in a researchmanufacturing company! The technology they focus on is something I was obsessed with last year. So, in the interview, I could talk about fairly niche topics in graphicsmathmanufacturing.This subreddit helped me stay positive and confident throughout this process, so thank you all!!! Keep going! CS is a great place to be, internships or not!TLDR: yay! Next week: plz help, I am confused at first job (new grad)EDIT: Moral of the story: even if you screw up internships, GPA, etc., Its possible to recover and actually get a job if you work hard at it.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_mqvcrh","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/mqvcrh\/after_years_of_selfstudy_and_internships_i\/","DATE":1618358400000,"PLAIN_TEXT":"To give a brief overview of my background, I started college in 2016 and my mother died a year later which left me without parents. Ended up becoming super depressed and dropped out after getting enough credits to snag an associates degree. I took a few programming courses in college for fun and noticed that I was pretty decent at programming relative to my peers so I decided to give programming a shot after dropping out. I put in a lot of self-study, built out some projects just using the MERN stack, and secured an internship from those projects. I ended up working three different internships before receiving my offer for a software engineering position.This may sound kind of stupid, but I was making around ten dollars an hour at most of my internships. My last internship ran out of funding and couldnt really pay me so I went out on the job search again. Ended up interviewing for a position that required two years of experience as well as a bachelors degree. I had four interviews with them, absolutely killed the interviews. I could tell they were interested in me and I got along with them really well. One interview was supposed to last an hour but I ended up spending two hours on the zoom call with him talking about tech. The position is fully remote and pays ~$100k. This feels completely undeserved, I feel like I cheated my way into this or something. Even though theres no evidence for it other than I took a completely different path than most.Wondering if theres anyone who has had similar experiences? What was it like working for that position once you secured that well-paying job? Did you feel like an impostor? Any advice on how to cope with this? Thanks!&amp;#x200B;Edit: Thanks so much for all the positive support! Ill be sure to send private messages to anyone if they have any questions. ","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_wxi4j5","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/wxi4j5\/is_fully_remote_coming_to_an_end\/","DATE":1661385600000,"PLAIN_TEXT":"Today, my company announced unfortunate news. Fully remote is coming to an end :( Weve been fully remote since the start of the pandemic. My boss told us today that the company will start with 1 day per week in the office, gradually building up to 3x per week. He gave all the usual BS fluff about teamwork, collaboration and productivity when were in the office together. With Apple and Tesla making similar announcements, is working from home coming to an end? Or will finding a remote job just be more difficult, since less companies are allowing that?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_pz78f5","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/pz78f5\/returning_to_office_but_not_sitting_near_team_wtf\/","DATE":1633046400000,"PLAIN_TEXT":"So I work for a big bank in NYC and theyre in the process of making everyone return to office. A good chunk of the people have returned and the rest are returning in the next few weeks.I got told a few days ago that my desk is going to be on a different floor then my team and Ill be 15+ floors away with a bunch of random people.Most of my work is done with coworkers in India or elsewhere in the US, so Im really about to return to office just to mostly work with people remotely?!? I literally dont understand the point of making me go back to office if Im not going to be with my team all day. I started ~6 months ago so and I was looking forward to going back to office so I could interact with my coworkers in person but since they pulled this bs Im pissed.Anyone elses company pull this shit?Edit: Just some more info. My team and manager definitely know about the situation and wasnt some mistake, its just the way things are rn. Im not opposed to RTO and have been looking forward to it for a bit, but not as much under the current circumstances.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_hkz25z","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/hkz25z\/protip_never_let_your_client_work_on_your_project\/","DATE":1593820800000,"PLAIN_TEXT":"So my client was a programmer. He paid me, and handsomely, but at the end he started working on the project himself. He didnt pull the repo, and ended up sending the wrong request to the server. He ended up not paying a large sum of what he owed me because he thought the code is faulty. Plus he was kinda... emotionally needy. He expected me not to work on any other projects whilst I was working on his.&amp;#x200B;So here are a few things that Ive learned from my second project:&amp;#x200B;1- Never befriend your client. People who ought to pay you make the worst friends.2- Never let your client work on your project. This guy, I respect him and all, but he was kinda stupid, I told him three times that I have changed the header name in the backend but he didnt know much about Express so he thought Im speakign gibberish or something. Thats why sadly things ended up badly between us.3- Never, ever be verbose with your client. Determine a time, like, 7 PM, and tell them that at that hour, exactly, you will be available on Slack, WhatsApp or what have to update them on the project. NEVER be on their catch and call 247. Dont work on the weekend or else they get cocky.4- Expect a clean, laid-out document detailing what the client wants. Dont just ask them. If they decide to change X whilst you have put a lot of time on it, cite them. Yeah cite the fuckers. This dude changed the project over 15 times, and I had to scrap much of my code. At the end he asked me to rewrite the frontend the way he wanted. I liked his way but he didnt pay me for it because he thought its broken, because of the header thing which I told him thrice about.5- Kinda extension of the first point but if your client is a programmer, only give him read access to the repo.&amp;#x200B;6- Never let your client test the project. Always test your project yourself first. Only let your client test out the project at the end of each cycle which brings me to...&amp;#x200B;7- Make milestones. And always make them pay you at the end of each milestone. Also, take a retainer. Like, 14 of the end fee as the retainer.&amp;#x200B;I worked with a programmer because I didnt have a published app to my name. Im going to take a break from working with remote clients, my professor has found an investor for my chore app. Im going to work on it for a month so I have an a published app instead of lines of code. I had two apps when I started working with this guy but he kinda asserted himself as my supervisor because he himself was a programmer. Damn. Should have never let it happen. When he was working on the app he would ruin the repo and I had to spend 2 hours each day fixing his mess. He reverted my changes because he believed redux-persist is in a loop Goddamit what does that mean. &amp;#x200B;Okay I didnt mean to vent just to relay my experience. If the guy is reading this please be decent and dont post because I have the proof that you messed up. Thanks.&amp;#x200B;&amp;#x200B;PS: if you guys have any tips for working with clients, tell me.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_11ms3s8","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/11ms3s8\/how_can_work_life_be_so_boring\/","DATE":1678320000000,"PLAIN_TEXT":"I wake up at 9 o clock and my miserable day starts with a daily scrum. I dont see anyone because our company is fully remote and till its the end of the day its like a nightmare. Same stupid tasks that somehow the customers wanted and than the day somehow end. How can one deal with this? I thought we had to enjoy our jobs at some part, this feels more like Im tearing myself apart. I feel like a nonsense person working for a nonsense project.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_q6o73e","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/q6o73e\/if_youre_on_the_fence_job_hop\/","DATE":1633996800000,"PLAIN_TEXT":"I would encourage anyone whose been procrastinating job hopping at their current job to do it. The market is crazy hot, and if you put a little bit of work in there are some great offers companies are giving.After reading a ton of posts back in August about everyone on this subreddit landing new job offers, I had enough with my current gig. Im an experienced dev and I am severely underpaid. Where new grads were getting better offers than me for no name local companies.So I got a LeetCode Premium membership and started grinding out problems. Pretty much any free time outside of work. Did 100 problems (45 easy, 45 medium, 10 hards) and landed a fully remote big N job offerThe offer is more than double my current TC and trying to negotiate more.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_g1v1lj","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/g1v1lj\/my_experience_interviewing_during_a_pandemic\/","DATE":1586908800000,"PLAIN_TEXT":"Hi all, Having just finished a rigorous interview process, I thought it might be helpful for me to share my experience  takeaways while also highlighting how COVID affected the process.### Background5 YOE, fullstackbackend engineer in NYC area. To prepare for interviews, I started a typical study routine (ie Leetcode) around December. In total I did around 200 problems, mostly mediumshards. For system design, I used the Grokking the System Design Interview course.### Numbers25 companies contacted - Given how much time I invested in studying, I wanted to get the best possible return by casting the net pretty wide with regards to company selection. For me, this step was pretty easy since I have the good fortune of having previous experience at a well known unicorn. Once I found a company I knew I was interested in (Id use resources use glassdoor and linkedin to find them first), Id reach out to one of their recruiters via LinkedIn and usually theyd respond pretty quick by setting up an intro call. I started this process back in JanFeb -- well before COVID was mainstream news.17 recruiter calls - The basic introductory call where it seems like the recruiters main goal is to confirm you are who your resume says you are, and maybe that youre not a complete maniac. I actually got rejected at this stage by a few companies which surprised me. I think its because I wasnt well prepared yet because I assumed this stage was a freebie and some recruiters actually asked challenging questions about my background, interests, etc that I didnt have great answers for. Lesson learned: prepare for these calls by anticipating what they might ask, have a story about your background that makes it clear why their company is right for you, etc.13 technical phone screens - It might be more accurate to call this stage the pre-onsite technical screen because a few of these interviews were in the form of take-homes and online assessments. One thing I noticed compared with when I went through this whole process a few years ago is that there was much more diversity with the format of the technical screen. Before it mightve been 70% LC easymedium questions over coderpad, whereas this time Id say it was 70% non-LC style questions such as debugging pre-written code, implementing a class, Q&amp;A discussions, etc. This was a welcome change. This stage was right around COVID was becoming a big deal.9 virtual on-sites - Of the above 15 technical phone screens, I only failed 1 (Amazons online assessment where one of the questions was a LC hard I hadnt seen before). But 3 companies couldnt continue because they paused hiring and 1 company I decided not to continue with. At this point COVID was in full effect and every company had gone remote, so that meant all my on-sites were being converted to virtual. These on-sites were mostly done via zoom or some similar VC software and for the most part they went smoothly. The trend of de-emphasizing LC style questions in favor of other formats was happily present for these on-sites as well. The system design interviews did feel less fluent due to the constraint of needing to use software to do the whiteboarding, but the interviews were very understanding and in a few cases they even offered to help me draw the diagram while I explained my thoughts which is something that very worked well. I will say that doing these interviews virtually seemed particularly taxing for reasons I still dont fully understand. Maybe theres extra effort being used to communicate virtually that isnt needed in-person. I dont know, but I was drop dead tired after each session. For this reason, I would strongly urge you to ensure at least one break is included in your schedule, and ideally 2. Even better, you could try asking that the interview be broken up across 2 days. The added benefit with this approach is that the company could evaluate your feedback on Day 1 and only proceed to Day 2 if appropriate. This saves everyone some time. Another tip is to use COVID as a way to connect with your interviewer. Good or bad, were all going through this shared experience so might as well use it to try to build report with your interviewer. Obviously be tasteful though.Post interviewsAfter the dust settled, I landed 3 offers, and am still waiting to hear back from 2 companies, 1 of which Im hopeful will convert to a 4th offer. 2 more companies paused hiring which really sucked considering I went through the full process, but whadya gonna do. And finally I got rejected by 2 companies.While overall I feel like my efforts were successful, I would still suggest holding off on interviewing until things normalize or better yet until the economy starts to recover. Virtual on-sites are doable but I much prefer real on-sites, and having companies drop out mid-process was also not fun. ### Other takeaways Be careful of pattern matching. One downside of grinding LC is you become highly calibrated to match patterns. This is often touted as a benefit, which it can be, but it can also get you in trouble. For example, on a few occasions I was presented with questions that were similar to problems Id seen on LC, but different enough where I couldnt just neatly overlay the solution from the LC problem, even though I tried. This caused me to go down the wrong path and waste too much time trying to remember a solution instead of just focusing on the problem at hand and trying to solve it from first principles. To help overcome nerves before an interview, do whatever it takes to put yourself into a good mood. For me this was going to the gym and playing uplifting music. Id even watch standup comedy shortly before the interview to ease the tension. Smiling and laughing really do work wonders, so try to do both before and even during the interview. When grinding LC, one thing I would have done differently was to take more time to THOROUGHLY understand problems. I was treating it too much like a race to solve X problems (gee I wonder where I got that idea). But real learning comes only when you deeply understand the problem, what makes it hard, why the solutions work, etc. This might mean you spend an entire day on a problem. Thats okay, itll pay off. Spaced repetition. Another concept I wish Id implemented earlier. Whenever you get a problem wrong, take time to understand the solution, then make sure to revisit it after a few days and try to solve it again. Id even do this for problems you solve on the first try if they are very common interview questions. The repetition really locks in your understanding.Thats all I can think of, hope this helps somebody!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_tgsofj","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/tgsofj\/its_so_funny_how_tech_companies_that_are_forcing\/","DATE":1647475200000,"PLAIN_TEXT":"I swear to God half the return-to-office companies I applied I got an interview, and they still pass me to the next stepinterview even if I absolutely bomb it.Start applying and youll totally notice it. Remote position are the same level competitiveness as usual. Youll get a few interview here and there, but you definitely need to nail each interview to get to the next one.Not the case at all with companies working at office right now. Theyre so desperate and its delicious to watch lmao","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_zwocj0","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/zwocj0\/my_revature_horror_story\/","DATE":1672099200000,"PLAIN_TEXT":"Hi, Im currently with Revature (by name only, they havent paid me in 2 months) and this was going to be a comment on a post from a few months ago, but it was getting kind of long so.. What the hell lets make this into its own post! If you dont know what Revature is, theyre an Indian turned American ~~scam~~ company that trains new CS graduates in specific programming stacks in hopes of closing the skill gap between what a college student knows and what companies expect new hires to know. After training it places their students into jobs and Revature keeps a large chunk of your salary for 2 years. Training is completely remote and you make the equivalent of 40hrs a week at minimum wage during it. When placed with a client you earn 45k annually the first year and 60k the second. (you can get paid 55k-70k if youre placed in high COL, but Revatures definition of high COL basically only equals the SF Bay area and NYC) The training was fine. It was probably too fast for me if Im being honest. I did well enough on their testsinterviews to get by, but most of the things I learned were not retained because it was so much so fast. In school I learned languages, but thats such a small part of what a software developer needs to know. Had no idea what a framework was, how to use libraries, how front end and back end applications were supposed to communicate with each other, and honestly my understanding of these things are still rudimentary at best. What stuck with me is how to use Git, which believe it or not I never had before. My batch was JavaReact btw. After training is where things start to go off the rails. Getting placed is such a roll of the dice. You go on interviews, but dont have any input on which companies. Some people from my class got a great placement and are doing fantastic. Some were placed on help desktech support jobs, which sucks, but I think I got the worst case scenario. I was placed with another Indian turned American ~~scam~~ staffing company which was then going to place me with a big name cell phone company. Which was weird, like I was working for two middlemen. I had 1 week notice to move across the country, (Revature only gives you 1000$ as a moving stipend btw) and took on debt to make this happen. Found an apartment on [apartments.com](https:apartments.com), moved in, yadda yadda yadda. First day there was a big orientation with about 50 other people in the exact same situation I was. Taken from not only Revature, but a plethora of other similar companies. A bunch of Indian men then gave vague speeches about the culture of their staffing company and their journeys to success for about 4-5 hours. We were then given our computers, name and email address of our managers, and a list of HRsecuritynon-technical tasks to complete. We were also told that our jobs would be mostly remote, but they made us move because they wanted everyone to live in the same area. I spent the next 2 days doing these little HR pre-req courses, signing an NDA (which if Im breaking in this post.. I dont care, fuck you), and getting the internet turned on in my new apartment. I emailed my manager that I was done and awaiting further instructions and........ Nothing. I would email this guy 2-3 times a week asking him what I should do, that Im waiting for someone to give me work, how to proceed with on-boarding.. Silence, he never responded. I emailed other random people who had sent me things on my work account asking them about the situation, only to be given vague excuses about some managers emails being overloaded so I should just keep trying, or that he was on vacation and should get back to me soon. After about 3 weeks, I physically went into the office where orientation was held and started asking around. By chance I ran into his boss, who told me that hed talk to my manager about getting me started. He also told me not to show up to the office unannounced like this again. That must have worked because for the first time in about a dozen emails my manager actually responded to me. He had a few forms for me to sign, and told me the reason I hadnt been on-boarded yet was because my (work) email address had to be migrated to another domain first, and that as soon as it was wed get started. Then a week went by.. Then 2.. Then 3.. And I dont hear anything from anybody. So I start emailing my manager again asking whats up. Only to get no response again. At this point Im kind of fed up, I shouldnt need to be begging my managers for something to do. It had been almost 2 months and all I had done were some introductory HR tests. Reaching out to my manager and one other guy who was supposedly on the same team as me 2-3 times a week turned into once a week, turned into once every other week, turned into fuck it, Ill wait for them to come to me The client never used me. They paid me to do nothing for 7 months. They forced me to move across the country for a job that they didnt have me do. The only time another human from this company contacted me the last 2 months of this was the tech support team telling me to update the antivirus on my work laptop. This is where Ill admit personal responsibility. I should have used these 7 months to work on my skills, to make projects related to software development. Maybe this field isnt right for me because building websites doesnt excite me, Im not a dream in code type, I need a push, I need structures to force me to learn. If I try to do a project, itll be fine until I reach a point where I dont know what to do. I dont possess the resolve to push through walls like that. I was working on stuff, I have a youtube channel that I spend 2-3 hours on daily, I made a few games in RPG maker (which requires next to no programming), but nothing to show for this time period professionally. One day at the start of November (Wednesday the 2nd I believe), I woke up to find that my work email and all logins had been disabled, and an email in my personal account telling me to turn in my work laptop because I had been released. No warning.. Or possibly 7 months of constant warnings depending on how you look at it. The email didnt even come from another human being, it was clearly automated with just my name and ID number copypasted in. What is supposed to happen when youre released from a client, Revature is supposed to put you back into staging where youll earn minimum wage (which decreased from 10$ an hour to the federal minimum of 7.25$ because of the move) and theyll work on finding you another placement. Only my client never alerted Revature that I was being released. Despite me telling them every week, despite my case having been elevated, Revature still claims that Im with the client nearly 2 months later and have not placed me into staging. As a result I have not been paid in 2 months. Currently Im working a fast food job, selling stuff on ebay, and opened up a patreon for my youtube channel, so I dont get evicted. Even then Im still taking on debt just to exist, but it looks like Im going to need to move back across the country so I can mooch off family. Ive given up hope on Revature finding me another client, they havent been paying me so I dont mentally consider myself an employee of theirs anymore. Plus my confidence is completely shot. Which may be irrational because its not as if I was given a chance and when the metal hits the bone I simply wasnt good enough. I still dont know how good of a developer I might be. I knew that Revature was last resort type stuff, but I figured I would plug my nose and deal with it because after 2 years I would have experience working as a software developer and would be able to move onto a real job. Currently I cant even claim that. I still have no work experience, no idea what a software development job is actually like. My portfolio is subpar. I only have an associates degree, and my skills are nowhere near a professional level. I live thousands of miles away from anybody I know, I work a terrible job so I can afford to lose money by staying here. Im thousands of dollars in debt now and Im going to need to go further into debt just so I can afford to move back. Not really sure what point I wanted to make with this. Just wanted to rant. TLDR: I enrolled with revature about a year ago, and Im much worse off now than I was then.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_m008u8","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/m008u8\/ten_year_anniversary_of_a_enjoyable_job_with_a\/","DATE":1615075200000,"PLAIN_TEXT":"This month marks the ten year anniversary of my job with a unique shift. I work as an on demand remote DBA who works Fri-Sun 7AM-7PM and I get the other four days off. I also get great benefits like 7 weekends of vacation which amounts to 2 months of vacation if I take them separately with my shift. I picked up and explored many hobbies due to my shift giving me all the free time. Im trying to ride this job out as long as I can.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_go1nw6","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/go1nw6\/zuckerberg_says_company_will_permanently_shift\/","DATE":1590019200000,"PLAIN_TEXT":"[The Verge](https:www.theverge.comfacebook202052121265699facebook-remote-work-shift-workforce-permanent-covid-19-mark-zuckerberg-interview)&gt; We need to do this in a way thats thoughtful and responsible, so were going to do this in a measured way. But I think that its possible that over the next five to 10 years -- maybe closer to 10 than five, but somewhere in that range -- I think we could get to about half of the company working remotely permanently.[CNBC](https:www.cnbc.com20200521zuckerberg-50percent-of-facebook-employees-could-be-working-remotely.html)&gt; Zuckerberg announced that [big social media] is going to aggressively ramp up its hiring of remote workers, and the company is going to take a measured approach to opening up permanent remote work positions for existing employees. &gt; Employees who continue to work remotely and move to different regions will have their compensations adjusted for their new locations, Zuckerberg said citing that this is necessary for taxes and accounting. Employees will have to notify Facebook of their new locations by Jan. 1, 2021, he said. &gt; Well adjust salary to your location at that point, Zuckerberg said. Therell be severe ramifications for people who are not honest about this.Saw Square, Twitter, and Shopify do this but this move is a lot bigger. Good for tech or pathway to more off-shoring and lower salaries?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_syo5dq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/syo5dq\/to_those_making_bank_say_200kyear_how_different\/","DATE":1645488000000,"PLAIN_TEXT":"I am 5 years out of college with a BS in computer science.I make 95kyear, in a fairly low cost of living city.I work fully remote.I do full stack web development for a non tech company using Angular, JAVA, MongoDB, NodejsExpress, and various AWS products, depending on the project I am on. I work 7 hour days and have almost never worked overtime. &amp;#x200B;Everything is....fine. But I see all these high salary positions on here and it has gotten me curious: what would I have to sacrifice to get a salary like that? Would I have to move to California? Work way more hours a week? Be on call on weekends? What is the catch?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_10g8toc","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/10g8toc\/my_experience_with_revature\/","DATE":1674086400000,"PLAIN_TEXT":"Hello,I felt compelled to make a post about my experience with Revature. There are many posts like it but this one is mine. I will give you the Gods honest truth, as unbiased as I can make it. I actually wrote this like 2 months ago and was waiting until I had 100 karma on my other throwaway to post here.. then it got banned. Which is weird, because I am so well behaved.. Anyway, I guess Ill just post it on this beloved account.&amp;#x200B;Before Revature:In late summer of 2021 I was working a construction job with a Computer Science degree and very few prospects. A couple months of that in the summer heat made the idea of working for Revature go from a worst case scenario to a very tempting idea. Frankly I didnt care how much they were going to fuck me, I did not get a god damn Bachelors degree to put up fascia in 100 degree weather. So I did it, I bit the bullet and accepted that I was going to be an underpaid developer for a WITCH company... and not just any WITCH company, but the infamous Revature.Let me start off by saying that Revature responded to me FREAKY fast. I applied, and within like 30 minutes somebody called me. If this was for any other job I wouldve been ecstatic. Instead, I was deeply concerned. If you are reading this Revature, come off a bit less like a desperate ex. Ultimately, I accepted their terms. I did reach out to them first, after all. I was ready to do anything to not work construction.&amp;#x200B;Training with Revature:When I started my journey at Revature they were quick to point out that only 10% of the candidates that apply for their positions even make it to training. If that is actually the case, their candidate choices must include bobbleheads and dog turds. My training batch (as they called it) started with 35 people in it. Frankly, I couldve weeded out 10 of them in less than half an hour. We had a 60+ year old dude that would be hard pressed to start command prompt successfully. There were a few others that were not much better. Compare that to me and at least a handful of others that had Comp Sci degrees and the level of variance was staggering. As you can probably imagine, the first week was programming 101 and it was incredibly boring. If you are reading this Revature, do better at grouping your batches. Make people wait longer to start training and group people with similar educational backgrounds.By the second week we were learning about full stack development, which was somewhat interesting. From there we moved into Javascript, Angular, some Dev Ops stuff, and more that I have certainly forgot. Training was pretty hard to follow at first because every time our instructor would give us a simple instruction like start Intellij somebody would always fuck it up. Always. And then we all had to wait for them, just for somebody else to fuck up something else 5 minutes later. Since all of our training was remote and our instructor didnt really care if we had our webcams on, Im pretty sure I fell asleep on multiple occasions.There were 4 projects to be completed throughout training.1. A pretty simple app that used standard input to navigate through text menus. It used jdbc to connect to a database and did some fun stuff like that.2. An app with a frontend in javascript and a java backend that also did some database stuff.3. A team project (3-4 people) where you made a social networking app using Angular and a java backend. This took a lot of time but I learned a lot about Angular. Too bad my job doesnt use Angular at all.4. Kind of like project 3 but with the entire training batch on one team. We utilized microservices and had small teams on each microservice.The projects were great for learning. Who wouldve thought, coding stuff makes you learn how to code stuff. You could learn do any of these projects on your own, but they were still beneficial.Every week after the first 2 or so, we would be given an assessment in the form of QC (quality control). These assessments were done by a Revature QC person in front of the entire batch, which served two crucial purposes: Interview practice and weeding. In a nutshell you answered some questions from training such as name the 4 pillars of OOP until the QC guy was satisfied. You were graded for these QC interviews but not actually told how well you did. They mentioned that doing poorly in enough QCs would result in you being kicked out of training. I thought they were bluffing to make people try harder. They were not bluffing. Between people getting axed and people just realized they were not cut out to be a software engineer, our batch ended up going down to 18 or so people out of the initial 35.Around the end of training our instructor wanted us to fill out a review for Revature on Glassdoor, just giving an honest review of our experience. It was strictly optional. They are clearly aware of their poor reputation and want to change it. Leaving a review right out of training seemed premature so I told myself I would do a review only after I was no longer working for them, which is where this post came from.One thing worth noting is that your performance in training DOES seem to matter. Some of the top students and I were given interviews with a very well known fortune 500 company, whereas the people who barely made it through were given to another contractor company to be someone elses bitch. So after stumbling through the interview I was told that they were interesting in hiring me. After that I went into a sort of limbo, where I was just waiting everyday to get my start date. I still had to check in every morning, but after that I was pretty much getting paid minimum wage to do absolutely nothing. This lasted an entire month. It was awesome.&amp;#x200B;After training:Eventually they remembered I existed and I had to go work for this company for 45k a year. The pay sucked but it was remote and my cost of living was very low, so I was pretty happy. Fast forward ~10 months of doing that and I got a phone call from my Revature guy asking if I would like to work full time for the company I was contracted out to. I said yes, and now I am doing the same work but making a little over 100k. I did have to relocate and go into office, but I was always ok with that.Its worth noting that I am still on the hook for my contract in the sense that I am supposed to stay with my current company for at least 14 months (to equal the full 24 month contract). I have no idea if they enforce that but I have no intention of finding out because I really like my job. I probably got lucky with this whole thing but my experience with Revature was surprisingly pleasant overall. A solid 710.&amp;#x200B;If you have any questions I will do my best to answer. I dont think training is remote anymore so a lot of information I have in that regard is probably dated.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_r4xuaw","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/r4xuaw\/why_do_most_recruiters_on_linkedin_wish_i\/","DATE":1638144000000,"PLAIN_TEXT":"Usually I get a nice spam message from a LinkedIn Recruiter, this often looks like just an automated copy-paste message they probably send to a massive amount of people.I often ask something along the lines of:Hello, thanks for reaching out to me! Whats the salary range? Is it remote work? What cities are you hiring for? Which Tech Stack does the position use? How is the work-life balance &amp; culture at this organization? What time zone would I be working if remote? I am currently available for Senior or Mid-level positions &amp; promotions.My response is any combination of these questions, but they so very often rather setup a 15-30 minute call with me. Is there any reason they prefer to operate like this? Do they get bonuses for logging videoaudio calls? Am I being scammedtaken advantage more easily by accepting their calls?Ex-Junior developer looking to transition into a more mid-level role. Excuse me for the inexperience in the recruiting process!EDIT: Title is supposed to read--Why do most recruiters on LinkedIn wish I schedule a 15-30 minute phone  video call with them, instead of answering the few questions I have via messaging?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_o6kc3n","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/o6kc3n\/love_programming_but_ive_hated_every_single_job\/","DATE":1624406400000,"PLAIN_TEXT":"The nonstop meetings, the naggy managers, the having to wake up in the morning, the tight deadlines, the confusing code, the stress, the nothing-ever-goes-smoothely of it. I fucking hate it all so much. Even now that Im working remotely Im still so miserable. How do people do this their whole lives like this?Ive been drinking everyday the last 3 years tryna get through it. Its unbearable, draining and leaves me no time to do anything else Id like to do","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_8g0iip","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/8g0iip\/how_to_reject_junior_applicants\/","DATE":1525046400000,"PLAIN_TEXT":"Im graduating in a few weeks and my job I had lined up may not work out. I applied to this company recently and they sent me this response. Its the most kind rejection letter Ive ever received. Just thought Id share my excitement over being rejected. Cheers.&gt;alreadyheard, &gt; &gt;I had a chance to review your application to the Software Engineer position at Foo. Unfortunately, I dont feel like the position would be a great fit for you at the moment. &gt; &gt;We unfortunately havent found an effective way to on-board junior folks remotely just yet. So right now were looking for someone with at least a couple years of product experience under their belts. But based on what I can see of your work, it certainly looks like youve got the ingredients to become a talented engineer; Id love to hear from you again in the coming years. &gt; &gt;I wish you the best in your career search and hope that we can cross paths again in the future. &gt; &gt;Best, &gt; &gt;Bar","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_rkqlag","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/rkqlag\/would_you_live_in_a_rural_area_if_you_had_great\/","DATE":1639958400000,"PLAIN_TEXT":"Just wanted to open this up and see what people think as the last couple of years as the number of fully remote roles has gone from around 3-5% to now over 30%. Are you looking to get out and get some landlarger space? I moved to rural Vermont USA about 10 years ago from working in fintech in downtown NYC.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_sbm1kh","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/sbm1kh\/150k_12_hours_per_day_vs_230k_8_hours_per_day\/","DATE":1642982400000,"PLAIN_TEXT":"Both remote.Which one would you guys personally take? Currently I am in the first one. Wondering if almost 100k additional comp is worth it. Atm I put in an hour or two a day and thats it.. Sometimes on the weekend I spend a bit of time brushing up on new technologies  lc to make sure I dont stagnate.I know the first job sounds good on paper, but I definitely am feeling my skills stagnate here. The tech is pretty old too, and most of it is very basic maintenance work.. so I am worried about the future of my career.I am studying on the side (mainly during weekends) just to try and keep my skills fresh.Any opinions or advice? Thank you.&amp;#x200B;Edit: Thank you so much for some great replies. I understand that I am coming off as extremely entitled by making this post. I know I am in a good spot, its just that I would consider myself to be very passionate about CS and software engineering, so it feels like I am betraying myself by staying here. For example, I have friends who are working on some cutting edge stuff, helping to launch satellites into space, doing interesting research work in the medical field, etc... I too want to work on cool CS problems, so I am conflicted. The only reason I am considering staying is the fantastic work life balance and good salary. I appreciate all the genuine responses from you folks.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_10h2fo7","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/10h2fo7\/dont_self_sabotage\/","DATE":1674172800000,"PLAIN_TEXT":"I recently had the chance to talk with a few people from reddit and HN about some job offerings my company had. It was a cursory discussion not as a recruiter but as a manager looking for candidates for across our company. Here were the biggest issues I noticed:- For some reason those on video didnt clean up. Wearing a beanie. Wearing a wrinkled t-shirt. I at least threw on a polo and combed my hair. If talking with someone about a 6 figure job at least present yourself business casual- If you are desiring a remote position figure out how to present yourself remotely. Namely - have a working microphonecamera. I use a $15 model nexigo camera from amazon and never had any complaints. Practically everyone had microphone issues, their camera and mic couldnt be on at the same time, or had other technical issues. - If your talking with me about potential jobs have a resume or cv ready - dont just send me to your linkedin page. I need something I can distribute and a linkedin page doesnt always come across the way you think it does. Having a C-suite guy only have a linkedin page that says CEO of X company and a couple other Director positions with no detailed information was a bit of a letdown. When i asked for ResumeCV to share with others he had neither prepared.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ptjabd","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ptjabd\/a_senior_managers_perspective_on_remote_work_and\/","DATE":1632268800000,"PLAIN_TEXT":"Ive been a lurker on this sub for a long time, and I finally decided to write this post after reading many discussions on this topic. Some personal background context: I have been in the industry for 10+ years now. I have been ICs at companies ranging from a 6 people YC startup to two of the FAANG. Recently I helped in building an entire engineering team from the ground up at an early stage startup, through multiple rounds of fund raising, all the way to its successful acquisition by a major player in the same space. For the past year Ive been given a lot of resources from the new company to continue to scale up multiple teams, resulting in a phase of fast growth (doubled our org size in 9 months, with many more headcounts open). .Im here to share some of my personal experiences on team growth and management in the days of remote work. I will try to be as objective as possible (but Im human, so personal bias would still exist). The whole post is aimed to be descriptive instead of predictive, let alone prescriptive. In fact Im more than happy to hear suggestions or advice from anyone, regardless of your experiences or seniority. Lets begin.Onboarding new team members: The first challenge, and one that many here have faced, is the onboarding process experience for new hires during this time. The magnitude of this change is very much dependent on the onboarding process of the company, the culture, process, technical documentation of the new team, and the seniority level, and even the personality of the new hire. For example, I think Facebooks Boot Camp process would have scaled very well even with everyone being fully remote. This phase, however, gets more challenging for organizations that dont have as much resources devoted to onboarding and also for more junior engineers. The latter is most commonly due to the fact that they dont know what questions they should be asking and they very often lack the soft skills required to quickly build relationship with existing team members and start feeling comfortable asking for help. Ive found a buddy system to be very helpful, but its still not as frictionless as when I was onboarding people before Covid. This brings to my next point:Mentorship: First of all I believe mentorship and team learning is critical to the success of a growing engineering organization and extremely beneficial to engineers at any stage of their career, whether as mentees or mentors. A key factor to the success of a mentor relationship is...well the relationship in itself. At the end of the day us humans are driven by our animalistic instinct, and we tend to put in more effort and thoughts into our words and actions if they are targeted at people we actually like, care about, or relate to. Its very easy to fall into the tendency of seeing another team member as just a name on Slack at this point, and the quality of the mentorship relationship suffers as a result. A senior engineer seeing a junior engineer visibly showing their frustration in the office may very well proactively go offer help, but in the days of WFH its very easy to fall into the mode of Out of Sight, Out of Mind (which has another bad side effect that Ill touch later). Collaboration: The unique thing about collaboration is that people tend to collaborate more when they observe others doing the same. When you are in a physical office you can see two people have an argument in front of a whiteboard. You can stop by to listen in, or even join them if you find the subject interesting. With SlackZoom based work environment, a lot of that is now gone. This is actually uniquely a problem for new hires because many of them have told me that they got the initial impression that the team is not very collaborative and people dont talk to each other. I know for a fact that a lot of the collaborations on my teams takes place in 1:1 sessions or DMs, but none of that is visible for the rest of the team. So from a new hires perspective, it appears the team is made up of a bunch of anti-social loners when the reality is far from that. However because of this initial impression, some of the new hires actively chose to conform to this new perceived team culture, which ends up further contributing to the problem.Team culture: This is a topic that many have touched on already, so I dont intend to elaborate too much further. But Id like to bring up one particular point by using examples of two extremes. One one hand you can have a team culture where nobody ever turns on the camera at meetings and sees coworkers as fellow GitHub contributors that you dont want to interact with unless absolutely necessary, to the other end where people genuinely like each other on the team and enjoy a quasi-friendship with coworkers that cultivate in meaningful relationships that last beyond the job itself. Now Im actually not trying to proclaim which one of those is superior to the other, and I very well understand that many people can prefer one of them over the other (I have my own preferences obviously), but I would like to point out that given the nature of remote work, unless intentional efforts are put into it, it is much easier for an organization to slide closer toward the former end of the spectrum. Whether that is a desirable effect is up to debate, but it is an observed effect.Management and Performance Reviews: Speaking for myself, I absolutely do not believe in micro-managing. I dont need to follow individual PRs of my engineers. I dont care if you work exactly 40 hours a week or what your exact working hours are (to a reasonable degree at least). I dont need to know what exact meetings you are in and who you talk to, and I definitely dont want to check in with you on a daily basis. My job is to help you grow as much as you can both as a person and as an engineer, give you all the resources to do your job and then get out of the way. If by the time you leave this job (and everyone will eventually), you can look back and say That was a cool team, I built some cool stuff and learned a lot, and I hope the next job will share some similar positives, then it means Ive done my job. That being said, Im still a slave to all the intrinsic human tendencies. Very often it is hard for me to keep track of your accomplishment and your contribution to the team, especially as the team quickly grows. During the office days it was easy for me to pick up a lot of the small signals here and there that help in painting a more accurate big picture at the end of the year. But now with those opportunities gone, it is much more challenging for me to get the same information if my reports dont actively tell me their accomplishments, the challenges theyve faced, the problems theyve solved, the people theyve helped, and the impacts theyve made. I will do my best in proactively seeking those out but I will be missing things here and there. The people with better soft skills at communicating those items will inevitably leave a stronger impression in my mind at times of performance review and promotion. Simply put, it was much easier for me to actively calibrate against the more visibility == more concrete impact bias when I was sharing the same physical space with people. I want to be as fair as possible but at the end of the day, I cannot fully compensate for the out of sight, out of mind effect. This absolutely applies to companies that use peer reviews too. The above are just some of my observations and my personal experience. I dont have answers to a lot of this (I do have ideas), and I think the whole industry is trying to figure this out right now. People obviously feel very passionate on this subject, and much of that is driven by their personal preferences. Ive heard of people threatening to quit if the company goes back to the office and Ive also have heard of people threatening to quit if the company goes fully remote. But regardless of personal preferences, the above are unique challenges that we as a community will need to figure out in the coming days.Please let me know if you have any thoughts or even follow up questions on anything, thanks for reading.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_p1mp00","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/p1mp00\/soul_sucking_job_as_new_grad\/","DATE":1628553600000,"PLAIN_TEXT":"Few months into my new grad SwE job in Defense and I am genuinely depressed. My job is fucking miserable. There is 0 remote opportunity, I work 10 hour days in office in a closed area which means I cant even have my phone on me, and Im doing work I am highly unmotivated in. Its all embedded C++ but I am given tasks to fix bugs on code that I have no idea how to fix, it is a lot more engineering-focused rather than software focused. Fixing components that people havent touched in 5+ years, who all left the company btw, so Im tasked in figuring everything out myself. My tasks will probably roll this sprint because Im just so fucking lost. No mentorship or guidance given.This place is awful and it is sucking my soul dry, I yell curse words to myself in my car every morning because of how much I dread going in to work.How do you guys stay motivated to LC and do side projects on the side of working 40 hour weeks. I am incredibly exhausted at the end of the day and struggle to make time for this.Ive never had much web dev experience but it seems like that is just the way to go these days, so I picked up a course on MERN. I hope I can find a new job as fast as humanly fucking possible.This was more of a rant but any advice would be appreciatedUPDATE: pretty overwhelmed with the amount of responses, I did not expect this. I want to thank everyone for all the information givenUPDATE 2: Im so thankful for this community. ","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ivxrv7","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ivxrv7\/people_with_95_jobs_how_do_you_find_time_to_study\/","DATE":1600473600000,"PLAIN_TEXT":"Whether it getting Maters remotely or preparing for interviews, how do you organize your day to find time to study or practice. I find that by the end of the work day I feel so drained I cant even look at Leetcodecoursesetc. I can study on the weekend but I will be progressing very slowly. Any tips?Edit: hey guys, I get it that apparently some of you work 23h a day and have a dozen toddlers to look after. I admire your dedication and work ethics, but lets try to keep gate keeping down and focus on productive tips","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_k1gde6","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/k1gde6\/i_handcurated_450_remote_jobs_letting_you_work\/","DATE":1606348800000,"PLAIN_TEXT":"Here I would like to share more than 460 remote jobs that Ive curated from Hacker News Who is hiring thread. All these are 100% remote jobs not just allowed to work from home during COVID-19. These are 100% remote jobs and will continue to follow that after the covid.https:remoteleaf.comwhoishiring. 100% remote full-time jobs. Each and every job is manually curated and verified. Spent more than 14 hours on this.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_alpxur","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/alpxur\/success_story_20k_to_115k_in_5_years_if_i_can_do\/","DATE":1548892800000,"PLAIN_TEXT":"I also want to share my journey to help anyone who is feeling lost and like theres no hope for them to get a job.Let me start off by saying that I 100% believe that if I can pull this off, so can you. I barely graduated high school because I skipped class all the time and I dropped out of community college after 2 semesters because I couldnt be bothered with doing homework. Its not that Im an unmotivated individual, but I just cannot stand formal education. Something in my brain isnt wired that way. So, rewind 5 years ago. Im 18, freshly out of high school, working as a Deli Manager in a grocery store making something like $11 an hour and also working as a movie theater cleaner for $8 an hour. I also lived with my girlfriend (now wife) who was in school full time for education. My normal schedule would be 5am-3pm at the deli, then 6pm-2am at the movie theater. I worked 17 hour days for a year just so we could afford to eat and have somewhere to live. I would also like to point out that neither of us come from any money. If I lost either of my jobs, wed be out on the streets.Anyways, back to the story. Notice how I mentioned I worked 5am-3pm and then 6pm-2am? Guess what I did for the 3 hours in-between. The deli I worked at and the movie theater were both right across from the street from each other, with a Starbucks in the middle. So every day once I was done at the deli, I would mosey over to Starbucks with my laptop and make stupid simple websites with basic HTML, CSS, and JS. I knew working 17 hours a day wasnt sustainable and I thought maybe being a web developer would be a good fit for me since I liked solving problems and solving puzzles. Once I had something like 4 or 5 simple static websites created and looking moderately presentable, I created a portfolio and began to apply to every web developer job I could find. I finally landed one making $10 an hour. I was responsible for taking static websites and implementing them into Wordpress. Nothing crazy, just replacing some static text with dynamic fields on the backend. I absolutely hated this job because the boss was such an asshole, but I am grateful every single day that I stuck through it because if I had quit, I would still be working in a grocery store.So cut to about 8 months into my first dev job, and I apply to another job closer to my apartment. This one isnt offering an hourly rate, but their starting salary is $30,000 a year. Let me tell you, when I got that offer in hand that said $30,000, I thought I was rich. I legitimately couldnt believe how much money they were willing to pay me to sit in an office for 8 hours a day and learn how to be a better developer. At this job I had a really great mentor and boss who I really appreciated. I stuck with this job for about a year. One night, on a whim, I decided to apply for a developer job posting I found on [weworkremotely.com](https:weworkremotely.com) for a marketing company that was based in California (Im in Florida). I knew there was a 110% chance no company would be crazy enough to hire some 20 year old guy without a degree, with barely 2 years of experience, to work for them remotely, but you miss 100% of the shots you dont take, right? Plus, the worst they could do is send me an email saying Thanks for applying, were going with another candidate, blah blah blah.Nope. The next day the creative director sent me an email and wanted to schedule a Skype interview for that day. Somehow I managed to convince them I was a worthy enough hire. They offered me $50,000 to work for them, full time, from home, in Florida, with 100% paid healthcare for me and my wife, and unlimited PTO. Whaaaaaat.Now Im really freaking out. I barely have 2 years of experience and this company is offering me $50,000 to work for them and create projects for their clients. That would be fine, except their clients ended up being Disney, FOX, Cisco, Dolby, and a few others. So what do I do? I stick it out, work 12 hour days, and thank god each day for some company being crazy enough to pay me that much money to add projects for companies like that to my portfolio and resume.I stayed at that job for about a year and a half, learning all that I could. However, I didnt have any senior devs above me and I knew if I really wanted to grow as a developer, I needed to find a new job somewhere that Id have a mentor and someone who would beat best practices into me. I applied for a job at a media company, with a team of 10 devs, offering me $70,000 a year. I had never worked with that many devs before and I had especially never imagined making $70,000 a year at 21 years old without a degree. When I interviewed there, I remember being so intimidated. I was certain all of the other developers would instantly notice I was a fraud. However, I powered through the interview and their coding challenge. To my surprise, this company was also crazy enough to hire me. I worked here for almost 2 years with the intention of only leaving if I got fired or let go. $70,000 was great, the mentors were great, the company was great, the work was great, everything here was great. Cut to last August. I got a message on LinkedIn from a VP of a F500 company that was looking to branch out into the market of my current employer. They needed developers. They tell me to name the title I want and salary I want. Well jeez, okay. Now here is where something happened. Through the process of talking with this new company, they were not interviewing me. I was interviewing them. The entire time. If I were going to leave my perfect job, I sure as shit better be leaving for an even more perfect job. So... salary? I think Might as well aim high. I have nothing to lose.. So I tell them I want $110,000, expecting them to meet me somewhere around $90,000 or $95,000.Nope. They offered me $115,000 base salary + $20,000 in bonuses. Well god damn. I took that job faster than Internet Explorer crashes. I never, ever, ever, imaged I would be 24 years old earning six figures without a degree. I definitely did not even think I would ever hit six figures in my entire lifetime. But I guess the moral of my story is persistence is key. Through the first 2 and a half years of my career, I studied during all of my free time. Every day before work, every night after work, and I held myself accountable to at least 6 hours each day on the weekends. If I, a feeble brained guy that can barely cook without catching my kitchen on fire, can do it, so can anyone else. You just need to be persistent and not give up.EDIT: Now that this post has hundreds of comments, I wanted to take a second to address the 2 types of negative people that have been messaging me and commenting. 1. To the people saying this is an add for WWR: Honestly, Im not sure how you read such a long post and the only thing you picked up was a website that barely added any backstory lol. If I were an advertiser paying money and this is what I got, I would 100% want my money back because this would be a terrible ad. By the way, make sure when you go to apply for a new job, you check out indeed.com! (s)2. To the people so concerned with how I slept when I worked in a deli: Well, I didnt... that much. Ive had a few people message me that understand and can empathize, but if you actually need to work and going to work is a choice between eating or not eating, you dont really have a choice. Also, not sure where everyone got the idea that I was working 17 hours a day, 7 days a week. If youve ever worked full time, anywhere, you usually get 2 days off a week lol. Mine would be Wednesdays and Sundays, and this is when I would sleep. I also had a comfortable car to sleep in during lunch breaks at work. To everyone else, thanks for not feeding into the negative people and contributing to the conversation! And thanks everyone for the well wishes. ","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ud418m","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ud418m\/i_think_im_just_gonna_stop_going_into_the_office\/","DATE":1651017600000,"PLAIN_TEXT":"My company implemented a new policy saying we have to be in the office at least 16 hours a week. This is after being fully remote for almost 2 years through Covid. Im just so sick of going into office. I rarely have to interact with anyone unless theres a meeting which is also rare for me. I just want to stay home and get my work done. And yes Ive talked to my boss about it a few times. He basically said our team cant be the exception to the rule even though multiple people in my department have switched to fully remote or rarely come in. I dont want to just up and leave either cause I really like my job. So I think Im just gonna stop showing up. Today I was supposed to go in and I just didnt. Pretty much just gonna force their hand to fire me or let me work remote. Has anyone else successfully done this?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_usrwyf","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/usrwyf\/my_failed_attempt_to_jump_to_a_bigger_ship_w_3\/","DATE":1652832000000,"PLAIN_TEXT":"I have 3 YOE at a large (not well known) company, originally hired as a junior graphics programmer with some computer vision. Yet the last 3 years my company had me working in the C++ plumbing side of things, solving system-specific featuresissues. More recently I was moved to a lead role for various IOS projects despite my annual requests for more graphicsCV roles. Ive probably only written 4 shaders during my time here. Ive kept my projects up to date, but they arent anything mind blowing. One weekend night, out of frustration I tossed some applications out there not expecting much, but to my surprise got callbacks for 1013 positions, mainly at some of the giants in our industry. So I got to studying again, while continuing to work full time, and I only had 1 month to prepare. The study plan:My primary areas of focus were as such in order of importance:1. Leetcode (85 done in 4 weeks)2. C++ (the usual, but with a focus on multithreading)3. Graphics4. Linear Algebra5. HardwareOSI filled up 7 pages of paper back to back writing out my notes for #2-5. Monday-Friday, Id do 3 LC questions from neetcode, where Id attempt the problem first. After 15 minutes Id watch the solution, then implement it on my own. Then Id review the notes written up to the previous day, and write some more notes. For stuff like linear algebra Id do a final exam wsolutions released somewhere on google from some university. Every Saturday and Sunday was dedicated to re-doing all of the LC problems Id solved up to that point.RESULTS:My resume got me good callback rates, and I made it to onsites for about half of the 10 callbacks. My study plan was great as well, there wasnt a single problem I wasnt able to solve, though they werent always optimal. In the end, the odds didnt work in my favor. Out of the 10 callbacks:Made to onsites:- Some fruit company: Did perfectly on phone screen, and the tech screen. Onsite I did well on about 75% of the interviews, but it was enough to drop me from the running. I knew I was out of my league here, but it was a valuable experience.- A startup: Crushed nearly everything, some of the interviews on the onsite were a bit shaky since it seemed like they were looking for a unicorn. I honestly used this one for practice, but did get an offer. However the comp wasnt great and I dont want to be at a startup at this point in my career.- A game studio owned by Microsoft: I did solve all the problems they gave me, but it required a hint or two from the interviewer. Someone definitely just did better than me here.- Company that makes VR goggles: They didnt ask me a single question related to graphics lol. From beginning to end it was LC, so again someone probably just did betterfaster than me, even though I found optimal solutions.Dropped after tech screen:- Rainforest: I dropped the ball on a LC-medium question that couldve been easily optimized, I wasnt on my A-game.- A social media app: Did well on the tech screen, but dropped regardless. Other candidates probably had better backgrounds.Dropped after phone screen:- Companies Green, Red, Blue: For all three, I suspect my lack of graphics driver experience was the culprit.- An animation studio: The devs on the team seemed to like me, but my lack of graphics research experience hurt my chances here.Some obvious proscons about myself I could pinpoint:Cons:- Others likely had superiormore relevant projectsexperience like with graphics drivers, subdivision surfaces, CUDA, etc. That wouldve helped me get past the phone screens for places like green and stand out better for the other stages.- All the tech screens were solely Leetcode. I at least solved all of the ones they gave me, but sometimes had trouble pinpointing how I could optimize or shorten some of them. More grinding is required for the top positionsPros:- I am very experienced in various parts of the stack with multiple languages and platforms (which happened unintentionally because of my company haha). Companies were interested because of it, hence the good callback rate.- I may be an introvert, but I can communicate effectively and quickly build rapport. Even if a problem doesnt go my way, I can talk my way through it and come up with at least a solution.- Open to relocating, and open to non-remote. This one is huge. It greatly increased my odds.Conclusion:I still have a job, and even if the comp isnt the best its still good to live on and build some savings. Despite the stress, this ordeal helped me figure out areas I needed to grow in more and gave me confidence in other regards. I did damn amazing in the LCtechnical for only 1 month of studying, and even I couldnt believe I got 1013 callbacks.Ill do my hunting more casually now. I still do want better comp and a job closer to actual graphics, but prepping for and doing 20+ interviews in the span of 3.5 weeks is god damn misery. Suffered severe mood swings. Seriously, dont do this unless your firing is imminent or something.If youre working fulltime with some YOE, and you think you want to switch jobs, dont start applying like I did. Youll get the callbacks. Plan out a study plan over at least 3 months, and take it slow. Apply to a few companies at a time, dont shotgun.I hope my experience helps anyone looking to do a similar transition!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_iq7q88","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/iq7q88\/found_a_job_o\/","DATE":1599696000000,"PLAIN_TEXT":"Currently in Toronto but company is in San Francisco. I have kind of a big work gap but was told I did well on the interviews.First year is going to be pretty much remote then I could relocate depending on the pandemic situation(I think). Im guessing with how the COVID situation now companies are more open to employees from remote locations. (From what I was told there is someone else joining from Canada as well).Anyways just wanted to do a celebratory post! :DEDIT:This post got a lot more attention than I expected o_o! Im sure everyones experience is a bit different but here is kind of the process I went through.Without going too much into detail I have about a year of experience out of school, then had a gap and worked on my own app(gaming related apppassion project) for a bit. I dunno I think had a bit weird of a resume but I think I got some bonus points because I was pretty passionate discussing about the app.Interviews consisted of like 1 online challenge + 5 video calls in total with recruiter + engineers + CTO + CEO etc. The online challenge had a somewhat non-conventional question with non-polynomial time complexity with serializing, deserializing, traversing a tree etc. Then I had 2 calls with engineers with about a Leetcode medium-level question each, and talked a bit about system design and background.CTO call had a bit of casual system design discussion and rest were just talking about the company and ask questions and CEO was all chatting and asking questions about the company (I was a bit nervous so I kept asking from question list that I prepared :S).TLDR: Bit of leetcode + side projectsprevious experience to discuss + applying a lot + getting rejected a lot + luckAlso for those wondering how the remote is being handled - I think the way theyre going to do it is all compensationbenefits will be handled by an intermediate HR companyThats bout it and thanks everyone for the congrats :D","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_nylet9","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/nylet9\/from_biology_major_to_getting_my_first_raise_as_a\/","DATE":1623456000000,"PLAIN_TEXT":"Wanting to spread encouragement to all and an accomplishment of mine.I was a biology major, who started getting into web development exactly one year ago. I was able to self study and build projects, which led me through a path of one unpaid internship, one 15 an hour part time job, and now a full time remote job as an app developer. If anyone is feeling discouraged about being a self taught dev or not being a comp sci major, dont. Just keep grinding, keep applying, and keep learning skills that will make you undeniable to employers.I started at a below average salary at this current job, but now getting a raise to 80k per year. Sure this isnt FAANG money, but going from potentially going in debt for 3 more years of grad school, to working a flexible schedule from home, I couldnt be happier.If anyone wants advice or wants to work on any projects together, feel free to PM me.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_r9qnbg","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/r9qnbg\/went_from_a_music_student_to_a_software_developer\/","DATE":1638662400000,"PLAIN_TEXT":"Just wanted to post about my experience on here because Ive read countless testimonials from other beginner developers on this sub which have all helped me tremendously (and to celebrate a bit, of course). I started coding as a hobby around September 2020 as I was beginning my second year of my Masters program. I was gearing up to apply to PhD composition programs, but was realizing more and more that a career in teaching wasnt what I wanted to spend the rest of my life doing. While I should have been working on my composition portfolio, I was instead spending all of my free time learning Python and creating my first command line games (hangman, guess-a-number, etc.). I had no intention of making programming more than anything but a hobby until I got talking to a friend who worked in the tech field, and they casually mentioned that I could realistically make great money as a Junior Python developer if I really wanted to. I brushed them off at first, because - I mean, I was in middle of my Masters program already! My whole life I had known I wanted to be a musician, and thats the only career field I had ever really considered. But the more I thought about how little I wanted to teach, and how unlikely it was that I would ever make any real money from performingselling my own compositions, and how thoroughly I enjoyed coding, the more I became sold on pivoting towards the tech field. Around December of last year I finally made the commitment to pursue a career as a developer, and I had never felt more excited! I devoted all of my time outside of school to learning as much as I could, developing a portfolio, and around AprilMay I started applying to my first jobs. Once I graduated in June, I made applying for jobs my full-time job while I lived off of my savings. It was risky, and I had no idea if it would pay off, but figured I could always find a job at a fast-food joint if I ever made it to the end of my savings. Luckily, after 250 applications, 10 interviews with separate companies, and countless rejections, I finally landed a job at the end of September 2021. Fully remote, great benefits, a fantastic team, and of course an amazingly high salary for someone who had never made more than 28k in a year. I dont know if I really have any advice for anyone whos in a similar position that I was, but I figured Id share my experience because I know its the kind of thing I wanted to see when I was first getting started on my coding journey. Feel free to ask any questions though, Id love to help anyone if I can!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_teq2p4","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/teq2p4\/most_embarrassing_thing_that_happened_to_you\/","DATE":1647302400000,"PLAIN_TEXT":"I always forget other people have their slack notifications turned on! I work with a close friend. During stand up today, I forgot he was the one sharing screen and messaged him Jerry is going to fuck workflow where workflow is the name of our service and Jerry is a code name for a team were on boarding.My manager is a 60 year old grandma Ive never heard use profanity. For myself, meanwhile, this is the second such incident in a month.No matter how hard I try, I keep getting caught with my foot in my mouth on work calls. Ive accidentally turned my video on to show palm trees and a beach during an entire org-wide meeting. (Im not technically remote, Im supposed to be mainly in my assigned city.)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_xgogm3","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/xgogm3\/why_is_burn_out_so_common_in_software_engineering\/","DATE":1663372800000,"PLAIN_TEXT":"On paper, it looks like we have it all1. Remote work2. Crazy good salaries3. Great work life balance4. Interesting, engaging work5. etcSo then why is burn-out so prevalent among software engineers? Why are so many influencers leaving the field and making videos about how it wasnt what they expected it to be, how they were finding it difficult, etc?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_112b9am","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/112b9am\/walmart_cracking_down_on_remote_work_closing\/","DATE":1676332800000,"PLAIN_TEXT":"https:www.businessinsider.comwalmart-close-tech-hubs-force-workers-move-or-take-severance-2023-2?ampI still dont fully understand the consensus as to why corporations are so bitterly against remote work. FromThe article:&gt;\tThe unique culture and values of Walmart are at the core of who we are - to our customers, members, associates and partners, Munroe said in an email. With this in mind, weve made the decision to focus our tech teams presence within select locations. We hope to relocate all affected associates.It seems that theyre arguing its about focusing on culture and company values, but Id imagine theyre closing tech hubs in HCOL to offset paying some of the high salaries.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_n5flxe","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/n5flxe\/for_those_who_were_able_to_keep_their_remote\/","DATE":1620172800000,"PLAIN_TEXT":"Im a software dev for Jp Morgan been working from home for over a year now, and they want us back in July. I hate this, I hate waking up early, driving an hour there, wearing a suit and tie and shit, and driving an hour back, its exhausting. The company said we had a record breaking quarter despite the pandemic, I want to use this to argue that I should remain working from home. For those who were able to transfer to remote role what did you say? how did you go about it? did you worry about getting fired?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_1096ssa","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/1096ssa\/can_any_middle_managers_explain_why_you_would\/","DATE":1673395200000,"PLAIN_TEXT":"I work on a highly productive team that was hybrid, then went full remote to tackle a tough project with an advanced deadline. We demonstrated a crazy productivity spike working full remote, but are being asked to return to the office. We are even in voice chat all day together in an open channel where leadership can come and go as they please to see our progress (if anyone needs to do quiet heads down work during our all day meeting, they just take their earbuds out). I really do not understand why we wouldnt just switch to this model indefinitely, and can only imagine this is a control issue, but Im open to hearing perspectives I may not have imagined.And bonus points...what could my teams argument be? Ive felt so much more satisfied with my own life and work since we went remote and I really dont care to be around other people physically with distractions when I get my socialization with family and friends outside of work anyway.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_y8pb3z","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/y8pb3z\/where_do_you_find_extremely_chill_jobs_where_you\/","DATE":1666224000000,"PLAIN_TEXT":"Basically title.Worked out the math, and even making top salaries at top paying companies (stripe, etc) youll still end up sacrificing the majority of your prime years (20s, 30s and even 40s).Seems like the only way to true freedom is to find one of those jobs where you have your laptop on for like 2 hours per day while being fully remote.Where can I find a job like this? Life is way too short.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_fsi1qs","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/fsi1qs\/list_of_164_remote_jobs_handpicked_from_hacker\/","DATE":1585612800000,"PLAIN_TEXT":"Hacker News decided to create a new Who is hiring right now? thread to help people looking for jobs during this crisis. And it was a huge hit among companies who are hiring. Here I would like to share the entire remote jobs list from the big list of opportunities. All these are 100% remote jobs not just allowed to work from home during this crisis. These are 100% remote jobs and will continue to follow that after the crisis. [https:remoteleaf.comwhoishiring](https:remoteleaf.comwhoishiring?ref=reddit) 100% remote full-time jobs Spent more than 28 hours to curate this informationEDIT: Updated the link to my original post so that users can filter the jobs based on their location and skills.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_pmrlkc","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/pmrlkc\/are_these_reasonable_reasons_to_be_fired_after\/","DATE":1631404800000,"PLAIN_TEXT":"I joined a startup as a freshgrad with only 2 months of freelance experience and 1 internship. After only 1 month of being there, I got fired, the CTO told me its because I dont have enough experience and I have low confidence in my work and that I ask too many questions and questions that shouldnt be asked stating that I could go open a Stack Overflow post instead of bothering my senior developer for help. I told him that juniors can never ask too many questions, he said thats not true and quite the opposite. The CTO then told me he actually wanted to fire me from the first two weeks.For more context, my senior was working 100% remotely and I was working on an unfamiliar outdated tech stack AngularJSPHPLaravel on an old poorly written legacy codebase, I refactored a part of their code where there was a lot of duplicates and completed 3 Jira tasks during that 1 month.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_fzz6js","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/fzz6js\/should_partial_wfh_become_the_norm_not_just_in\/","DATE":1586649600000,"PLAIN_TEXT":"I was thinking about this today. I wonder if after this virus the ideas around work from home and remote work will change and so will how we work in general. Do I think that we will have some sort of revolution where offices are eliminated and every major company is run remotely? Hell no. But I do think that with this global pandemic and the forced trial period of WFH for pretty much everyone in America and all around the world right now, were going to come out of this with a changed perspective on what remote work is, how it should be done, and benefits and pitfalls. Now Im going to be optimistic here, very optimistic. But suppose that in the next 5 years, most companies in the US (lets say major US cities) decide to institute a partial WFH schedule where employees that can work remote will do so 2-3 days per week. Imagine the impact on traffic in your city if all of a sudden say 80% of the suburban population stopped commuting to work 2-3 days out of the week. Im not sure exactly what the average drop in traffic would be but I can see that it wont be insignificant.Another benefit I could see is say you have a fairly large SASS company with a footprint of 1000 employees. If only 300 ever showed up to the office on a given day, you could effectively downsize a 1000 person HQ to a 300 person HQ, significantly lowering facility cost and upkeep. Looking at this realistically I dont think any FAANG companies are going to benefit from this that much, I would imagine with how much revenue companies like Google, Amazon and Microsoft are bringing in, the cost of upkeep on their headquarters must be an acceptable amount and they arent suddenly going to divest from any headquarters theyve invested in (ie Apple is not moving out of Apple Park into a WeWork).However where I see this being of great benefit is for current SMBs and future developments from large companies. I could totally see an agency decide that it would be better to move from their 100 person office to a 25 person office, have everyone in only on days they are needed, and save big on rent in whatever major city they are in. As for future developments, while Apple might now downsize their current footprint, companies of that size may choose to use a WFH model to create a smaller footprint in new cities.&amp;#x200B;Idk what do you guys think?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ax3g2d","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ax3g2d\/just_started_new_job_my_mentor_works_remotely_and\/","DATE":1551657600000,"PLAIN_TEXT":"I started a new job 2 weeks ago, the job gave me a substantial pay bump and the position was for a role as a senior fullstack developer. I was interviewed by my current mentor along with other people and at no point was it ever indicated that my mentor actually lives on the other side of the country, nor was it ever communicated that my mentor is only going to have time for me at extremely shitty hours.Now, i am a fulltime dad with two baby girls, when i was interviewed i stressed this fact and was repeatedly told no problem. Only when i started 2 weeks ago did i learn that my mentor actually lives on the west coast (i am east coast), this person from what i can tell is basically untouchable and has been with the company since it started. My mentor seems to actually start work at around 2-3 pm my time (but shows up for stand up at 1 pm). Since i have started she keeps making meetings to bring me up to speed at times like 7~10pm my time. I have told her repeatedly my hours and the fact that i am a dad, however it doesnt seem to matter at all.After talking to my manager, another senior developer took up the task and brought me up to speed. Which was fine, by last Friday i had submitted about 3 PRs for various issues in our sprint. Unfortunately my mentor has blocked every single one of those PRs with vague comments that nobody can explain to me why, nor does she want to explain to me. I called her out during a stand up because i was fed up and frankly this is shit behavior, which seems to have pissed her off. Since we had plans to release by end of next week, i agreed to do an actual session with her today (sunday). Unfortunately almost immediately after starting it my kids started having a meltdown so i told them to give me 5 mins, so i can fix this. When i came back she ended the hangout, and sent me a slack message accusing me of wasting her time, and how i am not committed. Furthermore she recommended i find another job because she doesnt think i am the right person for this role. Frankly i am irritated beyond belief, however i get along fine with all my other coworkers and the person who set me up told me to develop a thick skin because apparently she is notoriously difficult to work with. If i sat down with my manager what are the odds i can keep this job? ","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_z816qv","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/z816qv\/snap_requiring_employees_to_work_from_office_80\/","DATE":1669680000000,"PLAIN_TEXT":"https:www.reuters.comtechnologysnap-employees-work-office-starting-february-2022-11-29&gt;Snap Inc (SNAP.N) will require employees to work from its offices 80% of the time, starting from the end of February, the company said on Monday.&gt;After working remotely for so long, were excited to get everyone back together next year with our new 8020 hybrid model, a spokesperson for the social media platform said in an emailed statement.article-prompt-devices&gt;Bloomberg News first reported the development and said the owner of photo messaging app Snapchat had asked employees to be in office four days a week from February.https:www.teamblind.compost%F0%9F%AB%A1-Snap-is-forcing-everyone-back-to-the-office-rbNuFUrTThis could be a way to get rid of more employees because some who dont want to return to office might quit. Will we see further return to office calls given the state of the job market  economy?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_uls197","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/uls197\/anyone_else_feel_like_remotehybrid_work\/","DATE":1652054400000,"PLAIN_TEXT":"When I say development I mainly mean your skill progression and growth as an engineer. The beginnings of your career are a really important time and involve a lot of ramping up and learning, which is typically aided with the help of the engineersmanagermentors around you! I cant help but feel that Im so much slower in a remotehybrid setup though, and that its affecting my learning negatively though... I imagined working at home and its accompanied lack of productivity was the primary issue, but moving into the office hasnt helped as most of my mentors are adults who understandably want to stay at home. This leave me being one of the few in our desolate office having to wait a long time to hear back on certain questions that I would have otherwise just have walked across a room to ask. This is only one example of a plethora of disadvantages nobody mentions and I was wondering if peoples experiences are similiar.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_10cc45v","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/10cc45v\/my_companies_return_to_work_policy_is_ruining_my\/","DATE":1673740800000,"PLAIN_TEXT":"Well essentially I finally got my big break at a financial company, and now in 2023 the company is instituting a return to work policy. Ive been fully remote working from across the country. My manager is pressuring me to move and cannot write me off as exempt. I cant afford to move right now. I just got married. This was my first job out of college. I feel shit now. I graduated in 2020, Battled depression and hopelessness. Didnt get my first job till July 2022. I reached the final stages of interviews for an insurance company rejected. Not Im doing interviews with a startup in LA right now. Wish me luck guys and gals. If anyone needs developers please PM me. or if you are willing to take a look at my resume I would appreciate it. Ill send an anonymous version. Im a full stack developer, and am working on my aws ccp in my free time right now. Ive sent out maybe 100 applications so far.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_qbox5t","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/qbox5t\/finally_got_my_first_wfh_offer\/","DATE":1634601600000,"PLAIN_TEXT":"I was a lead developer at an in house company, however when the pandemic began we went remote. About 10 months later, we were pushed back into coming into the office for no other reason than the CEO is a family oriented person and wants to see all his employees every week. I thought that was a little bit antiquated and wanted to move, but I had just moved into my very first apartment so I focused on stability. However as the months went along, I became more and more disgruntled at the fact I needed to commute to work to do what I already could do at home.I had hotter periods and colder periods of my search, but no one was biting until this September. I began working with recruiters on LinkedIn and they got me about 10 phone interviews. Of the 10, 6 were jobs I was interested i, 4 follow up technical interviews, 2 final round interviews and one offer. My salary boosted from 75,000 to 120,000(I know, I was grossly underpaid). I actually stepped down from a lead developer to a full stack developer and I have what really matters to me, full remote work.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_g7cqhk","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/g7cqhk\/my_employer_fired_me_and_is_giving_me_bad_reviews\/","DATE":1587686400000,"PLAIN_TEXT":"TLDR: employer fired me, giving me bad reviews when perspective employers ask, Im thinking of remote jobs from other countries. Will I have the same trouble? What else could I do other than sue?Im not sure how much this situation applies to other parts of the world, so for context, I live in a certain Asian country.My (ex-)manager is a grade A idiot who doesnt know anything about anything. I was the senior most developer in the team and the only one who would stand up to him when he made ridiculous decisions. I always did this with respect (which he honestly did not deserve) and substantiated any claims or counter ideas properly. He obviously hated my guts, but over the years it had become somewhat of an unspoken rule that he would dick around with new ideas but nobody would implement anything before I or someone else senior in the team had a chance to fix his stupidity.Around four months ago, the guy decided hes had enough of me and started making my life hell in any way he could. Abusing me verbally passive aggressively, joking at my expense during corporate lunches and parties and he started pushing all the worst, most inane work on to me. After a month or so of this he managed to completely destroy my work life. I had no motivation at all and my mental health was taking a big toll.In retrospect, this should have been when I quit the job, but having worked in the company for a good 5 years, I felt there was a real opportunity for me to lead a team in the near future, so instead I decided to fight him. I spoke to him frankly about his treatment of me, but he pretended like nothing was happening and I was just unhappy with the work for some other reason, maybe personal life. I spoke to his senior, but that didnt do anything either. After a few more weeks of this I filed a formal complaint with HR.This is when shit really hit the fan. Within a few days HR gets back to me and says theyve found no wrongdoing on his part and theyre closing the complaint. The next day, the manager fires me citing performance reasons. I tried to fight this as well with HR, but they refused to take me seriously. It was a simple case of consistent underperformanceI was devastated and pissed off. This was the only company I ever worked for. I joined straight after uni and worked there for more than 5 years, always delivering more than was asked of me. If I do say so myself, the entire team would be in a significantly worse place if it wasnt for me.Anyway, after a few weeks of sulking and punching pillows, I decide to start applying. Within a few weeks I got two provisional offers, but they were withdrawn at the last step - document verification. I asked them why, one of them wouldnt disclose the reason and the other said when they were doing background checks and checking my references, they called up my the previous employer and got a negative review.I didnt know this before, but where I live its apparently standard procedure to check with the previous employer when doing background checks.Obviously youre thinking I should sue them, and I tried. I hired an attorney and sent them a notice, but they replied that they do not believe they acted wrongly and would gladly fight this out in court. This sucks for me because going to court would be really expensive and would take months, especially with the Covid situation.So it seems my only practical option now is to look for a remote job from a different country. Now Im confident I can crack the interviews and honestly wouldnt mind taking a relatively junior position as the pay would likely still be higher, but Im worried about background checks and references. Any advice on what I could do? Is it common to speak to previous employers in other countries as well?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_pe34my","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/pe34my\/are_the_salaries_even_real\/","DATE":1630195200000,"PLAIN_TEXT":"I see a lot of numbers being thrown around. $90k, $125k, $150k, $200k, $300k salaries.Google interns have a starting pay of $75k and $150k for juniors according to a google search.So as a student Im getting real excited. But with most things in life, things seem to good to be true. Theres always a catch. So i asked my professor what he thought about these numbers. He said his sister-in-law gets $70k and shes been doing it a few years. And realistically starting were looking at 40-60k. So my questions:Are the salaries super dependent on specific fields?Does region still play a huge part given all the remote work happening?Is my professor full of s?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_j0u6gg","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/j0u6gg\/how_are_you_doing_mentally_with_full_time_remote\/","DATE":1601164800000,"PLAIN_TEXT":"I loved it the first few months. The lack of interruptions, useless chit chat, avoiding the commute. But recently, its just gotten old and stale. Maybe its because we also take COVID seriously and only venture outside the house for groceries and necessities a couple times a week. I think I enjoy remote work but would prefer an option to go into the office a couple days a week just to break up the monotony.Otherwise, we go on a lot of walks around the neighborhood to get fresh air. Its all become very tedious. I can understand why people are saying F it all and wanting to resume their normal life and take their chances if they are not in a high risk group. I dont see how this is going to last another 6 to 12 months without people losing their minds.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_4ce2s3","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/4ce2s3\/resource_interview_questions_my_massive\/","DATE":1459209600000,"PLAIN_TEXT":"This is a copy of my Interview Questions google-doc Ive updated over the last 2 years. Primarily, I am screening for (1) work-life-balance (2) professional advancement and (3) comforthappiness.Disclaimers:Before we dive into the cheat-sheet, a few important disclaimers. This cheat-sheet is NOT designed to get you hired, in fact, its designed to do the opposite. Its designed for cynical old bastards who dont want to waste their time on high-stress, unfulfilling, abusive, or low-quality jobs.Some of these arent questions, but rather research items. I dont ask every question in every interview, but Im also not afraid to ask multiple interviewers the same question to see if theyre genuine or polishing a turd. The cheat-sheet is intended to be concise, not precisely worded, so phrase these however comes across naturally.If youre unproven and have few job prospects, you may wish to be tactful in regards to some of the work-life-balance questions. You may also wish to defer questions like do you offer free lunches, and instead do research on their careers page, glassdoor, or simply taking careful note of the office-environment when you do the on-site.If you dont understand why I ask some of these questions, just ask, Id be happy to share. Feel free to add your own, or provide feedback. Enjoy!-----Interviewer Name - (Write it down!) Your role? Which office do you work at? Time with company?Company Years in existence? Core Product(s) &amp; Core Software Product(s)? Who uses the software? Total employees? Total technical staff? Tech-staff breakdown (dev,qa,ops,etc) Business model? Customers? Clients? Specialties?Office Location - Commute, Stuff nearby Environment - Cleanliness, Comfort, See where Engineers sit, Desk Size  Monitors  Standing desks, Nearby Sales teams, Breakout rooms, Personalization (desk toys or pictures?), spacious vs sardines, kitchen area Seating - Open office, cubicles, shared office, private? Spacious vs sardines? Equipment - Monitors? KeyboardMouse? Desk? Standing Desk? Anything expensable? Other - Dress code? Parking cost?Happiness: Me - Tell me, do I want to work here? Why? Why might I not want to work here? Motivation - What do you find motivational about working for [company]? Trap - What do you find the most challenging or frustrating working at at [company]?Work-Life Balance: Hours - Average # of hours YOU work? Any after-hours or weekends? Office Hours - What are typically required office hours? WFHremote? Crunch-Time - How often is crunch time? What causes it? Other - Travel? On-Call? Remote teams (lateearly meetings)?Work Development Process - Step me through your development process, from a tickettask, to code on production. Design, Planning, Coding, Code Reviews, QA, CI, Testing, Deployment, GIT? Management  Agile style? Meetings - What meetings? Time in meetings? Estimates? ClientCustomer? Scrum meetings? Retrospectives? Work Examples - Examples of tasks YOU (interviewer) recently worked on, or currently working on? Needs - What need(s) are you trying to fulfill with your open position(s)? Daily - What kind of taskswork should i expect daily? Any non-specialty or non-dev tasks (i.e. SysOps work?) Tech Stack - FE, BE, Deployment, 3rd party Integrations, Libraries, Languages, Architecture. Team Breakdown - PM, QA, DevOps, FE, BE, SQL, etc. Tech Debt - % time for tech-debt, refactoring, readability, automation, or improving the code base. Experimental - % experimenting with libraries  languages  techniques?Deadlines &amp; Tasks Task Source - Who decides what gets worked on? Where do featurestasks come from? Influence - How much influence do engineers have over featurestasks? % of tasks driven by Engineering team? Autonomy - How autonomous do you feel in your daily work? Why? Deadline Source - Who creates deadlines? Where do they come from? Deadline Pressure - How much deadline pressure is there? Resources Software Licenses? - IntelliJ  etc. Learning Resources? Provided foodsnacksdrinks? Any office perks?Professional Development Motivation - How are engineers supported in their continual professional development? Resource - Can any professional development resources be expensed, such as books, training materials, classes, or conferences? Mentorship - Does your company specifically practice mentoring? What does that usually look like? Events - Internal classespresentations? Hackathon week?Flexibility How strict are times employees are required on site? Work from home? Dress code?Perks Health Insurance? Lunches? Company Activities? What can be expensed? Learning resources? Raises? Promotions?Human Resources Steps required between now &amp; actual employment - or anything that may prevent employment after an offer? Drug tests, references, security clearance, other paperwork. Copy of employment contract  Agreements. IP Assignment clause &amp; non-compete.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_t7f5pc","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/t7f5pc\/anyone_else_find_themselves_working_extra_hours\/","DATE":1646438400000,"PLAIN_TEXT":"For context Im 22 and graduated last year and since I graduated Ive been working as a developer for a bank Basically from my bedroom. Most of my coworkers log off teams at like 5:30 but sometimes I find myself working till like 7pm and even on the weekends. I dont really complain cause sometimes when I start a task I really want to complete and when I have spare time Ill pick up other task to complete and I also dont really do anything with my spare time after work other then play fifa and 2k. Ive never worked in an office setting before but I feel like since working remote and working in my bedroom I have less reason to not continuing working past 5:30. Is this bad, cause my fear is once we starting going back to office Ill start bringing my work home.EDIT : Didnt think I would get this much replies but thanks for all the replies and Im going to start taking it easy on myself now","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_gc7dmb","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/gc7dmb\/remote_internship_advice_so_you_make_the_most_out\/","DATE":1588377600000,"PLAIN_TEXT":"With many remote summer internships starting in about a month, I wanted to share a few pieces of advice that helped me have an enjoyable experience and get return offers from the last 4 internships and land my 5th at GitHub this summer: - Reach out to your manager if you havent already, say hi, introduce yourself and share the excitement about the internship. Dont overcomplicate it; theyre just individuals like you and me. Getting to know people before starting to work with them is a great start.- Ask for a project-specific tech stack and look for stuff that you might not be familiar with. One month is enough to cover the basics of anything you didnt learn at University and will save you lots of time (and stress) once the internship starts. (eg. for my last internship that was RxJS as whole application state management was done using Reactive observables)- Define with your team when you should ask for help. Youll run into obstacles every day. Some might take 30 minutes to solve, and others might take forever. Find a balance - You dont want to interrupt the whole team every 30 minutes, but dont let one problem turn your internship into an unpleasant experience.- Practice [rubber duck debugging](https:rubberduckdebugging.com). You dont want to schedule a 30-minute meeting with your team and 2 minutes into explaining the problem you get to the _aha!_ moment where you figure out the solution to the problem. - In a nutshell, before asking for help, try to explain the problem youre having to a random object. Most of the time, during this process, youll get new ideas and solve a problem by yourself without needing somebodys help.- Most likely, you wont be micromanaged, but its a good idea to keep everybody updated on your progress. Doing this, your team might offer some useful advice based on your progress or prepare you for upcoming obstacles in the task.- If time allows it, plan virtual pair-programming sessions with your teammates. Once a week, pick a short task and try to solve it together. Doing this, you will pick up domain-specific knowledge faster, learn how to navigate new codebase efficiently, and improve your problem-solving skills.- Socialize with other team members on Slack channels like _#random_ and _#watercooler_. Just because youre new to the team doesnt mean you shouldnt participate in casual conversations with other employees. They are social beings too and are probably looking forward to getting to know better new colleagues.I wasnt sure how long Reddit post should be, so I put a full list inside tiny GitHub repo here: https:github.comfejes713remote-internship-adviceI hope this helps! Have fun and productive summer friends.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_j0h4ub","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/j0h4ub\/where_to_draw_the_line_helping_coworkers\/","DATE":1601078400000,"PLAIN_TEXT":"I have co-workers for whom I am their go-to for answers. Its stuff like, hi, my code to do X isnt working.My first response is usually: okay, did you try {insert some debugging step}?Yes, they say.Then I see their branch and its just.. quite wrong.So I tell them what the issue is and get back to my own work. But sometimes I have to really spell it out for them.What really grinds my gears is that I stressed about finding this job and doing the interview, and here they are being paid to ask me things they should either 1. know, or, 2. write down for future reference.I work remotely, so Im reachable at all times throughout the work day (I have grown to despise the new chat message notification). My manager is fully aware these co-workers will not complete complex tasks in a timely manner, so I am given every complex task.Should I just stop being so available? Should I pretend I dont know the answer? I always tell myself Ill draw the line but then I just give in and respond.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_wqqaev","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/wqqaev\/whats_up_with_fang_and_banks_rolling_back_on\/","DATE":1660694400000,"PLAIN_TEXT":"Why the heck would some one in our field would waste 2 hrs of life?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ikqceg","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ikqceg\/what_is_your_most_frustrating_moment_while\/","DATE":1598918400000,"PLAIN_TEXT":"Hello, fellow members of the tech industry! I came across this blog post about [the most frustrating things about working remotely](https:www.netmotionsoftware.comblogmobilitythe-most-frustrating-things-about-working-remotely) and I thought its a good thing to discuss especially during the COVID 19 times. To start, mine is the constant nagging of my kids while attending corporate meetings! Totally frustrating. How about you guys?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ycpj1t","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ycpj1t\/fellow_remote_lovers_what_would_it_take_for_you\/","DATE":1666569600000,"PLAIN_TEXT":"As the title suggests, what would it take for you to go back into the office full time? Ive been remote since about March and I love it. Couldnt imagine communting into an office every day at this point. I dont even think I would do it for a 2x in salary. It would have to be a very swankyluxirious deal for me to go back to full time office work, or if I go broke ofcourse.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_uo311l","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/uo311l\/why_dont_more_companies_offer_free_meals\/","DATE":1652313600000,"PLAIN_TEXT":"In my experience, it seems like a great motivator for office based employees to wake up and get to work on time.The pandemic and remote work is not the right answer here because many many companies were not giving free food before the pandemic, so it would just be an excuse for them at this point.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_peho6w","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/peho6w\/pay_cut_for_4day_work_week\/","DATE":1630281600000,"PLAIN_TEXT":"So a friend of mine got seed-round funding for their start up, 2 year runway. They want to hire 3 developers, but theyre quite expensive, and they can only reasonably afford 2.The founders are developers themselves and think theyll be able to hire 3 devs at about 15-20% below market rate, in exchange for a 4 day work week (32 hours per week).The company has all the usual: medical dental benefits, 401k, equity, snacks, 4 weeks of vacation, etc. This got me curious. So in this situation, would you hypothetically agree to take a 15-20% pay cut for 4 days of work a week (32 hrs)?Edit: the position is fully remote","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_10fa493","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/10fa493\/ive_dug_myself_into_a_very_deep_hole_how_do_i_get\/","DATE":1674000000000,"PLAIN_TEXT":"Tl;Dr - Ive been doing only the easy tasks for 4 years in my job but now the project is becoming too difficult and I dont understand it any more. How can I grow without everyone realising that I was just barely scraping by for that long?Ive been working as a developer in the current team for 4 years and am the longest serving member of the team. Yet in terms of knowledge of our system or seniority Im probably the last on the list. Junior Devs who have only been in the team for 8 months are doing much better than I am.This is partly because I have been getting by for a very long time not doing any meaningful work at all. I pick the easiest cards from the backlog because I just dont understand anything else.But now were reaching a point where there are fewer and fewer new cards as the system is becoming more and more complex. When I started I knew the whole system as it was in its infancy. I have also struggled to pay attention during remote meetings and therefore am unaware of much of the system.I now want to get back into it and be one of those excelling in the team and be worthy of my (frankly very good) salary. Whats the best way to get back? I cant ask basic questions because thatll make everyone aware that Ive been slacking for too long.I want to do the work but I just struggle so much with motivation and just dont know where to start to catch up with everything","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ch7ed7","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ch7ed7\/do_you_have_an_alternative_lifestyle_i_wanna_hear\/","DATE":1563926400000,"PLAIN_TEXT":"Computer Science as a career with its remote work offerings and its x day work from home policies seems like the place to be if you dont just wanna grow up marry, spit out a few kids and die (Exaggeration, chill). Do you save your fat computational stacks to pay online artists to draw suggestive pictures of your 2d wifu? I wanna hear about it. Do you live in your childhood treehouse while writing code that ends up in space? I wanna hear about it! Are you a digital nomad? Tell me what life on the road is like. I got inspired by this article about a [Homeless Google Employee](http:www.themoneyfam.comlunch-homeless-google-employee-hes-suprisingly-clean). Id love to hear about anyone using CS as a tool to live a less than traditional lifestyle!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_pf5ymx","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/pf5ymx\/where_do_software_engineers_make_the_most_money\/","DATE":1630368000000,"PLAIN_TEXT":" Where do Software Engineers make the most money on average?Ive heard Software engineers make good money in these places Big companies FinanceHedge funds as QUANTS Niche specializations (consulting) Getting a remote job in a country with higher wages StartupsWhat would you do if your only concern was making as much money as possible, while still having some work-life balance?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_z2niv7","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/z2niv7\/my_remote_colleague_keeps_leaving_work_for_an\/","DATE":1669161600000,"PLAIN_TEXT":"So Im a QA tester (mostly manual) and so is my colleague, he often messages most days that he needs to pop out for an emergency issue or says that he is having a connection issue. Recently its getting worse and its impacting the sprint as the testing work is slowing down. I really dont want to snitch on him but feel like its getting a bit ridiculous now. Thoughts on what to do? EDIT: Didnt expect so many replies, should have mentioned how bad our management team is, when things dont get tested in time we both get blamed and questioned, despite who the work is assigned to. I think Ill have a chat with him and just ask if he can help out a bit more for the benefit of us both, definitely dont want to rat him out as hes a good colleague and friend but I was curious to find out what other people in my position would do.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_obkx5a","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/obkx5a\/is_it_possible_to_get_a_remote_programming_job\/","DATE":1625097600000,"PLAIN_TEXT":"Im a CS major, living in Afghanistan. I graduated more than a year ago, and I still have no job. I havent seen a job posting for entry programmer or junior developer, theres not many job opportunities here. Every developer job posting requires 5+ years of experience. I was wondering if there are companies and orgs abroad that would hire someone like me to work fully remote.Im not too bad at programming and solving challenges, ive done one big project for my thesis and ive done small project from online courses.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_p91180","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/p91180\/rant_tired_of_people_saying_tasks_are_easy\/","DATE":1629504000000,"PLAIN_TEXT":"When I get assigned a task, I give it a fair estimate (and pad it a little bit for unknowns, washroom breaks, interruptions, unit tests failing). For example, during sprint planning with the team, I say that it will take me 5 story points (2-3 days), then a colleague counters saying that it is super simple and should take me no more than half an hour...One hour MAX. Fine, they may know something that I dont know, and I will definitely get them to help me with it since it is super simple for them. Realistically, it takes me half an hour just to turn on my computer in the morning, opening my IDEs, going for a water break and remembering what the task is about. It takes a few minutes to create a branch, push the changes to remote, and create a pull request. Plus, waiting a few hours for someone to review your changes and responding to comments. After merging your changes, you will have to spend some time waiting for your buildstests to finish. And, I havent even talked about testing your own changes. It definitely doesnt take half an hour (or maybe I am inefficient). Maybe, it will not take me 3 days, I might reduce the estimate to 1-2 daysAny thoughts?Edit- while waiting for CICD, I do something else such as responding to messages, email, double checking my work, reviewing somebodys code or design, thinking about my next task or learning something technical. If I am blocked for over 1 hour, then I might context switch to a new task- we estimate stories as a team but every once a while, well get this member making it sound like they could do it under an hour where I estimate that it takes me 3 days. They could be very well versed in that component and know the exact line of code to change. Well, they should teach me and the team. The team itself is good but I am tired of such individuals- an interesting discussion in this thread is that while this said person might be able to make the change in half an hour, that it will not be code reviewed, passed the build, committed and deployed to production in an hour. - I realize that capacity planning should be less 100 percent, allowing for overhead - going forward, in my estimates, I will not include any overhead. But just to make it clear to the team, even if it is a half an hour change, it wont be merged within that time. In fact, it wont be on production till the next deployment- I think doing it in 30 minutes means a lot of things for a lot of people. Some people might mean it will take 30 minutes to understand the root cause. Some people will make the code change (but not manually tested and commited). It seems that most people on this thread is understanding it as creating a pull request out of it. Some other people are assuming that it is what it takes to get it merged. Some other people think it is when it gets deployed to staging and manually tested - in scum , we minimize the amount in progress, if i am constantly working on 3 tasks at the same time because I do not want to twiddle my thumb during CICD waits, then that is a team issue- peoples on this reddit sometimes double their estimates. What does this mean exactly, in terms of story pointing? If story pointing is meant to scope the complexity, then when do people get a chance to double their estimates?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_tw3xa4","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/tw3xa4\/has_anyone_had_their_salary_reduced_when\/","DATE":1649030400000,"PLAIN_TEXT":"I keep reading about remote workers will have their salary reduced but Ive yet to see people on here actually discuss if it actually happened to them.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_athza8","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/athza8\/is_anyone_here_a_time_thief\/","DATE":1550793600000,"PLAIN_TEXT":"I work remotely for a big corporation. Sometimes the management sucks and doesnt distribute work, leading to me having a ton of free time. I would consider myself a time thief because Im not putting in the required time per week (salaried worker but 40 hours is the minimum and must be tracked).The issue is, I dont consider this a bad thing because I simply am not receiving many tasks from the very many managers who are above me. I also have a lot of guilt from this, but the sweet free time is just too good! Is anyone else a time thief?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_cv8o3t","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/cv8o3t\/iama_cs_researcher_let_me_tell_you_about\/","DATE":1566691200000,"PLAIN_TEXT":"I occasionally like to read rcsmajors and rcscareerquestions, and Ive noticed a fair bit of interest in the more academic topics in CS; MLAI most commonly, and also things like security, theory, and more. Theres not a lot good advice on how to actually get started in those though. While there are a number of potential ways to gain real experience with those topics, one of the best ways is to start early as a university student and get involved in undergraduate research.## Who are you and what do you know about research?Without giving too many details, Im a researcher in a CS department at a major university. Im not a professor. Rather, Im someone whos a [soft money](https:academia.stackexchange.comquestions30621what-is-a-soft-money-research-position) academic whose responsibilities are mainly to conduct research and keep the money flowing in. This includes occasionally bringing in undergrads to help me with various tasks.## Why should I care about doing research as an undergrad?Undergrad research is a great opportunity available to university students, but from my experience, few actually take advantage of it. Its surprising because it has a number of nice benefits: You get to apply the skills you learn in the classroom You can get paid, get course credit, or both Youre not bound to a strict schedule, so this job respects the fact that youre a student You get experience working on a non-trivial project You have the opportunity to finish something you can show off, like a poster, a lightning talk, or a workshop or conference paper You learn how to be peers with people much more experienced than you You gain lots of soft skills with all the collaboration and public speaking expected in research You start building up a professional network with some really well-connected people (little-known fact: academics tend to know a lot of people in industry, government, and other sectors beyond just the university) If produce presentable resarch, you get to travel to conferences and workshops If grad school (and especially a PhD program) is an possibility in your future, research experience is what sets competitive applicants above the rest## What do undergraduate resarchers do?It depends on the supervisor and the project, as well as individual students interests and experience levels. In my work, I like to ask new undergraduate researchers to write code to pull metrics from the data Ive collected, as well as improve and expand my data collection systems. This is valuable to me because it frees me to focus on the analysis I want to publish. And its valuable for the students because these small well-defined tasks give them a practical introduction to a real research agenda and methods. As students gain confidence, I have them come up with interesting questions of their own and ways to expand the data in order to answer those questions.My end goal is to put students in a position where they can investigate those questions and compile presentable results. At the very least, that means something they can put on a poster and discuss confidently with other researchers at a poster session at a conference. For the most ambitious students (and especially those with PhD aspirations), I guide them to refine and expand their research questions so we can write up a proper conference paper, with students taking the lead.## What are the expectations for undergraduate researchers?Again, it depends on the supervisor and project. For me, because I dont take on many undergraduate researchers (two at any given time, at most), I invest a lot of time and mentorship into the few students I do work with. In return, I expect them to be reliable and commit to working with me for at least two semesters consecutively. New undergraduate researchers require a lot of guidance and orientation when they first start, so it tends to take a while before they can produce presentable work. I also expect students to ask lots of questions, because being honest about what you dont know is a key skill in research.## How do I get started?Talk to your professors. Even if they dont have active research agendas (as could be the case with faculty at non-doctoral-granting institutions) or projects directly related to your interests, odds are good that they can refer you to someone else whos looking for part-time help. Some CS departments---like the one where I earned my bachelors degree---might also announce research opportunities by email, but those generally boil down to talk to Prof. So-and-So about this opportunity.When you meet with a potential research supervisor, relax. Being on the other side of the table, Im not out to grill you or make you do pointless whiteboarding exercises. Im just interested in seeing if my projects sound neat to you and figuring out how much time you can commit working on things.In my experience, Ive had the best outcomes with students who start at the end of their second year. Im able to get them up to speed more quickly and thoroughly when they work with me full-time during that summer, and they have plenty of time to finish producing presentable work in time to show off for job and grad school applications.## How do I get the most out of it?Speak up and tell your supervisor what you want. Dont be passive and just take orders. If you want to be on a paper, say so. If you have a particular angle for a study you want to explore, bring it up for discussion. If you read something cool that you want to incorporate into the work, share it. If youd prefer to work with a different team or topic, thats fine.## What are the downsides?Long story short, your mileage may vary. There are some research groups that churn through undergrads as if theyre a disposable resource. There are supervisors who (often understandably) have too much on their hands and cant dedicate to mentoring students as I can as a pure researcher. There are groups that dont have much internal cohesion or esprit de corps to help one another out. Basically, a research group is a workplace, and workplaces have their own unique cultures.You probably wont learn the latest frameworks, best practices, and hottest development tools doing research. Research code is indeed often ugly, hacky, and unmaintainable. Im a rare bird in my research community in that I have considerable industry experience too, so Im able to mitigate this to some degree. Even then though, maintainable software isnt as big of a priority in research as present interesting results.If youre on a path to writing a conference paper, youll (ideally) find yourself with a lot of responsibility as the lead author. This means reconciling the often-conflicting opinions of your co-authors, who are almost certainly far more experienced than you. This is a natural part of the internal tension in research, but it can be overwhelming at first for students trying to figure out whether to listen to Prof. A more than Dr. B or vice versa.## BONUS: How do I get involved in this when Im no longer a student?Its not impossible, but its much more difficult. Ill start with the bad news: You have a lot of things going against you when youre no longer a student because (as mentioned earlier) getting started in research requires a lot of guidance and mentorship at the beginning. Its really not something you can learn on your own. Ive had the best results with students who work in the same room as me full-time for a summer. If youre out of school, its likely the best you can do is part-time and mostly remotely, neither of which is ideal. Research is done in a community, and its hard to be taken seriously in a community if you dont commit to it and if you dont have someone vouching for you.That said, there some things that can improve your chances and make your experience more productive: Work somewhere that employs PhDs as researchers; reach out to them! They might know of opportunities you can get involved in, and youre likelier to receive a response and have a face-to-face chat if youre in the same organization. Likewise, if you have friends who are researchers or are in PhD programs, ask them as well. Become familiar with the academic literature in the topic youre interested in. The best way to do this is to look at the syllabus for graduate-level courses to see what papers they read and in which venues those papers were published.## BONUS: What are things I should look for in a research supervisorgroup?My personal preference is that aspiring undergrad researchers most need proper mentorship and guidance. That means either your supervisor or someone in hisher research group will take on the responsibility of helping you get settled into the rhythm of research. That should be someone whos approachable and happy to answer any question you have. Without that initial guidance, its really easy for students to waste time instead of working towards being productive researchers who know what theyre doing. If I were a student, I would ask questions like: What are the relevant papers I should read? What level of supervision should I expect? How often are we going to have face-to-face status meetings? How often are we going to have in-person work sessions? What deadline are we working toward? Where did your other undergraduate research assistants end up?## What else?Ask me anything.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_pgo1f6","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/pgo1f6\/why_are_startups_so_chill_about_hiring\/","DATE":1630540800000,"PLAIN_TEXT":"I read allot on this sub about the trials and tribulations people go through applying to big name companies. Ive been applying and working at various startups part time &amp; remotely for the past year whilst in grad school and Im a little shocked at the contrast. All I had to do was message a few CTOs &amp; managers on LinkedIn, go through an introductory interview or two and boom I had a gig for the next few months. Said interviews didnt even test me on my skillsexperience, they were more-so gaging my interest in the projects they had going. I get that a proper job or internship at a big name company isnt comparable, but these gigs were still fairly well paid(~30h), interesting work, with no significant downsides except the lack of job security. Is it normal for startups to be this chill about hiring for these kinds of roles and if so why?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_z9m7k5","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/z9m7k5\/graduated_in_cs_at_age_49_but_ive_ended_up_doing\/","DATE":1669852800000,"PLAIN_TEXT":"After making hundreds of applications to a range of graduate schemes, junior dev jobs, a a few junior data-related jobs such as junior DBA and junior data analyst over the course of six months, I only had one offer, which I felt I had little choice to accept, so now Im doing (100% remote) tech support for PS19,500.Its not an entirely bad job, but its not at all what I want to be doing, obviously the money is lousy, I feel the prospects and trainingdevelopment are practically non-existent, even the equipment they give us is lousy (were expected to remote in to users PCs with only a laptop with a 14 screen). So I have been really miserable, and on top of that I seem to now be having problems with high blood pressure and have been sweating like crazy at night and in the mornings. Im hardly really eating and have been very stressed due to a neighbour who has made threats against me in the past making a lot of noise and disturbing me when I am trying to work, sleep, relax and of course when I am trying to improve coding (which is now only at the weekend due to working full-time).My situation is even further complicated by a) not owning a car or even being able to drive, and b) not being willing to move from Scotland to England, because I couldnt possibly afford to own my own home there, and besides which, almost all my friends and family are here.I just dont know what to do any more. Sometimes when Ive got a bit of idle time at work I look on various job sites and fire out a few CVs if I see any junior dev jobs in Scotland I think I might stand a chance at, but often they are highly technical, like robotics and stuff, and I just think there is really no chance. If I manage to find a 100% remote junior dev job I will always apply, but more often than not they are really hybrid. I get recruiters call me here and there, but it goes nowhere after they learn I dont want to move down south.I would be well up for anything like junior database admin  junior data engineer  junior cloud engineer, but these jobs are few and far between, and OFC they want experience even at junior level.This is my CV: ~~https:i.imgur.comp8sLlLw.jpg~~ https:i.imgur.comIzmLA93.jpgAnybody got any bright ideas please? Right now Im thinking about putting my flat up for sale and trying to find somewhere better, but its very nerve-wracking to think about buying a new (undoubtedly more expensive) place and sending my mortgage payments through the roof (I expect them to as much as quadruple) on the basis of a poorly-paid job that I hate. And what if I move but then get a job offer somewhere else? I just dont know what direction to turn in now. I actually took a couple of annual leave days just to try to recover my state of mind a bit and try to work out what to do. TIA for any (helpful) input.NB - please keep your comments constructive. I am not in the frame of mind to be rebuked for my shortcomings right now. Please bear in mind I am at a very low point in my life and seriously wondering what I have left to live for. Please also bear in mind that I could not even afford to own a computer until I was given one at age 28. Just something to consider.Edit: more recent CV, my bad.Edit2: thanks for the many kind and helpful replies! I have a lot of good ideas to work with now, and Im feeling a good deal better. :)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_hn36e0","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/hn36e0\/desperately_need_advice_on_how_to_improve_verbal\/","DATE":1594080000000,"PLAIN_TEXT":"I work on a 100% remote team. Were scattered all across the globe.Communication has always been an issue for me, even when I worked in an office. If you ask me something over email or Skype, I can send you as much or as little info you want. Technical, for business, for users -- just tell me the intended audience and Ill gladly help you. Outside of that, I dont like to write much, unless Ive a burning need to say something. (Or need to gush over a cute dog.)Verbally? Whether its in-person or over the phone, I have never been a strong verbal communicator. I dont even have a strong verbal vocabulary. Simply put, I just. . . dont talk much. Not with family, friends, coworkers, management, etc. Words that have been used to describe my verbal communication style over the years can be summarized as: blunt, brusque, laconic, halting, taciturn, absolutely fucking rude, etc. (I admittedly also struggle to listen -- my brain apparently has a speech-to-dev-null filter. You can tell me something, I wont understand, send an email, and I not only understand what you want, but often understand the broader implications of it. Oh, I also sometimes lose track of the meaning of my own words -- I dont even listen to myself!)In my view, why should I talk if someone knows more? Or if someone has already made the salient point? Or if I have nothing of value to add to the conversation?My manager has told me that even repeating what someone else says, but in a different way, is fine. That said, old habits are difficult to break.Unfortunately, this issue has continuously affected my performance scores at work. This year, my score dropped to below expectations, and my manager has made me a team lead in an effort to get me out of my shell. I can tell hes already a little exasperated and Im at the end of my rope two weeks in. Im struggling to run our phone meetings, where seniors dominate the conversation, which they also somewhat do in chat.Has anyone else faced this problem? What did you do? Any books, Youtube videos, etc? Im Googling articles now but Im on the verge of panic. Its one thing to work on a flaw that youve developed over some months, but another thing entirely to fight against a deeply-ingrained personality trait.Im desperate. Even if its a little far-fetched, Im willing to try just about anything that might help at least once.ETA because I was asked: my manager wants me to speak up because he thinks my input could be valuable, even if my input has already be shared by someone else.Oh, and thank you for gilding this post!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_1070mw4","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/1070mw4\/update_after_hundreds_of_applications_i_was\/","DATE":1673136000000,"PLAIN_TEXT":"A little over 2 months ago I posted that I received my first offer. 20 per hour for 2 months, than salary at 50k. I took what seemed to be the advice of the majority, accepting the position, but continued to apply for other positions.Most recommended to not add the new job to my resume, but I did anyway. And personally, I think the added real work experience helped my resume IMMENSELY. Before that I would get around 1 response for an interview per 100 applications. After adding the work experience, I applied to ~50 applications, and had 11 responses for interviews. I was genuinely shocked how frequently I was being called to schedule an interview.Lots of people mentioned that it was likely to be a bait n switch starting at 20 per hour then after two months they wouldnt move me to salary at 50k. For me, this was not the case. They did sent me a promotion contract agreeing to the new salary change. The salaried devs on the team do not clock in, and are able to work from home when they want to, and I assumed that would be the case for me and the other junior devs they hired. When I accepted the raise and asked about it, I was told that not only do I have to still clock in (for keeping track of metrics for their clients) but that I was not allowed to work from home at all.Seeing how many more interviews I was receiving, I was able to realize that 50k with the restrictions is definitely a low ball for the Austin TX area. I began to take applying to other positions more seriously. I am incredibly glad that I decided to take this position though, because the experience I learned in just 2 months really elevated my knowledge of the field, and I was able to secure a remote position at 70k. With my 2 weeks put in, Im super happy with the 40% raise I acquired by job hopping. 75% raise if you consider the position I accepted originally was 20 an hour. Id like to thank you guys for the original advice, and if you have any questions for me feel free to ask!UPDATE to the update:My employer I gave the 2 weeks notice to sent me home today. Guess I have an unpaid 2 week vacation :^)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_pa1zvn","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/pa1zvn\/full_agile_is_terrible\/","DATE":1629676800000,"PLAIN_TEXT":"Granted I dont have a ton of years of experience, but this new fully remote gig Im at is great except for one thing...the amount of useless Agile meetings they have are a huge waste of time, money and bores everyone to tears.Im currently sitting through 3 fucking days, where the ENTIRE DAY is project planning for future sprints. There is zero actual work done the entire time, its simply talking about user stories, user cards, confidence votes, creating boards showing tasks that depend on other tasks, what fucking colors specific stories, boards, tasks and issues should be. A co-worker estimated the cost for this shit, and its costing them in payroll something like 250k over 3 days (10khr for all employees  8 hrsday  3 days).Just had to rant, but I 100% now believe my friend who said none of the big time tech guys actually use Agile like this because its such a horrible waste of time. I can only imagine Musk or Papa Benzos flipping out within 5 mins of sitting in this waste of time.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_v66yrf","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/v66yrf\/you_should_be_making_300k_sorting_fact_from\/","DATE":1654473600000,"PLAIN_TEXT":"We regularly hear about $300K+ salaries for software engineers. Help me out. Is this exclusive FAANG? How much of that total comp is equity, bonus, base? Can you be still be fully remote?Im realizing Ive held some assumptions about this level of comp that might be wrong and Im looking to sort fact from fiction with you all.My assumptions: You must work for Facebook, Apple, Google, Amazon, Netflix, .... to make $300k+ You have to live on one the US coasts, in a high-cost of living area to make $300k+ You have to work in the office (no fully remote) to make $300k+ Theres not actually that many software engineers making $300k+ (you have to be a mythical 10x engineer with an IQ of 130).Why am I asking? Im a full stack engineer for a team developing machine learning applications with a good mix of other complimentary skills. Im reasonably smart, I work hard. I have 5+ years of experience... Im beginning to look for new jobs, trying to maximize my comp of course - and wondering what limiting beliefs I might have.Thanks","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_rznk8e","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/rznk8e\/my_company_is_taking_screenshots_while_working\/","DATE":1641686400000,"PLAIN_TEXT":"Hi, Im working for an outsourcing company, weve clients from the US and India, My role there is a software engineer, The problem that is kinda strange to me that the company is taking screenshots while working, You have to open an app to track your work, and you have to allow the app to take screenshots while youre working. Were working remotely. Is this kinda strange, or Im just overthinking about it and its normal?Should I move on from this company?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_7y0oef","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/7y0oef\/i_went_from_making_35k_to_120k_in_3_years_ama\/","DATE":1518739200000,"PLAIN_TEXT":"## Introduction  TL;DRThis will be a (likely long) post discussing how I went from living paycheck to paycheck and going through a divorce to entering the IT field as a developer, and more than tripling my income in three years. AMA, if you want to read the storyjourney, see below.## Where I Started### February 2015 - $35k:  I was a month from my 24th birthday.  I worked at a cell phone company doing sales part time, making about $35k a year (including commission) in a High CoL area.  I was living paycheck to paycheck, some payment arrangements herethere to make ends meet, and borrowed some from family to keep food in the house.  I was married, but going through a divorce after my ex had an affair and decided to stay with the guy. I found out about the affair the day before Thanksgiving in 2014 (about 2 months prior to this).  I decided to start life fresh and moved out of state, transferring with the company I was with and working at one of their call centers for again, about $35k a year (depending on bonuses), though this was full time at $35k a year instead of part time. This move was to a Low-Med CoL area.### August 2015 - $40k:  I enrolled in school at rWGU and started my Bachelors in Software Development. WGU, if you dont know, is an online school with accreditation that has a better rep than say, University of Phoenix or ITT Tech, but its definitely not a top school by any means (sorry fellow alumni, but its the truth). The classes were decent, but its not the same as a traditional school IMO. However, its what helped me get into the career field.  Around the same time I enrolled in school, my roommate in Idaho was able to help me get a position as a contractor for an international technology company, doing manual software testing of a web app. This was for $40k a year roughly. This was still in the same Low-Med CoL area.### August 2016 - $50k:  By August 2016, I was around half way through with my degree at rWGU. I started with 3 credits, needing around 123 total, but WGU lets you accelerate learning by testing out of classes as soon as you enroll in them. I was doing upwards of 30+ units a term at times.  I had helped found a slack group for WGU IT students to connect, since the school had little in offerings for students to collaborate together. The group was founded in April 2016 I believe, and we had over 1000 members within a year.  Through networking with students in the slack group and with some developers at my current position, I was able to get an interview and earn a position as a junior software engineer at the same international software company, but not as a contractor, as a full time employee.  This new role was a sweet $50k a year, first salary role, and it felt amazing. This was in the same Low-Med CoL area.### April 2017 - $70k:  By March of 2017, I graduated from rWGU with my Bachelors in Software Development, and had began looking for new-hire jobs.  I was able to find a local job, and moved into a SDET role at $70k a year, in the same Low-Med CoL area.  This role was great, and I really shined here. I was ecstatic to have double my income in two years, and the benefits with this company were fantastic.  I applied to and was accepted to the rOMSCS program from Georgia Tech, a school ranked top 10 in the nation, and the world, for computer science grad programs.  Though rWGU wasnt a great school, I was able to get in to OMSCS, and I planned to start Spring of 2018, taking Fall 2017 off.  Unfortunately, life calls sometimes, but I continued my journey onward...### November 2017 - $95k:  Around the end of 2017, I decided to make the move out of state again to be closer to family. The state I was living in was great, but I had a few friends, no family, and really felt like I needed to move on to somewhere new.  I worked with a staffing agency and was able to apply for a position close to family in a Medium CoL area.  After a few rounds of interviews, a flight out to the company, and some negotiation, I accepted an offer of $95k a year. To give an idea, the CoL difference was about $10k a year more here than my previous area, so this was still a significant raise.  Once I started in this new company, however, I found the culture to be VERY opposite of what I had expected and been used to.  The company was basically the movie Office Space on steroids, and I realized I needed to find something else.  I got a bit depressed, upset, and hard on myself thinking this move was a complete mistake.### JanuaryFebruary 2018 - $120k:  In January 2018, I started at Georgia Tech in the rOMSCS program. So far, about 7 weeks in, its going fantastic and I love the class Im in, currently holding a 100% perfect grade.  At the end of 2017, I began interviewing with what I considered to be one of my unicorn companies.  After an intense, multi-round, few month process, I was given an offer for around $120k a year, with options, and amazing benefits.  The job is 100% remote, and for now I plan to stay in the same Medium-CoL area that Im in now.## SummaryIn February 2015, I considered my life to be at (or near) an all time low. I was depressed, barely able to make ends meet, and making about $35k a year working my ass off to make sales for commission. 3 years to the month later, Im starting a position making over 3xs that amount, have been able to pay off a LOT of debt (still some to go), start and finish my bachelors degree, start my masters program, and live a MUCH happier life. All of this to say, follow your dreams, push on, when life throws you a curve, lean into it. Feel free to AMA, PM or comment below.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_q15s6t","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/q15s6t\/remote_junior_cant_tell_when_to_ask_for_help\/","DATE":1633305600000,"PLAIN_TEXT":"Im a boot-camp grad and my first dev job is remote on a totally remote dev team. Im not sure if they were remote or not before Covid.One thing Im struggling with is assessing when to ask for help. I understand that this specific challenge is one of the biggest learning curves in any junior job, remote or not, but I can already tell theres a lot more friction in asking for help in a Teams message than casually approaching someones desk.My team is frankly pretty anti-social when it comes to remote work. In 2 months of work, Ive seen two peoples faces. One was my manager, who has since left the company abruptly, and another was a coworker who I dont work with. Basically no one turns their camera on, so Ive never even seen the face of the dev I mainly work with. This makes it a lot harder to judge their personality and body language, which then makes it harder to assess what kind of inquiries are welcome and which arent. Most of my questions at this point are more about our teams specific protocols or which SQL table I need to query of the dozens we have -- questions that I cant get answered on Stack Overflow.Another issue is that Ive been assigned to work exclusively with one dev, so even if I wanted to ask another one, the fact that I havent seen my other coworkers faces or even heard their voices outside of the morning meeting makes approaching them with questions daunting.Any advice?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_t6m8ny","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/t6m8ny\/graduating_bs_computer_science_student_in_asia\/","DATE":1646352000000,"PLAIN_TEXT":" Hello everyone, Im a graduating CS student applying for a remote job(not picky on time zone). I tried applying for internships, entry level mobile development and web development jobs but I get absolutely zero response. Not even an invitation for an interview. I apply on sites such as Linkedin, indeed, and glassdoor. I grind leetcode but Im feeling hopeless as I cant even get online assessments.Is it possible that my resume gets automatically filtered out? Could this be due to my timezone? my experience? If so, can you point out some things on my resume to improve on. Thank you so much for your time :)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_o0nthu","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/o0nthu\/has_anyone_ditched_the_fulltime_dev_life_in_favor\/","DATE":1623715200000,"PLAIN_TEXT":"Some context - I am 26 and Ive been working as a junior developer at my company for about a year and a half now. I am very grateful for the pay, benefits, stability, all of that, but overall I feel mostly lackluster and unenthusiastic about what Im doing.Ive been thinking about finding a remote job that is not as intensive, works with a smaller system, and could allow me to be part-time. My (possibly reckless?) idea is to move to Hawaii and work part time as a remote developer, and spend the rest of my time workingvolunteering at a farm, contributing to the community in whatever ways I can, something like that. My guts telling me that im going to be happier, but maybe there are lots of barriers I havent considered. Thoughts? Advice?EDIT: Thanks for all the comments putting things into perspective for me. Maybe I am romanticizing the lifestyle a little bit, but its something Id really like to try. Im just afraid I havent thought through the bad and the ugly.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_u7v71k","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/u7v71k\/return_to_office_struggles\/","DATE":1650412800000,"PLAIN_TEXT":"Over the last year Ive been working as a remote developer for cloud platforms. This is my first job, and I work on a team where Im really the only developer in the company for the platforms I manage. Recently, the company I work for moved to a hybrid work schedule, where we work 2 days in office and 3 days from home. I was open to the idea and wanted to give it a try without having any preconceived feelings about it. Its been about 3 weeks of working this schedule and every time Im in the office working I feel like I cant get anything done. The hour and half commute and waking up three hours earlier to get to work on time has me drained. The neutral colors everywhere in the office exacerbate my drowsiness. And I just cant seem to focus up when Im there with other people all around me talking, eating, and doing their own jobs.I truly feel like I can get more done in 3 hours working at home, than I can get done working a full 9 hour shift in the office. So I guess my question(s) are: is this normal? And if so, how can I be more productive when Im working in the office? Ideally, Id like to work a fully remote job because it gives me the greatest worklife balance but with my minimal experience its hard to find opportunities (at least in my niche field).","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_wlexc9","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/wlexc9\/why_is_it_so_difficult_to_find_qualified\/","DATE":1660089600000,"PLAIN_TEXT":"I think Ive been in around 15 interviews with virtual candidates for remote work. Every 5 candidates that recruiting firms push, there is a candidate that knows knows literally nothing. Honestly, they dont even know their own resume. They have an extra monitor open and are Googling definitions or potential solutions to interview problems. A recent candidate even read me the definition of a concept I was testing when I asked him about it. For example, the candidate used a raw pointer when solving the problem. I asked them if they have used smart pointers before and he proceeded to read me the definition of a smart pointer from CppReference.I usually end the 1 hour interview after 10 minutes because its evident theyre trying to scam a paycheque.Why do these people exist and why do recruitment firms push them to organizations? Ive recommended that these firms that send over trash candidates just get blacklisted.Edit: I dont think pay is the issue. TC is north of 350,000, and the position is remote. Its for a senior role.Edit 2: I told the candidate there was a skill gap after it was apparently that he couldnt solve a problem Id give a mid-level engineer (despite him being senior) and proceeded to politely end the interview to save us both time. He almost started yelling at me.Edit 3: What really shocked me was the disconnect between the candidates resume and their skill set. When I asked about a project they listed in their resume, they could not explain it at all. He started saying Uhm... Uhhh... for a solid 30 seconds to my question. I stared in awe.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_9vhnjg","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/9vhnjg\/reading_this_sub_from_outside_of_usa_is_depressing\/","DATE":1541721600000,"PLAIN_TEXT":"I read a bunch of posts about people getting offers around 70k-100k$ after graduation... meanwhile in most of Europe you would be considered lucky if you made 35k$ before taxes, maybe 45k$ at best after 5 years. Salaried pay for engineersdev is a bit flat, you have to go to management and have seniority to break the glass ceiling.And thats Western Europe. And no, life is not that cheap, your car, your phone costs the same no matter the country. I know skilled devs in Eastern Europe who make like 800$ a month. The pay in this industry feels very unbalanced for work that by definition can cross borders easily (remote work, etc).edit : from the difference of salaries I think it part of the reason why the biggest successful IT companies are concentrated in USA. Most top tier engineers move there if they can, and local companies complain they cant find devs but wont raise salaries","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_vjrip4","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/vjrip4\/1_year_of_working_as_a_junior_swe_at_my_first_job\/","DATE":1656028800000,"PLAIN_TEXT":"A few weeks ago I officially passed 1 year at my very first software engineering job. Its had ups and downs but heres a quick tid bit of what Ive learned  advice Id give to myself starting out.Background: I graduated from with a 4 years bachelors in computer engineering and I work at a mature startup in embedded  devices (so mostly C and C++). Its fully remote. Keep that in mind since it has its own biases. Now in no particular order:1. Meet your coworkers. The better relationship you have with them, the easier it is to work with them, ask questions, etc. I was able to do this virtually and it still worked great2. Use a todo list. It will keep you on track. I use notion3. Keep a daily log. It doesnt need to be organized, just usable for you. its used to keep notes on what you worked on, keep track of bug testing. I use notion4. Attempt a solution for &lt;= 30 minutes and ask questions if youre stuck. When you ask, tell them the problem, what you attempted, and what the results were. 5. This is more to managers and hire ups -- when yall ask for help, take vacations, etc it makes me more comfortable to do the same. The more yall do it, the more I feel comfortable doing it6. Take notes, but they dont need to be especially detailed. Ive found taking notes on processes (how to properly submit a PR, how to properly deploy to dev, how to setup the environment) is more important than anything else. I consistently refer to this. people will love you (more) if you turn it into documentation :)7. Use browser bookmarks for quick access. I use this especially for github commands i forget, jira board, deployment page8. Plan code before actually coding (for larger tasks) and then ask a higher up for their thoughts on your plan before coding. This a) makes it easier when youre implementing your code and doing PRs and b) is a learning experience because they often advise on better ways to implement your code9. Dont bite more than you can chew otherwise you will burn out. If you want more responsibility later, just talk to your manager and they will guide you through it10. Keep a healthy work life balance. 9a-5p, maybe checking slack a few times after dinner but i stay under &lt;= 40 hours 95% of the time. 11. Personal preference: walk or bike to a coffee shop, library, wherever to do work. It will get you moving and im more personally productive with other people around me working and outside my bedroom.Hope this helps someone","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_g38sde","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/g38sde\/having_an_existential_crisis_and_need_advice\/","DATE":1587081600000,"PLAIN_TEXT":"I sit here on the verge of tears with a tight chest, wondering if this shit is right for me. Im in my 30s with a family to care for and am questioning if I even have what it takes to continue in this path. Rant incoming...It wasnt always this way. I used to enjoy computers a lot. As I got older, I began caring less about tech and keeping up with current trends. I started teaching myself about 6 years ago with the goal of getting a job in this field, because I enjoy creating and have always been good with computers. I succeeded. Been working as a developer for the past 5 years and have always been complemented for my good work and friendly personality. Am I great? Hell no. I imagine average at best. I taught myself what I needed to in order to start creating. I didnt then and still dont give a fuck about LeetCode, big O, ds &amp; algs, and suck horribly at math. Sure, these are important and Im not downplaying them, but I have to be realistic in knowing that my mind doesnt work that way. Im a creative individual who happened to be good at computers. I also am not amazed by how the latest version of the language can do the same thing in a different syntax. Nor am I fascinated by writing intricate db queries. Im so tired of feeling left out wondering why and how all of the people I work with and see in these forums are so interested while Im there not giving a fuck. I cant force myself to care about these things, though that doesnt say that Im not caring and proud of the work I do. I actually dont even hate every part of the job.You know what Ive enjoyed? Creating a cool looking frontend for the user or something neat like that. Seeing a project from start to finish and having the person I developed it for be happy was a nice feeling also. But then again, we get into the technical side of front end where font this, whitespace that, alignment here, oh wait...make this pop more...fuck me. Here I am with 5 years of mainly back end Java experience, wishing to get out of coding for 7-8 straight hours a day into something more crud like in a non-tech company, so I can at least keep the nice paychecks and lifestyle. Ive seen people saying that they dont code more than 2-4 hours a day and complaining, while that sounds ideal to me. I wanted to work fully remote and even posted that not long ago, but its obvious I will be bested by so many out there. It wont stop me from trying, but still, I feel so fucked. Please dont get me wrong. Im a very passionate person and take a lot of care and pride in the work that I do. I consider myself to be friendly, introverted yet social, and easy to get along with. I find Im so different from other devs though. Again, I dont mean to rant, but I hope you can understand that at this moment I feel down and hopeless. Yes, Im depressed right now, but I know how to deal with that stuff. Im situationally depressed, because I feel lost and dont know what to do. Not to mention that I suffer with arm problems and struggle getting through each day. Im grinding myself to death in something that is ever increasingly making me miserable, yet is seemingly my only skill. Well, I play piano, played around with producing music and love food, but making a life out of that is even more impossible. Believe me, I wanted to play music professionally, but I cant be the starving artist while I have a family to take care of. All I really want out of my life is to enjoy traveling with my family and be able to afford a modest lifestyle. Sometimes I feel like quitting it all and going to teach English in SEA. Im not trying to give up on this, but I dont know what to do. I started teaching myself JavaScript thinking maybe front end will be better, but who knows? All I want is the ability to work remotely, be able to travel and enjoy my life outside of work and not hate what I do. I dont hate all of developing, I really enjoy the creative side, but thats it. The nitty gritty details, I want to be as far from that shit as possible. I dont even mind the boring crud shit, if it allows me to live the life I want. I like helping people more than I enjoy being a damn robot. I cant continue to be a fucking robot my whole life.Some advice and guidance would be much appreciated. Thank you to whomever took the time to read this.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_xkoebq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/xkoebq\/finally_attained_a_125k_salary_in_dc_area_fully\/","DATE":1663718400000,"PLAIN_TEXT":"I finally did it. I finally negotiated an 80% raise. Im fully remote. Im soon to get a clearance. Im finally able to engineer the part in the work project Ive been waiting to do all this time. Its something really fun and interesting Ive been looking forward to. Job literally has no stress at all and theres only like a single 15 minute meeting each day. Even if Im not working 9-5 the company wholly allows you to stretch your work hours to any time of the daynight to accommodate.Yet I find myself... avoiding working and just watching youtube videos, playing video games, checking discord, etc.???!?When I started this job I was super eager to get stuff done, learn, rise up, and get recognition. All throughout school I worked my butt off to get a perfect 4.0 and also rock several extracurricular projects too. Well, now that Ive got the magical 6-figure fully remote job 2 years in to my career, I feel like I dont care anymore?It doesnt help that the past 3 weeks Ive burned myself into the ground by A) grinding interviewsapplications for other jobs so Id have negotiation toolsopportunities B) endlessly shopping for a car during every hour of the day (including the workday) hoping that Ill soon have a car to take into the workplace and C) playing a brand new video game with friends that Ive been waiting for years.My actual attention span and work discipline is at an all time low. I cant even bring myself to wake up in the morning. Any help here? How do you find the motivation to do your best when youve achieved what you wanted?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_11nj5rz","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/11nj5rz\/how_bad_is_the_market_right_now_for_midsenior\/","DATE":1678406400000,"PLAIN_TEXT":"Just got laid off from a FAANG company, completely out of nowhere like many others.Im job hunting, mid to senior level and Im coming across some internal openings that seem a huge downgrade. Terrible WLB, regular on call, no remote, grunt level work type stuff. But theyd let me stay at the company (at a huge personal cost).Or I can take my severance and hunt elsewhere. Im not desperate, but I dont really know how bad the market is. For the others out there who have been laid off and are hunting, how desperate is it? Should I just take anything thatll pay the same at this rate? About me:My TC was around 200k. I have 5 years of FAANG experience on several different teams, several successful side projects and an award winning non profit Ive run on the side. My resume is decent and I can communicate well.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_9f70h0","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/9f70h0\/i_think_i_might_be_done_with_programming\/","DATE":1536710400000,"PLAIN_TEXT":"Roughly 4 and a half years ago I stepped into the world of programming. What initially lured me in was a desire to solve complex abstract problems, work with the latest technology, worklife balance, pay, ability to remote work etc. It started out at an apprenticeship doing PHP for a 18 months, moving onto a brief stint as a frontend dev in digital marketing, taught myself C# for a big government project at a different local company, finally moving up to my current position at an exciting healthcare startup in London - and I cant say Ive enjoyed any of the jobs. Ive persevered with each job thinking that as I get more responsibilities, work on larger projects, move between industries etc. it will improve, but in the end I just feel like Im chained to a desk, stuck in doors, staring at a screen all day 5 days a week. Each day I dread going into work, while Im there I dont feel like I fit in with fellow programmers, at the end of the day I feel like a slob. Honestly, the idea of doing this for another 45 years terrifies me. It feels like the only thing keeping me here is the pay, various work benefits, fear of the alternative and hope that it might get better as I progress - but even this I fear is going to stop to a growing lack of interest.Is it time to move on or does everyone reach this point?EditWasnt expecting so many responses and advice! Dont have enough time to respond to them all but ive read and taken all of them into account, some great advice here. Really appreciate it guys","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_11h5c6k","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/11h5c6k\/90k_wfh_or_120k_onsite_what_would_you_do_and_why\/","DATE":1677801600000,"PLAIN_TEXT":"Hi everyone, Im in a fortunate position of getting two contract offers from two companies. The WFH offer is Python Developer role at a FAANG company @ 90K while the other is SQA Test Engineer at a big wifi chip company with an hour total commute @ 120K.From my research, it seems like WLB is better at the Python role on top of being remote. The SQA role is good money but it seems like theres a ton of responsibilities and I couldnt get a read on how the work culture is like there and I want to protect my sanity.I currently have experience mainly in testing but I would like to move more towards development but Im afraid I am just pushing myself further into the pigeon hole of test if I take the SQA role.I could be wrong with this line of reasoning. Maybe it could really springboard my career? Idk. If anyone has adviceinsight on evaluating the two options, I would to love to hear from you.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_akwb1s","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/akwb1s\/feeling_burnt_out_and_confused_about_tech\/","DATE":1548633600000,"PLAIN_TEXT":"Im in my mid 20s and have been working for a big N for almost half a decade. &amp;#x200B;What I have been going through:Ive been grinding nonstop since college. My passion for techCS has dwindled because of the high stress and soul-lessness of my job and this field. I dont understand why some people in this industry are such workaholics, especially when its unnecessary. It almost feels like some form of pride. It drags you down with them, because if you decide to go home early -- you appear lazy.&amp;#x200B;The bullshit on-call culture and companies insisting that their devs should be responsible for their service 247 when they can just hire people to do the job, its an entire job role itself... Also it feels like guilt-tripping the developers, especially the younger ones...&amp;#x200B;There have been tiny sweet moments in my work life, but the majority of it has been a shit storm.&amp;#x200B;Ive been a strong performer in my company for years, and now I dont care anymore... I want my life and freedom back. Both my mental health and physical health was destroyed these years, luckily I had the finances for cover them. However in the back of my mind, I know I wouldnt have had know issues if it wasnt for working such a stressful job. The bullshit office politics, the backstabbing, and the masks people wear, its disappointing...&amp;#x200B;Dont even talk about golden handcuffs... It just makes us feel like a goddamned puppet for the CEO.&amp;#x200B;What I would like, but not sure how to attain:A relaxing sabbatical would be amazing. My financial health is in top shape, I can do fine if I decided not to work for several years, but long term, Id like to financially independent and in order to do that, more savings is required. It worries me that Id have trouble finding a job if I was unemployed for an extended amount of time. Is this a myth or fact?&amp;#x200B;My desire would be a full remote job with good work life balance, the freedom to be anywhere and work, to be close to loved ones-- to make up for all the years I left them. To be able to maintain bonds with people. To travel freely. However, I dont know whats the steps towards getting a full remote job, or if Im qualified. Can anyone that has experience with full remote jobsdigital nomad, share your take?&amp;#x200B;To rekindle my passion for CS. Looking back in the past, I dont understand how there was the willpower and passion to study so hard and get AA-s in my CS classes. Staying for hours and hammering at a homework assignment. Or studying really hard for a final. Not out of necessity, but out of pure curiosity. I miss that firey passion with tech that was present during college. How havecan you achieved this? &amp;#x200B;And finally:Not a second passes where I dont forget to be grateful for having a high-paying job and be in financially healthy state and such, but life is too short to be stuck in a bad cycle and choose to accept it because you should.I would love to hear if others who have felt quite similar and what they have done (or planning to). If you can give me some guiding advice or share your experiences, thank you so much! &lt;3","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_qnfuds","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/qnfuds\/new_cto_making_us_install_time_tracking_software\/","DATE":1636070400000,"PLAIN_TEXT":"Before the new CTO, everything was chill. Still is but Im worried about this new software as Im not sure how extensive it will track what we do.We went remote at the start of COVID like most companies, and Ive been averaging 4 hrs a day of work since I dont have to pretend Im working half the day like in the office.They claim this software is to help bill departments for our time spent, but thats never been a thing before. It makes sense to want to make sure your employees are busy working but our company has been a results based company for a while now. As long as you got your work done and are available to help others, all good ya know?So anyone else have to install the windows application + chrome extension for this? Am I over-reacting?edit: Thanks all for the responses. Learned more about this software and going to trust the company for now. Management said they wont care what is exactly logged, they just want to show departments the data since it is easier for them to understand from Clockify than our other logging systems. And my manager, who also only works 4 hrsday, said that as long as I show around 4 hrs its all good. (but well see if that lasts)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_vkebw9","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/vkebw9\/employer_offering_an_incredibly_low_salary_for_a\/","DATE":1656115200000,"PLAIN_TEXT":"Hey guys,I just had an interview and it was really one of the most cringe interviews that I had to deal with. So I applied for a job over LinkedIn for a Frontend role, the company is located in Europe while I live in Egypt, so the employer first off starts by asking me how many years of professional experience that I have and I tell him that I had worked for 3 months as a Frontend Developer using Vue and then I had to take my first year of obligatory service in the army, but other than that I have personal projects that I could show off that show my experience but he seemed to be so fixated on the years of experience thing so he asked me for my previous salary.. I told him it was around 500 euros.Its a low salary cause it was an Egyptian company and thats the mid range really for salaries here for entry level developers. So he asked me for what my expected salary is, and I basically told him the range is between 1500-3500 euros per month in his country and yea given my experience I am happy to have something in the lower range of this till I get more experience, sounds very logical, right? He then completely told me straight up thats hes not willing to pay this type of salary for a someone with basically no experience. He said hes willing to pay me 500 euros per month now cause hed offer me Experience and this salary would increase the more I grow in the company. Now, I still did my best to keep a straight face but it felt very terrible that hes straight up going to use me like that. Even though that the minimum wage in his country was 700 eurosmonth! I dont know what do you guys think? This salary on paper is mid-high range for most Egyptian companies hiring New Grads. Am I over reacting? or is this normal for remote jobs?Id love to hear you guys opinions about itAlso he told me hed want me to start immediately even if I dont continue hed want me to work part-time cause I told him I am also contacting other companies at the mean time. so he told me you can work with us part-time and if you choose another opportunity then go for it but if you choose us, you already have some experience working with us, getting to know the team.. etc etcSo thats all, Thanks!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_gax59h","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/gax59h\/working_remotely_and_living_in_a_rural_area\/","DATE":1588204800000,"PLAIN_TEXT":"Has anyone here taken a fully remote job and moved to a rural area? My ideal situation is to be 100% remote and move out the sticks. I grew up in a rural area, then the burbs, now I live in a huge city. Its just not for me. What is your experience like? Were you able to find decent internet? I have a million questions but I guess Id really just like to hear your experiences.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_f9i2q7","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/f9i2q7\/my_success_story\/","DATE":1582588800000,"PLAIN_TEXT":"Hi Reddit! Ive seen this style of post lately and when I was neck deep in job applications it was super helpful to read everyones success stories. It gets so awfully bleak sending out app after app but it does pan out in the end. So I hope this will inspire some of you guys! I also just really felt like sharing since Im so happy to be done with this shit job hunt. Also, I apologize for it being so long. I [22F] graduated in August 2019 with my BS in Computer Science and minors in both linguistics and German. I took summer courses every year so I didnt really have the opportunity to intern at any point while I was in school. I honestly had no idea that this was somewhat of a necessity until I started the job application process. Well started applying for jobs soon after graduation. I actually got my very first phone interview from my 27th application sent out. I passed it. I was thinking at the time that I was getting quite lucky and thought my job hunt was going to be a lot easier than everyone elses. I moved on to the technical interview... this was my first taste of actually realizing I needed to continuously improve on what I had learned during school. I completely bombed it. I started studying every aspect of my degree I could possibly think up in order to prepare for these technical interviews. Finally got through to an on-site at a company located about 2 hours from me at my 49th application. Long story short: I got the job offer for about $65K. However, at the exact same time, I was also offered a 3-month unpaid and fulltime internship position as a graphic designer and web developer. Probably the vast majority of you would think Im crazy, but I took the internship instead. There was something super depressing about the other job offer that made me feel soulless when I walked away, and I just couldnt imagine enjoying life working there. So I get this internship. I learn a lot. I learned I dont really like web development. However, during this time I was also working hard on learning React and Angular in my spare time, which sparked my passion for frontend development and motivated me to pursue this specific job role. I continuously applied for jobs during my internship and even got a handful of phone screens and a couple of Skype interviews. Internship ends. Still no job offer in sight. Internship company promises to put in a good word for a couple big-names like Google and Facebook. Never hear back from them again...2 months afterwards I finally start getting a rapid influx of response to my job applications. I had been preparing a little bit differently up to this point, working on Codility and learning React and a bit of Angular. I was doing coding challenges to keep abreast of my logic and problem solving skills. Finally, my 180th application I get a response from a company in Hamburg, Germany. Now, just as a quick background and a bit of a tangent, Ive been speaking and learning German since I was in early elementary school and always kinda dreamed of moving to Germany when I was older. I didnt really consider it as a possibility as a recent graduate until I realized that life was a little too short to not pursue goals early-on. So I started applying for jobs in both the USA and in Germany, hoping that it would widen my net. I actually remember talking to my parents and telling them that there was something about this job that felt right. Well my gut-feeling was spot on. I passed the remote coding challenge with 100%, passed the Skype pair-programming live technical coding interview, and passed 2 more interviews with HR and the founders of the company. Again, long story short, I got the job. So after a total of 193 applications sent out over the course of 6 months, I have finally landed my first full-time job and will be moving abroad in June 2020 to Germany.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_b32e8e","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/b32e8e\/i_quit_my_job_without_another_one_lined_up_here\/","DATE":1552953600000,"PLAIN_TEXT":"First, let me give you a little bit of background. I have been in the industry for ~7 years, graduated from decent school in 2011. I had one internship in college that lead to a full time position in my hometown at a large company. Low pay but low responsibility, I worked at that position for about 3 years where I started doing front end development work. After that, I got a DevOps job in a different city, a big move for me. It was contract and lasted for 10 months until I jumped ship. It was taxing with long hours and a long commute. I went immediately to a new position as a front end developer for a smaller company. Worked with React building a SaaS web application for 2.5 years. My significant other got a dream position back in my home city which has an okay tech scene. At this point I am nearing 30 years old, and am looking to be closer to my family and slow the pace of my life down a bit. Problem is, I dont have a job lined up. Financially at this point, we are fine. My significant other makes enough money for the both of us to live very comfortably, and I have enough money put away to where I could live for a few years without any trouble. This is a very important thing to note, as I didnt feel pressure to find another job quickly to pay bills. I could get also health benefits through her job.What ended up happening is I quit my job around November without anything lined up, enjoyed the holidays, went on a couple of long tripsvacations to other countries, then started to apply to positions near the beginning of February. I was pretty casual about the process. I did no leetcode grind, but I wasnt applying to FANG companies or anything like that. Since then I have received 4 job offers, and as of last week, I landed a dream position doing web development, 100% remote. I am stoked.I guess I wanted to write this to give a different perspective. The common consensus is you should not quit your job unless you have another one lined up. For me it was the exact opposite. The break I took really allowed me to do a complete mental refresh. I was getting burned out, and desperately needed the break. I actually found myself doing side coding projects for fun, something I had not done... ever? Thanks for reading!EDIT: Thank you for the responses, if anyone has any questions feel free to askDM me and I will be happy to offer what help I can.EDIT2: I understand that this can come across as a bit of a humblebrag, and a bit disconected from those who are in troubling financial situations. That is totally fair. Another reason I made this post was because of the how nervous and anxious I felt before quitting and jumping into the unknown realm of unemployment. The anxiety was pervasive to all parts of my life. I wanted to help those who are in a similar situation with similar feelings as I had a few months ago with a real life example that ended well, thats all. I wish you all the best!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_uqiggi","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/uqiggi\/remote_work_has_had_my_motivation_incredibly_low\/","DATE":1652572800000,"PLAIN_TEXT":"Ive been work from home for almost a year now. Admittedly we are hybrid... once a month.The days were in the office, my motivation is through the roof. I check all the slack channels, I do lots of work, I pair program with senior engineers and learn lots from them, we go for coffee and lunch together, I can go out for a walk and hang round the office, were all sat together and I just - enjoy. working.When Im work from home for the other 30 days of the month: I sleep all day, I wake up for meetings, I do the bare minimum work, I dont engage in discussions, I learn nothing, I have tens of slack channels unchecked for weeks.We do a fair bit of pair programming too, this is incredible in the office, I love doing it and interacting with the engineers and learning. When its WFH I feel like a fucking snail, a zombie even. 8 hours on a call following instructions given to me. It turns my brain into mush, I learn absolutely nothing and its incredibly mind numbing.I genuinely dont know what to do anymore. Im a junior so these early years of my career are so vital to my development but every single week is getting wasted and wasted. I have absolutely 0 passion nor motivation to work when its remote.What can I do about this? Any advice?Edit: thank for you all the support everyone, there are a solid few comments that are kinda attacking me for being that guy whos ruining WFH for everyone (even though Im literally not!) so thank you for all that are actually being supportive whether or not you prefer WFH or IRL. Its important to remember that not everyone is the same. Yeah sure, 99% of the world love WFH, but to people like me, its getting more and more damaging, so its important to be understanding and supportive of each other regardless of what you prefer.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_uprw8e","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/uprw8e\/just_want_to_thank_this_sub_for_helping_me_land\/","DATE":1652486400000,"PLAIN_TEXT":"TLDR: Wasnt getting any responses, found this sub, submitted and overhauled my resume. Began The Odin Project and the L33tcode grind following recommendations. Made a big focus on soft skills in mock interviews. Found [this](https:old.reddit.comrcscareerquestionscommentsogc2kjjust_landed_first_junior_software_development) reddit post that recommended emailing companies through their contact page. Landed an offer from one of the 5 companies I emailed!Just signed my offer letter yesterday and I start on Monday, Im beyond excited. I will be making 60k TC, remote, in a LCOL area with 2 weeks PTO, but especially given my credentials and how little leverage I had, I was more than happy to take the offer to get my foot in the door. For context, Im an IT student (was indecisive as a college student, I knew I wanted a STEM major specifically in tech, but I focused my degree to Design and Development after I decided I wanted to be a SWE) at a state school, with a 3.1 GPA, no internships, and no expansive network. I started applying for summer internships around 2-3 months ago and I did not get a single bite after 50 or so applications sent over a week, not that I was surprised, but I started taking some steps.I tend to lurk on Reddit more than I post, so I found this sub and started browsing popular posts as I knew many studentsnew grads hang here. I saw rEngineeringResumes recommended a few times so I went over there to polish up my resume for the 50th time. Thankfully, the people over there werent afraid to tell me what my friends, family, and even counselors were afraid to tell me, and I almost overhauled my resume that night and took every single suggestion. I noticed The Odin Project was very popular and cherished in this sub, and a funny website that rhymes with Meetcode was popular as well. So I resorted to spending at least 45 minutes on both each day, along with sending out applications, as this semester wasnt as rigorous as others and I had more time on my hands.After I sent out a couple hundred more applications and failed a few interviews over the next month or two, I took a small 2-4 day break from sending out applications. I knew it was just a numbers game and I had to play the game, but I wanted to take a second to evaluate what I can do better. After binging this sub some more, I realized the absolute importance of SOFT SKILLS, and how interviews are 50% or more just a vibe check especially for entry level. I knew soft skills were important, but it never hit me that its better to work with an understanding helpful individual, rather than a snobby know-it-all. I scheduled some mock interviews with a different mindset. Rather than I need to prove to this guy who is about to drill me with questions why Im the ideal candidate I went with I want to demonstrate how passionate I am about my studies and my career, and how Ill use an opportunity of employment to engage with my peers and my environment to become a productive employee and team member. I then binged this sub some more before going through with my plan of spending a week sending 50 applications a day. I came across [this reddit post](https:old.reddit.comrcscareerquestionscommentsogc2kjjust_landed_first_junior_software_development) where the OP talks about his success landing a jr dev gig by emailing companies. While Ive read thousands of do this and youll land a job posts at this point, I decided to go through with this one. I spent 20 minutes emailing 5 different companies, 3 local software companies and 2 local hospitals. Within 1 week, I got responses from 3 of them, and got to have a phone call with 2 of them. The last company scheduled a technical phone screen where he did not ask me a single computer science question. The call was 80% a vibe check, with 10% the salary and confirming I can work as early as I said I could, and the rest just talking about school. Within 2 days, I received the offer letter for a Junior Application Developer and couldnt be more excited! I have signed it and was so relieved I didnt have to send out 300 more applications, considering that if I did not land a summer internship by the end of this month, I wouldve had to take an unpaidnon-remote one at the University.Sorry for the extremely long post, I made sure to put a TLDR at the top. I just wanted to share my story and Im so excited!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_diolt9","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/diolt9\/do_you_stay_at_a_job_you_like_or_chase_the_bag\/","DATE":1571184000000,"PLAIN_TEXT":"I currently work at a fairly large company in the midwest making a bit over 100k. Which is great considering the cost of living is so cheap. Most of the company IT workings &amp; culture is outdated, but I work on a small team that is actually able to work using a more modern approach &amp; toolchain (agilecloudCI-CDetc). I enjoy my coworkers. The other day an old coworker just dropped a huge offer on my plate. Almost double my current salary, working remote for a large medical supply company. They are also on old tech looking to modernize, but it doesnt seem like there is _any_ momentum yet to do so. There also isnt really a team or role designed yet to tackle this. It seems they are just trying to suck up folks from my previous job to build something similar to what we were working on there.Has anyone been in a similar situation before, what did you do or what did you consider? What kind of questions helped you make your decision?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_wuphai","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/wuphai\/is_it_common_for_a_paid_intern_to_be_fired\/","DATE":1661126400000,"PLAIN_TEXT":"I am working as a paid intern with a startup, the people I am working with are great, however, I have failed to do my last couple of tasks successfully, because I simply cant figure them out, my seniors are helping me out to a point and telling me solve it from this part on, its easy.And I still cant! I am spending a real amount of time trying to arrive at a solution but I feel like I am just spinning my wheels.Im afraid of being fired, because I was also promised a Junior level position after working as an intern for a while.Is it common for startups to fire interns?EDIT: For context, Im from the middle east working for a US based startup, I consider this quite an important part of my professional career, I cant just leave and find another job, Software Engineering jobs are pretty rare where I live, so my only option is to go remoterelocation, relocation in itself is imposibble without experience.Actually no one has said anything bad about my performance, I am not useless, I am getting tasks done, however, PERSONALLY, I feel like I take an age to get a simple feature implemented, in my defense though I have never worked with the technologies being used in the startup, like at all, so it is my first time being exposed to .... everything!Even if I end up getting fired or not getting offered a job, I found out that startup culture does not suit me, I am more of a slow paced guy, I seem to hate the fast pace startups have.Thanks to everyone who replied to the thread, all of the responses were helpful!PS: If my employer finds out this post, then give me a chance man :D","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ycbiqx","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ycbiqx\/is_the_concept_of_tech_cities_dead\/","DATE":1666569600000,"PLAIN_TEXT":"Im an experienced dev who is from a small city in North Carolina with no tech scene to speak of. About a decade ago I got a remote job so that I could actually do something with my career. Back then, remote jobs were estimated to be 1 to 3% of tech jobs so I felt pretty lucky.The only problem is my pay sucked, and my employer knew it sucked too. But I kept it because remote was the only way I could earn a real living at the time. 3 years ago I chose to move to be closer to family and chose one of the lauded tech cities that appeared in the media to kickstart my career (Raleigh, NC). Raleigh is in the same hype category as other mid size tech cities around the US like Pittsburgh, Columbus, Denver, etc. that are outside the realm of Silicon Valley and Seattle. Soon after the pandemic started and remote work got kicked into high gear and now remote work is estimated to be 25 to 30% of tech jobs. Since moving to Raleigh I have done job searching on 2 different occasions and I got offers from both local companies and remote ones. The Raleigh salaries were honestly pretty shocking. Basically I got offers that were $30k under what I was getting for the same remote jobs (this is just base, total compensation was even worse). Not to mention local jobs were all hybrid meaning less take home pay as I would be paying transportation costs out of pocket. So basically, the tech city salaries simply could not compete with remote. This got me thinking, is the concept of mid size tech cities dead? What incentive is there to uproot your life to move to a place like Raleigh for work when you can just get paid more from your living room?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_x0t1uc","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/x0t1uc\/just_got_hired_as_an_junior_ios_developer\/","DATE":1661731200000,"PLAIN_TEXT":"Basically first day of work is this Thursday. The work is 9-6, 5 days no remote. They are building app from scratch related to P.O.S business system. It is a small Asian company, the boss doesnt seem to know much about Swift, or Github. He had two people quit (Idk when), one had to move to other state, and the other due to family issue. There are around 2-3 developers including me who I havent met yet. I only have 5 months of private iOS contractor experience and few apps made. The boss offered $16 an hour ($3k a month) for 3 months and he said depending on how I perform he might discuss about salary increase. I took the offer since I dont have much real life experience. Did I do the right thing? Or do I keep looking for other Junior position job? It took several interviews and sent 50+ application to find this job and Im afraid I wont find another job if this one isnt for me.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ln9bq5","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ln9bq5\/from_30k_to_175k_in_three_years\/","DATE":1613692800000,"PLAIN_TEXT":"Just got my thread reinstated - edits at bottom.Posting this to share my own (25f) experience, esp during now when finding a job seems nearly impossible. TLDR at bottom.I graduated college with two liberal arts degrees and no experience in CS. I dabbled in graphic design as a hobby and decided to learn basic HTMLCSS so I could start building out kpop fan sites.After graduating, I couldnt find a job. So, I settled four months later on a Marketing Assistant role for a Shopify store startup, doing mostly CMS updates and graphic design.A few months later, I worked at an agency as a CMS Manager, mostly working with Magento and Shopify e-commerce brands.I got laid off a year later and took a Front End Engineer role at a Fortune 100 company using my agency work as a portfolio.I added my new work from the F100 job to the same txt file portfolio and ended up applying to other jobs a year later. I now work remotely as a Software Engineer at FAANG.Reflecting on my experience, it helped to gradually work my way up to a big name company to get my foot in the door. Once I had a recognizable name on my resume, it got easier.Coming from a traditional Asian family, I got discouraged and ragged on a lot for accepting the 30k job out of college. As immigrants, my parents thought a BA automatically meant I could score a 6 figure job, and I was settling.Obviously looking back on it now, I think you should only be willing to compromise so much and have a realistic idea of what your skills are worth. However, for your first CS job, you should be focused on learning and building experience to jump jobs ASAP.TLDR doesnt matter if you dont have a proper education in the field, couldnt pay $$$ for boot camp, or dont have an award-winning portfolio - there are opportunities out there. The hardest part is starting, and getting your foot in the door. The first job may not be ideal, but itll foster learning and growth for your move up.EDIT: Adding in more of my experience as requested. I woke up to a lot of misogynistic DMs and doubt, so Ive messaged a mod to confirm the above.In regards to my transition from a CMS manager to a web dev in a F100: During my job at the agency, I met with a lot of talented swe and they would give me a chance at working on some of their app and website projects. I did a lot of project-based learning this way and had their support when I had questions.While my portfolio was just a list of links, coming from an agency, it had a wide breadth of work working with apps as well as websites. It featured over 15 multimillion dollar companies that the agency had contracts with, so my work contained a lot of projects still live on the websites of the reputable brands. I believe my portfolio and well designed resume caught the eye of recruiters during a monotonous screening process. Yes, I was applying for an swe job, but my resume was tailored to recruiters that want more of an idea of experience and general tech capabilities rather than all swe jargon. I was using my background in business and design when it came to marketing myself as a candidate, and my front end skills when it came to talking about my work in interviews and the technical assessments.When it came to interviews, I studied up on whiteboard problems and assessments posted on HackerRank, Reddit, StackOverflow, etc. I didnt touch on LeetCode, but to be fair, I have a front-end role that emphasizes more on design patterns and web technologies rather than algorithms. I tend to come off as lighthearted in interviews, sprinkling in jokes, and I emphasize a lot about my want to work on a team. I have no doubt my personality and potential expressed in interviews was considered when hiring.Also, please understand Im not saying anyone can do this, by telling my story, just sharing its possible. Im aware that my experience is not the most common. However, since posting, Ive had other engineers message me saying they had a similar trajectory. My main point isnt that you should skip a degree or walk into FAANG, but that you shouldnt be too disheartened by a less-than-stellar start and salary in your career. Personable interviews, a well written resume, and a strong body of work and experience can do wonders.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_tt61xq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/tt61xq\/beware_of_job_offer_fraud\/","DATE":1648684800000,"PLAIN_TEXT":"TL;DR; Almost got scammed for over $4k USD this week. Job hunting is hard be careful out there. Here is the report I sent to the FTC.-- BEGIN REPORT --I was contacted after submitting an application for a Software Developer role at a company called SrinSoft. SrinSoft, to my knowledge, is a legitimate company. I believe this person was using SrinSoft as a front. Michael Reeves is the supposed name of the person who reached out to me.It was a pretty quick process overall, we communicated over email and I was asked to fill out a form in lieu of a face to face interview. I did this, and received a job offer as a result. During this process the only information I sent was my address, phone number, and email. No sensitive information was sent over to my knowledge.I should add that the purely email-based communication was a little suspicious. I contacted my father, who has worked as a Software Engineer for many years as a sort of sniff test. I was told that it was not unprecedented due to the high turnover rate of contract houses like SrinSoft. They put little investment into employees and hire just about anyone. This accounted for the email-only nature of the hiring process and I proceeded.After this email interview, I was told that SrinSoft wanted to hire me and a job offer was extended, which I accepted. I was informed about some of the next steps in the process, one of which was to be setting up a home office as this position was to be fully remote. Michael Reeves cited significant logistical issues in getting the equipment from accredited vendors nationwide when he told me I would be purchasing the equipment from their vendors myself. This seemed reasonable.A check was emailed to me, which I deposited via Mobile Deposit. A little less than 24 hours later, the funds were available and I notified Michael Reeves. At this point, he informed me that--having already spoken with the vendor--the vendor was ready to deliver and just needed payment to proceed. I was asked to send the money using Zelle to a Richard King. At this point, red flags went up all over the place for me. Call it a bad feeling if you will. I think God had my back if I am being honest. Michael got increasingly insistent that I send the money immediately. As the original check was from Chase Bank, I went to a local branch and the teller there confirmed that the check was extremely likely to be fraudulent.At this time I informed Michael Reeves that I intended to delay the purchase of the equipment a few weeks. My start date of May 2nd, 2022 was aways off still, waiting should not have been an issue. This made Michael very, very unhappy. He reached out with multiple emails, messages, and phone calls. All of which I ignored. I have contacted my bank and filed a fraud claim as of this writing.-- END REPORT --All in all, It was a good learning experience. I will never accept a check from anyone ever again. Maybe never is a little too restrictive but I will always wonder.It sucks to not have a job in actuality but I would rather not have a job than be out $4k. The hunt goes on I suppose...Stay safe, friends.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_9waruk","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/9waruk\/name_and_shame_webinate\/","DATE":1541894400000,"PLAIN_TEXT":"This pertains specifically to the company that is in Florida since there are about two or three other small companies that have this same name (seemingly it would be a popular choice for this field of work).Basically, they take advantage of their workers as much as possible. How they do that might vary from person to person but heres my experience.I actually got referred to the founder of the company by someone else on Reddit, who is just a second hand connection to this guy. Company founder was looking for more contractors to work for him and he was interested in my experience. The company is a web agency that mostly hires remote contractors.We had just one phone interview that lasted about an hour, no take-home test or rigorous technical questions or exercises. He seemed convinced to hire me, we agreed upon the rate I settled on for some $X an hour. As with my previous contract jobs I always charge per clock hour of work and thats how I thought hed be basing the agreement on.The following Monday he sent me an email with an NDA attached and instructions on how to get set up. He has client projects already on the pipeline and I was assigned to one. I log into GitLab with my new credentials to look it over.I submitted the signed NDA then looked at the tasks available on Gitlab and so far this seems pretty normal for a remote job. I got to chat with one of the senior devs who was also working on that project.Immediately I noticed the tasks had a set number of hours written next to it. Fix bug A - 4 hrs, Implement some new search feature - 6 hrs, stuff like that. I PMed the business owner about this. he said, thats just how much I should be billing for the client. And he also followed up with an email saying, you are required to only bill for the amount stated on the tasks, or the time it took you to finish the tasks, whichever is shorter. In addition to that, self-training, research and other related work is not considered billable work time.Aside from that he expects me to be online for chat 9 through 5 even though I am allowed to work when I want to. I dont know if this is on call but either way, this wasnt discussed over the phone and neither was the stuff about tasks having predetermined hourly estimates by their lead developer. I asked him to produce a contract because I wont work without one, founder said they dont do written agreements. So I also asked the senior dev about it and he said not to worry because hes been working for half a year and he has not been given a written contract either. And Im thinking, is this really all right with him? Without a written contract, you have no way of doing anything about it if that happens, other than walk out and say good bye to the work youve done and money youve earned.Apart from that, their notion of wanting to pay you only what their lead determines he would need is outrageous. After all I should be setting the estimates for my own work. Im not paid the rate of a senior developer, and that is because Im not as fast, and also because this was using a framework Ive never used before. But with these hourly estimates what they want is the speed of a senior programmer at the rate of a junior programmer.I only did two tasks before I decided to hold off if the founder wasnt going to renegotiate or present a signable entity. On Wednesday he told me he was terminating my contract because I did not appear on chat at the expected hours, and was nagging him about terms of pay. But setting terms in writing is some basic company 101 stuff. I dont know if hes just used to such informality but it wasnt working for me.In particular, I shouldnt have let them get away with that senior programmer estimates BS. But if they refuse to even entertain the idea, or if they refuse to come to reasonable terms with you, it wasnt surprising that they refuse to pay me for the few hours of work I did do. I didnt completely dodge a bullet- because I lost time with them- but it could have been much worse.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_wude6q","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/wude6q\/struggling_with_mental_health_issues_while_wfh\/","DATE":1661040000000,"PLAIN_TEXT":"Hi, Im writing this to hopefully find some other people that can relate. Working full time remotely has been taking a huge toll on my mental health. I am completely isolated in my room and glued to my computer for 8-10 hours everyday. I have not made any meaningful relationships with any co-workers since Ive started working. My life feels completely dull and lacklustre just robotically completing tasks day to day. I miss going out in the world and interacting and seeing other people. I think I need to work in an office. Can anyone relate?EDIT: Thank you all for the suggestions! I realize Im treating work as life and not giving myself a break. I will try to prioritize WLB as of now.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_f19ual","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/f19ual\/would_you_change_jobs_due_to_an_unsupportive\/","DATE":1581206400000,"PLAIN_TEXT":"Ive been a dev manager for 3 years. I love working with my team of developers and have gotten to addressing a lot of interpersonal issues amounting in the past year. Everyone has grown a lot and Im proud of how far theyve come. The psychological safety on the team is better than ever. I come from a dev background of 15 years so I use empathy to connect, and it has worked really well.On the other hand, my new manager does not show me any support remotely close to what I do for my team. I hadnt had a 1:1 for over 2 months, and when I tried to set some time with them, they mostly talked about themselves, the department and asked me to help solve their problems. At no point did they ask about my career growth. At this point they basically lets me do whatever I feel is right at my team level, or even making hiring process changes (since Im most familiar). They mostly just acts as a budget holder for me, and asks how my people are doing.I care about my team but Im a bit fed up with my own lack of support. Im thinking of parting ways but have a bit of guilt over it. Or should I try one last attempt to be as direct as possible?Btw, my boss is the VP (without a technical background) and seems to like to get involved in areas that I frankly dont think a VP should be getting into (e.g. pulse checks with various devs on process or Tech). When I suggested getting a director level person to help, they just scoffed at the idea because they were apparently hired to do just this - help with execution and follow through. But they might have just put my idea down because I hinted at the fact that I have experience translating strategy into work for dev teams.tl;dr - Dev manager thinking of jumping ship due to limited learning opportunities and career growth.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_4vl2ym","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/4vl2ym\/i_found_child_porn_on_my_bosses_computer_and_i\/","DATE":1470009600000,"PLAIN_TEXT":"So, I found child porn on my bosses computer. I told the police, helped them seize the machine and other things from his office, and cooperated with the investigation. I was immediately suspended by the boss, and I never returned to work figuring he might try to kill me. I work in IT and was attempting to fix an issue with his remote access to the machine, and while a scan ran, I was seeing if hed opened anything recently that might have caused the issue, and then all at once my entire fucking life exploded.A coworker of mine hired me a few months later at his business so he knew what happened and always suspected and such, but the clientbase couldnt support me, things changed in his life, blah blah, so now Im applying for a job blind outside my normal circles.I keep getting the question on forms can we contact this employer and I know from previous clients at my last job that he has continuously and repeatedly badmouthed me and made insane stuff up constantly about me. I havent been telling people, I told no clients what I found, I stayed the hell away from that shit hoping to stop the spread of insanity, but it hasnt worked. This is pretty much the first time Im posting about it anywhere.I have no goddamn idea what to tell employers. Am I honest with them? It could show that Im relatively upstanding and that I did the right and extremely hard thing on the worst road possible, at the expense of my career.... but it also makes it look like maybe I invaded his privacy and am kind of a dick, if someone has something, anything to hide, they may be hesitant to hire me, especially if the hiring person isnt as familiar with IT and infosec as someone who works in it.Do I say yes you can contact them and elaborate on what happened and provide the case number? Or do I just leave it alone and hope to christ they dont get ahold of him? I know for a fact the guy will badmouth me in any way he can, and itd be extremely difficult (financially impossible) to mount a legal case against him.So yeah, a lot of exposition, thinking about it gets me real nervous. What the hell do I say to future employers and in interviews?EDIT: Thank you guys so much for all the support and advice. This has been so much help and its been amazing to get so much affirmation - I hope I run into folks like you people when I start getting more interviews.Years later edit: Future employers if you managed to dig this up, nice! Please ask me candidly about this, as even years later it still makes me shaky and uncomfortable to talk about and I dont like to beat around the bush - if I can just dump this purse out all at once Ill feel a lot better.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_gy662x","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/gy662x\/i_cheated_my_way_to_big_tech_now_whats_the_next\/","DATE":1591488000000,"PLAIN_TEXT":"I am a PhD in science and I decided to change career. I knew little about computer science and software development. I only did two baby projects. I did a shit ton of leetcode questions before being interviewed by big tech companies (FAANMG). I was interviewed by three and got offers by all three. Im about to start working remotely soon for one really great Big Tech. I am deeply worried about my ability to survive.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_dobxo1","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/dobxo1\/take_a_50_raise_for_a_non_swe_role\/","DATE":1572220800000,"PLAIN_TEXT":"Would you take a 50% raise to move from an SWE to SA (Solutions Architect) Role. Was currently offered a new position to be a SA for a company that is beyond fantastic located in SF. Will i dampen my tech career switching over to startup and not being a sole engineer in front of code all day, maybe only 1-2 hours now. The company is in a great spot in terms of new tech stack and funding. They have a really fun salesopdev team, brilliant people, and overall better atmosphere. Im located in San Diego.Current salary after 3 years: 65k -&gt; 80k -&gt; 84,000K, no signing bonus or bonuses in general, just 401k and benefits, remote once a week.New Salary: 130k TC.&amp;#x200B;EDIT: SA - Solutions Architech. Working with engineer and business teams and designing requirements, specs, and examplesdemos of things. Its definitely more customer facing!&amp;#x200B;EDIT: I accepted the offer at $130k TC","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ac88ig","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ac88ig\/submitted_my_notice_but_company_wants_me_to_stay\/","DATE":1546473600000,"PLAIN_TEXT":"Ive been working for a consulting firm for several years. Its gotten to the point where I hate my job and dread going into the office. The software I work with is very specific and the industry is a bubble. I dont feel like Im going anywhere in my career. Honestly, I regret staying so long. I wanted to take some time off and re-evaluate if computer science is even right for me.So I submitted my 1 week notice to upper management today, and they tried to guilt trip me as they had been flexible with me working remote for some time and said theyll lose the project that Im currently on if I quit now. They want me to stay on an extra month to help with transition as they dont have any one else to replace me at the moment. In the spur of the moment, I actually agreed (non-binding) but now Im regretting that.Since my company is an at will employer, do I really need to stay on? Could there be any repercussions other than pissing the company off? I dont plan to ever work in this particular bubble industry again. At this point, Im so done.UPDATE 1318 5:33 PM: Thanks for all the guidance guys. I asked for a higher rate for the remaining month and it didnt go over so well, with my superior getting upset, continuing to guilt trip me, lecturing me, and even threatening me at one point to give a negative referral. I managed to stay firm and will be ending in a week as planned. Although I seemed to have burned this bridge, I dont regret it.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_bs902e","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/bs902e\/tip_you_can_negotiate_for_remote_work\/","DATE":1558569600000,"PLAIN_TEXT":"I see people talking about the difficulty of finding remote jobs, and theyre often looking for websites and listings that explicitly say the position is remote. Thats definitely an option, but its not your only one.&amp;#x200B;Ive worked remote since my first job out of college and 3 jobs later, Im still working remote. All 3 of these jobs were not advertised as remote jobs. How? I just asked. Thats it. No magic spells. No special sauce. When youre given an offer, just say that youd like to accept it, but youd prefer to work remote. Even if they expected you to relocate to another state. Theyve invested time, money, and energy by giving you that offer, so its in their best interest to grant the request, unless theres a major reason they cant.&amp;#x200B;Will some companies rescind the offer if you ask to be remote? Sure, its a possibility. But its 2019; internet is cheaper and faster than ever, and remote work is becoming much more common (especially with the popularity of cloud services), so give it a shot if thats what you want to do.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_tn41t0","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/tn41t0\/leaving_being_the_downfall_of_a_company\/","DATE":1648080000000,"PLAIN_TEXT":"Ive long worked for the same company, 15 years.During that time, Ive become an ~~important~~ critical part of the team. Its a small company, and Ive become a subject matter expert. Our software team is tiny. There are 3.5 of us. I work pretty much on my own on the critical embedded stuff, which is the brains of our devices, which is central to most other parts. Ive been asking, for years, that we hire another person to help me out, and even bring in some talent that could help us modernize the software development part of the company.I know what skills I lack and I feel like my professional development here has stagnated. And, quite frankly, I feel like it is time to do something new. And so I was beginning to think about looking for another position.A job opportunity fell into my lap. I wasnt super keen on it at first, but I figured I would use the interview process to see where I stand so I knew how much LC i needed to grind.During that time, they hit on all of the things that I want to learn, and where I see the most growth for myself. It is a stable, large company and the pay is better. Additionally, I am right next to the office so I would have no commute and its hybrid and (I know this will sound crazy to most people here) Im sick of WFH, which Ive done for the past 8 years. I like being around other people, even though losing the flexibility would suck.They offered me the job with a significant raise over what I am making now. In that regards, its a no-brainer.So I told my job that Im leaving, and the owner, calmly, freaked out. He told me that he doesnt have any idea how he could replace me. Like neither he nor my boss even know how to write my job description. They are scared, I think legitimately so, that if Im gone all of our projects grind to a halt, and they are afraid of what that means for revenue streams and thus the company as a whole.How does one deal with this? I have some loyalty to the company, as they have shown me loyalty by allowing me to work remotely as I moved around the country with my wife. But I really think for myself I need to move on, and (of course) this is not really my problem. But the issue is that I like all the guys I work with now. I dont want any ill-will there.I gave him a month, but he keeps begging me to ask my new job if they could get 3 months, which honestly still wouldnt be enough. They really want me there for another year so we can transition stuff, but that wont happen.Ive very anxious about this whole thing. I think I really just need someone to tell me Im doing the right thing.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_hx2ndy","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/hx2ndy\/absentee_teammate\/","DATE":1595548800000,"PLAIN_TEXT":"I dont know how to deal with my teammate who clearly isnt working, and isnt a good developer when they do work. We work at a ~250-person SaaS company, our team is 3 developers including myself and a developer lead. Throwaway account for anonymity. I have a problematic teammate (lets call them Mike) who does very little work. Something to the effect of 1-2 tickets every two-week sprint where everyone else is expected to do 8-10. Not only that but the few tasks Mike does complete tend to be trivial: things like text changes, minor CSS adjustments, and other one-liners that most other people could take care of in about 30 minutes. Before Covid, when we were all physically in the office, Mike would typically drop their stuff off at their desk and then go sit in one of the various public break rooms for the entire day. That wouldnt be a big deal except that Mike is unresponsive on Slack. So if you need to talk to Mike, you need to hunt them down or wait hours for them to respond on Slack. Also, Mike would regularly miss meetings or be very late. Now that were all remote, Mike is completely unresponsive on slack. Were supposed to check-in, check-out and post updates throughout the day in a particular slack channel. Mike is the only team member who is not complying and has very infrequent posts in this channel. There are entire days where Mike is present at stand-up, then offline on Slack for the entire day. I sincerely doubt that Mike is actually working anywhere close to a. 40-hour work week since we went remote. I think its also worth mentioning that Mike doesnt have children, which might excuse some of the remote working behavior Ive described above. At first, people were saying that Mike is new and they will get up to speed soon. Then they were saying that our team has an education problem and we need to foster an environment that can make Mike succeed. Then we started making a lot of rules to ensure everyone was staying productive (Mike rarely follows any of these new rules). Now it seems that everyone is apathetic. We have accepted that Mike will work on a trivial issue for 5 days, get stuck without being able to explain why and give up only for someone else to later solve the issue in half a day. Its been over a year since Mike joined our team and over two years since Mike joined the company. Im not Mikes boss. I dont care that our company is paying someone a full salary to do one day of work every week or two. I wish I could do the same, but Ive already established myself as a workhorse and when my productivity drops, management sets up meetings to get me back on track. What really bugs me is that instead of Mike, the team could have somebody I could learn from or someone who actually cares about their career. When my projects are running behind, management often asks if I can get Mike to help me. Ive tried and its simply not worth it. Id like to see Mike let go or moved to a different team, but I would never outright say the former and I wouldnt know how to request the latter. How do I deal with this teammate situation?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_hodfy7","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/hodfy7\/just_ended_a_recent_job_search_as_a_pretty\/","DATE":1594252800000,"PLAIN_TEXT":"## OverviewLittle bit about me: I am a Software Engineer living in Boise, Idaho. Heres my resume [on google drive](https:drive.google.comfiled1n_gQeO15QkA3p9q6Tpaz3T_yGCBxdfKxview?usp=sharing). I previously worked at CPA Global working on enterprise java applications, with a good amount of AWS thrown into the mix. I started looking due to some issues with the remote DevOps team; I was essentially doing double duty due to the fact that the DevOps professional did not show up for (remote) work. That professional was in a different division than me and was friends with his boss, so he basically got away with everything while I picked up the slack. While Im not adverse to doing work, it was frustrating seeing someone else collect a paycheck for my work.Theres a lot of talk on here about career prospects from FAANG developers living in huge tech hubs. Im not that guy. Dont get me wrong, Id love to be that guy. Ive made it to the onsite round at FAANGs multiple times, but I never got it quite right.While I still obviously want to push myself in terms of my career, I had to be honest going into this job search: Going for a Big-N company was a pipe dream, and I should focus on more realistic prospects during my job search.Id also like to take this time to apologize if it seems humblebraggy. I went back and forth whether to post this, and ultimately decided to post on the idea that more information is always better, even if said information is a bit annoying.## My Job Search MethodologyDue to the small selection of roles locally, I decided to consider both local and 100% remote positions. I chose the shotgun approach. Every weekday, I would apply to as many jobs as I could for thirty minutes. If an application was taking longer than 5 minutes, I would abandon it. I altered between three websites: LinkedIn, Glassdoor, and Indeed.## ResultsI started my job search on May 11th 2020. I finished my search on July 2nd 2020. In this time I applied to 221 jobs. While I dont have exact numbers in front of me, roughly 10% of those applications resulted in any kind of positive response. From there, my results were more positive. Ultimately, I received three offers (and withdrew from five prospects once I ended my search). These offers were: A Government Contracting Company - Note the position was full time, but the company itself receives federal government contracts. I actually received a contingent offer about three weeks into my search, but it required me to go through government clearance. Because I didnt view that as a guarantee (I smoked weed in college and was cited for minor in possession of alcohol by Ames PD), I kept looking A Seattle based startup - This one was a bit disappointing. The job posting listed a much higher salary than what I ended up getting offered. Not like low end of the range, but like half as much as what was listed. I think there was some miscommunication. Either way, we couldnt come to an agreement on compensation. An LA based startup - This is the offer I ended up taking. Compensation was actually above what I was expecting, it seemed to have a good worklife balance, and its 100% remote so I can eventually move if I want to.## SalarySo usually salary posts here are humblebrags. I apologize if it comes off this way. Im excited so its hard to write without a bit of that leaking over. While Im really happy with the results, but theyre still not anything compared to big city or big-N salaries. Part of the reason I live in Boise (also its absolutely gorgeous) is to attempt to mitigate the non top-tier salary with a lower cost of living. Anyway:Previous Job - 100k base, 6% 401k match, possible 10% bonus (was 3% last year, likely to be even lower this year), HSA health plan.New Job - 140k base, 5% 401k match, no bonus, PPO health plan.I get theres probably a lot of big city based developers giggling about how I can be excited about that, but you gotta realize its essentially a forty percent increase for me. Thats a big deal for me.## Some Observations Only a small number of companies asked any coding questions, and most of those are things I would consider an easy level on leetcode. This was a bit of a disappointment as Ive spent a lot of time grinding those types of problems. In the future, I plan to spend this time on coding projects. There were a LOT of questions about AWS. I was able to answer them well (ironically due to the reason I was leaving my current position), but its still surprising how much interest there was in DevOps technologies considering I was going mostly for traditional developer positions. There were a considerable amount of questions concerning application design and architecture. I like those vs leetcode style questions because I feel they much more accurately reflect skills required to be a successful developer. My success was much higher in June than it was in May. I think that companies who were able to weather the pandemic have started hiring again, at least tepidly. While I essentially only had a 1% application to offer rate, it was a lot easier to create a generic resume and shotgun it out than it would have been to research and pinpoint specific companies and tailor my resume. 910 would spam again. The job search led to a LOT of phone screens and video interviews. If I wasnt working remote due to covid 19, It would have been a lot more difficult to conduct these interviews## Final ThoughtsI know Im not top-tier and my approach was heavy handed, but I got a big raise in a relatively short matter of time during an economic downturn. I call this a win.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_zm6jjm","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/zm6jjm\/would_you_take_this_job_offer_at_tiktok\/","DATE":1670976000000,"PLAIN_TEXT":"Ive been working at the same company for 8 years and am tired of my current job, management and just the vibe so want a change. While Im not a developer or software engineer, I do work in Healthcare IT, specifically in IT Management for a fairly large company (100,000 employees). I was offered a job at TikTok to help them build out the same IT Management team for the work Ive been doing the past 8 years. Heres a breakdown of the pros and cons I guess:Current JobBase Salary: $142,000Overtime Pay: NoneBonus: $0Annual Raises: capped at 3%Promotion RaisesJob Change Raise: capped at 10%Level: People ManagerPTO: 28 DaysOffice: Currently fully remote but will be hybridCommute: Office 15 min driveNever received any sign on bonusRSU: 0TikTok OfferBase Salary: $165,000Overtime: Eligible for overtime pay (hourly)Bonus: Up to 25% annually Annual Raises: Potential opportunity 2 review periodsLevel: 1-2 High (Individual Contributor) PTO: 17 DaysSick Days: 10 DaysOffice: Hybrid 2 days on siteCommute: 1 Hour 15 min train rideSign On Bonus: $50,000 - but have to stay for 2 yearsRSU: 600 shares over 4 yearsIve only worked at 1 company for 8 years so Im nervous to even make a change. If I was promoted or even applied for another team my raise would be capped at 10%. Ive been looking on the internal career website and havent seen anything I would suitable for. TikTok has a 996 culture but speaking to the hiring manager and his boss theyve actually been super aware of that and ensure their team doesnt do that. Asides from on call or a call or two per week they try to avoid after hours for their teams. Have staff schedules in advance and a dedicated evening shift team. They are in a growth mode for this team as they just created it less than a year ago and even the manager doesnt have the experience I have. For those that are going to say why are you going to work for the Chinese Spy or Government, from my understanding they are separating the US infrastructure from China for these reasons. So thats not my concern. I dont speak Chinese if that matters.Edit 1: Just to clarify I am going to be paid hourly so roughly $80 an hour. I am OT eligible which means after 40 hours I get paid x1.5. If this job is 996 thats an absurd amount of money (over $360K just in base). Also I cannot move, I own a house in the suburbs (I guess thats what you call Long Island for non NY people) and the job is in the city. This is the counter offer after Ive negotiated once already.Edit 2: Ive been pretty heavily applying Q4 of 2022 and most positions I see are for individual contributor roles in my niche position whereas Ive been a people manager for 6-7 years now. So Im over qualified for most of those jobs, pay is sht andor I just dont get a call back. So Ive tried expanding to similar but not exactly in the position I work in. 1 Sr Manager role I didnt get which was a good pay and not a tech company but have no clue why I didnt get it tbh. I interviewed very well and they were extremely impressed. 1 individual contributor role at AMZ I bombed the interview but I took for the experience and pay1 interview at Twilio I went through 8 rounds of interviews and didnt get it. They took someone with more experience in the tech space. And now this TikTok is an individual contributor role, so no people management headache, and more pay and also a big name company.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_fx6l3o","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/fx6l3o\/i_am_nick_kolakowski_senior_editor_of_insights_at\/","DATE":1586304000000,"PLAIN_TEXT":"Hi! Im Nick Kolakowski, the Senior Editor of Insights at Dice.com.At Dice Insights, we try to distill the complex world of technology careers into actionable knowledge for technology professionals at each and every stage of your career.The current situation has unleashed a lot of confusion and fear, especially when it comes to jobs and careers. Ive been covering industry news, job trends, and career advice (including remote work) during this difficult time, and I might have some insights (so to speak) that will help.Heres PROOF OF LIFE: [https:twitter.comnkolakowskistatus1247874566992670721](https:twitter.comnkolakowskistatus1235572002846642181)Ill be answering your questions from 9:30am to 5:30pm EST. AMA!Edit: The thread has been approved by the mods.Edit: Thank you all for the questions! Im done for today, but might answer couple more questions tomorrow.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_tcu12b","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/tcu12b\/anyone_worried_that_cheap_programming_labor_will\/","DATE":1647043200000,"PLAIN_TEXT":"My question is, for the same level of relative skill, e.g., mid-level software developer with 3 years experience, is programming as a profession becoming relatively more lucrative or less lucrative in terms of pay, difficulty of work, and job stability?My impression is that cheap programming labour is becoming more and more accessible, with more students than ever and more cross-discipline graduates picking up programming. At the same time, availability of cheap labour is increasing due to 1) big US companies setting up remote offices in countries with lower pay, and 2) the expanding market of remote work, from WFH being a thing to things like numerous contractors available for projects on Fiverr for example. Is this likely to drive down pay for developers over time, or is the growth in the IT sector too great for that to matter?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_c17s2y","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/c17s2y\/25m_is_it_normal_to_feel_so_bored_and_jaded_in_a\/","DATE":1560643200000,"PLAIN_TEXT":"Hey guys. A brief intro: I graduated from college around 3 years ago. College was an amazing time for me and thinking back, it is mostly probably due to the fact that I made close genuine friendships with others. I graduated with a degree in CS and am now working at a major tech company in SF. Shortly during and after college I was in a relationship with this girl who basically cheated on me and I was heartbroken. I was very jaded for a while and basically committed all my time to getting fit (lost like 40 pounds, got fit, etc). To this day its one of the things Im most proud of.&amp;#x200B;Fast forward to now. Ive been working in software engineering at a large tech company in SF for a while now. I cannot tell if its me just being unfairly jaded, if its an inevitable part of living in SF, if its a normal part of growing up, or if I am simply just depressed, but I feel completely bored and jaded about everything. Over this time I slowly grew tired of my friend group (I feel like I started to realize I dont share a lot of their values - a lot of their socializing involves getting very drunk which I no longer enjoy). So over the past year every time my friends would invite me out I would turn down more and more so now they dont invite me to things. On top of that, my closest acquaintances from work have left, and the work itself has become extremely boring. I have contemplated leaving to another company at one point but Im so bored with it that I dont even know if software engineering is for me anymore. Also recruitinginterview prep is hard when Im working out every day so Ive even considered just quitting for now and living with my parents until I get a new job (but I feel this is a sad way out). It is just so hard to find the time to master CS interview prep when I can only study like an hour a day.&amp;#x200B;But I still dont know if this is the solution, like I dont know if its the job or just me. I feel like I would like to meet more people, but the times I have tried I always end up regretting it because it ends up going nowhere and I ended up wasting my time. Now I just seem to have this pessimistic mindset what I just know I wont click with anyone new so theres no point in making the effort. It doesnt help that SF (to me at least) seems to have this monogamous culture - everyone kinda seems to have the same personality. I dont know. Maybe thats a little judgemental, but its hard not to think that way when Ive met so many of the same people constantly talking about the same techie things, its hard for me to find the energy to bother.&amp;#x200B;All that being said, it sometimes feels like the only thing exciting I have going on in my life is fitness. Recently I got very ill and I couldnt work out that much, and it really made me realize how damned empty my life is. Ive realized, over the past 1.5-2 years, the only things I really look forward to, is traveling or going to the gym (best part of my day). Everything else is just kinda gray. Is this normal? I have considered looking into remote work which seems like awesome opportunity. I kind of want to do something extremely daring, maybe move to Thailand with a friend and try to make money as we go ( I have a friend who is actually down to do this with me, very tempting). But at the same time I want the stability of having a place to work out every day and eat clean etc. I guess I can say I kind of miss the environment of college, where you can meet a wide variety of people without hardly trying, but youre still embedded in this routine that is geared towards your goals and development. Is it normal to feel this way? Will changing my environment really help me, or is the problem my mindset? Should I try to remote work, test a different field, or just move to a different city? Is it ok to quit without having another job lined up so I can focus more on interviewing? Anyone have any personal experiences theyd like to share? Open to all advice. Thanks!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_alxk6f","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/alxk6f\/success_story_minwage_highschool_dropout_to_138k\/","DATE":1548892800000,"PLAIN_TEXT":"Since were doing these now, I figured Id share mine too. Ill try to keep it simple for that quick injection of positivity before you continue your browsing.1. I grew up in rural, upstate NY (town population of around ~8k) and a median county income of ~$17kyear.2. I dealt with mental health issues, was on and off atypical antipsychotics and in and out of hospitals basically my entire adolescence.3. I was a violent, troubled little shit that got in constant fights and was kicked out of basically every school in my area.4. Eventually landed in a correctional highschool with dress codes, security guards, metal detectors everywhere, obnoxious procedures.5. Decided to go cold turkey on my meds (they made me a zombie), and refused to listen to docs.6. After more violence and basically no education, decided to drop out of that highschool after repeating 9th grade.7. Jobless WoW and Runescape addict for a couple years at moms house. I had explored private servers and learned Java  some general scripting for this. Now interested in programming.8. Found first job at a Rite-Aid for minimum wage, 20 hours a week.9. Decided I wanted to pursue computers  programming. Figured Id do IT. Ragequit the Rite-Aid job.10. Found a part-time database technician (Microsoft Access) job. $10hr.11. Couldnt go to college without a G.E.D, so I went and got that.12. Enrolled in Niagara County Community College for an Associates in CS with G.E.D.13. Finished a 2 year degree in a little over 2 years, excellent grades in programming classes, shit grades elsewhere (3.1 GPA).14. Decided I hated the weather in NY, moved to AZ and transferred to ASU. Credits didnt line up, so I lost a year. 15. Landed first software dev job (internship) @ ~20hr after a year in AZ. Enterprise Java &amp; AWS.16. They offered to hire me as a full-time engineer @ 22hr after 3 months. I accepted.17. Finished BSCS with a 2.9 GPA in another 2 years. Repeated some classes, didnt really care about them much (since I was working full time as an engineer already).18. With degree in hand now, in the middle of a pretty stressful but lucrative project, I said Id leave unless I got a raise. They gave me one: $72.5kyr salaried.19. I decided I hated the heat, and returned to NY. Continued working remote 100%.20. Laid off because I was remote. Found a new job in Buffalo: $75kyr.21. Volunteered for anything and everything. Embraced responsibility and learning new things. Started leading meetings as scrum master, and suggested a migration to AWS, which I also led. Promoted to Sr. Software Engineer in 8 months: bump to $82k.22. Decided the $7k raise wasnt enough, started to see what else was out there.23. Figured an AWS job would be neat, studied for Solution Architect - Associate cert. Finished that.24. Landed a remote AWS Solution Architect  Senior Dev role for $138k annually.25. Quit job, accepted remote AWS offer. Now 27.26. Bought a Hellcat (because fuck normality), drove across the country back to AZ (I think I missed the cacti).27. Still working remotely, with entrepreneurial pursuits on the side. I dont really want to work for other people anymore.28. Posted my story on Reddit so people might not feel bummed about their situation.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_xyr2qq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/xyr2qq\/how_to_successfully_transition_from_principal\/","DATE":1665187200000,"PLAIN_TEXT":"I have been working in industry for nearly 2 decades, built up a good nest egg that would be able to grow on its own - and I wont need to work full time much longer, just need to work to give structure to my day while the kids are in school for the day. I also do love solving problems, getting work done - just not with the stress of jobs that implicitly need 50ish hour work weeks.Ive primarily done backend development in my career, with some infradevops. Ive had significant professional experience with Scala, Ruby on Rails, and most recently Typescript. Industries include ecommercelogistics and web3crypto. Only interested in doing this remotely, with some flexibility for client site visits. I was employee number 1 at a startup that was recently acquired for a decent amount.How did you transition from being a full-time principal engineer at startups in the US to becoming a consultant doing backend work? How do you find the first client? Do you start with a free gig for people you know? Do you go to your existing employer and say you want to become a prt time consultant? How do you come up with an hourly rate?So many questions - you dont need to answer all (or any) of them, i just want a better idea of what people in my shoes to make that successful transition in the past.UPDATE: one thing to note is I have a pretty extensive network of alums from previous startups. The last 2 jobs I have had (representing about 8 years of employment) have come through knowing the founders of those new startups. Earlier this year when I was looking for my next startup role, I had several offers with no interviews.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_mvym0x","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/mvym0x\/a_few_months_into_small_company_feel_burned_out\/","DATE":1619049600000,"PLAIN_TEXT":"I joined a company in the U.S South remotely (I live in upstate NY) in November after 11 years in other companies, and I just feel incredibly swamped.The company is growing really, really fast. But the engineering team is very bare bones. Ive already individually built RESTful microservices, implemented load balancing, created analytics for production activity for clients, individually written payment integration libraries (coordinating third parties), built our entire automated API testing framework, just to name a few things. This is along with the usual small features and hotfixes across our web app and legacy systems. Im basically the bottleneck to get things done (if my output slows, the company slows)I like the vision of the company (focus is on cannabis distribution) but everyday Im just working 12 hour days just to tread water. Ive never had a workload like this in all my years for such a constant period of time, especially just coming on (got my first project the first week I was there, when I was still onboarding and getting acquainted to the new frameworks and technologies). Its not a super early startup either (company has been around for a while but really growing now).I want to communicate my frustrations to my boss but not sure how to tell him or proceed with this (because my mental health is suffering). Does anyone have any advice for someone whos just getting incredibly stressed out?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_112kwzs","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/112kwzs\/my_team_is_pulling_90_of_one_of_my_coworkers\/","DATE":1676332800000,"PLAIN_TEXT":"I work for an extremely large and profitable tech company in the Bay Area, CA. Approximately 10 months ago, we hired on an engineer into a senior role even though there were some red flags.This person seemed like they had a fantastic attitude during the four interviews in which I was present. I voted not to hire this person into this fully remote role after the second interview because their communication skills, both spoken and written, were mediocre at best. My team scheduled two more interviews with this engineer, mainly to give me a chance to see that they were hirable and would work well on our team. This engineers technical acumen seemed great on paper and in certain moments during the interviews but whenever I dug into any topics in detail, their skills seemed to disappear and it seemed like the engineer was hiding behind Zoom technical issues  communication problems.I was bewildered how my team was sold on this engineer... but they were and I couldnt convince them otherwise. The other two members of my team are all incredibly smart, hard working, and experienced engineers. Since I was the least experienced engineer on the team, I deferred to my more experienced counterparts.While the interviews werent stellar, it seems like the engineer we interviewed and the engineer thats now on our team are two different people. I speculate they had somebody sitting just off screen helping them throughout the interview process.My boss asked me to mentor this engineer about 10 months ago. Me and the rest of my team have been pulling 90% of this engineers weight in work. The mentoring process hasnt been going well, especially from a coding perspective. My boss recognizes this and has been coaching me on it trying to help me grow as an engineer myself. My boss said something along the lines today like, well, they have a CS degree so they should understand XYZ. My boss seems to agree with me 100% that a lot of things are not clicking like they should.I was very surprised when I learned they have a CS degree and curiously checked out their Linkedin profile to find out from where. I was floored when I saw theyre also stating they have a CS Masters and 11 years of experience (including 3 years as a Security Engineer, 2 years as a Lead Network Engineer, etc., 5 years as a Senior engineer).Well, everyone embellishes to some extent. I thought, until I expanded the section to see what theyve worked on in their current role on our team. The bullet points couldnt be further from the truth. This individual would not be able to BEGIN to explain some of the concepts they are including on their LinkedIn profile (nor are they things that the engineer, much less my team, has worked on).The rest of their LinkedIn profile is just as bad.I enjoy mentoring engineers but this person misrepresents EVERYTHING and never wants to put the work in to learn anything new. How should I proceed? Is there anything I can do? We never should have hired this individual. Our interview process should have disqualified them as a candidate on so many levels. It did not and my day-to-day has suffered greatly as a result. I dont enjoy my job like I used to but my team cant succeed without me helping this engineer. Im really not sure what to do.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_8ykkq4","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/8ykkq4\/found_one_of_those_unicorn_jobs_where_i_have\/","DATE":1531440000000,"PLAIN_TEXT":"Started a job in October 2017, Im the sole software developer for a b2b financial consulting company that doesnt really seem to know or care that much about my role. I think they like having an in-house software development department on payroll for appearances, but dont particularly need or want it.Ive called it a unicorn job because I think its one a lot of people would love to have, myself included until now: Im 90&amp;#37; remote, I need to go into the city 1 day every 2 weeks, but thats my only real time commitment. There is zero accountability or project tracking. My boss doesnt really know what Im doing and its very rare that someone asks me to do anything. Some things, ie, if they are brought up verbally but no paper trail, I just dont do and nobody ever remembers or mentions them up again. When work does come through, its usually just small tweaksadditions to a CRM codebase. In any given week I do between 0-10 hours work, this week has been a 0. I took a 20&amp;#37; raise from my last (still well paid) pure software job that was 40 hours a week in the office.But even with all this, I think Im starting to hate it. Ive noticed Im waking up later and later in the day. Now I dont get up until noon, just because. (Girlfriend gets up at 6, which puts our sleep patterns on a massive offset). Im feeling much more irritable and lethargic.One solution Im sure could be to invest more time into the work, initiate projects to save my colleagues time, leverage that for raises but it really isnt very interesting and Im worried people might take notice that Im there and what I could in theory produce. A couple of months ago I received a respectable unscheduled bonus despite not delivering a single project while Ive been here, so I think theyve no plans to let me go despite not doing anything.I guess Im struggling to figure out whats causing my recent problems, I suppose, depression. I kinda wanna know if this kind of job is something that _could_ make somebody depressed, or if I shouldnt look a gift horse in the mouth and need to start new hobbies or learn new things during the day (I think that depression could be a factor Im letting affect me and blocking me from new things...). I have plenty of hobbies I love to do outside of the working week, but during the day all I do right now is play video games.Also an auxiliary reason keeping me from quitting: I usually move to a ski town 412 months of the year, so this job does work nicely for that, giving the freedom to ski everyday while making a good city wage.edit: The skiing thing is quite big for me, I only really want to work a max of 8 monthsyear - which makes a lot of regular office jobs quite limiting. Hence why part of me is wanting to stick this out as I can keep my salary and not have to go 4 months without pay.So would you quit and get some proper work to fill the gaps - or maybe instead try basket weavinglearning the pianoany home-based hobby?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_f0sc22","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/f0sc22\/45_years_of_ios_development_experience_thinking\/","DATE":1581120000000,"PLAIN_TEXT":"I live in Argentina, have a great remote job abroad. I am 22 years old, been working professionally since I was 18. Never had official education since high school.The other day I had an interview with Lyft and they said they wanted to take me to San Francisco but the government required that I had a degree (or 12 years in the field) so that couldnt happen.I am now thinking about getting a CS degree abroad (US, UK, Europe)Pros of getting a degree: - Having every door open for me regarding work- Deeply learning things like Algebra, Algorithms, Compilers, etc. Which I have not much experience and I find it really hard to learn on my own.- I would go abroad for a couple years and meet new peopleCons of getting a degree:- Its a lot of money (I cant get a loan nor a scholarship because Im a foreigner) and I think it might not be worth it since I already have years experience- I dont LOVE studying- It would take time from work, I would need to go part-time or even quit (which would be harmful both economically and regarding the experience I would love to hear what you think","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_a1tzjy","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/a1tzjy\/experienced_my_experience_with_triplebyte\/","DATE":1543536000000,"PLAIN_TEXT":"I recently used TripleByte to try and find a job. The way I understood the process going in, was you pass one phone screen and then you can get fast-tracked to on-sites at 37 companies. This was the promotional material I read somewhere. I was also excited because TripleByte just came to my city.Its a little more nuanced than that. It turns out that I took an online coding test (~30 minutes) and then got scheduled for a two hour phone screen. Holy cow, I thought. Two hours. They said you only get one break, too. Alright, I thought, well, if it gets me fast-tracked to on-sites then it will be worth it.The two hour screen is done blind. The screener doesnt know you from any other person. They dont see your resume or your current job title. They literally know nothing about you. I had no idea about that. Everyone gets the same two hour screen. Because of that, I wont share whats in it. Let me just say its hard and they asked a lot of questions I have no idea about. Its really hard. I just want to emphasize that.Also, your past experience may or may not come in handy. Just know that.At any rate, I ended up getting good feedback and passed it. Phew! I thought I must have barely scraped by. Heres the best part. After youre accepted into TripleByte, they make you feel like you really did something great. They sent me a lot of things. Things that are expensive. A really nice sportsperformance windbreakerjacket thing that probably costs $100 new. A Pebble portable power bank (probably worth $40 Im guessing?). A copy of the latest edition of CtCi.This alone made it worth it. That was very nice.In addition, they assign you a person who helps you through the process from that point on.OK. So you fill out a form at this point to actually let them know about your past experience and knowledge. You upload your resume. You build a profile out. Then you wait a week, basically, then your profile goes live. When your profile is live, companies are supposed to offer to pitch their company to you in a half hour phone call.So heres the worst part. I only was contacted by 3 companies. And even though I had selected that I didnt want to do any remote positions, 2 of them were for remote. And despite the ad copy that they will get you in touch with companies like DropBox, Stripe, and Adobe, I mostly was contacted from companies I had never heard of.So I ended up only accepting the pitch from the company that didnt want me to work remote. It did translate into an onsite interview, but ultimately I was rejected.In the grand scheme of things, I did more for that one onsite interview than if I had applied directly. Which is the opposite of what I was promised. I had the half hour online coding test, the two hour phone screen, a half hour call with the company, then an onsite with the company. That was a lot of work with no payoff.I dont know why I only got contacted by 3 companies. Maybe because Im not in SF and TripleByte just launched in my city. Maybe because of something about who I am.Ultimately, I love the idea of TripleByte. A blind assessment that can be used by multiple companies as proof you know what youre doing, and (theoretically) skipping to onsites as a result. But in my case the follow-through wasnt there. On the plus side, the gifts were super nice, and it was very easy and fun to work with my talent manager person, and the web application is really well designed and works great.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_10ozee4","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/10ozee4\/people_who_can_travel_around_the_world_and_work\/","DATE":1675036800000,"PLAIN_TEXT":"Just back from a 2 week vacation in Thailand and I must admit, the work from anywhere in the world travel bug has hit me, especially coming back to a Canadian winter.For those who have the luxury of working from literally anywhere in the world, how did you do it, what career pivots if any were necessary, etc? I am an experienced database admin currently working on transitioning to data engineering, which I feel lends itself better to remote work.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_8vcj6g","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/8vcj6g\/posted_last_week_50_year_old_with_slight\/","DATE":1530403200000,"PLAIN_TEXT":"I want to first thank everyone who responded to my previous post. Your insights were thoughtful and appreciated.There was one part I left out of my original question because its humiliating due to stigma. I have to work at home because I have severe agoraphobia. Everything I said in my post was true, I just left that out because I dont want to be pitied or ridiculed.Remote jobs used to be easier to find. Its become harder. Also, I didnt keep on top of the latest technologies, which made things worse.I look through these posts on this sub and I read about all you motivated, very smart people working hard with a lot of passion. I just dont think I can compete with that. And I cant really go back into management very easily because many companies want their managers to be onsite.So Ill return the favor you all have done for me by giving you some advice. Dont let your skills get out of date. Always be learning.And if you have any mental issues, get them taken care of as soon as possible. Its harder to treat anxiety and depression the longer it lingers. Its much easier to address these things when youre younger.Thanks, and good luck everyone.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_v1znxq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/v1znxq\/is_85_more_common_than_95\/","DATE":1653955200000,"PLAIN_TEXT":"I just started as an intern at a company (ITCS internship) and when leaving, I was told to plan to work 8-5 with a 1 hour lunch break. Ill be working remote for the most part, but the 8-5 definitely caught me off guard as Ive usually been 9-5, including the paid 1 hour lunch break. Is this common?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_roaeg1","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/roaeg1\/has_anyone_here_never_met_any_of_their_coworkers\/","DATE":1640390400000,"PLAIN_TEXT":"Or never been to their company office?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_10k31la","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/10k31la\/will_remote_work_not_hybrid_still_be_the_trend_in\/","DATE":1674518400000,"PLAIN_TEXT":"I live in a small city on east coast Canada and am fortunate enough to be employed at one of the bigger employers in Canada that has an office here.But this is my first SWE job. I know I must move around to get that salary. But will remote work still be the trend? If yes I can settle down here and just do the job remotely. If not Ill have to move to bigger cities like MontrealToronto.Im also at this stage of my life where I start thinking about owning vs renting a place. Essentially if remote will not be an option and will have to move around the country Ill have to delay my plan of purchasing a property and God knows what crazy price it will be by then (if youre in Canada you know my concern).Or maybe if remote will still be an option why not become a digital nomad and work from the CaribbeanEuropeAustralia and what not lol","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_mz148a","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/mz148a\/leaving_my_new_job_after_a_month_because_its_a\/","DATE":1619395200000,"PLAIN_TEXT":"A month ago I started a new remote job at a mid size tech company no one has heard of for a mid level dev role. Here has been the insanity that has ensued in that time frame:- The job title I interviewed for was not the one I received in my offer letter. Thought nothing of it, until I started to find out I would be doing support and not writing code. I spoke to my manager and she said it was 80% support, I might get to code later in the year. They did the same thing to two other new hires, WTF - Required to watch a recorded zoom call. The call actually got heated between management and employees. The CEO cut off an engineer and said LOOK HERES THE DEAL... This is shown to all new hires lmao- Was told I got equity day 1 in the interviews as part of my comp. Well to my surprise its radio silence about equity. I spoke to my manager about this and she said this was coming soon. So what I was told in my interviews about that comp doesnt even exist but is supposed to come later? WTF- Day 1, four hours into my shift I started doing support. I didnt even have my bank account setup to get paid nor did I know who anyone was. No idea what I was doing and I just fumbled through it. - Work life balance is trash. There are certain PMs that are on Slack 24 hours, you can contact them any time. Boss seems to do 10-11 hour days on average- First week and 3 engineers left. Granted I dont know how engineering is laid out, but definitely heard we cant do X because we lost a guy more than once. Department lead mentioned issues around employee retention in all hands meetings WTF - Culture is trash. No one talks in slack channels, no fun talk about things outside work, no light hearted convos. Dont know anything about my coworkers, Its just work work work. Some people might prefer that but believe me its about as welcoming as a morgue slab.So naturally after week 1 I saw the writing on the wall (the bait and switch alone had me out the door) and continued interviewing. Well I got an offer and they want me to start in two weeks. Im thinking after this fucking madness I will only give them 1 week notice and take the next week off to recharge. Then I will leave it off my resume forever. What do you think? Should I even care about burning that bridge?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_pfyx3i","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/pfyx3i\/psarant_recruiters_who_wont_give_you_a_salary\/","DATE":1630454400000,"PLAIN_TEXT":"I am so sick and tired of recruiters playing the ridiculous game of being so ambiguous about the range of salary, and I will never for the life of me fucking understand it. Of all the behaviors that are normalized in the recruiter industry this is one that personally drives me the most crazy, because it can lead to so much wasted time (on both ends). A typical Linkedin thread will go - Recruiter:&gt;Hi, &lt;ME&gt; &gt; &gt;I am reaching out to see if you are interested in the following Software Engineering opportunities with roles that offer healthcare, sponsorship, 401k match, relocation and remote opportunities, as well as unlimited PTO! Can we schedule a time for a 30 minute call?Which Ill reply:&gt;Hi, &lt;YOU&gt; &gt; &gt;Thanks for reaching out. Id like to ask the salary range on the position before dedicating any time over the phone. Can you provide that please?Recruiter:&gt;That will depend on where youre located, how experienced you are, and in some cases how you perform in the technical interviewsMe:&gt;All of this information is on my profile. Can you please provide the range for my YOE and location? (if you dont want to check, its 15, and $MAJOR_USA_CITYRecruiter:&gt;Id be happy to discuss on a quick call! Can you provide a phone number and time I can reach out?--- Ill spare you all the rest, but the ultimate result was I browbeat him into giving me a range (for principle, if anything, knowing I wasnt going to go with this recruiter) which was significantly lower than my expectations and what I currently make. 30 minute phone calls with recruiters are expensive when they only happen in business hours, and require context switching, and Ive found they still often dont want to give you a range for the position in question. We, as CSCareer Prospects, need to start making a hard stop on recruiters playing these games with us. It has no benefit to us to wait until the negotiation phase to talk about these things. Sure, some companies have something of a blank check book when it comes to offers, but not every opportunity (or even most) is some mega-corp-FAANG opportunity. Most companies operate on a budget where roles are clearly defined, and salary ranges exist for said roles. This information is there, and they are just refusing to give it to you unless youre willing to potentially waste your time speaking with them. &amp;#x200B;---Unlimited PTO - weve all seen the talk about it. Ill say it again. Dont let recruiters honey-pot you with this bullshit. Not to beat the dead horse but all this means is that you will feel more guilty about taking your PTO (because you didnt earn it), and that the company doesnt have to pay out any PTO when you quit or are let go. It benefits the company way more than you, gives them way more authority in rejecting your time-off requests, and Ive rarely seen it benefit me in any way. Actually, I quit a company (not to name names, but lets just say their name rhymes with SlackCountry, they like to claim theyve trademarked a geographic term that is incredibly common to use, love suing the shit out of companies for using this trademark, giving all developers access to their single, not backed up production database, and firing CTOs) because I had booked a full vacation to Europe after getting approval via email from my manager. He later (the week before the trip) told me that another guy on the team is taking PTO and because I didnt tell him about this PTO I would have to work  be on call that week. I showed him my email, he said that it didnt matter and they still needed someone to man the fort and that Id have to work. I, for the first time in my career, gave my 1-day notice to quit. He begged me not to, reverted his statement about my PTO, tried everything. I interviewed at a job with an old (good) manager and was hired within a week, before even starting my vacation, which the new company streamlined and paid me for. Tl;dr - stop letting recruiters breadcrumb you to an opportunity youd of never taken anyways, and start questioning their use of unlimited PTO as a selling point. Ask pointed questions about how much time off the average engineer at their company takes, off, what the process for requesting time off and getting it approved is, and bonus if you can ask for an OTR interview with someone whos not on the team youre interviewing for to get more insight into the companys policies and general culture.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_srv8lx","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/srv8lx\/meeting_with_manager_turned_into_a_fight\/","DATE":1644710400000,"PLAIN_TEXT":"So a couple of days ago, my manager (lets call him Mike) and a senior (lets call him Adam) came to my desk and said they wanted to talk with me. So I followed them to the meeting room without knowing whats going on. We sat down and Mike began speaking: We wanted to talk to you, you look unmotivated, you are doing too much remote work and youre not even working on anything. Tell us whats going on cause this cant go on forever. To which I replied: not working? Ive been busting my ass on a refactoringrecreating a project (currently in production but having a lot of problems due to bad codingarchitecture...) all by myself when it should have been the job of at least three persons with different skillsets. How am I not working? Something I need to add is that I talked to him in decembre and asked him to give me some work, and he told me there is nothing to do for me, thats when I told him Ill work on the old project and got his permission to do so. When I told him that, he started yelling and saying we have plenty of work and my colleagues are dying from work when I am working remote ( meaning I am just staying home doing nothing) and the work I am doing can be done by an intern in 3 weeks, calling me a liar for estimating 2 months (while he doesnt even know anything about the project. it can easily take longer), and attacked everything I said ( Youre not doing your 8 hours a day, when I said to him give some project to work on, he said its your job to ask for work. BITCH I DID and you said no new projects!! Long story short, we had a fight, a lot was said and I told him this is no way to speak and if you wont respect me than I wont be arguing with you anymore. I was fucking furious, because if someone talked to me with that degrading way, I would fucking destroy him, but I couldnt say much to him so I wont be in the wrong after.Late in the day, he called me in and asked me how are you feeling LMAO. I told him that I am raging inside and he has no right to talk to me that way. He apologized about the yelling saying he is hot-tempered by nature and went on praising me and all. But I just stood there looking at him and finished up by saying that if he has something to say to me, now is not a good time( cause I couldve easily hit him with a chair in his fucking head if he continued yellingspeaking), maybe we talk next week. Oufff, sorry for the long post. Still thinking what to do, Quit my job maybe ? ( I have like money to live one year without a job so its not a problem)Any advise?P.S: Adam was just there trying to calm us down :p","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_x5e9kv","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/x5e9kv\/got_offered_a_remote_position_for_a_job_that_is\/","DATE":1662249600000,"PLAIN_TEXT":"I just got offered a remote position at a job that is in the same timezone as me but about a 8 hour drive away. The job was initially advertised as fully remote. Then the first HR call said if you got it, you would have to come to the office and do orientation which is reasonable. Now when I got the position, they said I would need to come every 3 months for a week, maybe more. Is that reasonable? I know they would pay for the hotel but I havent confirmed about other traveling expenses. Was wondering what people in similar working situations do? edit: Also I was laid off about 2 weeks ago but I am in no rush and I dont want to rush into a position just to have a job. Edit2: Thanks for the feedback guys. Got a lot more responses than I thought I would. The plan is to do the call where they discuss the offer and get some concrete number of how many days I would need to be in. Also verify they pay all travel expenses. One person asks for a guaranteed 3 month severance in the case where we are required to go in the office and I will try that. Seems the split is a lot of people saying this is reasonable and others do not. Honestly, if it is 4 times a year for a couple of days I dont mind. The company HQ is in an interesting place and I could easily see some of those trips ending up being road-trips with friends. I will try to update later this week.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_s1ovaq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/s1ovaq\/i_discovered_that_my_manager_is_spying_on_me\/","DATE":1641859200000,"PLAIN_TEXT":"Today I returned to my desk after an afternoon break to discover a second mouse cursor on my screen as I logged back into my computer. The cursor didnt move but is evidence of someone remotely accessing my work station while I was away from my desk. When I raised this with my manager he denied any knowledge of this and dismissed my concerns. He then typed a few things on his computer and asked if the cursor was still there. A few seconds later it disappeared from my screen, I ask him if it was him and he again denied knowing anything about it and dismissed my concerns like it was no big deal. I work in the finance industry and if there was any breach of security such as remote access shouldnt be more of a bigger deal? Unless of course Im being gaslit in work and Im actually being monitored whilst at my desk on my activity. What can I do about this?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_uo76gp","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/uo76gp\/i_just_got_a_pretty_annoying_email_from_my_team\/","DATE":1652313600000,"PLAIN_TEXT":"Obligatory, sorry for formating (on mobile).So, I have an internship lined up with one of the silicon valley boys this summer, and, until now, the whole on boarding process has seemed fairly sporadic and disorganized. Nothing insane, just kind of a lack of information disclosure and not meeting set timelines for getting information to interns.However, I just received an email from my team manager specifying that our team will be working entirely remotely. Now, I would be fine with this if I was told a month ago, but I am a few weeks from my start date. I have already signed a lease for the summer and now find myself spending thousands on an apartment that I do not need.I guess Im just reaching out to see if anyone else has had a similar experienceif anyone has advice on what I could do in this situation.Edit: Thanks for all the great advice! After mulling it over myself and talking with my manager, Im going to take many of you guys advice and move out there anyway. While it is expensive I think it will be a great time and an amazing opportunity.(Also it does give me a chance to test drive west coast living before committing to a full time job out there, which is really nice)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_8q1tm8","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/8q1tm8\/my_company_had_a_bad_year_and_started_bringing_in\/","DATE":1528588800000,"PLAIN_TEXT":"My company is small and seems to be plagued by a constant series of bad decisions, both on how to conduct business as well as hiring.Last year our numbers (revenue) were not great, so starting on 2018, management began bringing in interns and even high school kids to help out. A few things that worry me:- The problem, from where Im standing, is that they hired a lot of people by giving them average to low salaries and we ended up having 20% professionals, highly productive employees against 80% unprepared, low-performing employees.- Instead of trying to set the ship straight, they are now expanding the internship program expecting that those of us on the 20% range will teach the interns so that the company can get more productivity out of very low salaries.- Another reason is that a few of the employees in the 80% group have a good relationship with management and are around 40 years old, so management doesnt push them as hard as those younger (like me, who am 29 years old), making things hard overall. I dont complain because my salary is higher than theirs, but I dont like what Im seeing.- They also dont want to cut people out of the blue because they are afraid of what the other employees may think. The end result? We currently have 6 (non-devs) people whose job could be done by 3, and half of these already showed they are not good at their job, but the money keeps flowing out...- The second plan they have to future proof the compamy is to develop an in-house product. Management is so convinced that they have to do something to stop depending on clients that they got a loan and are betting a couple of months of work to get this product up and running, as well as using some of the clients work to our advantage.It will be a disaster as they are not even remotely prepared to succeed and they are betting on a stupid idea for a new CMS system on an already saturated market...At the same time, we never say no to any new work as we need the money and cant afford to lose either the work nor the connection. The end result: constantly overworked...We hang on because we have a couple of big clients that pay a lot, but, in your opinion, is it time to bail?EDIT: the idea of bringing interns is to teach them and prepare them to do the job so that the company can invest on them and avoid bringing in people who a) will cost more, and b) may not be prepared to do the job.Of course, this happens constantly as they dont pay a lot, but they never question that aspect. Not even once did they stop to think that the intern may tell them f off afterwards.They see this as an investment on the future...","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_xixud0","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/xixud0\/top_tier_companies_not_in_the_bay_area_with_a\/","DATE":1663545600000,"PLAIN_TEXT":"Work for a big-N company in San Francisco, Im a staff engineer with 10 YOE, total comp is ~$500k. During the pandemic our company went all in on remote only. However, I slowly realized working remotely isnt for me. While this might not be the most popular opinion, I feel like I need the social connection of in-office work. I know hobbies etc are a thing. But I truly loathe spending 40 hours a week on Zoom. So Id like to join a company where teams still meet in the office and socialize. Hybrid is OK.Im also going through a break-up, which really amplified my loneliness, but also set me free to move wherever I want, so looking at leaving the Bay Area all together.What are some top tech companies in non-Bay Area cities with a good office presence? Im thinking about NYC but would be open to other cities. Have never lived outside of SF so really open to anything. Im OK with taking a pay cut but would like to at least make 350-400k depending on location.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_it5hrh","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/it5hrh\/people_who_started_a_new_job_during_the_pandemic\/","DATE":1600128000000,"PLAIN_TEXT":"Hi all,Post title, really. Ive seen tonnes of threads on practicalities of remote interviewing and remote working tips, but I havent found much discussion on office relationships and in particular, making new friends.In the office it can only take a couple of evenings out for drinks to start forming workplace friendships, but what about starting remotely? As someone who moved to a new city right before covid, I was hoping to meet some other young grads at work, but thats kind of off the table now.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_6fb9z3","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/6fb9z3\/i_think_my_boss_is_a_fucking_idiot_and_im_not\/","DATE":1496534400000,"PLAIN_TEXT":"Throwaway because my friends know my real account.Anyway, I started working for this company 3 years ago, when I first started working there I had a really nice and intelligent boss who taught me a lot. He taught me that coding style matters and there is much more to programming than just having a working binary at the end of the day. For reference, I was mostly just doing embedded C, C++, and a bit of python. However after a while I got bored of doing the same thing everyday, so a few months ago I switched teams. The new team was doing cloud development and I thought it would be an interesting area to get into. Shortly after I joined, the manager of the team left to be a manager for a different department at my company. My company has extremely low employee turnover, they generally try their hardest to keep everyone (and they also pay incredibly).The new manager was the senior developer on the team and basically started the project as a demo a year ago. He basically wrote about 80% of the code, my company hired a few other developers 5 months ago, and I switched teams 2 months ago. Heres the lowdown on the project: The majority of the code is written in Java, which is good in my opinion. About 20% of the code is written in bash, mostly all the configuration parsing and deployment logic, basically everything that is not Java is bash (less than 5% of the code is non-bash and non-java).  Almost every variable in bash is exported meaning basically every variable is global and the code cannot be made modular at all. There is absolutely no coding style, almost every file is mixed between spaces and tabs. The bash scripts and yaml files tend to be 2 spaces, java tends to be 4 spaces and tabs mixed. The other files (perl, python, ruby) seem to be mostly 4 spaces, but depends on who wrote them. I asked my boss about coding standards during our daily meetings and he said were supposed to be 4 spaces, but he continually commits files with tabs. We have a bunch of junit tests which we manually run for integrationregression testing (which is good in my opinion). He refuses to set up automated testing using those junit tests because he thinks it will take too long to setup. As a result I have to spend a few hours everyday figuring out who broke the build. The automated tests routinely fail for no apparent reason and I blame that entirely on his reluctance to actually fix anything. If he is able to run the tests several times and they all pass at least once each, then he considers that to be a good load, despite having various tests routinely fail. The other developers routinely commit stuff without testing all the cases and which sometimes breaks my workflow, but I feel this could be fixed with automated testing and better infrastructure. He merges stuff without testing it, which results in everything being broken all the time He gets mad at me for not knowing stuff despite nobody having given me the knowledge beforehand. My other coworkers generally dont know enough to be of any use in most cases. He has occasionally commit files after merging that are only partially merged (literally full of &gt;&gt;&gt;&gt;&gt; ====== &lt;&lt;&lt;&lt;&lt;), and therefore unusable. He was surprised when one of the bash input parameters, that was input as var=$VARIABLE_NAME came out as var= (Ill give you a hint, he doesnt know how to escape in bash properly). He doesnt know how to write generic code, which results in him copying and pasting the same function about 20 times with slight differences. He uses tons of magic numbers, never uses final (which is the java equivalent of const), never comments and rarely documents, uses strings for things that could be enums, and uses way too many public functions (in my opinion) He thinks I waste too much time reading documentation and constantly gets mad at me for it. (maybe I spend 15% of my time reading documentation despite being new) He doesnt like it when we try to improve our internal tools, since we dont sell those tools to customers and therefore they arent worth making very good As a result, our internal tools suck and constantly break which results in large amounts of wasted time. They also arent remotely helpful if you do something slightly wrong (such as forget or misspell a parameter) which occasionally means digging through log files to figure out what you did wrong. None of the internal tools have sane defaults, and to work they generally require all of: setting environment variables, changing a configuration file, and passing command line arguments Whenever he runs into any timing issue he cant solve within a few minutes, he adds a bunch of sleeps. This results in everything taking forever and occasionally still not working because he didnt actually fix the underlying problem. He easily works 80 hour weeks (because he works nights and weekends) and I feel he resents us for not working as hard as him His variable and function names are mixed between snake case (function_that_does_work) and camel case (functionThatDoesWork), even in the same file. He checks up on me multiple times a day (and probably my coworkers too) which results in me feeling anxious all the time because he low-key guilt trips me about not working as much as him. He constantly rushes us, despite us being ahead of schedule as far as Im aware Everyone else on the team works from home several times a week, probably to get away from him. He constantly says the phrase time to market as if it will summon the god of capitalism or something He admits there are problems but says we can fix them later, which results in me thinking he just loves technical debt since there is absolutely no plan to fix any of the issues.Im not sure what to do. Should I talk to his manager about how horrible he is, or just find a new job? Or am I just a big whiner?Its worth mentioning Ive only had great bosses before this guy, maybe thats spoiled my opinion of software development management.More minor things: He touches my screen all the time despite me asking him not to He points at my screen and says SEE WHAT THIS DOES despite me not being able to see because his hand is in the way He gets mad because I cant read the code since his hand is in the way (no Im not kidding).I think hes way too tired and he doesnt realize other people have a different perspective than him (literally and figuratively).","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_gju791","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/gju791\/uber_ceos_plan_includes_remaking_the_engineering\/","DATE":1589414400000,"PLAIN_TEXT":"https:nypost.com20200513uber-ceo-reportedly-favored-rank-and-file-layoffs-over-pay-cuts-for-top-execs&gt;Khosrowshahi likewise signaled that part of his plan includes remaking the engineering team so that over time more jobs would be located overseas, according to the report.What are your guys thoughts? People have been very excited about the prospect about permanent remote work so that they no longer have to live in high CoL areas with terrible commutes. But there could be potential major downsides if companies hire more from overseas where people are way cheaper since no one ever has to come into the office anywayBlind discussion: https:www.teamblind.compostUber-CEO---remaking-the-engineering-team-so-that-over-time-more-jobs-would-be-located-overseas-eMfELx86","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_10q2oem","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/10q2oem\/im_going_to_get_fired_and_i_cannot_wait_for_that\/","DATE":1675123200000,"PLAIN_TEXT":"I have seven years of experience as a software engineer with mostly backend, data engineering, and computer vision experience.I was laid off last year to no fault of my own. All the other developers in the federal government contract lost their job. So I decided to go into a San Francisco Bay area company. Ive always been a fed contractor because I was in graduate school, so I needed a balance. I know fed contractors get a bad reputation, and my boss also has that opinion. After graduating from grad school, this seemed the best time to join the private sector.The position Im in right now is remote; part of the team is in Spain, and another is in India. I work from East Coast, and my immediate reports are on the West coast. The WLB could be better, but it pays well.My boss is MIT educated; his sons were Googlers, and one attended an Ivy League university. He has high expectations, and I need to meet them, although it is too late.My boss has recommended I read several books to complete an architectural design, but at the same time, he says the project is late.....that he could have done this project in 3 weeks.Whenever I try to develop an architecture, he tosses it away, saying, Im not studying system design, design patterns, and architectural-oriented books. Every time he says my solution is wrong, he also says he doesnt have the answer because we are building the design but to go back and fix it.He blames me for not studying architectural and design patterns. To which I partially agree, but at the same time, how can I continue the design when he says something is wrong...I dont know what it is, but Im afraid thats not right, you are not learning...So I blame him for sucking as a teacher.He says things like:- You get paid too much; you are not an engineer. You are a developer, but dont worry, well help you grow.- This is different from government.- With your salary, I could have hired 4 India developers.- I hired you based on potential.On another note, I struggled with severe sleep apnea and excessive daytime sleepiness this past year. After CPAP treatment, I still couldnt concentrate and would crash mid-day. I got tests done yesterday to see what was wrong with me.I know its my fault I suck at architecture design, but at the same time, I think my boss had his mind already set that government developers suck...so you suck, and therefore...we are where we are right now.Do you have any advice on picking up the pieces and improving as a software architectengineer?Update 1: He asked me if I wanted to be on the Machine Learning team. I said yes, but then retracted. If I wanted to be a machine learning engineer, I would have applied to be one. I asked him if we could work as a TEAM and complete the project.Update 2: I suddenly realized he is already in a bad spot with his superiors because we are losing clients since the solution he is in charge of is being turned off by clients. So I decided to fight this with HR. I want to learn, but if he himself was not able to architect a solution that could make money for the company....then am I being the scapegoat? Mutually assured destruction. If I go, I go out with a BAAM!&amp;#x200B;Update 3: I expect to receive a late call from HR around 11 pm EST so 9:30 am their time. HR person lives in India. I need to rest, grab dinner, take care of my dog, and relax. I will no longer answer comments to have a mental break. I will do another post on the outcome of this ordeal--pinky promise.Thank you, everyone I genuinely appreciate your feedback, suggestions, and empathy.[CLOSED]Edited to add updates.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_bw512r","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/bw512r\/ive_been_job_searching_for_three_years_with_no\/","DATE":1559433600000,"PLAIN_TEXT":"Note the topic flair. Im not a rookie looking for their first programming job. I have had 4 programming jobs in the past where I have worked 40 hours a week. But since three years ago, Ive been suffering a lot at interviews so much that I might as well apply for public assistance to make ends meet. 2009 - 2015: 4 full-time jobs, 6 full-time job offers (then its like some unknown anomaly hit me) 2016 - present: 0 full-time job offersI dont live in a tech hub city but it is a big US city. About 80% of my job applications are for local jobs, the other 20% are out of state. I also have Github projects I sometimes show to interviewers.I apply mainly to full-time jobs but also some part-time contract jobs. 10% of job interviews are for part-time contracts 90% for regular full-time jobsRoughly 90% of my tech interviews dont involve algorithms. The involve asking me technical questions, my background with different tools and languages, and also live coding exercises (via screen sharing). The other 10% may have some of those things but do involve algorithms.Interview breakdown over the past three years ~500 phone calls ~30 second rounds 8 on-sites for full-time work 3 offers for temp contract work (no on-site interviews for them, these are all remote) 0 offers for full-time workI rarely pass far enough to get to an on-site interview. The last time I had an on-site was fall of 2017.Seems like its not hard for me to get temp contract work but they all end in a few months with no contract extensions. However I am not interested in doing more and more contracts. I just do it because I need the money and a contract offer is better than no offer.I just want to add, I dont ask for too much money. I state $70k to $90k for companies in a medium COL city. So, not too expensive at all. In fact its the opposite I get hired for low ball offers, more like $15 to $40 an hour as a 1099 contractor. No company that pays their employees average pay wants to hire me. But I have to break the low ball cycle somehow.Dunno why its been all different since 2016. Im still speculating, but maybe its because in 2015 I had a remote job and that could have badly screwed up my visibility and speaking ability.For mock interviews: I got 2-3 stars (out of 7) in my 2 attempts with Pramp.com. I signed up for interviewing.io last year but still am on the waiting list. Did three mock interviews with locals this year and taken some advice. Common sense tells me I should find companies with easy interviews. However because I still cant get any full-time offers I cant tell the difference between an easy interview and a hard one.So still no full-time offers. How long should I keep going and when should I give up and try another profession?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_fi17ca","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/fi17ca\/will_i_regret_being_in_devops\/","DATE":1584057600000,"PLAIN_TEXT":"I took a devops engineer job as a new grad and Im not sure if this is a field I want to stay in because the work is interruptive, putting out fires comes first, and being on call sucks. My dream job is to work full remote so I can live abroad or work for a name brand company like LinkedIn or FAANG to reap those great benefits. Should I look to switch to a dev position before I get pigeonholed into devops? Or does it get better?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_t6z7v2","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/t6z7v2\/my_spouse_got_a_job\/","DATE":1646352000000,"PLAIN_TEXT":"Im really excited and proud!! I just wanted to briefly share her story because I think its pretty inspiring but also a bit of a warning because imo it was alot of effort, work and persistence.She is coming from a nanny background with a bachelors in political science from a college in Thailand. So no computer science degree, just lots of hardwork and support from me ^_^. Ill keep it short and just share the basic bullet points. The timeline was a little less than 2 years of almost fulltime studying. She used freecodecamp and a bit of the oden project for guiding her studies Freecode camp was useful because it resulted in her having a beautiful portfolio website featuring her resume and a few small apps - calculator and travel form to name 2. The Odin project in the beginning is especially a good read because it goes over the expected journey of learning and teaches you how to do research. She joined a Thai coding club that met a few times a week to do leetcode, and they took turns giving presentations on different JS topics for each other which forced her to research topics deeply. Im also a Sr. engineer and started a fullstack project which I had her help me on for the frontend. She was able to interact with my APIs via Swagger and Postman, learn about staging environments, dealing with secrets. I was able to guide her in some areas of study here and help on what to expect in real world apps like cicd deployments, testing, introducing to Heroku etc. We even used Jira and I created different tickets for her to work on. I helped fine tune her resume since English isnt her first language and she was able to use mine as a template. She also setup a Node.js app on Heroku using express to handle sending emails to users when they subscribed to my news letter. She made the landing page and a subscription button where people could enter their email and hit her node service which would send the email via Sendgrid. She treated her studies like a fulltime job, and I made sure she was setup with the tools for success (monitor, good mouse, laptop) Her offer came in around 55k TC at a consulting company - fully remote gig. BTW consulting companies are great places to look for a first job imo. I also got my foot in the door at one as well having a major only in Business Information Systems after actually failing out of CS She even did some Figma UIUX for the frontend of our group app.Frankly it was a long journey and clearly alot of effort, even after this she wasnt getting too many interviews, yet finally was able to get an offer with a frontend dev position using a react based framework. Excited ! My only advice is to not give up, know that you dont need a degree and if you have a well rounded portfolio, can talk the talk and walk the walk, youll get in eventually ! You cant be a good developer and not get a job, just have the portfolio and projects to prove it !","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_y1m8zy","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/y1m8zy\/from_struggling_with_an_intro_to_programming\/","DATE":1665446400000,"PLAIN_TEXT":"Whatsup everyone.I remember when I first got into computer science and how I struggled like crazy with the intro to programming course. At that time, I made a promise to myself that I would work my butt off and once I got a good job, I will post on programming communities to motivate others who may be at the same starting point.Well Im glad to say that Ive been working at a Silicon Valley tech company for just over a year now and I feel it is time to make this post. Hopefully this will motivate some of you out there who are at the same starting point.My Starting Point:I was finishing up a criminology degree and I became interested in CS at the same time around the last semester of my crim degree. I signed up for the CS program at a local university and was soon accepted. Luckily a lot of the credits from my crim degree transferred for the general credits in the CS degree so I only needed another two years to complete my CS degree rather than 4.Keep in mind, Ive been a terrible student all my life. I didnt graduate high school in time and failed many courses in HS. However, I was an above average student in my crim degree. My above average grades in my crim degree are what got me accepted into the CS program.The Struggle:The acceptance into the program is where the struggle began. I started with an intro to programming course and understood NOTHING. I remember feeling so hopeless and trying to reach out for tutoring. I had one lesson with a tutor and everything he explained went right over my head. At this time, all the imposter thoughts were swarming into my head (Am I smart enough for CS?, Can I really do this?)However, I kept pushing. This MOOC course was a life saver for me in finally grasping beginner programming concepts [About the course - Java Programming (mooc.fi)](https:java-programming.mooc.fi)There were more struggles along the way. The next one was mathematics. Remember how I said that I didnt even graduate high school in time? My math was barely at elementary school level when I joined the CS program. I had to work on my foundation of math from the base. The best resource I can recommend for this is Professor Leonard [Professor Leonard - YouTube](https:www.youtube.comcProfessorLeonard). Simply the best math instructor ever. Period. Difficult math concepts that I could never grasp felt so easy when explained by Prof Leonard. Cannot recommend enough!!!Thats a glimpse into the educational struggle. The next struggle was actually finding a jobinternship. My advice here may not be the best bc all I did was apply apply and apply some more. I applied to so many positions its not even funny. My inbox is flooded with rejection emails.I remember the first coding challenge I got was for an internship from one of my dream companies at the time (not FAANG or any Silicon Valley company). I took it and failed it MISERABLY. Looking back, the coding challenge was actually pretty easy. However, at the time, this was demoralizing.About 8 months into my CS program is when I got an interview that translated into a job offer. This was at a small local tech company. However, I ended up declining the offer because I felt that it would significantly slow down my progress in school. My number one goal was finishing the degree up ASAP.12 months in, I applied to the same company at which I had failed the initial coding assessment. As luck would have it, I ended up passing the coding challenge this time and I got the internship. The pay was nothing major but I was ecstatic.I worked my butt off at that internship and was in the process of being converted to a full time employee.At this time I was also applying to other companies as I wasnt a full time employee at the company I had done an internship at yet, so I felt it was best to keep applying in case things didnt workout there for some reason.Again, I was rejected by a lot of companies but one Silicon Valley tech company responded back to my application. I went through the process and soon had an offer on the table.Prior to this offer, I had never made more than $20hr in my life and this offer was for six figures. It was a beautiful moment to see all my hard work pay off. I still remember how that felt. In a weird way, that feeling was worth much more than any of the money.Where I Am At Today:Today, I am employed at said company and have been for over a year. I do get FAANG recruiters hitting me up from time to time on LinkedIn (less now due to all the hiring freezes going on). Overall, Im very happy with how my career is progressing.If youre in the same place I was when I started, here are my closing thoughts for you:- Computer Science is for you. Put in the hard work and I have no doubt you can get to whatever company you want or whatever your goal may be.- Having said the above, I will re-iterate that doing this just for the money may not be the best idea. While software engineering looks really comfortable (remote, well-paid, lots of demand), it is constant problem solving and learning something new everyday. I love it and if you love it, then youll fit right in. If you hate problem solving and cant stand looking at code, yet are only doing it for the $$, then I still think you can be successful if you work hard. However, is hating 8 hours of your day, 5 days a week, really the life you want to live? There are other well paying professions out there. Im not saying you have to love everyday of your job but rather, find the profession that best meshes with your personality.Thats all, feel free to ask any questions.To give some context, I am located in Canada (working remote).","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_t7c79k","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/t7c79k\/some_big_techs_a_g_m_are_demanding_an_return_to\/","DATE":1646438400000,"PLAIN_TEXT":"Just read that they are demanding an coming and at least an hybrid work (like come to office 3 days a week). Do you think that it can influence other companies to do the same? or their employees will just leave &amp; open an opportunity to other companies hire more talents based on 100% remote?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_1129p1y","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/1129p1y\/entrylevel_ses_dont_be_scared_to_move_to\/","DATE":1676332800000,"PLAIN_TEXT":"Provocative title, but Ill explain the hook of it and try to argue the rationale against common counterarguments.Any of you entry-level SE candidates are probably finding this to be a brutal job market, and its not going to get easier for a while. However, this stage is the hardest part of your CS career. After you have a job for at least 6 months, youll find that a lot of companies are much more willing to hire you in the places you want to live in, or even offer remote work.A lot of non-technical companies will absolutely kill for entry-level talent that is willing to show up to an office in-person. This is especially true of companies that operate in remote regions: they often are more traditionally-minded and see remote work as a fad.Look on LinkedIn at on-site jobs for non-tech-hub regions like Indianapolis, Cleveland, Columbus, etc. Full-stack positions will have 3 applications sent in a week, when the company itself has a fine Glassdoor page and a decent starting salary. These companies are probably, for the most part, fine places to work at. Youll find just as much variety of experience in remote work, but 100x more competition.For the record, I moved to Pittsburgh PA for that reason. I made my early career here, moved up quickly into good corporate environments, etc, because there was (and is) such a shortage of available tech talent. With 4+ years of intensive experience (2 of them remote), I can work in most countries; and at the 1-2 year mark I still had a wide pick of regions. Im moving soon because this place has run its course for me, but it was good to me and I think Pittsburgh is a great place to start your career. Chances are as an SE youll enjoy a much higher standard of living than most people in these places, as a green entry-level SE making $75kyear in the city outskirts I was basically a Saudi Prince.Overall: dont be scared to do the thing that many of us had to do 4 years ago, in a far worse economy today. These roles in remote regions are severely-overlooked opportunities and Im surprised more young people havent caught on. Apply even if youre underqualified, chances are the people who are qualified are applying to the remote jobs.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_rqx8gm","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/rqx8gm\/you_step_away_from_your_computer_for_an_hour_wfh\/","DATE":1640649600000,"PLAIN_TEXT":"This probably applies to a lot of remote workers now, but Im specifically curious about tech. Lets say its 2pm and you need to run off for 60 minutes, and you havent told any of your team. You generally pull your weight on the team and put in the hours when you need to, so you dont feel the need to use PTO or mark this in your calendar. How do you set your chat program (MS Teams, Slack, etc.)?1. Keep it Green [Online]: Yes, Im working. If someone thinks Im online and messages and I dont actually respond until an hour later, who cares? 2. Set it Yellow [Away]: Thank you for your message. You know Im away, and thats fine. I will get back to you when convenient. 3. Set it Red [Busy  In a meeting]: I could be at my computer. I could be in a conference call. I could be taking a sweet nap; no ones the wiser. 4. Set it Black [Offline]: Ninja mode. Now, I have coworkers who are always intentionally offline, even when they are clearly messaging. Im secretly jealous of their freedom and attitude. 5. Set it Double Red [Do not disturb]: Red alert. Theyre gonna think youre ultra-focused, sharing your screen, or something else.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_nkbvns","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/nkbvns\/why_are_companies_so_insistent_on_going_back_to\/","DATE":1621814400000,"PLAIN_TEXT":"A bit of a rant but outside of the benefit of maybe better interaction with coworkers and managers being able to watch over the employees, what is the benefit of being required to return to the office? After a year of WFH I cant even begin to fathom the prospect of going back to the office, even companies that are close by to me. I just hate this While we might be hybrid, I really just like seeing people in the office as its easier than arranging for a zoom call mentality. My current work seems to be going for a 20% onsite 80% offsite deal in a few months but Id much rather be remote. Some days I get a little sad and I feel burn out from the lack of interaction but I honestly feel more comfortable approaching my coworkers over a call for help versus in person","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_pj84zi","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/pj84zi\/what_is_the_highest_salary_one_can_feasibly_make\/","DATE":1630886400000,"PLAIN_TEXT":"It seems most the high-paying FAANG positions are not remote. - I guess fully-remote or remote-first companies like Twitter, Dropbox, Gitlab, or Elastic would be the highest paying?- What types of salaries could you expect to make?- Does working remotely domestically vs internationally affect salary?EDIT: for clarity, I am US citizen. I want to work remotely from Mexico, but I was worried how that would affect my salary. Im sorry, I shouldve mentioned this in my post originally.Thanks for all the answers!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_vc2pnx","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/vc2pnx\/for_those_wfh_what_does_your_daytoday_look_like\/","DATE":1655164800000,"PLAIN_TEXT":"I have a few friends who secured remote SWE jobs, and I am also applying for remote jobs so theres some likelihood I might end up working WFH. For this reason, I am interested to know more about the day-to-day routine of a software engineer WHF. What does your setup look like (e.g., do you have maxed-out WHF station with standing desk, at least 2 monitors, etc?) Do you work all the hours? Are you more a person who gets things done in the morning? In the afternoon? Do you still have many meetings? How do you keep communication with your team? Is it easier to reach out to teammates when you need help? Do you miss working in-person?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_10s3k3j","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/10s3k3j\/im_getting_away_with_working_few_hours\/","DATE":1675296000000,"PLAIN_TEXT":"Im a junior dev, joined this team around 9 months ago. We are a small team that works on backend systems. Its a financial services company based in the south, but I work remote. I work maybe 4 hour a day if I dont have any meetings. Is this normal? I do my sprint work and my annual performance went really well. I feel bad because some days I literally have nothing to do besides waiting on hearing from another software team. Sometimes Im busy but its rare. I usually wake up later and sometimes work later but its rare.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_s2nnvj","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/s2nnvj\/i_think_im_a_terrible_software_engineer\/","DATE":1641945600000,"PLAIN_TEXT":"I dont have a degree in computer science. I took two intro CS courses in undergrad and thats all. Im getting a masters in data analytics and somehow landed a fullyremote job as a machine learning software engineer. I feel wholly unqualified. Tech has never been a big interest of mine and I dont have the background or knowledge other software engineers seem to have. I mean hell, I just finally learned what Linux is a few months ago. Ive finally just got the hang of super basic git commands. I feel like I can barely work with an IDE that isnt a freaking Jupyter Notebook. I have no clue what anyone else is doing at my company and Ive been there since May. I hear everyone throwing out these names of softwares, Kubernetes, Docker, Bamboo, and I try to Google them but I am still just as lost. I basically spend my days dealing with giant messes of JSON files, turning them into data sets and trying to build ML models. I never have a clear idea of what I should be doing. Tasking and requirements change at whims. I try to do exactly what Im asked to do, then my supervisor (who I hear from once every couple weeks) pops up and either seems totally confused about it or changes what he wants. I dread the daily stand ups because I feel like I am just bullshitting what Im doing or doing repetitive shit, probably very poorly. I feel like an idiot when writing code; its disorganized, repetitive and probably over complicated but no one seems to look at it, anyway. I dont know what Im doing and I think I suck. Maybe I should switch fields?Edit: Wow, thanks so much for the feedback. A lot of good points. This is really helpful. Yes, I am not getting a lot or really any mentorship. Everyone seems extremely swamped with work. The handful of times I have gotten feedback, its been really positive, but I still feel like a preschooler in a graduate school class. In between running scripts, I am trying to do at home tutorials  learning to increase my skill set. (If anyone has any recommendations for courses or tutorials in Python or data structures or general dev work, Id gladly take them!) I do love to code, my CS classes were my favorite in undergrad, but I feel so not tech savvy compared to other people drawn to this field that its setting me back, I think. I will just keep plugging away and hope for the best. Thanks again.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_e89wpt","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/e89wpt\/best_ways_to_get_a_remote_software_engineering\/","DATE":1575849600000,"PLAIN_TEXT":"Posting from a throwaway account for obvious reasons. PMs are welcome as well, since some people like to be private about this topic. My location is in the Eastern Time zone in the United States.My background: I have been a Software Engineer for almost 5 years now professionally. I graduated from College back in April 2018. I have been writing code since middle school. So far, I have worked 2 professional full time Software Engineering jobs in my career. I am currently employed as a Software EngineerI am at the point of my career where I would love to transition to a full time Remote Software Engineer role. I am asking for advice on how to land a remote software engineering role. Currently, I have just been applying for companies that are listed on Indeed, Linkedin, and ZipRecruiter.Many people have told me that one of the best way to get a remote role is to be a contract employee through a recruiting agency, and transition into a full time role. Others have told me just find a recruiter and have them find a full time role.1. What recruiting agencycontract company are there? I was told there are recruiting agencies where if you are a contract employee you are a W2 employee with benefits (health care, 401K, etc). From what I was told, if you aer landed a contract, eventually, the company you are contracted with will extend a full time offer to you. I would prefer something like that, or just a direct hire role.2. If you are willing to share, how did you get your Remote Software Engineering role? What is your story?I Googled this advice as well, but nothing beats advice from the reddit community :).","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_g8wrvv","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/g8wrvv\/unpaid_internship_at_a_small_startup\/","DATE":1587945600000,"PLAIN_TEXT":"In this current situation where many organisations are retracting offers, Ive managed to get an offer from a small machine learning startup. Its an unpaid remote internship. Im not sure whether its worth it.[Edit]: Im a masters student with no work experience. So will it internship help me in full time job hunt?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ezxfp8","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ezxfp8\/am_i_only_one_who_finds_the_google_interview\/","DATE":1580947200000,"PLAIN_TEXT":"There I said it.If I can scream this from mountaintops, I will do that because I dont think anybody should go through this much of a waste of time for the sake of name recognition.I interviewed at Google three times for the same type of job (solution architect). They sourced me and reached out to me all three times, and I have not applied a single time on my own. And every time I got rejected. I wrote about my two previous experiences here:[ https:www.reddit.comrITCareerQuestionscomments9t291rGoogle_recruiters_teasing_me](https:www.reddit.comrITCareerQuestionscomments9t291rgoogle_recruiters_teasing_me)The third and last time, a recruiter reached out to me at the end of December, asking if Id like to interview for the role of a solution architect (again). I said yes because I thought, why not. I love my current company, work, colleagues, and have a significant amount of options about to vest, but I thought I should take this opportunity and see where it would go. After speaking to the recruiter, I got an impromptu phone screening asking questions on compliance (the area I wanted to work on) and DB management. The questions I got were insanely trivial and can easily be looked up online if needed. Questions such as, do SQL DBs scale horizontally or vertically?, Does HIPPA allow you to store data outside of the US?, What are the types of NoSQL DBs?, What is the SQL command for editing data?, GDPR data storage requirements? Etc.First, I found this questionnaire incredibly condescending. It felt like I was taking a quiz in a high school or a college class. Second, I have no idea how this questionnaire measures the worth of any candidates. Regardless, I asked the questions, got most of them wrong, decided I probably wont move forward, and moved on with my life. Less than 30 minutes later, I got an email notification from the recruiter saying that I did great on the quiz, and I am moving on to the next step, which was onsite. As confused as was, I agreed, and we set up a date for the onsite.Now, the solution architect is a customer-facing role. Role related knowledge is necessary, but an understanding of how to work with customers is equally as important. Because at the end of the day, prospective customers do not just evaluate the product they want to buy but also the people they wish to partner with. And the people are any customer-facing role of the company. IAAS (Google Cloud Platform) is a significant commitment for a customer. If the customer-facing employees are unable to gain the trust and confidence of the customer to justify the investment they are making, it would not matter how in-depth the employee knowledge is on GCP.The onsite interview experience I had was something out of a different decade. After working at multiple startupgrowing companies going through different stages throughout my career, I was completely unaware that this type of interview process still exists, especially in a company that touts to be as modernized as Google.Again, the interview was condescending and pointless. I was not able to measure a technical fit and culture fit for myself within my potential team, and I am assuming my interviewers felt the same way.Google cannot use the same Googleyness, cognitive ability, and role-related knowledge interview for every role, for every candidate coming from every background. By this point, they have to realize that using the same interview techniquesquestions on someone who is just out of college and on someone with a decade of experience is not going to work.Googleyness InterviewThis interview was the only one I found somewhat reasonable and enjoyable. I still dont think reading from a set of predefined questions, and writing down the answers is the best way to judge a candidates culture fit. What happened to having a genuine conversation? Most of the questions that the interviewer asked me could have been incorporated into a structured discussion, which would have felt a lot more natural for myself and the interviewer. Instead, the interviewer read from a list of questions, and it felt frigid, calculated, and, most importantly, unnatural. In the end, Google should realize that the interviewers and candidates are both humans (as far as I know), and humans do not go around with a predefined list of questions to ask another human regularly (maybe they do at Google). If you are evaluating the so-called Googleyness, why are you doing that in the most unnatural way possible? Does Googleyness mean artificial and frigid?You can train your interviewers on how to have a conversation with a candidate without hiding behind a question list. A conversation that is pleasant yet allows the interviewer to measure the culture fit.Cognitive Ability InterviewThis type of interview should not be used for any candidate with more than five years of experience. You have our resumes, you know our professional experiences, you know companies we worked at, and the roles and responsibilities we held. After a certain point, you have to realize that our brains are functioning properly, and we have the necessary cognitive abilities.The interview consisted of three very vague questions. When I asked for more info, the interviewer said the questions are obscure on purpose, so he doesnt have more info. Then commenced a 45 minute waste of time where I came up with solutions, and the interviewer hiding behind his computer jot down the answers. Again, no conversation. This interview kind of felt like sitting in the witness booth at a court trial.I find this type of interview very inauthentic as candidates will practice the answer criteria before the interview and create an answer to fit those criteria perfectly. The interviewer will write down the responses and see if they meet the criteria that were given to them before the interview. But in real life, problem-solving situations do not always fit into a perfect mold. We dont run to our list criteria and follow it step by step when a problem occurs (unless maybe for some technical problems). Depending on a lot of other factors, such as the type of situation, external dependencies, what is at stake, we would design a solution and iterate on it until it fixes the problem. Again, Google seems to forget that they are hiring humans, and humans are not programmable.Role Related KnowledgeThis is the interview I had the biggest issue with. Not only did I find this interview insulting, but I was also concerned about how the solutions team interacts with customers if this is how they evaluate candidates for a customer-facing role.This interview also showed the scrutiny and lack of confidence Google has towards its interview candidates. I understand that hiring a bad hire is more expensive than rejecting a good hire. But to hire a perfect candidate, it also requires a have a certain amount of trust in the candidates ability to ramp up and onboard on the technical aspects of the product. And, if hiring bad candidates is so common, maybe you should rethink your interview process. I dont thee current process is even remotely qualified to vet out bad candidates.Role related knowledge tests for what you know about the Google product that you are working on. This means knowing every single thing about it enough to do deeper dives and build architectures using GCP. With this, you only hire candidates who know everything about the products that they will be working on, and you are going to have an insanely homogeneous group of people with no variety. Also, when seeking a new job, many people are not just looking for a new workplace with new pay; they are also looking to learn new technologies and concepts. Thirst for knowledge is one of the most significant factors for millennials to seek new employment. I assume Google is not the place for those.Lastly, The Post-Interview ProcessAfter waiting for a week, I got an email from a recruiter saying that they have an update on my candidacy and if I have some datestimes to chat. After giving her a few datestimes on the day of and the day after, she responded, saying she has no availability at those times and then scheduled a call for two days later. On the day of the call, we had a 5-minute conversation in which she informed me of the rejection.This, to me, is unnecessarily cruel and a waste of time. I blocked off full 30minutes on my busy calendar to chat about something that the recruiter could have emailed me or left a voice mail if she wanted to be extra courteous.In my opinion, many people go through negative experiences with Google, but the number of hopeful candidates in the workforce excitedly waiting to join Google suppresses those negative experiences. Google is a large company, but does it deserve the prestige and wroth we allocate to it, I dont think so. Do we deserve to go through ridiculous interview experiences, I dont think so. Are there other companies with lesser name recognition, not as big, but are absolutely amazing to work at, a hundred percent!To me, the Google interview process is deluded. It thinks it is a trailblazer setting standards for all the other tech companies, but in reality, it is stuck in the previous decade. Lets not waste anymore of our time with this nonsense until they make a substantial change.I hope this does not come off as sour grapes.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_100kcs1","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/100kcs1\/will_i_be_hated_if_i_stay\/","DATE":1672531200000,"PLAIN_TEXT":"Im currently working as a Sr Backend Engineer in a project thats currently getting a lot of traction from management and the work that I do here is meaningful and provides me lot of learning. But the catch is that are asking me to RTO by Jan 23 and I could go on forever of why I need to continue working from home.I tried asking for an extension but they gave a stern NO and rejected my request back in November. I decided then and there to find a different remote job, which I did. Technically its a 6 month wfh and I would have to move to Thailand. Im okay with the relocation and I accepted the offer. I went to my current manager and mentioned that I have an offer and Im resigning. He was shocked and ramble on to tell me they cant lose me, that Im responsible for 50% of the project and they are willing to allow me to continue working from home for a year (I mentioned that RTO was my only concern for leaving) . This is a great offer but Im kinda worried if I will be hated, perceived as manipulative or greedy if I stayed.Thoughts? What would you guys do if you were in my situation?P.S : Pay isnt a factor that Im even considering.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_x1vm41","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/x1vm41\/im_not_good_enough_to_work_as_a_dev_at_a_big_tech\/","DATE":1661817600000,"PLAIN_TEXT":"Im honestly not good enough to pass all those interview rounds big techFAANG companies have. Id have to grind leetcodealgoexpert for years.Ive been working at tech startups and scaleups for the last 4 years with 8 YOE in total. I make 140k TC fully remote, but I work around 45-47 hours a week. My goal is it get into a big tech company and make a higher salary. I see non-developer roles in big tech making close to 200k with great WLB. How hard would it be to land a job in big tech in something like DevRel, solution engineer, customer success, customer relations, product management or even sales as a developer? Any specific non developer job thats good for a former dev to get into?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_xf5wgq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/xf5wgq\/my_company_wants_us_to_go_back_to_the_office_full\/","DATE":1663200000000,"PLAIN_TEXT":"Hi guys, I started working for a local consulting company almost a year ago, at first everything was fully remote and they never said it was gonna go back to the hybrid return to office model.But back in May, I got an email saying that from now on we needed to go back to the office a couple of days a month and theyd expect us to go back to the office 50% of the time by the start of FallI went a couple of times to the office but I didnt go as much as I was supposed to go.Last week they announced that they want us to go back to the office full time.I dont want to go back to waking up at 4:30 AM to avoid traffic and being back home at 7 or 8pm like I used to before so I started looking for remote opportunities but everything in my area seems to want to go back at least 2 times a week.My question is, where should I look to find some remote opportunities?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_p7dfah","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/p7dfah\/new_job_requires_us_to_use_our_own_computers\/","DATE":1629331200000,"PLAIN_TEXT":"I recently got hired by a series B start up with roughly 30 employees. They offered me a VERY competitive salary as a product manager. After I signed paperwork, they told me Id have to use my personal computer for work but also had plans to purchase computers soon. Im a bit sketched out because they also told me during the hiring process that they raised a 20M round but I wouldnt find any evidence of that because the founder wanted to keep that info from his competitors for the time being. He was also very against giving me a signing bonus. At the same time, he says he flies out remote employees once a year to their main office for a week to workshop as a company. Its leading me to believe that maybe theyre cash strapped but wanted other opinions because Im getting nervous. Thanks in advance!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_x2iq1h","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/x2iq1h\/are_the_rumors_of_pip_as_a_punishment_and_5_true\/","DATE":1661904000000,"PLAIN_TEXT":"I recently got an offer for AMZN. Havent started to discuss compensation yet, but the job sounds like a dream come true.The manager says she has changed the teams worklife balance to that of a healthy 40hrweek max and any extra work over that is returned to you as unofficial PTO. Fully remote. Quarterly meetups where employees are flown in to discuss quarterly plans. Whole nine yards.I was discussing the company and offer with a few friends of mine who brought up that the company does a few things that are red flags to me, but Id like confirmation that the statements are true.Do they really let go of their bottom 5% each quarter? Do they really use Performance Improvement Plans (PIPs) to punish people for things as petty as trying to switch teams? Is it really that toxic of a place?If the above is true, should I just use this as a means to increase my pay at my current employer? If so, how exactly would I go about that? Ive never been in a situation like this where I have an offer at the same time as a place Im already happy with.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_m80rbk","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/m80rbk\/name_and_shame_pilot_flying_j\/","DATE":1616025600000,"PLAIN_TEXT":"I left a well known financial company to join [Pilot](https:en.wikipedia.orgwikiPilot_Flying_J) under the false promises of pushing machine learning models to production and working with data scientists.Complete bait and switch. Two months in after getting some great experience, a new boss wanted me to only work on dev ops (they had literally zero tests) and data strategy. Im not opposed to the end to end work it takes to get ML models to production properly, but I wanted make sure Id also be doing the ML parts. I sent one email to my manager and her  his superior very confused about my role and the next thing I know Im fired. No discussion, no real reason, end of story.Red flags I feel stupid about not paying more attention to: They told me I could move to a satellite office in the interview. After joining, there was no office there, Id be remote, but they still wanted me to move. Thanks to the pandemic, I never started this process I never met my manger  boss during the interview and was told he  she was still being hired I never thoroughly asked what my day to day work would look like and they were very vague Most of the competent people were from McKinsey &amp; Company including those in my interviewIm honestly not sure what happened, but Id guess that they wanted an ML contractor, disguised it as a full-time position since they couldnt find anyone, and cut me out early because they could.Luckily, Im in a position where this did not financially affect me. Hopefully, others can gain some insight from this and avoid the train wreck that is Pilot Flying J.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_vwq4te","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/vwq4te\/missed_stand_up_meeting_on_purpose_boss_noticed_i\/","DATE":1657497600000,"PLAIN_TEXT":"Hello! I work remotely and missed my stand-up meeting today on purpose out of anxiety. My progress on my most current project for sure wasnt good enough, and after agonizing over it all weekend, I woke up 3 hours before my usual start time to work on it. When the stand-up meeting started I missed it on purpose because I still didnt feel like I had enough to say about the progress I made and so I just worked through it. My boss sent me a message asking if I was working today as he thought my vacation didnt start for another couple days. How do I respond to them? I will for sure be able to attend tomorrows stand-up with a progress update, so Im not worried about that anymore....more just how I should respond to my boss? Any advice is much appreciated.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_5wkxzq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/5wkxzq\/my_company_is_running_an_incredibly_insecure\/","DATE":1488153600000,"PLAIN_TEXT":"My company is running an incredibly insecure environment on a cloud platform and I have ethical concerns with the data security and how the systems are being (mis)managed. I am a senior plus level developer with complete access. I have brought these issues up with executives and management over the past 2 years, and nothing is being done. A few obvious risks our system contains:- All logins to the SQL database are stored in plain text. These SQL logins are full sysadmin. We have off shore development teams that know the login information because these logins are in nearly all of our configuration files, of which they have access to as they are able to RDC into the production servers and open them up. In fact, Ive caught some of them using the logins in order to circumvent the limited access we have setup for their Windows credentials. The engineering director was aware of this when I caught this happening, and did nothing.- All Azure blobAmazon S3 accounts and keys are stored in plain text. Again, these accounts and keys are stored in configuration files that can be accessed by more eyes than we probably even realize. These storage accounts contain sensitive and personal informationdocuments. All it takes is for a malicious individual to grab hold of the account and key, and press Delete. Active replicationgeo-redundancy is not a thing here.- Windows Update has not been ran (including security patches) in over a year. I understand patching Windows Updates and ensuring application stability incurs additional resource time, but my company is not taking any efforts to implement proper procedure for patching the servers at a regular interval.- Our servers are open to the internet and are being brute forced as we speak. Proper Windows RDC 101 should be to require a VPN to access application servers, especially your SQL database servers. Instead, every single one of our servers is completely open to the internet. Anyone with a login is able to connect from any part of the world without a proper audit trail. This isnt even exclusive to our Windows Servers. We have Linux servers that have remote root login enabled, and is seeing endless failed login attempts. Each day there are roughly 40,000 failed attempts to every one of our servers, primarily from Chinese IPs that are directly linked to known botnets.My company is not short of funds to hire proper system administrators, or an expert security consultant that will analyze our system and assist with its flaws, or allocate development time towards securing the system even at these most basic levels. However, they refuse and ignore my (and others) pleas. They funnel resources into new development of new products that are over a year before being release worthy, all the while these items remain untouched and have been untouched for years.Given the sensitivity of our data and the sphere in which we work with, I have great ethical concerns with how they are selling this product (especially considering our contracts have bogus security clauses that state we have robust intrusion detection systems). All it would take is for one person to become malicious with the database, storage account, etc., and hundreds of millions of incredibly sensitivepersonal records would be leaked or lost.I have sent yet another plea today to my executives and management, but I am sure it will be met again with apathy. Has anyone faced this type of issue? I do not feel comfortable with how my company is handling system security, and I fear that it is only a matter of time before the system is compromised (assuming it isnt already.)What can I do?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_e820do","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/e820do\/got_a_new_contract_job_from_a_redditor_is_this_a\/","DATE":1575763200000,"PLAIN_TEXT":"Posting from a throwaway here. Two weeks ago I was posting in a programming related sub and someone DMed me about a possible job opportunity if I was interested to work for his web agency. It would be remote work and I would be getting paid as a contractor. I said sure, I entertained the offer because I am currently freelancing anyway. So we got on the call and when it got to talking about prices I said my rate is $60hr.he said that he could only offer to pay me $35 an hour since this will require use of a framework (Laravel) that I have no prior experience with.We agreed for me to be available to work 40 hours a week assumed that this would be payments of $35 times 40 hours. Later I got an email with my W9 and signed it. It was pre-filled with me being a sole proprietor -that settles me firmly as a contractor. I got an invitation link for Gitlab where they store their work files privately and was told to get familiar with my project I was assigned to.At this point I already know that we are already doing work. However he did not produce a contract. The W-9 was the only piece of documentation I received. I asked him about this (via slack chat) and he said we dont do written agreements here. What a noob move I thought but that bring to mind how many people in the world operate their businesses like noobs.I looked around the tasks given to me on Gitlab. Theyre typical of any issue tracking board- do this- 4 hours, add this feature- 6 hours. I was curious about these hourly estimates and asked why do they already exist when I didnt make those estimates. He said this is what they had projected according to their senior developer, and that I cannot bill him more than the allotted hours, even if it takes me more real-time hours to complete. So much for billing a flat 40 hours a week.Does this sound sketch? Is he expecting senior quality speed from a less experienced developer junior rates? At your job do you give your own time estimates for tasks, or are they already pre-alloted for you? I am familiar with contractors charging flat-fee prices on projects but this is the first time Ive seen flat fees for micro jobs like bugfixes and feature requests.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_dg31pc","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/dg31pc\/an_account_of_a_successful_job_search_for_an\/","DATE":1570665600000,"PLAIN_TEXT":"[Edit: RIP Inbox and comments on a throwaway account. Sorry, didnt expect this response and didnt realize I need to check my throwaway account too. The most frequently asked question seems to be: what coaching service did I use? I used Interview Kickstart ([https:InterviewKickstart.com](https:InterviewKickstart.com)). I didnt mention it earlier because I didnt want to be mistaken as someone advertizing for them. But if you are an experienced engineer and can afford it, they are a goldmine. I can attest they are very sincere group of people, in it for the right reasons, despite whatever your views may be about the interview process. I will review interview kickstart later. Happy to answer more on DMs only. See replies to specific comments below]====== Original Post follows =========I will be joining Google in Mountain View as a Senior Software Engineer, a little before Thanksgiving! And I more than tripled my yearly comp. WHOA!In this sub, I have been a long-time lurker, and am grateful for many insightful comments. I wanted to create a short account of how my job search went, in the hopes that it may help someone.(Throwaway because Im a moderator of a couple of subs in a completely orthogonal domain (pornography) and I dont want this post to affect that image. Yes, porn. Now get over it and read this one, which is no less exciting!)My Profile:Location: TexasDegree: Bachelors in Electronics Engineering from a top 100 college in US. Never done AlgorithmsDS in college.Work: Software (I got into programming when in college and then a friend of mine hired me to do a little project for her. It rolled from there)Experience: coming up to 11 years, mostly full-stack work in Python and Java. Im old.Current workplace: A small company you have never heard ofTotal Compensation: $100k approx. (Yes, that is sufficient to live in Texas in your own house!)Goal: Get into one of the top tier companies as a software engineer. I was okay to move to Bay Area to get that brand I never had on the resume. Not sure why I wanted a brand; I just wanted it.Job Search started: November 2018. I thought I will prepare during the few holiday weeks and apply when the new year starts. Boy was I wrong.First attemptPractice in Nov and Dec 2018: About 50 problems on Leetcode, mostly easy, some medium. Some mock interviews with friends.companies interviewed at in Jan 2019: Apple, Amazon, eBay, Atlassian, Walmart Labs, Microsoft (I got all interviews via friends).I failed ALL of them. Like ALL. Every one of them. Some on phone, some later. Walmart Labs, Atlassian were the two where I went onsite and failed.There is probably nothing more depressing to realize that youve spent 9 years and are still not good enough for a tier-1 company. I was that guy.I was about to give up, when my girlfriend encouraged me to prepare even more and try again. I thought she was being ridiculous - who prepares for interviews at all? But after a few months of her nudging me, a lot o beers, porn and frustration, I figured I should at least try once again.Second attemptPractice from April 2019 through August 2019: Nearly 250 carefully curated problems in Algos and Systems Design, done in a proper way with repetitions etc. I also found and paid for a coaching class to help me keep pace and support me.Companies interviewed at (approximately in order) in July and August 2019:&amp;#x200B; Microsoft (a different org from last time). ==&gt; OFFER! Didnt take it because it was lower than other offers Amazon Alexa team (they dont have a moratorium) ==&gt; Didnt make it again. The phone screen had a question too specific in a domain I have never worked in (embedded software). I thought Alexa was more of a distributed system behind the scene but looks like that part is more or less an application on top of AWS. Interesting parts are in Hardware and ML. LinkedIn ==&gt; Senior Engineer OFFER! They are separate from Microsoft even today. This was a harder interview than I had expected. I got a DP problem, a Graph problem, a Tree problem, and two Systems Design questions. Facebook ==&gt; L5 offer! I had told them that I have an LI offer, so they moved fast. One of the hardest interviews I had. One of the interviewers asked me 3 coding questions in one interview! THREE! Questions werent hard, but they expected me to code fast. I feel that speed was very unrealistic to expect, but hey its an interview - what can you say? They also asked Systems Design and Behavioral questions. Trees and Graphs were popular here too. Google ==&gt; L5 offer! I started this one before Facebook, but the offer came thru only later. Google is painfully slow. They took what felt like forever, in scheduling the interview, getting to the HC, in team matching, compensation and then closing. Got TWO DP questions. TWO!New compensation: $310k total. 165k base, 25k (15%) yearly bonus and rest in equity. 5k sign-on bonus (after negotiation), which Im not counting. FB and LinkedIn came close, but I really wanted Google.Advice for fellow seekers&amp;#x200B;1. Dont hate the process. Its not in your hands to change it and often not in your interviewers hands either. Embrace it. If you want to change it, then get inside the system first and then change it. Wish me luck.2. Practice the right set of problems. Dont just blindly grind Leetcode. It will take you forever, even if you can keep motivation.3. Work on your communication skills. I thought I communicated well, but only when I was forced to work on it with the coach, that I realized mine was nowhere near acceptable quality.4. Repeat the problems youve done again. Yes, repeat. Just write code again. There is some sort of magic there, which improves your retention and recall of other newer problems too.5. Know that getting and setting up interviews is as much work as actually appearing for them. I mostly got them through friends and connections I found on LinkedIn. Also, there is just no good way to take time off of work and not raise suspicions. In my case, I had to travel which made it worse. I tried to bundle as many interviews as I could, including phone-screens. Though one advantage of being in Texas was the timezone difference. Its lunch time when the day is starting on west coast, so Phone screens were slightly easier to schedule.6. You WILL feel like giving up. A lot of times. Dont. Just dont. I had a group of (remote) people in the coaching class which helped me keep motivation. Find your friends. Or your enemies. Whatever floats your boat to get you off your butt to get back and work.7. Do mock interviews with people who know how to give feedback. Find whatever means necessary to find such people. Dont just do them with other fellow seekers.8. Not all roles at top tier companies are created equal. I wanted to crack into the coveted SE role which is usually the highest paid and I could, but it was hard and took me a while. Given that only brand was my goal, I could have just considered other discounted roles at same companies e.g. frontend engineering, solutions engineering, support engineering, project management etc. Pay is going to be less than SE in these roles, but they are a bit easier to get in.Tl;dr: Practice pays. Start early. Keep on going. I realize that preparing to get into top tier companies is the single most impactful thing I have done for my future. Except porn, of course ;-)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_6bwwlk","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/6bwwlk\/self_taught_i_made_it\/","DATE":1495065600000,"PLAIN_TEXT":"Sorry, this subreddit gets quite a bunch of these, but I finally got a job and had to share! My story:I graduated June 2016 with a BSc in Biochemistry. I had gotten waitlisted (and then rejected) by medical school, and I wasnt sure what I was doing with my life. I wasnt that passionate about biochemistry, was definitely not going to do a life in bench research, and was very worried that medicine wasnt for me. So I moved back home (that sucked) and picked up a barista job to tide things over.I decided to self-learn computer science. It had been one of the two things I was deciding between before undergrad, and I basically started from rock bottom again with Ducketts Intro to HTMLCSS and Codeacademy. I was lucky - I had some great friends who provided me excellent advice and great CS memes whenever I needed it. I built my first (hideous) website off of pure HTML, using a Bootstrap template. Started FreeCodeCamp, refactored my site, and signed up for my first hackathon. There I joined a team who was using a style transfer machine learning paper to build an app that could display it. Easy right? My basic Bootstrap, jQuery and node skills could handle this. Turns out it couldnt, and we had a rockstar (in every definition) of the word carry the project.I switched over to a more business analyst role, where I took the initiative to learn Python and automate some of the boring tasks (a great read, by the way) with it. I feel I oversold my Python skills and what I did, but oh well. It definitely made my workload significantly lower and let me read textbooks even at work.Heres also where I really feel like the CS world is what I loved. I picked up an array of CS meetups and reading lists, things like Wired, rcscareerquestions (on an account that has been deleted, oops), TechCrunch, HackerNest, etc. I started keeping up with tech trends and really following the industry, as well as software.I built two more side projects for myself, one a revamp of a person website in React, the other a stock visualizer in React and Redux. Not very complex, but clean and fairly polished. Having been really bored of these non-technical roles, I applied to mostly web development related roles at startups to mid-sized companies. My practice was CTCI and a tiny bit of Leetcode, but to be honest I didnt go that in depth.I interviewed with a few companies, got a couple of offers, and ended up accepting one at a startup that seemed the most promising in terms of education and mentorship. They seemed to really value learning, and I really liked the philosophies of the founders. Ill be starting on React and React Native very soon. My title will be Software Developer, which I guess is close enough to SWE?Job Stats:Im sure this is the more interesting part for everyone else.I applied to ~100 positions local to the area. None were referred.I received about 8 callbacksphone screens. One I declined to continue after hearing their salary. The others I passed their initial phone screen and went to an onsite.I also received 3 coding tests. One I declined after realizing I could not do a remote position being so junior, one I failed, and the last I went on to an onsite.I failed plenty of onsites. Some were definitely to lack of prep - I could not recall a recursive depth-first search as a solution to an area-based problem, for example, without prompting. Most were just 1-2 hour long simple interviews, none of the full-day ones seemingly common on the West Coast.I ended up having three offers, of which I picked one. I negotiated.Funny thing - right after I accepted an offer I attended another meetup, and got two interview offers there. Moving forward:I am a bit concerned that Im not ready, and that I wont be very productive for quite a while. Research seems to say that thats quite common, but still. I want to feel ready, I want to be a good developer, and so on.I do plan on taking courses at a local university to cover up foundational CS knowledge. Id like enough for a Minor, so that if I want to apply to MSCS Ill have the educational background. I find Machine Learning super cool, especially the NLP side, and that may be something I want to pursue. Although, the probabilities for getting into a top school seem abysmal...tl;dr - graduated June 2016, studied for a year until I got a offer May 2017edit: Location is in Canadian Waterloo-Toronto tech corridor, salaries here are much lower than the US. My highest final offer after negotiating was ~70k CAD.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_koemre","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/koemre\/revature_a_comprehensive_no_bs_review\/","DATE":1609459200000,"PLAIN_TEXT":"Hello all. From my experience, there is a lot of unclear, mixed, and odd information on Revature online, specifically on this subreddit. I am going to write this review of Revature (my experience thus far) in attempt to publicly clear some of it up. I hope this will benefit some of you. The following two paragraphs will be an introduction to what Revature does; skip them if you are already familiar.WHAT IS REVATURE?What is Revature? Revature is a sort of hybrid combination of employment agency and software engineeringcoding bootcamp. It is marketed as the bridge between the infamous 2+ years experience requirement you see on entry level jobs and people without said experience. Revature is not the only company that does this; there are others like them. FDM Group is one I can name off the top of my head. But Revature undoubtedly is the most well-known, likely because they have somehow managed to post job listings on nearly every job board in seemingly every city in the US. And guess what those listings are titled? Yep, entry level software engineer. No experience needed!They have recruiters who guide you through easy little entry interviews to get you signed up for a training start date. These trainings usually take place on a few college campuses, I think mostly in the East and South US. Florida, Virginia, West Virginia, Texas. As of writing, all of the trainings are happening remotely due to the pandemic; mine was remote. If you do not have much experience with coding, they will tell you that you have to do a 2-4 week online live class called Spark, and this training is completely unpaid and contract free. After you pass that, you can qualify for one of the bootcamp trainings, during which you get 10 days contract free and then are told you have to sign to continue. After training, you go to a staging phase where Revature works to find you positions with various companies and get your interviewed for them. These companies are almost entirely massive companies, a lot of Fortune 500s. Revature then pays you 45k (more if in high COL) your first year of work, and then 55k your second year of work (also more if high COL). They then will offer you a third year contract free if you want, and thats 75k salary. You are offered a small stipend to help cover moving costs when moving to on-site training and job sites.In short, Revature trains people (a ~3 month bootcamp) in various techs and then contracts them out to companies to work for 2 years. And youre paid for the entire experience. They really do this; its not a scam. But there are some catches and some sketchy things that I will address.THE CONTROVERSIAL THINGSIt mostly sounds marvelous, right? Whats the catch? The big one youve probably already heard of is the contract and how it works. The contract has all these little conditions you arent supposed to break, the main one being that you cant just up and leave once youve signed their contract. If you do break the contract, they say you will be charged with a whopping 46k. It used to be less and they recently have increased this.Another catch is that you are basically paid minimum wage until you actually start a job for whatever company they contract you out to. That means that during the bootcamp and the staging phase (which usually ranges anywhere between 1-3 months), you will make very little. And on top of that, your 2 year clock on the contract doesnt start until your first day with a client. This means training and staging time does not count towards that 2 years, even though youre still locked in at that point.Perhaps the worst catch of all is what I see as the Revature nightmare situation. This has to do with a mixture of being locked into that contract and being moved around geographically. Technically, the clients you are contracted out to are often bringing you on for big projects. Rarely, someone will reach completion of the project and the company will then say k, were done with you then and send you back to Revature, where you are placed back in the staging phase where you will again make minimum wage. That is, until they find you another company to go work for or until youve been in staging for ~3 months (and they then let you go penalty-free). You could also get sent back if the client doesnt like you, but you have to be a big underperformer or do something bad for this to occur otherwise Revature will fight for you to keep you in your position. But during non-pandemic times, this literally means you would have to move from your training site where you are in staging, to the job site where your client is located, and then back to the training site again when they are done with you. Yes, you can a small stipend to help cover moving costs, but Revature doesnt give a damn if you have to break leases or eat big costs for long-term stays at Airbnbs. With Revature you have to be light on your feet, and you could be sent across the country at a weeks notice. Theres a lot of geographic unknown. And who knows, maybe they are more reasonable with this than Im giving them credit for. I never personally spoke with anyone who went through this, I just know it is possible in theory. In most cases, you go to your project and you stay there the whole time, problem free.The pay is also, without a doubt, fairly low. People also rage about this. Being a software engineer getting paid 45k isnt wonderful, but its just for one year, and its enough to live off of. The value of Revature isnt the salary, its the resume building and the increase of the future value of your salary. Maybe you can go get a job making 60k for the next 4 years, or maybe Revature will pay you 45k for year 1, 55k for year 2, and then you go land a job making 100k afterward. Maybe not, who knows, but you get what Im saying here. Be real with yourself and consider how much youd be missing out on if you didnt do Revature. If youre like me, you wouldnt be missing out on anything.Lastly, Ill mention that you dont usually get to pick what tech you are trained in. I had no idea what I would be trained in until day 1 of my paid training. Some people I spoke with mentioned that their recruiter gave them a choice. Mine didnt, but it worked out fine. Revature is only training people in tech that they believe employers see as marketable, otherwise they cant sell you to them. This is how Revature works for you, and theyre looking out for you during that entire 2 years because they win when you win.So thats the bad. When you hear people badmouthing Revature, they usually stop here. But let me tell you: for me and man others, the good far outweighs the bad. Virtually no one gets stuck with the contract breakage fee, even people who actually break the contract. I think its obvious as to why. The contract is, to a degree, a scare tactic that has to be in place for Revatures business to be possible, otherwise people would take their paid training and then scoot off to do their own thing. But they are transparent about it, they went over the contract with us many times, and we all knew what we were getting into. Sure, in a perfect world that breakage fee wouldnt be there, but if you just dont break the contract, theres never going to be any issue at all. If something does happen like they cant find you a job, they literally will just tear your contract in two and say youre free to go. They do not try to stick people with it, its just meant to keep people on their track for 2 years and thats it. I know of absolutely no one who has gotten threatened or stuck with the fee.The minimum wage thing is often blown WAY out of proportion too. People rage about how Revature is so awful for paying you minimum wage, but you have to remember that you are literally being paid to learn. Imagine if you had gotten paid to go take college CS courses, wouldnt that be great? Instead, you had to pay out of your butt for tuition. Bootcamps are like this too, usually! You pay a massive 10k+ sum of money and just hope that what you got taught will land you a job. With Revature, not only do you not have to pay a fat sum of cash, you will actually make cash while learning, and it puts the incentive on them to ensure that they are teaching you stuff that will actually make YOU money and land YOU jobs, because they have to sell you. And besides, youre only going to be paid minimum wage for a few months. That is extremely short term, and then you begin to make a living wage. The bootcamp and staging pay is just meant to allow you to not go into debt and to put food on the table until you get to the actual job.MY PERSONAL EXPERIENCEI do not have a computer science degree. I majored in business and had little to no coding experience previously, just some experience with VBA when messing around with Excel and maybe like 2 hours experience with Javascript. I had to do their initial 4 month unpaid class and that just solidified for me how much I liked doing this stuff. I started getting into Revature right as the pandemic was getting bad so I had a few bumps concerning that, but in the end, Revature trained me in a fantastic, relevant, modern tech that I love doing. I pretty quickly went from training to getting a real software engineering job with a real tech company, even without a CS degree. Im a couple months into my projectactual job now and Im really liking it. Coworkers are great and the job is going to look great on my resume. And on top of all this, I now have a network of bright blooming software engineers from my training batch. Theyre going to all kinds of companies and I keep in touch with them. Teaching myself would not have given me this.During training, I was working extremely hard and at most was doing like 15 hour days. Definitely worked weekends, though they arent paid. However, later in the training, my work hours plummeted and I would sometimes only be working for 4 hours a day. Note that youre paid for that 8 hours a day, nothing more nothing less. The training varies based on your trainer and how he or she wants to do things. Mine liked to lecture for around half the day and then leave the rest of the day open for us to do some self teaching and to experiment and work on projects. I liked this approach, as our trainer was still completely open and available for questions and consultation even after releasing us. Think of training like it is a very full college semester, except youre getting paid for it.Revature WILL release you if you do not perform well in training, but they wont make you pay the fee. Its not all hand holding either, so you really have to keep your head down and focus and work hard during that training. The people in my batch who were already software engineers found the training to be easy overall, whereas people like myself found it to be hard. It varies between people. It was challenging doing it 100% remote, but you get used to it after a while and start to appreciate it too.During staging, youre supposed to be working for 8 hours a day to practice on your own and stuff, but most everyone just slacks off and collects the 8 hours of pay while they wait for interviews. Just how it is.And then after that, its just the job for the next 2 years! This is when you finally get paid the living wage. You hardly even interact with Revature at this point, they just pay you.BOTTOM LINERevature is a great opportunity if youre like me and want to get into the tech field and dont have a CS degree and you can manage possibly having to work on the other side of the country. It has its downsides like every job does and Revature has a lot it needs to improve, but none of these cons are enough to lead me to tell you to avoid it. If you already have a CS degree, I dont really know why youd be trying to get into Revature. Many of my fellow trainees are not as happy with Revature as I am because they didnt get nearly as much out of training, because they already knew how to do most of what we were taught. They are extremely overqualified. If you have your CS degree, pick a marketable tech and do your own projects and push them to GitHub. Apply to jobs everywhere. Otherwise, if youre fine with making a bit less for a measly 2 years, then yes, Revature will be a fine option to get you over that entry-level job hump that we all dread.Ill be glad to speak on anything you have questions about. Drop me a comment and Ill respond.And finally, if you found this review helpful and are going to sign up for Revature, I do have a referral link that will yield me a bonus. You dont have to use it, and Im not making this review to advertise it, but Id greatly appreciate it if you did and it would be a great way to thank me. If youve already signed up, Id appreciate it if you asked your recruiter if you could apply the referral link to your profile nonetheless. Id prefer to not leave it out here publicly though, and will provide it to you via DM if interested.&amp;#x200B;EDIT: One guy here has brought up a good point, and thats alternatives. You can find my comment below where we discuss it, but I want to add here that Capital Ones CODA program is another hire and train you before putting you to work gig that is almost certainly going to be better. I knew about it and wanted to do it, but they were not hiring. I was trying to find a job at the start of the pandemic and had very little confidence that they would start hiring again anytime soon. Check that out and apply to it if you can before doing Revature.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_5umaf4","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/5umaf4\/what_do_i_do_if_my_company_doesnt_want_to_fix_a\/","DATE":1487289600000,"PLAIN_TEXT":"I work as a developer for a company that makes software that sits in a very privileged spot in the networks for many major corporations.For multiple years and multiple releases, weve been shipping with a very bad security vulnerability, which has been internally known about since before the code even first shipped. This vulnerability is remotely exploitable, wont generate any log data, and allows an attacker to take complete control over the machine (machines which will contain rather sensitive information). The vulnerability isnt anything hard to find (multiple people have independently discovered it internally), and if nobody external has discovered it yet, its only by pure luck.Unfortunately, management just doesnt seem to care. At this point, Im all out of ideas. I find managements behavior completely unethical. How do you handle a situation like this? Do I have any options? What is the right thing to do?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_wy8gcb","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/wy8gcb\/got_an_offer_from_aws_but_dont_want_to_leave_my\/","DATE":1661472000000,"PLAIN_TEXT":"Hello. Ive previously tried interviewing for big companies like Facebook and Microsoft, but had no luck. Over the past month and a half Ive been interviewing for a position at AWS for a total of about 8 interview hours. Today the recruiter told me that the feedback was good-to-excellent, so basically I should be expecting a job offer.Problem is, I really love my current job. Its about a 400-people company, and Im playing a key role in a product Im working on. Its fully remote, very flexible, the people are awesome, etc.I have a dilemma, and nobody to talk about it really. My company will never look as good as AWS on my resume, but I dont want to leave it after just under 2 years. On the other hand, the relocation to Ireland (I moved to Montenegro a few months ago and currently live here) might be my only chance to move to a first world country, at least for the next few years. On the other other hand, Ireland seems to be _much_ (1.5x-3x) more expensive.I cannot decide, honestly. Basically, Im looking for somebody who worked or is working at Amazon to either say that 1) its actually horrible or that 2) its an opportunity of a lifetime.I cannot for the life of me decide, and my head hurts.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_114zaqs","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/114zaqs\/do_you_think_remote_work_is_slowly_dying_most\/","DATE":1676592000000,"PLAIN_TEXT":"After hearing the news about rainforest requiring people to go back to the office... my hope is disappearing by the day.Seems like in a year or two, we will be completely back to normal (99% of jobs requiring 5 days in office).What do you folks think ?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_c9x7pl","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/c9x7pl\/how_is_it_being_a_remote_engineer\/","DATE":1562371200000,"PLAIN_TEXT":"I work for a large tech company in the bay area but I often dream of getting a remote job so that I can work from home and have more flexibility. The thing is, Ive never worked remote so I might have a the grass is greener mentality. Has anyone gone fully remote before? Did it live up to your expectations?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_r0izp3","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/r0izp3\/why_do_so_many_jobs_lie_about_being_remote\/","DATE":1637625600000,"PLAIN_TEXT":"I have a job right now but Ive been applying to jobs on LinkedIn and Indeed for the past month or so. I have a little over a year of development experience so Im a little more limited in what I can apply for. Ive received callbacks from probably 10 jobs and all but one has said well, the job description says remote, but it would require some relocationtravel but you would be able to work in a hybrid environment!Hybrid is NOT remote! Its hybrid! Why would you lie about the location for a job and list it as Full-Remote on job boards? Do you think people looking for remote work will like your codemonkey 70kyear job so much theyll move to bumfuck nowhere for it? Get bent.Am I just getting the worst luck applying for remote positions or has anyone else applying for positions experienced this? I feel like Im going insane looking for a fully remote position when nearly all of them are secretly hybrid. Supposedly these fully remote positions are everywhere, but people must be talking to more honest recruiters than I have.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_vyacr8","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/vyacr8\/ive_been_2_years_into_my_wfh_job_im_sick_of\/","DATE":1657670400000,"PLAIN_TEXT":"Pandemic happens in 2020, I start my senior year all online doing online projects and homework, usually procrastinating to the max but still getting the 4.0.At the same time, I get hired as an intern -&gt; part time at a tech company as a ~~game developer~~ cloud devops engineer (with no experience of course). Apparently they liked what I do or something? because they hired me full time.2021 I go full time at my job. Still fully remote. Most senior dev leaves for higher pay. Then another one leaves to go full in on some cryptocurrency. Then another one goes to a startup. Then another one goes for a higher pay company. And a whole lot of others went to other departments never to be heard from again (including my boss). Now Im somehow the senior dev on the team of like, 3 people (they didnt hire any replacements btw) and theyre having me lead and design new projects for new contracts. like, ok??? Really???Now my life is back to submitting projects, procrastinating all day, and talking to no one (since Im remote). No one to hold me accountable, no one to talk to, no one to answer any questions (99% of what I do is the result of researching random stuff on reddit), and its like, even worse than school. My motivation is really running dry, and sometimes I find myself just surfing the web all day and pushing my work back to weekends or like, 4 AM when its due.I did not imagine my tech career to be heres the assignment, get it done by X day, and lol youre on your own for my entire life...Anyone feeling the same?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_7y9kuu","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/7y9kuu\/remote_devs_do_you_wear_pants_while_working\/","DATE":1518825600000,"PLAIN_TEXT":"There is a 100% remote dev on our team and I for some reason cant shake the image that hes just sitting there in his underwear scratching his balls and farting all day","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_p0azsf","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/p0azsf\/the_programmer_job_hunting_process_is_nuts\/","DATE":1628380800000,"PLAIN_TEXT":"Just had to vent. I got tired of my commute to my job, so I started job shopping.For context: I have four years of experience, no degree (but some college), worked on &amp; built a lot of different things (two differing size video games in C++, various websites with pythonNodeJS &amp; React, setup SQL databases, etc. In my current job I do a lot of core backend work, not so much database and frontend anymore. I know how to reverse a linked list, and all the data structure stuff that they expect you to do for interviews.)I applied to 30 remotework from home jobs in one day, got 18 callbacksphone screen requests total out of those, so at least my resume is working fine? This is how the interviews went: I failed the final interview at one company out of five interviews, because they did not like how I described dependency injection. I failed another interview because I could not recite SQL concat functions verbally from memory, AFTER having built an entire full-stack application (database included!) for them as an entry assignment (I got three yes out of four, and needed all four yes...100% approval? Who even does that?) I got a request to build an entire full-stack application (with electron, which Ive never used before, but I was willing) as the FIRST step in a four round process, and just backed out because I did not want to waste that much time just to possibly get rejected on the next rounds. ( i got 18 companies to get through here) Interviewed with Microsoft, FOUR times, BETWEEN the other interviews and while working my full time job. I got rejected after the phone screen at another company because they had a candidate with a masters degree (seems kinda random, but okay?) got rejected from another company because I did everything correctly, except I built an example flyweight programming pattern and accidentally called it factory (I could not remember the names for the patterns on the spot that well) I got rejected after a fifth round interview for not knowing the developer shortcuts on chrome (I kid you not..I use Firefox).After ALL of that, I ended up getting a job offer from Microsoft, of ALL the companies. 140K, which I believe is entry engineer salary for them?I ended up rejecting Microsoft (I got a better offer in the end), but is job hunting really this ridiculous? It seems they will kick me out for dumb code theory questions, EVEN if they like my code style and it clearly shows that I know what Im doing.I suppose part of the reason I did so poorly in code theory is that I dont just sit around describing code styles, programming patterns, etc in my daily work, so having been heads down in code for the past four years it seems Ive become rusty.But honestly, as an ACTUAL senior software developer, why do I have to brush up on things that dont come up in the day to day often? 9 out of 10 times, Any interview I had to code in, I did fine. Any culture fit interview, I did fine.Am I crazy or are these interviews MEGA tuned against false positives? Like they are looking for programming Jesus, and I GUARANTEE they want to pay programming Jesus less than Im currently making. I dont understand.Thank you for listening to my TED talk. I just had to scream into the void after going through all these dumb interviews.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_z3ny8s","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/z3ny8s\/3_internship_offers_2_wfh_and_1_in_person_hybrid\/","DATE":1669248000000,"PLAIN_TEXT":"I need help deciding what to do because I am at a loss. I have an offer from 3 different companies. Company 1:-Fully remote -pays 24hr-seems like a good company to work at for a career but not really for internship -1 week at the end of summer where we have to go in person to present -super helpful and everyone loved their job-super communicative throughout the interview process-mobile dev most likely Company 2:-Fully Remote-pays 27-29 an hour based on how many credits I complete by summer-one week where I go in person at end of summer-company does not seem too capable as the entire interview process was really unorganized and confusing-solutions engineerCompany 3:-in person hybrid (around 2hours from current home)-35hr-big investmentbanking company -interviewed through a referral -hires around 200-300 interns a year -no housing assistance-unknown yet possible fullstack development?All are around 40 hours a week. I do not know what to do as Ive said yes to company 1 and 2 and company 3 is waiting on a response. I really like company 1 but the pay is extremely low compared to others and money would be really usefulWas thinking of possibly doing company 1 and 2 at the same time as opposed to company 3 alone since its in person. Whatre your thoughts on this and what should I do?Edit: My referral at company 3 really enjoyed the position and highly recommends I do it but the only issue is having to move to a brand new location where I know no one. Also having to buy all new appliances, driving around more, paying bills like internet and housing seem very unappealing to me. Although I feel like I will most likely learn the most at company 3. How do I combat the anxietyfear of going to an unknown place leaving all my friends, family, and gf behind.My parents are also highly against me moving out as opposed to WFH.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_p4v6t1","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/p4v6t1\/the_most_laid_back_types_of_companies\/","DATE":1628985600000,"PLAIN_TEXT":"Ive been in the industry a few years. Not going to lie, Im looking to coast. Much rather have amazing work  life balance than earn a crazy salary and become crazy myself from the stress of it.What are some sectors I should consider? My background is .NETThanks allEDIT: Full disclosure, I sort of have it now. I work remotely and day trade. No way I want to give this us up, but it may not continue forever","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ovkyvo","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ovkyvo\/summitworks_technologies_scam\/","DATE":1627689600000,"PLAIN_TEXT":"Pros: I couldnt find any.In general, this company right off the bat told me that they would be lying to the companies they work with such as Microsoft, IBM, the ones I was told about by boosting my resume by 5 years experience. Right when this was said I quit their session, the crazy thing is the speaker said if your not okay with us lying on your resume, then you wont be okay with us as a company (Which I am not okay with, and nobody should have to lie this bad to get a job). This company is preying on people desperate to get into the industry and it is just sad... Watch out for these types of companies whos only intent is to prey on new grads, or people making career changes. You can learn a lot of what this company tries to offer for FREE..... JavaScript, Python, Angular10, AWS, they want to justify locking you into a contract and told me this material they teach is worth 20k or the equivalent of a bootcamp LIES. Cons: They lie for you RED FLAG (How are you going to advance your career when you are going to be known for working for LIARS) Training is irrelevant, (I could find better material for free on youtube) No REMOTE work, they just use this to lure you in with that job posting Contract binding agreement, You CANNOT work for Microsoft if you worked for them through SummitWorks, it must be through them. Such as some kind of middleman who boasts about landing 1 student a 100k offer, Yet he is not featured on their website as it uses a default google stock image Theres a possibility you go through their program and still dont get a job RED FLAG the trainers never show their face in the meetings, and the text box to communicate with everyone is kept private (Which makes no sense, how do you even know their are people taking this course serious) training is NOT paid, yet they said it was when I was being recruited by Vicky Sharma...Important NOTE: The only reason I gave this company a chance is because there is hardly any information on this company online so I thought why not. I like to look at things optimistically so at first I thought the few negative reviews could be a few bad apples. BUT, now I can see that this company is one that shouldnt be around as they state they have been around for 20+ years ( I am sure they changed names here and there). Anyhow I hope that this review helps whoever reads it as I encourage you to keep up in your job search. There is always going to be people trying to take advantage of others and this is clearly a means of USING you for their gain as you could easily be getting ripped off. As this only pays 50k for a person with 5+years experience.... Just doesnt sit well with me that they do this. I get it isnt all about the money but this is clearly them using you and ruining your reputation.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_vaxxb3","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/vaxxb3\/i_turned_down_an_opportunity_and_you_can_too_lets\/","DATE":1654992000000,"PLAIN_TEXT":"I recently got offered a position as a Jr. Software Developer at a major pharma company via a recruiter that I felt absolutely in the right in walking away from. After the typical behavior interview I was passed onto a fairly straightforward but basic technical interview with a team lead and take home test that I had a week to complete. I generally balk at these things but this one was pretty easy. Lots of sorting through arrays and multiple choice about Java. After that I had a 3rd round with a senior that was mostly whiteboarding the same type of problems on tge take home (why?) as well as another round of technical interview was another team lead, again (why?).At the end of that, which I can say now took 2 hours of my time in interviews plus another hour or so for the take home, not including correspondence and prep Im thinking Im about to land a job with a decent pay day! No. They offered a 6 month contract to hire of 28hr with no ot, no paid holidays and an absurdly high medical insurance so that Id basically be making what I was making doing restaurant work at ~22hr.I shot the offer down immediately. Fucking bullshit. Hourly but no overtime? Are you kidding me? And then my recruiter said this is pretty common and I was shocked. He also said that the 6mo contract to hire opens lots doors to much higher pay and benefits but honestly I wasnt interested in that point. The hoops in this industry are fucking stupid sometimes. 3+ hours of time for one companys hiring process (thank God it was remote) to get a slap in the face for an hourly contract to hire gig is too much. Stop selling yourselves short.Edit: changed pto to overtime, ot, it was a typo.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_he3f4s","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/he3f4s\/is_handling_loneliness_a_skill_i_should_learn_as\/","DATE":1592784000000,"PLAIN_TEXT":"Ive been feeling increasingly alone at the company Im currently at, with the only social interaction being through Trello cards and pull requests. Im fully remote atm, but even before COVID I was feeling this way. Is this a common feeling people have in the industry? At my last job I had another backend engineer that I would talk to about whatever tech stuff we read on the commute to work.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_11s6wkl","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/11s6wkl\/i_have_a_bs_in_computer_science_and_graduated\/","DATE":1678838400000,"PLAIN_TEXT":"I graduated with a 3.1 GPA from a decent public school. Moreover, I have 6 months of experience as a software development intern that I acquired at the end of my academic career. To add to that I was hired shortly after graduating and I worked there for approximately 4 months. However, as a result of a change in circumstances, I found myself needing to move back home to be with my parents.Luckily I managed to secure a fully remote role that paid more than the role I had been working at for four months in person. It seemed like a no-brainer so I took the job offer. At first, everything seemed great. I had regular weekly meetings with my manager and they always told me I was doing a great job and thanked me for my hard work. Despite that, the reason I say luckily is because 4 months after quitting my first job and moving 500 miles. I was laid off in a company-wide layoff from the remote role I quit for. They stated it was due to a refinancing deal that fell through which left them lacking cash flow.This brings me to today where I have been applying daily for four months with nothing but a single interview to show for it. I dont understand what it is I am doing wrong. I suspect my disjointed work history is scaring off potential employers but I am not certain. I am an honest person and I dont like to lie, but I am starting to consider simply pretending I worked at 1 company for 8 months before being laid off instead of 2 companies for 4 months each. I want to work whether it is a remote, hybrid, or local role. Furthermore, I am okay with getting paid as low as 65,000 despite having been paid a whole lot more previously. I say this because my savings are quickly evaporating but nobody wants to hire me. What do you suggest I do? Is there anything I can do? Or is the economy truly this fucked?&amp;#x200B;Edit: You guys suggested I post my resume so here it is: [resume](https:docdro.id450XAgN)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_u1k9b1","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/u1k9b1\/coding_bootcamp_to_110k\/","DATE":1649635200000,"PLAIN_TEXT":"Hey Reddit its gamer0293,I just accepted a role for 110k and I thought Id share my experience for those who lurk this sub. Maybe what I have to share will help someone out there.I started at a coding bootcamp in 2018 and I didnt finish it. I was dropped halfway through, I couldnt keep up with the pace of the course it was too much too fast. I didnt appreciate how difficult it was going to be or how much effort I was going to need to invest to make my transition into tech. I wasnt ready.From there I moved back in with my parents.I spent a couple years after that working various odd jobs in retailcustomer service roles. Barback, food running, cashier, lyft driver, you get the idea.One day I had a recruiter reach out to me to work at a coding bootcamp, that was a few months before covid. From there I just worked at the coding bootcamp while trying to find something full time. I was rejected from everything. I sucked and still suck at doing algorithms which didnt help. I was focusing on building projects since I figured that was what Id be hired to do. My mental health suffered a lot, felt like I was behind in life. For those who have been thereare there now you know what Im talking about.I found a small startup company to join on Angel List as my first real dev job, but it ended up not being a good fit. The team lead was a junior dev, the senior devs were on the other side of the world it was sink or swim. I was shifted to 4 different projects in 4-5 months. I was transitioned from a full time employee to a part time contractor and then I stopped getting paid. The whole time I was working at the bootcamp to have some sense of income.I started getting interviews, likely because I finally had a real dev job on my resume. Today I got two offers, one for 57k and another for 110k.If I had to give myself advice starting out I would say start with freecodecamp first. Do that coupled with harvardcs50 and then do the Odin project. From there build out projects and make a fiver account to get freelance projects for your portfolio. From there its just a grind networking and applying till something lands. Or you could go the freelance route, lot of opportunity, but it does take a lot of focused work. If you have ADD like me, this will likely be the biggest obstacle.You dont need a bootcamp, I wouldnt do a bootcamp again knowing what I know now. Save your money. My bootcamp charges each student 12k per person and only like 2% probably actually make it. They dont have a vetting process they just take your money if youre willing to give it to them. Ive had students ask me how to push to git when they dont even know how to take a screenshot on their mac. Im not saying all bootcamps out there are like that, Im saying mine is. I wont say which coding bootcamp I work at either but we are partnered with a lot of major universities.If you really want to do a bootcamp Id suggest you do Andy Sterkowitzs. its 4k to take. I interviewed with him twice to try to get in and both times he turned me down. Its not a bootcamp, he has a vetting process to make sure its a good fit and he takes people that start at 0 and builds them up personally. You will get the support you need and he has a reputation to uphold. He wouldnt take me since I wasnt starting at 0.Heres some resources Id suggest to checkout if youre looking to get into tech:Fireship.ioTraversy MediaThe Net NinjaThe Odin ProjectFree Code CampHarvardcs50Google certificates (for non dev roles). These certs dont mean much to employers, but the quality of the content is really good. You learn a lot about the foundations and you can build up from there.For the senior developer on this sub:How do I make sure Im ready for this? This interview process was unlike anything Ive ever had. What I mean by that is that I didnt do a single line of code during the process. No take home or algorithm. They told me they were looking to hire the right personality and to mentor and train that person. Im very grateful for this opportunity, but Im not feeling excited Im having an oh shit can I do this moment. I have 2 weeks to get myself ready for this. Im having doubts that Im worth this much money or worthy of this opportunity. I understand the imposter syndrome is thing but how do you know the difference between imposter syndrome and outright incompetence? I know that this is where the real work starts. I feel like my start date is the start of a marathon and I want to make sure Im as ready as I can be. My plan is to use this time to get myself up to speed but I dont really have a metric to measure that.Its a fully remote role which is great and all, but I am concerned about how to keep myself accountable and focused. If anyone has guidance on how I can be the best remote worker I can be please let me know.Their front end tech stack (what Id be doing) is ReactGraphQL. Ive build out simple apps with React but I havent touched GraphQL. I have a couple resources I plan on grinding till my start date but I wanted to ask this sub if they have any specific content they could recommend.If the senior devs can offer me some guidance for how I can make the most of this opportunity and how I can be the best developer as quickly as possible, PLEASE tell me.If you have any questions ask. One thing I love about working at the coding bootcamp is I really like helping people transition into tech and Im good at it.Stay safe out there,-gamer0293","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_qnzl9t","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/qnzl9t\/hired_for_sr_frontend_on_paper_team_lead_of_13\/","DATE":1636156800000,"PLAIN_TEXT":"First no complaints.Second not asking how to be a team lead.Third I love the company and the people I work with along with the empowerment theyve given me and the opportunity to lead a team.I still cant help but feel a bit swindled. Maybe they thought Id be a better fit for this role and threw me into the fire?Heres where my questions come in and hope I can find some good feedback from people here.1. What do you think makes a great team lead? Any qualities youve recognized in yourself or others that you feel are critical would be great to hear about.2. What do you think are some expectations that my team and also superiors expect of me?Im grateful for the opportunity and just want to do excellent work. Team is all remote overseas and also well be working with devs from the client.Thanks a bunch all!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_qr7yeq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/qr7yeq\/i_hate_being_pressured_to_get_a_cs_internship_so\/","DATE":1636502400000,"PLAIN_TEXT":"Context: I feel like some context is needed. The uni Im in makes internships so much of a big deal to the point of annoyance. So I took it upon myself to find one as soon as possible. BTW, my focus is in gaming since I want to get into game dev, but ended up in telcomms for this internship. I know this is rushed and this isnt for everyone to follow. Its still better to slowly build your side projects, get a good CV, and study for your interviews well. But I know there are some here like me whos looking to get into an internship ASAP so it wont stay an academic burden, so heres what Ive done:1. Online job listings are a godsend. While it says job listing, a lot of companies also look for interns via these websites. You have to be patient with creating your profile but its worth it since you can use these sites when you look for actual work. Websites I joined where companies replied in a few days were: 1. [Leaderboard Jobs](https:www.leaderboardjobs.com?r=1). Their site focuses on gaming and they have dedicated pages for resources, seminars, and conferences. I recommend you get into a job listing site that is dedicated to or has a section for the particular industry youre trying to pursue. 2. [LinkedIn](https:www.linkedin.comjobssearch?keywords=Programming%20Intern&amp;location=United%20States&amp;geoId=103644278&amp;trk=public_jobs_jobs-search-bar_search-submit&amp;position=1&amp;pageNum=0). Being a professional hub, LinkedIn proved to be reliable to me. They have Easy Apply, so if you have a LinkedIn profileresume set up, you can just apply in a few clicks. 3. [Indeed](https:www.indeed.comq-Computer-Programming-Intern-jobs.html?vjk=c4ecdb0c2bf88de6). I recently realized that they also have a lot of programmingCS internship roles open too. 2. Put your game face on. And this is quite literally. One thing my professor told me that stuck with me is that professional life in CS is sorta like coding - problems are mostly solved when thinking outside the box. I realized this is the same when finding internships. Dont hesitate to skip the textbook method of just waiting for emails and get yourself out there. 1. Get ready to talk to a lot of people. I forced myself to get over my social anxiety if it meant trying to establish new connections in this 3 week period. I managed to talk to people I would never talk to unless needed. These included strangers like security personnel, front desk employees, professors, and even professionals I reached out to. 2. Everything has a connection. Since youre looking for a company that might look for CS internships, try to look for places nearby where your target companies might have a presence. 3. Go straight for the gold. If you discover a contact to a company via a job listing or announcements, dont hesitate to reach out to them directly regarding internships. 3. Check your unis database. Its impossible for your uni or school not to have connections with other unis or companies related to CS, especially for your department. I discovered some companies to apply to by looking into: 1. Try to check any recent seminars or conferences that a company held in your school. Chances are, your department officials might know how to reach out to the contact person there. 2. Try to ask your professors if they have any connections regarding companies that might be interested in internships. This might be a shortcut, but its still worth the ask, right? 3. Try to check what other universities are doing. Try to follow the above steps but with other schools. I discovered a handful of companies that did some talks in other schools nearby so I tried reaching out to them as well.4. Prepare the paperwork anyway. Its very likely that your internship will be remote. My internship will be remote. But one thing I did to be sure is to print out everything Ive sent to the companies when applying. These include my CVs and cover letters and other requirements your school might need you to submit. Always have some thumb drives ready with some projects you can show interviewers. Relevant for the next stage.5. Personal visits still work. If youve seen companies that offer internships that are nearby, dont hesitate to make a visit. Remember, when you do, bring any COVID safety requirements if ready. This is important for the sake of anxiety, as youll want to make sure that your CV and cover letter reaches an actual persons hands. Some pointers when visiting companies to give out your CVscover letters: 1. Prepare an itinerary when visiting multiple places. If youre commuting, it helps to have at least a proper sequence of companies to visit so you dont get too stressed with your trip. The more companies you visit in a single visit, the better. 2. Ask for a contact person, be it an email or a mobile number. This lets you know who youll be expecting an email from.6. Prepare to settle. Since Im rushing the process, I removed any semblance of being able to choose where I get my internship. I cant afford to choose when Im focusing on getting one as soon as possible, so when the opportunity came, I took it and now Im hoping for the best. I do have plans of taking another internship next year of my own accord, since I ended up in a telcomms and I really want to pursue gaming. I hope these tips help. I cant share where Ill be working because of an NDA (I earn $16hr). If you have other tips, please include them as well so we can help each other out. ThanksEDIT: Added salary","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_wybstt","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/wybstt\/is_it_wrong_to_want_to_remain_a_senior_engineer\/","DATE":1661472000000,"PLAIN_TEXT":"I have been doing a lot of thinking about where I want my career to go moving forward. I have ~7 YOE working fully remote and making ~360k per year. Up to this point, I had thought I wanted to move up into a staffprincipal type role since I dont want to go into management and it is the only other way to keep climbing the ladder. But this morning as I was thinking about things, the thought hit me pretty clearly that the things Ive read about being a staff engineer on [staffengineer.com](https:staffengineer.com) dont appeal to me. I like working on a relatively small part of the product that I am a domain expert in, I like mostly only answering for my own deliverables, and the thought of being in meetings all day and having to take on significantly more responsibility which could spill into my personal life is unappealing.I feel a little guilty for feeling this way for some reason. I feel like I have the aptitude and social skills to continue to move up, but I just dont know if I want to... At this point it would just be to make retirement happen that much sooner.Wondering if other people in similar positions have any insight into how they approached this?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_6ez8ag","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/6ez8ag\/accidentally_destroyed_production_database_on\/","DATE":1496361600000,"PLAIN_TEXT":"Today was my first day on the job as a Junior Software Developer and was my first non-internship position after university. Unfortunately i screwed up badly. I was basically given a document detailing how to setup my local development environment. Which involves run a small script to create my own personal DB instance from some test data. After running the command i was supposed to copy the database urlpasswordusername outputted by the command and configure my dev environment to point to that database. Unfortunately instead of copying the values outputted by the tool, i instead for whatever reason used the values the document had. Unfortunately apparently those values were actually for the production database (why they are documented in the dev setup guide i have no idea). Then from my understanding that the tests add fake data, and clear existing data between test runs which basically cleared all the data from the production database. Honestly i had no idea what i did and it wasnt about 30 or so minutes after did someone actually figure outrealize what i did.While what i had done was sinking in. The CTO told me to leave and never come back. He also informed me that apparently legal would need to get involved due to severity of the data loss. I basically offered and pleaded to let me help in someway to redeem my self and i was told that i completely fucked everything up. So i left. I kept an eye on slack, and from what i can tell the backups were not restoring and it seemed like the entire dev team was on full on panic mode. I sent a slack message to our CTO explaining my screw up. Only to have my slack account immediately disabled not long after sending the message. I havent heard from HR, or anything and i am panicking to high heavens. I just moved across the country for this job, is there anything i can even remotely do to redeem my self in this situation? Can i possibly be sued for this? Should i contact HR directly? I am really confused, and terrified.EDIT Just to make it even more embarrassing, i just realized that i took the laptop i was issued home with me (i have no idea why i did this at all). EDIT 2 I just woke up, after deciding to drown my sorrows and i am shocked by the number of responses, well wishes and other things. Will do my best to sort through everything. ","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_1108zxj","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/1108zxj\/i_accidentally_came_across_my_senior_engineer_on\/","DATE":1676160000000,"PLAIN_TEXT":"I know this is a crazy situation, I still cant believe it but it happened. Honestly, if I wasnt terrified of getting fired during this market, Id would find this situation funny hilarious.During stand ups, My senior engineer has a very distinct sound in his background. Its like a vacuum, but the pitch of the sound gets really low, then quickly becomes high-pitch. He was always a quiet, but very cheerful person with a thick Spanish accent. He also lives with his brother, who calls him by his nickname.Last Monday, I played COD late at night, and almost immediately, I heard somebody from the other team with that same vacuum pitch. They were winning and we started arguing, and thats when he finally started talking. It was exact same accent, and at that point, I was willing to put money that it was my senior.Near the end of the game, both of us were completely trash talking each other (nothing hateful, just small banter, apparently hes very competitive). It felt so out of character for him, he was laughing a lot; it was entertaining. As a joke, I called him out by his nickname, and he immediately goes quiet. I reached out to him after the game saying that its me, and he doesnt respond at all. The next day, his attitude is now cold. Hes very silent during our calls, and isnt explaining things the way he used to in the past. I sent him a message during closing saying that I hoped I didnt offend him during the game, and I actually really respect them. He claims he has no idea what Im talking about, and just brushed me off. He remained dismissive the remainder of the weekNow its the weekend and Im trying to catch up on work, but Im lost on how to proceed with him. I feel like hes practically cutting me off. Im not sure what to do at this point. I even recorded the footage from the game, I heard it over again, and there was nothing offensive. He even started the trash talking. This feels so unreal, and I never thought something like this could happen.Edit: For reference, I have 4.5 years of experience. I carry my weight really well in the team and serve as a mentor for junior developers. Id find it hilarious if one of the juniors came up to me and mentioned we met onlineEdit: Im going to clarify a couple of things, since there are a couple of misconceptions that are spreading1) My senior and I have been the only devs for nearly 2 years until 2020. We managed to hire a ton of new graduates ever since the Covid outbreak, and now we have a fully fledged team. Theres a lot of work, but we have meetings to discuss how to properly mentor juniors and planning for tasks.2) We were on really close terms. I knew a lot about his personal life and vice versa. we were friendly. Weve had plenty of banter during our work meetings when we worked alone. This isnt some dude I just decided to friendly to. This was a friend that I knew for nearly half a decade. Thats why Im shocked at his response3) I did not bother him repeatedly about this situation. The moment he went silent after I introduced myself during the game, i got the hint dropped it. It wasnt until I realized that work is currently being affected since our encounter that I sent an apology, hoping to mediate things and continue things as they were before.4) his nickname was something his brother called since they were kids. He personally enjoys the nickname and even has that set as his name in meetings. Everybody at work and his friends call him by it. Some juniors dont even know his full first name.5) I record a lot of gameplay, its not something that I did out of context. I went to check on the recording because I wanted to verify if there was anything I said that was vulgaroffensive that might have led to this. He DOESNT know I have gameplay saved. There was NOTHING malicious, from both of us. if hes uncomfortable with the gameplay, id delete it in an instant.6) my main issue is that his self-destructive attitude is blocking our development process. Im perfectly okay with pretending this never happened. But hes not addressing tasks  helping juniors nor is he acknowledging the issue. A lot of work is getting funneled towards me. I DONT mind working a 9-5, 40 hr week, but there are juniors who are need guidance, and if I abandon them, they are more likely going to fired, especially during this market.I thought this was a harmless scenario, and I hoped for advice to address how we can make things better. Instead, Im met with pitchforks about I fucked his life over, deserving to get fired along with the rest of the team. Seriously, hop off the echo chamber hive mind and quit exacerbating a situation far beyond then it really is. He needs to grow up and acknowledge that theres an issue instead of letting us burn in quiet. Everybody on this thread is trying to explain why he acted this way, but it definitely doesnt justify his actions. Nobody deserves to lose their way to pay bills or provide food on the table over something as ridiculous as this. Yall heartless bastards need to grow the fuck up.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_nvy7cj","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/nvy7cj\/my_reddit_account_cost_me_my_next_sde_job95_sure\/","DATE":1623196800000,"PLAIN_TEXT":"So, this happened, I got rejected for- having a reddit account and being unbelievably stupid. I am Senior software engineer and was interviewing for a startup which just got huge funding. I got through first 4 rounds. Now here comes the last Engineering manager round. I was pretty confident. He asked me two Leetcode hard problems and I was able to do both. For the next question he asked me to open Reddit. Pretty weird, right ? Basically he just wanted to show me how redditsubredditssubcomments looks and design a database for it. Here comes the stupid part- I opened reddit from the browser I had logged in with my personal account. He asked me to open a post and to my great luck, all the usernames in that post were similar to these - pusyman34, hairylicker, largenuts. And he was trying to explain me how he needs me to design a database with these users. I was barely controlling my laughter at that moment. I started designing database and so far interview was going pretty interactive but now he kind of got distracted and started to check something else on his computer. He wasnt focussing on anything I was saying and he was just replying Yeah sure, it will work. 10 minutes into the question and he suddenly said -okay I think I am done here. I was answering all his questions, we had still 30 mins left and this guy wanted to leave the discussion. Then it hit me like a train. He must have seen my username, searched my account and must have been seeing my posts and comments. And my account was just posts about trolling and hating corporate, 9-5, managers and whole software world basically. Interview Result - Rejected Feedback- LLD knowledge not up to mark(I was not asked a single question on LLD in any of my interview) My reddit account - now deletedEdit- Some of you are thinking interviewer asked me to open my reddit account. No, he asked me to open reddit. I was the dumbass who opened it in the browser I was logged in.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_kfcmbj","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/kfcmbj\/ive_walked_away_from_software_development\/","DATE":1608163200000,"PLAIN_TEXT":"Throwaway for obvious reasons.Ive spent the last year planning my exit strategy. I moved to somewhere with a lower cost of living. I lowered my expenses. I prepared to live on a fraction of my income.Then I quit my job as a Principal Software Engineer for a major tech company. They offered me a promotion, I said no. I have zero plans of ever getting another job in this industry.I love coding. I love making software. I love solving complex problems. But I hate the industry and everything its become. Its 99% nonsense and it manufactures stress solely for the sake of manufacturing stress. It damages people, mentally. Its abusive.Im sick of leetcode. Im sick of coding interviews. Im sick of everyone being on Adderall. Im sick of wasting time writing worthless tests. Im sick of fixing more tests than bugs. Im sick of endless meetings and documents and time tracking tools. Im sick of reorgs. Im sick of how slow everyone moves. Im sick of the corporate buzzwords. Im sick of people talking about nebulous bullshit that means absolutely nothing. Im sick of everyone above middle management having the exact same personality type. Im sick of worrying about everyones fragile ego. Im sick of hissy fits. Im sick of arrogance. Im sick of political games. Im sick of review processes that encourage backstabbing. Im sick of harassment and discrimination. Im sick and Im tired.And now I dont have to deal with it anymore.Ive never felt happier. Its as if Ive been freed from prison.I wont discourage anyone from pursuing a career in software, but I will encourage everyone who does to have an exit plan from day one. One day, youll realize that youre rotting from the inside out.EditI wasnt expecting this many responses, so Ill answer some questions here.Im in my early 40s and Ive been doing this since college.I didnt get a large sum of money, I simply moved to a small place in a small town where Ill be taking a part time job working outdoors. I was living in a tech center with a high cost of living.Ive worked at 7 companies, including Microsoft and Amazon. The startups were much nicer, but they become more corporate over time.Finding a good company culture is mostly luck, and Im tired.&amp;#x200B;","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_95dgrx","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/95dgrx\/i_am_absolutely_mortified_and_embarrassed_beyond\/","DATE":1533600000000,"PLAIN_TEXT":"Using a throw away account here. I just need to get this off my chest because I currently feel like Hitler. I havent told anyone this irl yet because part of me is still hoping Im asleep and this is a nightmareI interviewed with a small start up in the city this morning. Phone screening went incredibly well, and I was feeling good about this place. They dont have a dedicated room for interviews, and the place was small enough that really all the engineers were just taking part of itWe were at the white board and I was drawing a diagram for a system design question. I didnt know they had an office dog. I didnt know the office dog was about 18 and the founders best friend since childhood. I didnt know the little guy (im talking super little, like squirrel small) liked to hang around peoples feet.I took a step back from the board to take a look at something better and stepped on her. I dont mean stepped on her foot or something. I mean right on her proper. She gave out a heart shattering yelp and died after squirming a little bit. I still cant fathom that this actually happened. The founder started to sob uncontrollably and I think everyone else was in just as great disbelief I dont know how to try and make something like that right. I dont think I could handle working there even if they did still want me. I just kind of apologized profusely and left. How do you even make up for something like that?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_cbkwp4","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/cbkwp4\/my_cs_story_contradicts_everything_ive_read_on\/","DATE":1562716800000,"PLAIN_TEXT":"Ive browsed this subreddit for a couple years (diff accounts) and I always see the same thing: leetcode or you wont get a job. Salary is the most important thing.Ive learned the exact opposite. I had two internships, 1 at a fortune 100, no leetcode asked. Only basic OOP concepts.Now I have a job at a major defense contractor, a job everyone on this subreddit thinks is terrible. Asked no programming questions. Only questions about my past experiences. I get great benefits, Friday off every other week, CUBICLES (open offices suck), and a 75k starting salary. The work is incredibly chill and I am learning a lot while using mid-high level programming languages.To everyone out there on this subreddit freaking out like I did for years: this subreddit is not reality. You dont have to be the best programmer to get a basic job. There is hope for you if you just want to work 8 hours and go home. Salary is not the most important thing. Find what makes you happy and find a job that provides those criteria. Mine were: cubicles, 70k+, no overtime, programming language I like. Thats it.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_qh2xho","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/qh2xho\/name_shame_loanstreet_ny_wants_federal_judge_to\/","DATE":1635292800000,"PLAIN_TEXT":"This is an update to [Name &amp; Shame: LoanStreet (NY) is suing me for over $3M in federal court after I warned potential employees about the companys labor practices](https:www.reddit.comrcscareerquestionscommentsq42lgmname_shame_loanstreet_ny_is_suing_me_for_over_3m)# SubpoenaLast Friday, [LoanStreet (NY)](https:www.loan-street.com) and its [CEO Ian Lampl](https:www.loan-street.comcompany#hs_cos_wrapper_widget_1542403709654) asked a federal judge to force Reddit to de-anonymize every post and comment Ive written in my entire life by revealing every username I have ever used.^(1)If you want to experience a company praise your work for over a year only to fire you without warning or severance in the middle of a pandemic, screw you out of promised compensation, and punish you for talking about it by trying to bankrupt you and publicly link you to every Reddit comment or post youve written under any username since you were born, LoanStreet is the company for you!Publicly identifying the Reddit usernames that I used when I was in middle school andor only for posts unrelated to LoanStreet can serve no purpose, in my opinion, other than to try to harass and embarrass me and to intimidate other exploited employees into silence.Just when you think LoanStreet cant stoop any lower, they do. At this point, no one is making the dangers of working at LoanStreet clearer than LoanStreet itself.# CommentaryI want to address a few things that have been brought up in the comments on my posts: I completely agree that people should be skeptical of any claims they hear, including any that LoanStreet or I might have made. That said, I wouldnt be risking millions of dollars in penalties for lying if I didnt know that I havent. Last summer, LoanStreet threatened to sue me unless I took down all of my posts and paid for the reputation management costs it had incurred as a result of my posts.^(2) So while I respect the right of real Redditors to be skeptical of and to disagree with me, I encourage everyone to keep in mind that LoanStreet has admitted to paying professional stooges to counteract my story (and the stories of other former employees it has baselessly accused me of authoring). While LoanStreet has not revealed the specifics of these manipulations, be on the lookout for odd clusters of comments, upvotes, and downvotes on posts about LoanStreet. Where there is sensuous bootlicking, there could well be money changing hands. Do not threaten violence or joke about committing violence against anyone from LoanStreet. The right way to fight for justice is by sharing accurate information about LoanStreets labor practices and protecting access to that information. Just because a non-disparagement clause is in a signed contract [does not mean its legal](https:www.reuters.comarticlelabor-nondisparagementlaw-firms-broad-non-disparagement-pact-violated-labor-law-nlrb-general-counsel-idUSL2N27V1RN). None of the factual or legal claims in LoanStreets legal complaint have been vetted by a judge or jury yet. Take them with a grain of salt. Many will not age well. Most workers who are exploited cannot afford to fight back. Those of us who can, must. LoanStreet would only pay severance to the people it abruptly fired^(3) if they signed permanent non-disparagement agreements. It forced these people - who, for example, had kids, were pregnant, andor had a spouse already out of work during the pandemic - to choose between protecting their families from financial strain and protecting other workers from LoanStreets exploitation. I doubt I would have taken on the risks I have if I had had a spouse or child that I was endangering by doing so. I am inspired to continue fighting by the former LoanStreet employees and people around the world who have thanked me for standing up for whats right. Ideally, this episode causes companies in general to think twice before exploiting their employees and empowers workers with knowledge of [their rights](https:www.nlrb.govabout-nlrbrights-we-protectyour-rightsemployee-rights). I am comfortable accepting the risk of some employers passing on me over this in the future. Those arent companies I would want to work for, anyway. I currently have a good job with a company I trust and I have no doubt I could find another. I think youll find that most people, including hiring managers, believe that vulnerable, at-will workers should be able to warn each other about egregiously exploitative companies.# Footnotes1. [Link to LoanStreets requested subpoena](https:we.tlt-rZw13hIUPT), which would force Reddit to hand over Documents sufficient to show the identity of all Reddit user names used by [me] (Request No. 4). Together with the earlier instruction that The use of any tense of any verb shall be considered to also include within its meanings all other tenses of the verb so used (Instruction 7), LoanStreet and Lampl want to force Reddit to reveal every username I have ever used, regardless of its relevance to their claims.2. They also appear to allude to these reputation management costs in their [complaint](https:www.dropbox.coms5g263cnc22yursjFederal%25252525252525252525252520Court%25252525252525252525252520Complaint%2525252525252525252525252019%25252525252525252525252520Jul%2525252525252525252525252021.pdf?dl=0) (paragraph 108).3. Reminder: the annualized turnover rate in my LoanStreet office was about 50% - much of it involuntary.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_hvuscm","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/hvuscm\/reminder_were_a_family_here_is_bullshit\/","DATE":1595376000000,"PLAIN_TEXT":"Ive been in the industry for a long time now. I have worked at 2 startups and both have pulled the we are a family here line on me. Well to any young job searcher reading this, I want you to know that this is the reddest of flags. Here is a story what I have experienced at my familiar company.- CEO says we are stronger together at the beginning of COVID and that we can ride out the wave. 1 month later he lays off half the company without warning. There were two meetings you were invited to, if you were in 1 you stayed, if you were in another you were gone. No notice. Great way to treat family eh?- Chat room was opened up for people to support each other in the times of COVID. Many people posted things like we cant be expected to be as productive when we have kids at home during a pandemic which is true. It just so happens that those same people are now gone.- Came out that a manager was harassing some of his employees. When they went to HR they defended him and the employees left the company. The harassing manager is still there.- People filled out anonymous surveys. 2 people who gave negative feedback were gone the next day.Of course, my only family is my wife and children. I just wanted to share that some of the most toxic places I have ever worked spout this family nonsense. Watch out for it.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_uczkay","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/uczkay\/referrals_are_king_a_shithead_guide_on\/","DATE":1651017600000,"PLAIN_TEXT":"I must introduce this guide first with this preamble: I cannot for the life of me believe that people are not doing this. I mean that literally - I believe, and to a larger degree, I hope, that this is all useless information.However, I have helped close to three dozen friends go from getting nearly zero interviews or even responses, to getting them all the time, just by... get ready for it... this one simple trick.------------------------------------------------------------------------------------------------------If your primary strategy for applying to jobs is by going to [indeed.com](https:indeed.com), [monster.com](https:monster.com), [jobs.linkedin.com](https:jobs.linkedin.com) - etc, and hitting submit on an application, then I am so happy to inform you that youre just doing this wrong. I have applied to many jobs this way, and I have sparingly seen a response. Why? Because Im a shithead, and no one wants to hire a shithead.So, what did I do instead, and what did all my other shithead friends do instead?# What The Hell To Do InsteadHAVE A RESUME THAT LOOKS GOODI have seen so many resumes from newgrads and junior engineers with the most blegh looking resumes. I am not talking content here - by now, I hope you know how to make your resume sound, and this is not going to be a guide on how to make your resume sound good. But for the love of God, if youre making your resume on microsoft word, do yourself a favor and [make yourself a resume on overleaf.](https:www.overleaf.comgallerytaggedcv) Or whatever you want. Make it look good. Overleaf makes it hella easy, especially if youre a developer. Dont know LaTeX? Neither do I, and I got by just fine, and, remember, Im a shithead. You can figure it out, I promise.Okay, have a nice looking resume? Good.&amp;#x200B;# Use LinkedIn to Contact People. Seriously.I have never, ever, ever, sent an application randomly through one of those crap-chute websites and expected to ever hear anything back. And guess what? Lo and behold, I nearly never hear back. So, heres what I do.Lets say I want to apply to a Spotify job. Ill go to Spotifys careers at spotify page, and look for two, three maximum, roles that sound right for me. Then, I go on [linkedin.com](https:linkedin.com) and search Spotify and land on their company page. You should see something like [this](https:imgur.comauoIPIXH).Then, I click on the [People](https:imgur.comaZBT5oOg) tab.Then, I look at the [filters that are immediately available.](https:imgur.comaTQRLKxk)And I apply some filters!You want people in Engineering. You want people who went to your college. You want people who studied what you studied. You want people who are first, second, or even third connections. Just add as many filters as you can. The more related they are to you, the better!Then, start mass-adding people that clear the filters. If they are already a connection - great, send them a message. If they went to your school (this is very helpful) - great, send them a message. If they have your first name - great, send them a message.If they share fuck-all with you, great, send them a message!But they have to accept your connection first, of course, if you dont have Linkedin premium. A lot of them will. Some of them wont. Whatever, doesnt matter. You really just want 1-3 people.Once you have at least one person accept your connection request, send them a message! You dont want more than a paragraph. 1-2 sentences telling them why you are messaging them, 1-2 sentences introducing yourself, and 1-2 sentences to just shoot the shit. Something like:Hey, my name is Texzone, and I am messaging you because I am interested in a job at Spotify. These roles I have sent below seem like a great fit for me (send roles after sending the intro message), and, I would love if you could refer me. I am a newgrad interested in backend development with a focus in data engineering, and I have some experience under my belt that I think would be beneficial to Spotify. [insert line about your qualifications; seriously, Keep It Simple, Stupid]. Thank you so much for everything, and have a great day!Thats it.But utexzone, thats so annoying! Im surely harassing them by doing this!You idiot. You know, if they refer you and you get accepted, most companies have a bonus that they offer the employee! It ranges anywhere from 2k-10k. And all they have to do is drag-and-drop your resume on some shitty internal portal, then continue picking their nose while watching whatever tiktok nonsense they were watching when you messaged them.Even if they dont get any money out of it, people like helping other people. Really, its true. They do.And, with a referral, you are almost guaranteed an interview if you:1.\tHave a clean looking resume and it sounds good.2.\tYou are applying to a role that matches your backgroundexperience, at least loosely.3.\tThats it.4.\tYeah thats really it.5.\tI swear.Easy. I have applied to dozens upon dozens of jobs this way, and I have gotten interviews at nearly every single damn one. My resume isnt amazing. My experience isnt way out there. My friends? A lot of them had a clean looking resume, but had shit-all for experience. But they all got interviews as well.&amp;#x200B;I am sharing this because I am forced to believe people arent doing this, and are instead hitting submit on some portal. This is by far the worst god damn way to ever apply anywhere nowadays. Unless your resume is filled with jargon, years of experience, and a sprinkle of FAANG, forget this ever being a smart way to apply to jobs.So, thats how I, a shithead, have gotten over a hundred (Im seriously not kidding) interviews over three cycles of job hunts that lasted about 3-5 months each. I applied once when I graduated, once during COVID, and just finished a job hunt right now.I now have some impressive stuff on my resume, thankfully. I look less and less like a shithead, and more like a professional - much to the dismay of the world - and I still dont ever hear back (rarely) from applying to jobs normally. I still do apply normally - Ill send out applications every month or so, even when Im working, so I can keep interviewing and stay ontop of my interviewing game. But from, say, 50 applications I send out, Ill maybe hear one response.But when I apply the way I described above? If the person delivered, and referred me, I never dont hear back. Neither do my friends. And I will almost always find someone to refer me. So... yeah, I hope this helps.&amp;#x200B;Note: I guess this may not work for super small startups. Whatever.# FAQs1.\tIs this method something you would recommend for internships? 1. No, not really - this method is something that I strongly encourage for full time jobs. Internships, co-ops, etc - those are a different beast and I know nothing about that. A college internship? ...Maybe. A High school one? ...Unlikely.2.\tAM I SUPPOSED TO SUBMIT MY APPLICATION BEFORE OR AFTER THEY REFER ME 1. VERY VERY VERY VERY VERY MUCH AFTER! DONT APPLY, LET THEM APPLY FOR YOU! If you apply before they refer you, well, then, you applied, and they can no longer refer you. So dont apply unless they explicitly tell you to do so.3.\tAm I supposed to contact recruiters? 1. Yes. They are excellent. Yes, do contact them. But honestly Ive just never really had much luck with them.4.\tDo I attach my resume unprompted? 1. Up to you really. I usually dont. But you can. Especially if u like it&amp;#x200B;# A Man Of My Word. Passing it Forward. All that Goof Stuff.I work for Amazon. Anyone that wants a referral, let me know. But, as I eluded to in my post, I just finished my job hunt recently. I think I need about a month before I can refer people? Ill keep your info with me and refer you as soon as I can get do it.Mods, if this is against the rules, please let me know, I just read the rules and do not see it being against the rules.## EDITNo longer able to do referrals this year. Sorry guys, I have done way too many this year (over 20). Need to cool it a bit!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_xxg9ag","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/xxg9ag\/now_i_understand_why_it_took_me_so_long_to_land\/","DATE":1665014400000,"PLAIN_TEXT":"Im on a small team. After posting a jr level job, we had +200 applicants on the first week. Most of these per our manager are on the back burner and wont even be looked at. My team and I started conducting interviews and we have only done two of them so far and they are both referrals only. Two interviews next week, also only referrals. Everything is moving really slowly and one of the guys we interviewed only exposure to SWD is from a bootcamp he hasnt finished yet. I was going to give him a LC medium but I asked him FizzBuzz instead and he wasnt able to even begin it.Long story short, if you are a new grad or barley starting your career, to increase your chances at landing something, PLEASE network! Theres no one size fits all solution for this shitty mess, but I have found that DMing recruiters, hiring managers, going to career fairs, anything you got to do to put your name above a stack of +200 resumes, 97% of them which will likely not even be touched, really helps (didnt do any of this until towards the end of my first job hunt hence the title). An influx of bootcamp gradsstudents, combined with covid, recessions, hiring freezes, and God only knows what else is the reason folks.Also, no hate on the new people coming into the field or the bootcamp students. Keep grinding, keep working hard, keep learning new stuff! We are all going to make it, provided you stick to it and see it all the way through. But be honest and realistic with yourself as well.EDIT: https:leetcode.comproblemsfizz-buzzdescription","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_oxx25o","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/oxx25o\/does_the_job_search_make_anyone_else_want_to_cry\/","DATE":1628035200000,"PLAIN_TEXT":"I just got like my 15h rejection in a row, this time with feedback on a hackerrank that said Our engineering leadership thought that your HackerRank solution was a bit convoluted and not what we are looking for currently. Except that I know Im a good engineer and my solution was not at all convoluted. All my former coworkers were happy with my work. My bosses were happy and gave me good performance reviews. Maybe theyre annoyed I used functions instead of having everything in a for loop or that I used camel case. I dont fucking know. I just know that Im tired of answering questions correctly and getting rejected. &amp;#x200B;Ive been out of the job force for nearly a year now. Im going to be homeless in a few months. And literally every place rejects me after I correctly answer a tech question. Yes I know I shouldnt have quit my job without another one. I didnt think Id literally be blacklisted from the fucking industry because of it. Im fucking over it. I just want a fucking job. Ill take a minimum wage job at this point. From $250k TC to being homeless in a few months.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_zfp5wl","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/zfp5wl\/should_we_start_refusing_coding_challenges\/","DATE":1670371200000,"PLAIN_TEXT":"Ive been a software developer for the past 10 years. Yesterday, some colleagues and I were discussing how awful the software developer interviews have become.We have been asked ridiculous trivia questions, given timed online tests, insane take-home projects, and unrelated coding tasks. There is a long-lasting trend from companies wanting to replicate the hiring process of FAANG. What these companies seem to forget is that FAANG offers huge compensation and benefits, usually not comparable to what they provide.Many years ago, an ex-googler published the Cracking The Coding Interview and I think this book has become, whether intentionally or not, a negative influence in todays hiring practices for many software development positions.What bugs me is that the tech industry has lost respect for developers, especially senior developers. There seems to be an unspoken assumption that everything a senior dev has accomplished in his career is a lie and he must prove himself each time with a Hackerrank test. Other professions wont allow this kind of bullshit. You dont ask accountants to give sample audits before hiring them, do you?This needs to stop.Should we start refusing coding challenges?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_o3jpfc","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/o3jpfc\/name_and_shame_loanstreet_ny_cheated_me_out_of\/","DATE":1624060800000,"PLAIN_TEXT":"[UPDATE: LoanStreet is suing me for over $3 million in federal court because I shared the story below](https:www.reddit.comrcscareerquestionscommentsq42lgmname_shame_loanstreet_ny_is_suing_me_for_over_3m)[UPDATE: Name &amp; Shame: LoanStreet (NY) wants federal judge to force Reddit to de-anonymize every post and comment Ive written in my entire life](https:www.reddit.comrcscareerquestionscommentsqh2xhoname_shame_loanstreet_ny_wants_federal_judge_to)I worked for [LoanStreet in NYC](https:www.loan-street.com). Small company. &lt;30 people. [CofounderCOO Christopher Wu](https:www.linkedin.cominchriswu000) told me my equity would start vesting after 12 months. After I started, they told me that they actually meant 12 months after the next quarterly board meeting, and I would only start to vest after 16 months. I asked them to change it. They dragged their feet for months, pretending to work on it. After 15 months of praising my work, they abruptly fired me just as COVID froze tech hiring, refused to vest any of the promised equity, and the head of HR (who is also the wife of the CEO and who had spoken to me warmly just the night before) refused to answer my phone calls asking for an explanation. LoanStreet is run by fancy lawyers and they were crafty with the offer letter language so I had no legal case. The offer letter said the details of the equity compensation would come in a different document, which they didnt provide for almost a year after I joined. If it was a good-faith error, they could have done the right thing and granted me what I earned. They chose not to.The only problem I was aware of was that the [CTO Larry Adams](https:www.linkedin.cominlarry-adams-2a20b07) was upset with me because I discovered one of his favorite engineers had broken mission-critical code, and I fixed it. Basically this guy was making changes to financial code he didnt understand, and had erroneously +1d in one place so he ended up -1ing in a bunch of other places to offset the initial error and get the tests to pass even though some key, untested functionality was now broken. The engineer didnt remember why he had made the change and refused to help me investigate why tests were failing. I privately spoke to him to ask him to be careful with the code in that area because it was tricky, to leave comments if he writes something that might be confusing to another reader, and to feel free to ask me for help in that area since it was my niche in the company. I was trying to do him a favor by not making a more public stink about it. He immediately complained to the CTO, who called me 30 min later to sternly tell me that there was no error because we had tests that would have caught it and to scold me for going out of my lane. I wrote a failing test proving that the error existed and that our tests were incomplete. Then I fixed the error. He brusquely told me to fix anything I had broken by making that change. At the next retro needs improvement section I said I hoped we could affirm a team norm of being responsible for your code: being able to explain it and to help fix things if it breaks something. Larry Adams got mad and shut down the conversation. For the next few weeks he worked behind my back to get me fired.[CofounderCEO Ian Lampl](https:www.linkedin.cominian-lampl-b7a5b684), his wife and [head of HR Alyssa Guttman](https:www.linkedin.cominalyssa-guttman-37133a4), [COO Christopher Wu](https:www.linkedin.cominchriswu222), [CTO Larry Adams](https:www.linkedin.cominlarry-a-2a20111), and [General Counsel Thaddeus Pittney](https:www.linkedin.comintlpitney) are the people chiefly responsible for what happened.Copying my [Glassdoor review](https:www.glassdoor.comReviewsEmployee-Review-LoanStreet-NY-RVW48294594.htm) below. Please follow the link and mark it as helpful so that the message is amplified and as many people are warned as possible. LoanStreet fires people without warning and makes severance dependent on signing a permanent non-disparagement agreement, so we need to elevate the negative reviews they do have. They have no legal fees because many of the top people are lawyers, and so they intimidate people into keeping their stories to themselves, even with anonymous outlets like Glassdoor available.ProsThey are willing to give boot camp grads a chanceConsTLDR: Stay far, far away unless youre truly desperate. LoanStreet is a raging dumpster fire and you will get burned like many before. After 15 months of praising my work - and as COVID froze the hiring markets in 2020 - they abruptly fired me and withheld $100k in options that they promised me before I was hired.The annualized turnover rate in the small NYC office during my time there was around 50%. Every two months or so, someone was fired who said they werent given any warning and the company would tell the same story that this person was given many warnings and opportunities to respond to feedback. I saw a lot of good workers blindsided, some leaving in tears. I thought it was fishy and eventually it happened to me, despite always having received glowing praise from leadership.Any promises made to you to entice you to sign an offer should be regarded with extreme skepticism. Get everything in writing and reviewed by a good lawyer.After hiring employees with a promise of unlimited PTO, management rolled out a PTO tracking tool that explicitly capped PTO at 15 days per year.Before I joined, CofounderCOO Christopher Wu told me that the first quarter of my stock options would vest after a year. My offer letter said details on the equity compensation would be provided in a separate equity agreement. I wasnt provided that agreement for nearly a year after my start date, and you can imagine my surprise when I saw that I wouldnt begin to vest until nearly 16 months of employment. After 15 months of work, I was abruptly fired and didnt receive a single option.Because the offer letter omitted the details of the equity compensation, labor lawyers told me I had no case. Keep in mind, LoanStreet is run by lawyers who used to worth at Cravath, a very prestigious and lucrative NYC law firm. I suspect they knew exactly what they were doing when they wrote the offer letter. If it was just a good-faith mistake, they could have done the right thing and granted me the options I earned. They chose not to.Placing my trust in LoanStreet was a costly mistake. If youre reading this, please dont be fooled by the Series B funding or the impressive pedigrees of the leaders; this place is a fraudulent, exploitative mess and you have a good chance of being fired within a year.CEO Ian Lampl is the ringleader of this racket, but CofounderCOO Christopher Wu, CTO Larry Adams and the rest of leadership are his spineless sycophants. They either agree with Lampls despicable abuses of his employees or are too cowardly to stand up for whats right.This group will twist employees arms to post positive reviews after they see this one, just like they have in the past, but this review is the real story and just the tip of the iceberg, given LoanStreets practice of paying fired employees to sign permanent non-disparagement agreements.You deserve to be treated with dignity. Work elsewhere.Advice to ManagementYour exploitation of people is disgusting. Look in the mirror and ask yourselves how your loved ones would feel if they knew that you cheat people just to make your big piles of cash a little bigger","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_s4rkbe","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/s4rkbe\/after_6_years_of_struggle_i_made_it_brosgals\/","DATE":1642204800000,"PLAIN_TEXT":"2016 - Graduated with below 2.5 GPA. No job, just my johnson in my hand.2017 - Live at home NEET, crazy depression, anxiety, and suicidal thoughts. Burned an entire year watching anime, netflix, and movies. Also sleeping 12 to 16 hours a day. Waking up and smoking enough weed to put an elephant asleep because every waking moment was extremely painful.2018 - start of therapy and medication. Had to learn how to function as a human again. While also trying to cram leetcode and general cs theory2019 - Condition improve, but continued to try to learn too many things at once. Didnt help that I was living in abusive home enviorment. Managed to land a internship that paid $10 and hour for 3 month.2020 - Switched to an ad agency for $25hr. Covid happen and was laid off during the height of pandemic. Couldnt code at home because of abusive enviorment. Rented a co-working space when everyone was staying home. Was practically living there because I could not afford to move out. Stayed for 3 months, because I could not afford $250 a month open desk. Spent another 3 month working my malls outdoor food court 12 hours a day. 2021 - Got a better deal from co working space for $100 a month. Was practically living at the co working space again. A small win, but there was increase of random violence at home. Took remaining amount of money, and left the country. Was able to focus on building a product. Applied, and interviewed for a job November. Received and signed offer in December.2022 - I start working.What I learned1. Dont try to learning everything at once. Focus on one thing at a time.2. Be brave and leave a toxic home enviorment. You wont be able to actually digest material if you are in constant state of fight or flight.3. Watch out for coding anxiety. Dont code for the sake of coding. Think about what you want to achieve. Use bloom taxonomy to learn deeply.4. Take your time, and pace yourself accordingly.5. Believe in the process and believe in yourself. Took god damn 6 years because I was constantly in state of anxiety and flight mode. Took me 6 months to readjust to a healthy baseline. FML but I made it and so can you. Dont give up. To the bitter end.Edit1. I was a non-cs major that majored in accounting. My 3rd year i have a 3.0 to 3.2 gpa. Always loved tech but coming from an extremely poor family i was never introduced or had guidance to coding until college. I do recall learning how to make a website with dreamweaver as a freshie. But I loved tech since i was a kid.I believe coding is just the modern day carpenter and anyone can do it.Edit2. I did not get FANNG nor was asked an algro question. Though doing tons of leetcode allowed me practice visually mapping algros and cleaned up my coding logic.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_v4nuay","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/v4nuay\/the_irony_of_using_teslas_returntooffice_mandate\/","DATE":1654300800000,"PLAIN_TEXT":"When Elon Musk sent an email the other day demanding that all his staff come back to the office or face dismissal, I saw a lot of posts on Linkedin from the anti-WFH crowd along the lines that See, even a company as big as Tesla cant function with its staff working from home or Tesla only became as successful as it did because of the people who came to work.A short time later Elon revealed that hes concerned about the economy and intends to reduce Teslas workforce by 10%. Its pretty clear that he issued the mandate hoping that some of his staff would choose to resign rather than return to the office.Does anyone else find it ironic that proponents of the anti-WFH voice used this example, which was orchestrated to make people quit their jobs, to try and prove their point that everyone should return to the office?Seems more to me like working from home was too effective and thats what most people would prefer to do. But everyones different and adults should be given the opportunity to decide what works best for them.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ouk1at","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ouk1at\/pay_attention_to_whats_going_on_with_blizzard\/","DATE":1627603200000,"PLAIN_TEXT":"Hey guys - if you have the time, take a minute to read a couple of the anecdotes of women who worked at Blizzard, [here](https:www.twitlonger.comshown_1srp3fb) and [here](https:wtbrecognition.blogspot.com202107my-experiences-at-blizzard-entertainment.html?m=1).This sub trends young and trends male, so to that audience, I want to warn you all how easy it is to become acclimated to a culture, even a toxic one. When I was 22 I started working for a company that was an acquired startup of almost all men and a handful of women. It didnt have the problems that Blizzard has - it was far from frat boy - it was more Office Space-esque cynicism. It affected me far more than I realized, because as a young professional, I sought approval from my older peers and bosses. I wanted to fit in, so I behaved the way they did. And it hurt me personally and professionally. I was completely blind to it at the time, but in hindsight, I was surrounded by bitter, jaded, poisonous people, and I became that way myself.I know it seems slimy to call the perpretrators at Blizzard victims too, but many of them are, because work does that to you. When you spend 40 hours a week for years on end with a group of people, their behavior and attitudes (aka, their culture) will affect you, no matter how hard you think it wont.Dont let that happen to you. If you find yourself at a company that tolerates anything even approaching the way Blizzard let its male employees treat its female employees, do something about it, or quit, or both. I know the market is tough and thats easier said than done, but even if your conscience doesnt demand it, guilt by association is a real thing. Blizzard was an amazing name on your resume until about a week ago. Now its a liability.If theres one explanation for the Blizzard debacle, its that evil perpetuates when good men do nothing.EDIT: To be clear - Im not blaming the victims here, nor am I suggesting perpetrators are blameless. I am warning you to steer clear of situations that might require you choose between your conscience or your job. If you are forced to make the wrong choice too many times, it could have negative, lasting effects on you.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_rdn3z9","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/rdn3z9\/lnterview_from_hell\/","DATE":1639094400000,"PLAIN_TEXT":"I just went through my Microsoft onsite for new grad and literally just had the worst interview experience of my life. Interviewer showed up with his camera turned off and wanted to go straight to coding. He gave me a question and I explained my approach and then he wanted me to solve it using a stack DFS instead of recursion, which I had never done before so I struggled a bit. I usually have some scratch paper in hand so I can visualize things, but he told me that I wasnt allowed to do that and to use the Codepair scratchpad. Later as I looked to the side to think for a second, he asked me why the fuck are you looking to the side (verbatim) and to focus on the screen, to which I apologized and kept going. He wasnt really angry, in fact he was laughing when he said it but at this point I was extremely uncomfortable and it was impossible to think through the problem. I was explaining my thought process and when I said something about popping a node from the stack he deadass replied Ayee pop it like its hot.He then started getting impatient when I couldnt solve the problem and he started throwing out a lot of curse words in his hints (that werent ever helpful) and then said Cmon youre a [T10 uni] student, show me some code, which is probably one of the most demoralizing things Ive been told. He ended it and asked me if I had any questions. I asked him how he liked Microsoft and he said you learn a lot but the pay is shit and the work is boring. I thanked him for his time and he said yeah and dced (this was the first interview of the loop). Got rejected the next day.GG","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_116oo6o","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/116oo6o\/ftc_has_proposed_banning_noncompete_agreements\/","DATE":1676764800000,"PLAIN_TEXT":"Short summary:The FTC has proposed a rule to ban non-competes, and retroactively invalidate old ones.For those not familiar, many tech companies outside of California force employees to sign horrible non-competes that prevent you from getting other jobs related to that. These are downright evil.Why?1. They can be super broad, capturing massive industries or technologies2. They can include lists of competitors that we can add to at any time3. They apply to nearly everyone, not just those with sensitive information4. They are absolute bullshit. These contracts essentially would prevent you from working at companies with the exact skillset you grew.How would you feel if you were desperate for a job right now and dealing with this?Please, please, please go make a public comment here before the FTC stops taking comments. Discuss how it restricts competition.[https:www.regulations.govdocumentFTC-2023-0007-0001](https:www.regulations.govdocumentFTC-2023-0007-0001)Comment button is the blue button on the top left","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_blhdf7","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/blhdf7\/hiring_manager_checking_in_youre_probably_better\/","DATE":1557100800000,"PLAIN_TEXT":"Sometimes I see people in this sub getting down about themselves and I wanted to share a perspective from the other side of the desk.Im currently hiring contractors for bug fix work. It isnt fancy. Were not in a tech hub. The pay is low 6 figures. So far in the last 2 weeks, a majority of the candidates Ive interviewed via phone (after reviewing their resume and having them do a simple coding test) are unable to call out the code for this:&gt; Print out the even numbers between 1 and 10 inclusiveThey cant do it. Im not talking about getting semicolons wrong. One simply didnt know where to begin. Three others independently started making absolutely huge arrays of things for reasons they couldnt explain. A fourth had a reason (not a good one) but then used map instead of filter, so his answer was wrong. By the way: The simple answer in the language Im interviewing for is to use a for loop. You can use an if statement and modulus in there if you want. += 2 seems easier, but whatever. Im not sitting around trying to gotcha these folks. I honestly just want this part to go by quickly so I can get to the interesting questions. These folks resumes are indistinguishable from a good developers resume. They have references, sometimes a decade+ of experience, and have worked for companies youve heard of (not FANG, of course, but household names). So if youre feeling down, and are going for normal job outside of a major tech hub, this is your competition. Youre likely doing better than you think you are. Keep at it. Hang in there. Breaking in is the hardest part. Once you do that, dont get complacent and youll always stand out from the crowd. You got this.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_rw3p8u","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/rw3p8u\/psa_if_you_want_to_know_why_a_big_company\/","DATE":1641254400000,"PLAIN_TEXT":"FANG and other big companies keep the data that you generated while interviewing with them forever. Under GDPR, they are required to provide you with this data request. Just send them an email with a request for this data and they must comply (say in the email that it is a formal notification of a GDPR request). I have personally tested this with a couple of FAANG companies and the response was quite surprising. There was an interview that I felt went great but the interviewer thought I didnt know how to use a std::vector and thus rated my coding skills as bad (even though I did know how to perfectly use a fucking vector as I use one almost every day in my job). A lot of information will be redacted from these documents but it is still a useful source of feedback!EDIT: Many people seem to think that running a background check can easily reveal whether you are a European resident or not. Its not that simple, one could easily hold dual nationality without it showing up anywhere. That have no way of knowing at all EDIT 2: The way this works is that large companies have entire departments that deal with these sorts of requests. A sample email you could send is:SUBJECT: GDPR request for accessing my previous interview feedbackHi, I would like access to all of my interview feedback data. I interviewed with your company on mm-dd-yy. My full name is X X This is a formal GDPR request to access this data.Thank you, CandidateName","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_qc50hf","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/qc50hf\/please_dont_neglect_your_communication_skills_in\/","DATE":1634688000000,"PLAIN_TEXT":"One thing I found that doesnt appear enough on this SR is communication. I tend to see any variation of Is this offer good? or, Why do I have to grind leetcode?!. Most of the on-the-job posts consist of I am in a toxic environment or Should I change jobs?I have a piece of career advice for anyone who is fairly new to the field that I think could prove helpful. First, a little about me as while Im not going to hinder my anonymity I do feel Im in a position where I can rightly prescribe advice to newer SEs  grads  those still school: Im a Principal Engineer, and have a wide array of experience across operations (including release  implementation) as well as experience developing user-facing code, and internal tooling used organization-wide. Ive worked in the DOD, networking space, e-commerce, and fin-tech. Jobs Ive held include: Software engineer (seniorstaffprincipal) DevOps Engineer Lead DevOps engineer Lead Site Reliability Engineer Tech Lead Software Development Manager Director of OperationsOne of the greatest skill deficiencies I see in engineers has always been communication. Communication is a very important part of our job. It allows us to promote our ideas, defend our solutions, play the Devils Advocate, request help, refuse help, patronize others as well as compliment them. We can use communication to self-promote or self-deprecate. Communication literally sets us apart from every other species on this planet; thats not to say other species cant communicate, but that you wont see one chimpanzee explaining to another what the functional use of a blow-hole in Blue Whales is after explaining the nuances in their childrens respective behavior while foraging for food. Here is a hard reality for many engineers: Even if you are the best software developer at your entire company, getting others (employees, external customers, internal customers) to actually use what you wrote is a different beast than writing a tool.Here is another hard reality: Many tasks rely on others to un-block us. There are of course times when the blocker is stubborn enough that solid communication doesnt help, but solid communication never hurts. Its not uncommon for a developer to feel like a priority queue that relies on other priority queues which are poorly optimized, and plagued with race-conditions. Below are some points Id like to make on the subject of communication:Being direct is not mutually exclusive with being polite. I often find overtly rude people fall on the Im just direct and straightforward! excuse as though it actually is an excuse for their rudeness. Consider different ways to say the same thing. This SR, and many others, while not inherently controversial (rudeness is often derived from controversial topics), is plagued with what Id call direct rudeness. Most of us who have posted here at one point or another have been faced with someone who disagreed but failed to do so in a way that made us feel any productive discussion was possible. Consider the following two versions of the same sentence (email threads Ive actually witnessed, redacted of course):&gt;Hello _____, you are writing a tool that duplicates work done in a tool Ive already written. You need to do a better job of communicating what youre working on so we arent constantly creating duplicate work and wasting time.However, consider had it been structured slightly differently:&gt;Hello _____, I noticed youre contributing to a tool which I found here(assume a link to source). Id like to learn more about your specific needs and perhaps discuss whether $TOOL_I_ALREADY_WROTE would fit them, and if not perhaps we could discuss continuing your thread of work towards enhancing the existing tool-set by adding any features you find its lacking, as there is certainly some overlap. Itd be great if we could avoid duplicate efforts and enhance a tool thats already in use by the organization. Let me know your thoughts.Both sentences communicate the same message, but the former puts the recipient on the defensive and immediately raises a few barriers in their mind. Upon receiving it they will be texting  chatting most of their close-colleagues about what a jerk you were. You turned your potential meeting on the topic into a street brawl instead of a discussion. Sometimes it can work out, but why cause additional stress? Id argue that the second version of the sentence still gets the point across but puts the recipient and relative ease and opens a dialogue. To expand upon it a bit more in the second version we acknowledge that the recipient is writing a tool, and raise the concern on the overlapping functionality of that tool with an existing one. The purpose of the email is clearly stated as a goal; avoiding overlap. Its not an accusation but a goal and the use of we puts a collective goal in the recipients mind. Closing with Let me know your thoughts. opens a dialogue whereas the over-directness of the first version never actually indicates any interest in a dialogue or common goal.Everyone is busy, even when they arent. We all need things from colleagues, and some colleagues are naturally more busy than others, and some seem like theyre never actually working on anything. Its not our job as developers  individual contributors to judge anothers workload (and if it is you should evaluate your companys situation). Many things are cyclical and you may be faced with situations where you need a thing done by someone you do not particularly enjoy working with. I have found strategies in communicating with such people that have been effective, for the most part. People love when you acknowledge how busy they are even when they arent ever really busy from your perspective. Consider two people asking you for help:&gt;Hey ____, can you please do ____ for me? This is very urgent and blocking $IMPORTANT_THING.Consider that your $IMPORTANT_THING isnt always their $IMPORTANT_THING. Your emergency isnt always theirs. In a company that is unified it certainly should be, and we should all be empathetic and helpful when we can and have the bandwidth, but its not always the hand were dealt. Consider this slight change:&gt;Hey ____, I know youre really busy and Im sorry to bother you! We have an urgent ongoing issue and Id really, really appreciate it if you could take some time to look!Keep in mind these are all suggestions and things that have worked for me, but Ive had much better luck with using the second version over the first. To reiterate: People love to appear busy. Especially at work. I dont know what it is about perpetually being busy, but its a badge of honor in our work culture and to not be busy is to not be relevant. Also keep in mind that you yourself are not a metric by which to judge people. If you put in 80 hours a week at your salaried job, thats your prerogative. Do not hold that expectation of others.Strong opinions are still opinions. This one is very relevant in our field as there are many subjects which are inherently based on opinions which draw a lot of controversy. Spaces vs tabs, programming syntax, which language to use, which tools to use, log formatting, etc.. Sometimes were opinionated about the problems that need to be solved. Do they need to be solved? Whats the reason were solving it?Always be self-aware of when youre prescribing your opinion vs. when youre prescribing factual-based information. Pick your battles. If you like tabs, and the project uses spaces, that is not the battle to pick. Its not even really worth a mention unless you can do it without being a jerk. If you want to prescribe your strong opinions onto others then be prepared to back up why you wish to do so.I recommend being objective, always. Do not make statements that cannot be backed up with other objective statements and explanations.Identify why youre so strongly opinionated. Can you present your opinion in a way which shows it derives some mutual benefit?Sometimes one opinion can be stronger than another opinion but this is usually rooted in facts or history. For example, the spaces vs. tabs talk is inherently based on opinion. If you walk into a project which uses tabs, and you are a spaces person, you do not just reformat the whole project to spaces. This will only make you appear to be an asshole. This is also a case where your opinion is wrong. Not in that one is superior to the other, but the fact that now when I run a diff in SCM across to revisions, you just created a shit-ton of change where there actually was none, making debugging harder and all because you felt your opinion was superior. In closing - I just wanted to possibly help some others in their communication style by providing some examples where I saw what Id consider communication miss  failure, and examples that have personally worked wonders for me. Im open to any additional input  advice  suggestions that could help others, as well, including if you want to indicate anywhere you disagree with the things Ive said and make suggestions I might not have considered.Just always be aware that if you arent communicating at your job, something is wrong. If you arent communicating effectively then you are going to hit unnecessary hurdles in your career; a career that is inherently difficult to navigate given the constant churn on technological advancement  changes. I highly recommend any new engineer to host as many lunch and learns, and project demos as they can (code you wrote, tools you wrote, etc..) to improve these skills early in their career, as it will pay massive dividends in the years to come. As for written communication, if you are communicating something that feels edgy  difficult, then sit on it for a bit and proof-read  reread it. Pretend youre the recipient and how youd respond if you received it from yourself. Consider your relationship with the person youre sending to, and how they respond to and consume various types of communication. Always be learning about your peers and learn how to navigate their personalities in ways that increases your success without inhibiting theirs.&amp;#x200B;Thanks for reading.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_qikbq1","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/qikbq1\/im_a_lead_software_engineer_with_10_yoe_i_just\/","DATE":1635465600000,"PLAIN_TEXT":"Im currently a lead engineer at a F500 company. Been at my current job for 4 of those 10 years. Ive worked at small startups to enterprise software companys. Id definitely consider myself senior.I just got to the 4th round of interviews for a new company, first was recruiter screen, then manager phone screen, then online coding assessment and finally this in person coding assessment. I nailed the first 2 interviews as well as the take home coding assessment. Then came the live-coding session. I was asked to solve a problem with an n-sized tic tac toe board determine whether Xs won, Os won, nobody can win, or if we dont have enough data to determine if X or O has won. At the start I asked some clarifying questions then if I could use my IDE. They said I had to use this browser version of essentially sublime text (no code completion, no auto formatting, etc). I just froze, I was sitting starting at my two for loops and shitty code after about 30 minutes and realized I had no idea what I was doing in the moment. I was talking through my thought process the whole time and the interviewers were just silent, it was awkward. As soon as the interview ended and I thought more on the problem I realized like 3 solutions.Ive never bombed an interview this bad but I guess after 10 years I was due to bomb an interview eventually. Really sucks and I know that interview wasnt representative of my skills, but it happens.So, dont be upset if you freeze during interviews, it happens to everyone. &lt;end rant&gt;Update: I just got a job offer from FAANG, so it all worked out in the end!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_od4wu5","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/od4wu5\/stop_asking_if_a_cs_degree_is_worth_it_if_you_are\/","DATE":1625270400000,"PLAIN_TEXT":"Ive noticed a lot of these posts over the last year and the theme seems to be fairly common...Im 16, 20, whatever + I dont want to go to college + I just want to start working + How do I get a job as a developer?Well, to be brutally honest, you probably wont. Yes, you can self teach yourself everything you need to know over 2-4 years, maybe 1 if you really cram, and you can build up a portfolio. So then what is your plan to get a developer job? Youre going to nail the technical assessments? Ok, cool. How are you going to get the interviews? Your resume, assuming you put a lot of effort into making it look good, will always look like shit compared to even people who went to a boot camp let alone got a CS degree and are competing for that entry level job as well.Look, its no secret that college is overpriced, its expensive, you wont learn specific job skills like React there, etc. etc. I get that plenty of people get into the industry without a CS degree. Im one of them. However, I also was able to get dev experience at my old job and get a couple interviews because of having 1.5 YOE of dev experience to get my current job. My old job I only got because I have a bachelor and masters degree in a field that old job was interested in. Oh yeah, I sent out 200 applications and got 2 interviews. 1 offer. The interview that resulted in an offer came from a referral I got by dumb luck.The thing is that theoretically you could teach yourself everything you need to know in far less than 4 years and for damn near free with all the resources out there. If you have never gone to college yet though, youre about to graduate HS, etc. though it just amazes me at the stupidity of the idea of not wanting to go to college and just take the easy way out. Youre not taking the easy way out by eschewing college and a CS degree. Youre taking the hard way out because youre going to be one of those baby turtles hatching on the beach and trying to make it to the water. A few will make it...most will get eaten.If you want to roll the dice with your life and career, sure go for it, I guess you can always go to college after you most likely fail to get an entry level job self teaching yourself. The only cost to you is time which of course youll never get back. I personally dont understand why you would intentionally try to sabotage your life though. As an aside, if youre older and thinking of breaking into the field at the age of 25, 30, 35, etc. dont worry about this comment. Im 37 and just broke in a couple years ago myself. I do feel like I need to catch up in terms of career but its fine. Time is indeed a very real cost though and should be considered when making important life decisions.And to be clear, this is specifically directed at people who are of traditional college age, or about to be, who have no debt, kids, etc. getting in the way of them going to college. I just wanted to point out, as someone who is self taught themselves, that going the self-taught route is brutal as fuck and I wouldnt wish it on anyone.Edited to add: Some people seem to misunderstand the intent of this post. Not sure if I could have worded it better or their reading comprehension is terrible. At any rate, Im not saying youre nothing or somehow less for not going to college. Im saying that HR  recruiters will most likely filter out your resume for stronger resumes because the vast majority of your competition will have degrees and you wont. It has nothing to do with how good you are at development. It has everything to do with how qualified HR  recruiters think you are for the job posting theyre trying to fill. Its common sense but enough people are questioning it that I guess Ill use a very simplistic example. 1 entry level job posting gets 600 applications. Very common thing to happen. Lets say 300 applications have CS degrees, 200 have boot camp certs, 100 are self taught. They want to pick 20 or 30 to interview. Why even look at the self taught? Hell it may be tough for the boot camp certs to get interviews. From the standpoint of trying to find candidates, most likely theyll pull the best looking 20-30 resumes from the CS degree applicants. It just is what it is.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_u23kix","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/u23kix\/a_year_ago_i_graduated_from_a_bootcamp_with_21\/","DATE":1649721600000,"PLAIN_TEXT":"I wanted to make this post as kind of a counterweight to all the stories that get posted here of people attending bootcamps and then quickly making six figure salaries, because I do not think those stories really give an accurate impression to the people here who are considering going to a bootcamp. Theres a concept in statistics called [survivorship bias](https:en.wikipedia.orgwikiSurvivorship_bias) where cases of failure are ignored because theyre less visible than cases of success. The people who went to a bootcamp and didnt make it arent going to come in here and talk about it, and they certainly arent going to show up in the placement statistics that the bootcamps advertise. My cohort of 22 graduated a year ago from a fairly well-known bootcamp. Our program was pretty standard, three months of full-stack work focused on JavaScript and React which cost ~$15k. Out of those 22, 6 (including myself) are in full-time SWE roles, mostly small companies or agencies. No FAANG. 5 more are in other non-developer industry roles (recruiters, designers, support engineers etc). The other 11 are not working in the industry and most of them havent even touched their LinkedIn profile for months. This amounts to a placement rate of 27% which is not great for a program that costs $15k. The official placement rate of my program according to their advertising materials is ~60% (which they reframe as ~90% by excluding people who dont participate in their career services to completion whatever that means).I dont mean to scare people off bootcamps- they worked for me (although I already had a humanities BA). But I do want to warn people who are thinking about a bootcamp as a shortcut to get into the industry without the effort or cost of a BSCS. Is it possible? Yes. Is it easy or guaranteed? No.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_wa4krq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/wa4krq\/alright_engineers_whats_an_industry_secret_from\/","DATE":1658966400000,"PLAIN_TEXT":"Ill start:Previous job - All the top insurance companies are terrified some startup will come in and replace them with 90-100x the efficiencyCurrent job - If a game studio releases a fun game, that was a side effect","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_abbgcv","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/abbgcv\/i_trained_an_ai_to_generate_rcscareerquestions\/","DATE":1546214400000,"PLAIN_TEXT":"Since another thread today was talking about certain trends in post titles, I figured it might be funny to train an AI on it (using [textgenrnn](https:github.comminimaxirtextgenrnn)) and the results are pretty indicative of the subreddit.Some highlights:&gt;How to go from senior devs that feeling like Im the only way to do Our industry? &gt; &gt;Should I leave a CS graduate? &gt; &gt;Got the last mob job due to interviews? &gt; &gt;What is a reputation in an interview? &gt; &gt;Is it worth it to get a CS job? &gt; &gt;Does anybody have any experience with the job search? &gt; &gt;Does anyone else feel like a masters. What do I do? &gt; &gt;Is it worth it to get a job as a developer? &gt; &gt;Im looking at a big company &gt; &gt;What makes a good manager salary bump in college? &gt; &gt;Best place to work in Career Fairs (Americans) &gt; &gt;Is it worth applying to many online coding challenges? &gt; &gt;Is it worth it to get a software job out of college? &gt; &gt;Is it worth taking a job in the field? &gt; &gt;PSA: I got a CS bachelors in CS and lack of job applications. &gt; &gt;Undergrad application process and I believe you enjoy it? &gt; &gt;I am a self-taught developer at big Income. &gt; &gt;Recruiter was just getting internships as a CS major? &gt; &gt;Graduating in December, American Salary &gt; &gt;Too early to be a software engineer? &gt; &gt;How do you deal with a day to day basis? &gt; &gt;Does anyone have any experience in the US? &gt; &gt;Just got a job offer after a company with a hackathon? &gt; &gt;Programmers who dont want to be a software engineer? &gt; &gt;First job out of college, and I have a bad boss... what can I do to get a job in the field? &gt; &gt;Can I apply for Full Time Jobs? &gt; &gt;Just got a raise before starting a new job? &gt; &gt;Whats the best way to land a job in a nightmareMore unused generated titles in this [5k title dump](https:pastebin.comQBQTtqMx). (EDIT: [bonus 5k titles](https:pastebin.comMSWkr8mv)!)Good ones from the dumps:&gt;How should I properly struggle? &gt; &gt;Should I quit my job to have a chance to give up &gt; &gt;Is it normal to not be doing anyone else? &gt; &gt;Does anyone fall in the future. &gt; &gt;Computer science vs ethical path?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_l6evby","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/l6evby\/software_engineer_3_years_of_experience_my_path\/","DATE":1611705600000,"PLAIN_TEXT":"Hey all - just accepted an amazing offer with a great company and I wanted to share my interviewing experience over the course of the last two months! This post is to serve as a recap for me, and a source of information for you all who are in similar spots. And as always...a little bit of a humblebrag. Im happy to answer any questions for anybody who has them. My first job out of school was for 77k, my second job was 140k -&gt; 165k after a promotion, and my third job is over 300k now.Here are my interview stats from this interview run. Each step marks where the process ended for me, either by being denied or by ending the process myself.Offers: 1. Microsoft2. Bay Area Tech Startup 3. Capital OneOn-sites: 1. Amazon (cancelled due to offer)2. Google (cancelled due to offer)3. Spotify (cancelled due to offer)4. Attentive (denied)Tech Phone RoundTake-home Round: 1. Hudson River Trading2. Robinhood3. Oscar Health4. Capsule5. Audible6. Datadog7. LinkedIn8. Peloton Recruiter Phone Screen Round: 1. Roblox2. Blend3. Palantir4. CandidNo Interview After Cold ApplyReferral: 34 companies including UberLyftFBTwitter And of the above, below are the companies I got referrals to versus the companies I got in through a recruiter (they reached out to meI reached out to them)Referrals: Facebook, Microsoft, Linkedin, Twitter, Peloton, SpotifyIn Through Recruiter: Google, Amazon, Palantir, Candid, Capital One, Attentive, Instacart, Audible, DatadogOffer Details:I accepted an offer from one of the companies I got an offer from. My base is 170k, stock is 150k yearly. Key Things Learned:1. No matter who you are, its a numbers game at the end of the day. Dont take things personally, and do as many interviews as you possibly can 2. Network, network, network. I kept a list of former teammates and companies they left for, people Ive met online through various forums who work at big companies, IRL friends who work at big companies, etc etc. And when I went to interview, I hit all of them up and asked for a referral. It was a crucial part of the process3. Time your process well. I interviewed with a bunch of sub-tier companies to get real world practice after I was done with Leetcodemock interviewsother practice. I had my Capital One and Attentive onsites before any important ones, and they were crucial in my later onsites. Case in point, I failed my first onsite (Attentive) but passed my next 3 4. For practicing Leetcode, quality &gt; quantity. I did about 70 Leetcodes spread across graphs, trees, dynamic programming, string puzzles, array puzzles, linked lists, LRU cachebinary searchhash map from arrays type questions, etc. If you cant pick up on the general patterns by then, you should work on your approach and question quality5. Work on your resume. Go on resume review sites and pay for reviews. Post every week in this subreddit. Its important6. Know your language. Practicedocument all syntax things you will need to do all types of questions. Dont let this be the thing that fails you 6. Document all of your Leetcode studyingDS Algo studyingbehavorial answer prep in Google drive or something. Here are my documents:Leetcode: https:filebin.netnm5uujkzm98nnniaLeetcode_Question_Categories_and_Approaches_2020.pdf?t=58w84x0rMy General Interviewing Notes:https:filebin.netriz9aw0wpk7xfv7j2021_All_In_One.pdf?t=fmlz26uhAll My DS NotesAlgo Notes:https:filebin.netev3xloctvaimslq4Algos_and_DS___Other_Notes.pdf?t=hosd02maI highly recommend making stuff like this yourself. It is super helpful in staying organized, keeping stuff fresh and committed to your mind, and it will always be there next time you interview :) Let me know if anybody has career questions, Id love to help out","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_dysvud","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/dysvud\/frustrated_as_a_woman\/","DATE":1574121600000,"PLAIN_TEXT":"I am currently at my first job as a software engineer, right out of college. It is one of those two-year rotational programs. I was given the opportunity to apply to this Fortune 500 company through a recruiter, who then invited me to a Womans Superday they were having. I passed and was given an offer. A few months later, the company asked me and everyone else in my program to fill out a skills and interests survey so that they can match us up with teams. I was put on a team whose technology I had never used nor indicated an interest in. That is fine, and I am learning a lot. However, in a conversation I had with my managers manager a few months into the job, he told me that I was picked for my team because I was a woman and they had not had one on their team before.Finally, yesterday I was at a town hall and there was a question and answer session at the end. At the end, the speaker asked if no women had any questions, because I guess he wanted a question from a woman!I am getting kind of frustrated at the feeling of only being wanted for my gender. I dont feel imposter syndrome - I am getting along great with my team and putting out good work for my experience. I think I am just annoyed with the amount of attention being placed on something I cant change. I wish I was invited to apply based on my developing ability, placed on my team because of my skillset and interests, asked for input because they wanted MY input, not a womans.Does anyone relate to what I am saying or am I just complaining to complain? I dont really know how to deal with this. Thanks for reading.Edit: I am super shocked at the amount of replies and conversations this post has sparked. I have read thorough most of them and a lot were super helpful. Im feeling a lot better about being a woman in technology. Also thanks for the gold :)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_hcojjv","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/hcojjv\/as_a_minoritypoc_i_am_tired_of_seeing_woke\/","DATE":1592611200000,"PLAIN_TEXT":"As a minorityPOC, it does not affect me at all with the words master or slave. To me what helps to solve racism is to show transparency with their processcompany. For example, publish the salary differences of the Same Position of different races. Heck, publish everyones salaries. i am tired of finding out my coworker of a different race gets paid more than me for the same work. Like I can understand like 10% difference but not more than 35%. Anecdotally i have heard this from several POCs but I can never know for sure until the companies provide the info. Or one action is to completely anonymize the resumes and applications. I personally have tested one of the popular studies where latino names gets fewer callbacks than white names and I was so surprised that it worked for myself too. Heck even my university completely anonymize my assignments and exams in order to prevent bias from grading. Why cant we do the same in jobs. Sorry i just wanted to rant. I am just tired of companies getting praised for linguistic changes and not calling them out for not doing actual company changes. I apologize if this is going against the rules but I just wanted to share my thoughts as a POC.EDIT: Wow this blew up. I am so glad that we are having this discussion. Just wanted to add some following points. When i said that I am not bothered by the words Slave or master I do not mean that all POCs dont mind that. This was just a personal rant. I do not want to define what POCs want. And yes removing the slave or master is great and I am not particulary against it to be honest I am pretty indifferent to it. What I am specifically against that people will claim that these linguistic changes WILL LEAD to change. In my opinion, this will stop further changes because the corporations will think that they have done enough because the public opinion is happy about it. That is where I am frustrated on.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_v6etf0","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/v6etf0\/how_long_can_you_realistically_fuck_around_and\/","DATE":1654473600000,"PLAIN_TEXT":"I currently work at a fortune 500 company. I got a job offer at a company much better than the one im at now. I despise my manager, hes a complete asshole. Weve had such high attrition on my team that im literally the only one left from when I started 1.5 years ago. My next job starts in 3 months (asked for some time off between jobs). I would like to bridge that gap while still getting paid. Like literally do nothing, no work, stop attending meetings etc. Maybe go vacation somewhere in Europe. Then when the start date for my next job comes around, if I somehow havent been fired by then ill quit. Does this sound feasible?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_mjlhr0","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/mjlhr0\/this_week_marks_one_year_since_the_day_i_was\/","DATE":1617408000000,"PLAIN_TEXT":"This is mostly a spite post, but I was also at the lowest point of my life 365 days ago, and itd be neat if I could help even one person whos in the same position I was a year ago.My first job out of college paid $71k in LCOL area. Thats the median salary for new SWEs in that city, and I always saw myself as an average person, so I was happy with the median. The company had kind of a bad reputation for giving horrible raises, to the point where new software engineers often made more than ones whod been there for a few years--because offers for new employees kept up with the market, but raises didnt (A salary for a senior SWE was around $78k, only about 10% more than I was making as a new grad). They also had a nasty penchant for laying off senior engineers and replacing them with busloads of recent college grads. But my plan was to just leave before I became a senior. I was a new grad without a lot of experience so I guess I just didnt think it through.I graduated January 2020, worked there for a few months until early April 2020, and got positive feedback literally up until the week before I was fired. No one ever communicated to me that I had done anything to put my employment in danger. When I was fired, my manager brought up that I had left work 7 minutes early a month beforehand, and that I had merged my branch into master on Github instead of doing it through the command line on my literal first day on the job. It might also be worth pointing out that Im a woman and that another person from my team was fired that day, also a woman. I dont know if it was a coincidence or not.In retrospect, I think this was effectively a layoff. I didnt really see it that way at the time. I kept thinking that I must be so bad at my job if I thought I was doing well but then ended up getting fired. I suffer from low self confidence, and this didnt exactly help.I managed to get a new job 2 weeks later, making a bit more money in a similar COL area. I excelled at the new company and was given a 4% raise at my performance review, plus a 3.5% bonus. Meanwhile my friends at the old company were telling me that their performance reviews were pushed back multiple times, and when they finally got their raises, they barely even outpaced their rising health insurance costs.Now that its been about a year, I decided to start job searching and just signed a 6 figure offer. I never pictured myself making 6 figures, much less that Id be making that much a mere 18 months after I graduated college. My confidence is at an all-time high, I feel good about myself as an engineer for possibly the first time in my entire life, and Im excited about what the future holds for me.The absolute cherry on top is that the average salary for a manager at my previous company is around $90k. I dont just make more than the guy who fired me; I make a lot more. Hell, I make more than I likely ever wouldve made at that company, even if Id worked there my whole life.The message I hope anyone struggling takes away from this is that no one manager or company can define your value! Getting fired was the absolute best thing that ever happened to me. I really dont know how much time I wouldve wasted in that horrible, toxic environment before I got it together and left on my own. I cant believe the difference 365 days can make, and Im so, so grateful that I didnt let my old manager destroy my confidence.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_emu8oq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/emu8oq\/my_selftaught_no_degree_journey_to_a_bign_offer\/","DATE":1578614400000,"PLAIN_TEXT":"Where: Silicon ValleyHighest Education: High SchoolCurrent Age: 33Type of work: Mobile (iOS)Salary Progression: Job 1: (Age 27, Data Entry, 33k) Job 1: (Age 28, Manual QA, 40k) Job 1: (Age 29, ManualAutomated QA, 50k) (Age 31, Published a mobile app during Job 1, which helped me land Job 2) Job 2: (Age 31, Junior Software Engineer, 100k) Job 2: (Age 32, Software Engineer, 120k) Big-N: (Age 33, Software Engineer, 256k Total Comp), also received 40k signing, so 296k for first year Story About me: Ive been so fortunate to fix my life in my early thirties. I always wish I could have found success from my early 20s, but I was just a complete fuck up. All I did in high school was play Starcraft, Counter Strike and Diablo 2 all day every day until 2-3 am most nights. I was falling asleep in class most days and I almost got held back a year because my grades were so unsatisfactory. I thought this was the worst of my addiction to computer games, but little did I know, that was actually nothing. When it comes time to start trying to get my education back on track through community college, I found a game called World of Warcraft (lol). As you can tell that I started listing my salary progression at the age of 27. Yeah, I didnt work until then because I was legit one of those people everyone memed about dudes living in moms basement. I became one of those elitist World of Warcraft raiders that was in a world top raiding guild. I would practically be on WOW servers for 12+ hours every day and raiding for 6 out of 7 days. This is all I did coming out of high school at 18 to 27. I managed to get some good grades in some math classes in college (Math was the only subject I was naturally decent at) but everything else was an F or a D. Funnily enough, through WOW, I did meet this one guy that knew how to code and would show me some of his work. I was always very intrigued by some of the addons and bots he created for some of the games we played. When I eventually started to really learn programming, he was definitely one of the guys that would help me out understand some concepts, but he didnt have any real industry experience.When I was around 27, I picked up a data entry job that paid close to minimum wage. The company itself had a tech department as their main product was technology based and they had a website and mobile apps. About 6-7 months in to my data entry job, I had some basic understanding of HTML, CSS, Javascript, mostly from videos and messing around in text editors. It was around this time I emailed one of the managers, managers of the data entry department inquiring about entry level dev jobs. The manager mentioned that at my level, quality assurance might be a decent role to start with, which I agreed with. Once I started the QA job (mostly manual testing) is when I first really started to understand how developers worked. I was fortunate in the fact that most of the developers there were incredibly nice and were more than willing to show me what they were doing. After about 6 months of manual QA work, I started to learn how to leverage Python and the Selenium framework to start building automated tests. I ran in to a lot of road blocks in really refining the tests as most of the developers never really worked with Python in their day to day job and didnt have experience with Selenium, so I would be stuck trying to figure stuff out on my own. This eventually ended up me leaving the automated tests behind.I eventually got some renewed motivation learning coding again, but this time iOS development. I think this was mainly because I had an iPhone and I already had really great relations with the iOS team (If I ever got stuck with concepts, I could poke them for some help). I realized pretty quickly, despite me really grasping iOS development and even having pushed PRs to the production application, that I was not going to be able to officially slide to an iOS role naturally at my current job. I took time at home to start developing an iOS game. I really made sure to make sure that the game was refined and felt complete before publishing. After about 4 months of development and publishing, I started to apply for junior iOS roles. I also picked up Cracking the Coding Interview during this time to try and study.I landed 2 different entry level interviews. One with some referrals from an old co worker and another from a cold application. I was pretty lucky in the fact that neither asked tough coding questions as at this time I could barely solve leetcode easy. We mainly talked about my published iOS app and how I designed it and what were some of the technical challenges I had with it. There was definitely a good bit of iOS specific knowledge testing as well. Eventually chose the job that had a really great opportunity to build a brand new app from the ground up for an already successful company. After about a year in to this job, I really started to get a lot of recruiters reaching out to me on Linkedin. I only really entertained the unicornslarge tech. I was OKAY at best with leetcode mediums (Probably solve them at a 50-60% rate), but I always tried to solve them even if I was not actively interviewing. I knew this skill was the lifeline of getting another job once recruiters started reaching out to me.Eventually, after failing a few other interviews, I was able to pass a Big-N interview and was given the 256k total comp offer. I wouldnt say I was particularly great at leetcode. I think there was definitely luck involved. Some coding interviews I crushed while others I failed miserably. This probably has to do with my comfort level of the types of questions being asked (ie. Array type questions vs graphs). I will say this, I do not think Im a shining light of technical capabilities, but I think I do come off as a person people would love to work with. In general, Im very polite, friendly, and fairly easy to talk to.Key Factors: - Having a mentor. When initially learning, I got stuck on a lot of concepts. I really tried my hardest to figure things out for myself as I generally do not like bothering other people, but sometimes its just necessary to have someone there to just break down a wall for you - Educational content I went through that I will list below - Getting a published project out initially, so that prospective employers has something they can download and talk about with you - Networking. Granted, I did have another junior dev offer from a job that was not from any networking, but the job I did choose was from co-workers I worked with when doing QA - Linkedin. After about a year in to my junior dev role, recruiters from all sorts of large tech companies started reaching out to me. At this rate, I do not think Ill have to cold apply to most of these guys ever again.Content I used to self teach (I recommend this in the order I list them for beginners)Harvard CS50: https:www.youtube.comwatch?v=y62zj9ozPOM&amp;list=PLhQjrBD2T3828ZVcVzEIhsHVgjANGZveu (The only paid content I will list) Udemy Angela Yu (Honestly, any course by this instructor will be great. Her iOS and web courses are amazing. She is very enthusiastic about teaching, not boring to listen to and it is very refreshing): https:www.udemy.comcourseios-13-app-development-bootcamp Stanford CS192 (iOS): https:www.youtube.comwatch?v=71pyOB4TPRE&amp;list=PLPA-ayBrweUzGFmkT_W65z64MoGnKRZMq Youtube channel Brian Voong (Brian creates some of the biggest iOS apps from scratch and shows you): https:www.youtube.comchannelUCuP2vJ6kRutQBfRmdcI92mAplaylists For interview practice:www.leetcode.comThis guy is AMAZING. Helped me grasp a lot of algorithms https:www.youtube.comchannelUCmJz2DV1a3yfgrR7GqRtUUAvideosSean Allen covers some iOS topics you will definitely see in iOS interviews: https:www.youtube.comwatch?v=56ZO6Gg68tw","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_o8zdqu","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/o8zdqu\/these_tech_influencers_are_the_reason_why_you\/","DATE":1624752000000,"PLAIN_TEXT":"Ive been in the tech market as a Data Scientist in Silicon Valley enough to recognize that at this point, tech influencers in Youtube, MOOCs, Kaggle, etc. are now the ones preventing entry level applicants from getting their first technical job in the tech industry. Now bear in mind what I see is in the Data field, but I think I can abstract it out to the software field as a whole.These people give the worst and just purely wrong advice you can imagine in the tech industry and profit off of the naive young applicants who make up majority of the scammers audience. For instance, in the data field, all these experts claim that a lifecycle of a data science project in industry ends with heavy Machine learning solutions. Anyone who has successfully derived meaningful value out of data science in their company knows that this is absolutely the wrong approach to project management and project scoping. But the young inexperienced ones listen to these advices when most of these experts and influencers havent worked in the field in a long time.I dont know if its fair to mention names, but we all know who these people are: Jo. Tech, S. Raval. These influencers run down stream to lesser influential people on mediumtowardsdatscience.cometc. who again have little experience in industry themselves but are pumping out garbage content that sounds deceivingly attractive with hot words like edge computing, deep reinforcement learning, when only a tiny fraction in the industry actually uses these tech. I know, working in an AI automation company myself.So why do they to this? Its painfully clear; they just want to sell courses or make money on medium. They are only interested in their own brand, they have little of your own interest. How can you tell? How can you distinguish legitimate content from illegitimate content? By this simple trick; if theres something they would lose if their words are found inaccurate, you know its illegitimate content.This is what I mean. I mentor BerkeleyStanford students all the time, being an Alma Mater in there. If my advice to them on finding employment turns out to be wrong, I have little if not nothing to lose. Because I have nothing to gain whether or not my advice turns out to be correct. But thats not the case for these influencers. This is what I mean. If their advice turns out to be wrong, it has implications on their revenue, their branding, their ability to sell courses.I suppose why I find this so frustrating is that these snake oil salesmen are giving all the wrong advices for their own ridiculous brands and money making schemes which puts young aspirants and their career prospects to jeopardy. They say theyre being moral and altruistic and actually caring about the people who are having difficult time getting jobs, when theyre just abusing and taking advantage of the naivete. I experienced this personally, when I wrote something very minor on subreddit long ago about basically how business intuition is very important in the data field, and all these commenters lashed out at me in droves, saying ridiculous things like project design in a term I apparently made up since they havent heard of it from the course-peddlers (wat the f?)These influences have real-life effects. I interview data scientistsanalysts all the time for my company, and these applicants basically saydo the same thing that I hear from these influencers, such as applying ML methods to non-ML problems just because its cool, they took courses on it, etc. Its such a turn off and a clear signal that these people have been taught the wrong things in their MOOCs, self-taught journey.My suggestion for young applicants is that rather than listening to these influencers online, reach out to actual Data Scientistsprogrammersetc. who have been in the industry for a long time and ask them directly about the market. Theyre usually happy to dispense advice, which I can guarantee are much more sound and solid.Edit: I actually dont mind Tech Lead as much as others here. I know hes had issues with CSDojo and other youtubers. That part sucks. But his rants about the ridiculousness of the tech industry is pretty spot on. I actually dont mind Jo Techs new videos too, theyre pretty funny. But their courses, yea thats the crap Im talking about. I havent taken Clements courses, dont know, but just be careful about people in general whos more interested in their own brands than you.Andrew Ng, hes interesting I find him both part of the problem and the solution. Hes definitely course-peddling obviously and sells the dream to thousands of young data hopefuls when obvious getting DL certifications from Coursera is NOT going to get them a job. Or be actually used at work unless you have a Phd. But Ngs general wisdom on integrating AI to companies in SaaS or manufacturing is extremely valuable.The ones Im mostly frustrated about are these writers on towards data science or linkedin or youtube who have huge influence as a content-promoter but who has never really worked as a Data Scientist. Some of people are like A. Miller, who never actually worked as a Data Scientist, or those who come from Semi-conductor background but somehow call themselves as a Data Scientist. Ive also seen interns whove never worked full time giving advice on Data Science. That sh%t is ridiculous.&amp;#x200B;","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_jjqw74","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/jjqw74\/be_the_change_you_want_to_see_start_refusing\/","DATE":1603843200000,"PLAIN_TEXT":"Some reasons why: 1. Take-home coding assignments are grossly inaccurate at determining someones actual ability to engineer software. They favor cookie-cutter solutions (less to incriminate) and say nothing in respect to your capabilities in a real-world coding environment.1. Its virtually impossible to distinguish an authentic test from a honeypot, and completing a take-home in no way further guarantees an offer (they steal your time, your labor and your intellectual property).2. Taking these assessments signals to companies that you are willing to do additional work without getting paid (untracked overtime, crunch, support and operations schedules).3. These assessments work to set an industry standard where protracted, throwaway and overly-intensive interviewing processes are seen as okay.Companies love to waste your time, because maintaining an arbitrarily negative hiring rate means that they dont have to invest in their interviews or workplace culture. Instead, they give you what is effectively an IQ test, one that comes with all of the same historical and cultural biases.This is the status quo at its finest.Be the change you want to see: start refusing unpaid take-home coding assignments.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_swdgiq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/swdgiq\/financial_advice_after_a_decade_in_tech\/","DATE":1645228800000,"PLAIN_TEXT":"Ive been thinking of putting together a huge docrepo on the financial advicelessons I wish I knew before entering the tech industry. There is a lot of general information on financial advice, but very little tailored explicitly for tech employees. With so many jobs now paying $100k+ out of college, I thought - What financial info would I have wanted to know when I was jumping into tech?With the correct information and execution, most of you can set yourselves up for a very comfortable life.Ive worked at a wide range of tech companies, running into most of the situations you will most likely encounter in your tech career. In the last decade, my income grew dramatically. When I joined Yelp reasonably early on, I made $30k base + stock options. At Netflix, my salary was over $300k.Heres everywhere Ive worked - Yelp (Pre-IPO)- when there were 50-75 employees. Redbeacon (5 employees - acquired by Home Depot) SimpleGeo (~20 employees - acquired by Airship) Tindie (founded, raised VC, sold) NetflixThings I wish I had known when entering the tech world - Reviewing companies &amp; selecting the right opportunity Salaries, pay raises, and how packages are structured  Startups vs big companies Stock options vs RSUs - how they work, exercising them, the tax implications. Bonuses - what to expect and also the tax implications Health insurance - picking a plan, should you have a health savings account Investing in your retirement (401ks, IRAs, etc) Real estate - renting in these high costs of living areas vs buying Tech investing - becoming an angel investor &amp; VC investing Contract work - how to bill &amp; taxesIs this something youd like to read? What would you like to be covered?I am thinking of building this in public as a repo. That way, if there are topics or things youd like to see, feel free to create an issue. Heres that link.[https:github.comemilepetronefinancial_advice](https:github.comemilepetronefinancial_advice)Hopefully, this will be helpful to everyone looking to jump into tech or are just starting their careers.EDITWow! Thank you all for the comments and thoughts! This has blown up much bigger than I could have imagined. There have been many great ideas in the comments. I will be adding links to other resources, books, and experts. I also plan to interview some of my friends and contacts that are more experiencedprofessionals in the various niches. More to come in the following days, weeks, and guessing months.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ia8lnc","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ia8lnc\/people_who_complain_about_not_finding_jobs_in\/","DATE":1597449600000,"PLAIN_TEXT":"The majority of posts Ive seen where people complain about jobs have the same kind of structure.Im a new grad  boot camp grad and I have little-no experience with no projects and I cant find a job. Ive been grinding leet code for weeks  months and can do Hards but its not helping. Ive only been applying to Fortune 500 companies and FAANG in the WestEast coast and now Im burnt outI graduated with a non CS degree, okay GPA, and a year worth of non-CS job experience. I applied for ~30 companies, got 2 interviews, and 1 offer. I didnt get lucky I just applied to small companies in the Midwest. I didnt even look at FAANG. I dont have a stellar paycheck of $80k starting but Im happy enough starting at $58k knowing I can find a new job with a years worth of experience that pays better. Also, a low paying job is better than no job. I have not once looked at any leetcode type website. My technicals were easy enough to problem solve through in those two interviews. I had 2 java based projects on my resume. Leetcode DOES NOT MATTER PRE-INTERVIEW. Even during the interview if you can reverse a linked list but botch your STAR interview questions youll flop. Projects to put on your resume that you can talk about are much more important. Id venture to say the majority of SWE positions do not even do leetcode style programming day-to-day.Stop grinding leet code. Stop only looking in densely populated areas. Stop only applying to large companies. Stop thinking youre gonna start your CS career at $100k a year. Your career is a marathon and not a sprint. The company I got an offer from said they had 3 spots open for months, and I was the first eligible candidate to apply. The 2 other spots just got filled last week (so, ~6 months from job posting)Edit: I guess people are still reading this post for the first time so Ill address some common comments:1) I said I had technicals for my interviews. This means leet code style problem and explaining space and time complexity. I didnt need leet code to prepare for this. 2)Ill reiterate leet code is not important PRE-INTERVIEW. If you manage an interview with a company then its a great tool to brush up on your problem solving skill. Most posters Ive seen on this subreddit do not manage to make the interview stage, making leetcode obsolete.3)You can have dreams to work at a big company, and you should definitely work towards it. But if you dont have the experiencegpa then stop burning yourself out with rejections from huge companies that can be picky with candidates. A smaller company that pays less can be a great stepping stone.4) If you have been applying to bottom of the bucket jobs and still not having luck, I apologize for the post, this isnt directed to you. Tune your resume and work on projects instead of leet coding if you cant land interviews. 5) I never said you had to move to the Midwest. There are small low paying tech jobs all over the states. These arent as good when in a HCOL area, but again, these are a stepping stone.6) I went on indeed and looked up computer science in {Specific state in Midwest}, United States and sent an application to anything asking for &lt; 5 YOE. I tailored my resume to focus on my skill with Java, which landed me a back end java job.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_zg5wtb","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/zg5wtb\/ive_hired_people_who_failed_coding_questions_let\/","DATE":1670457600000,"PLAIN_TEXT":"I hate coding questions, and give exactly one question to people - but theres many, many reasons why I do so.It is in a screen-shared environment, where I tell the person they can ask me absolutely anything, and we talk through the problem and work out a solution collaboratively. Half an hour tops, no take-homes, and its the second half of a two-step interview process (once for HR to make sure youre sapient, once with me for what Im looking for).I give them a reasonably hard problem - I have a d20 I spin to pick the question, and all are roughly the same difficulty. I tell them, it is a collaborative test - lets plan it together, and Ill let you write it. Ask as many questions as you can think of - there is no such thing as too much, and describe your thought processes and plans as you look through the prompt.What happens next, usually, is reading the question, thinking of some ideas, and then asking some clarifying questions before beginning to plan out a solution of some type.Things Im looking for:#1: The ability to recognize a problem as a specific class or subtype of problem. This is for experienced roles mostly, but I pick leetcode questions that have sub-problems that tend to pop up when doing ETL (ExtractTransformLoad) operations, so recognizing how hard something is (If its a search-like of O(log(n)), or a sort-like of O(nlog(n)), what have you) and what kinds of solutions work in that context is great!#2: The ability to clearly and concisely explain your understanding of a problem and the structure of possible solutions in a way thats understandable both to a fellow professional, and bonus points if you can simplify it to laymans terms. Communication and comprehension is unbelievably important in this field, and if you cant explain yourself, and cant understand project specifications, then it doesnt matter how talented you are at implementation - itll be a struggle to point you in the right direction!#3: Asking questions! Especially with how bad documentation has been at some places Ive been - this is what has caused the highest attrition rate of developers Ive worked with: silently struggling, and silently failing. Everyone wants to be an island of productivity, but it is very hard as a newbie! An experienced developer can sometimes, in one minute, save a newer person an hour, just by knowing the exact right thing to do or look at. Experienced devs, in any shop worth its salt, are perfectly aware of the expectation of mentorship and advisory - and that plays into #2 very closely, as its hard to be an advisor if you cant explain things!And yes, Ive had interviewees ask, Whats the answer?, to which I excitedly would say the name of the algorithm (Edit Distance? Levenshtein!, Id say), only to, for some reason, get modest disappointment in return. If they were especially determined, theyd ask what a good implementation of it would be, and Id describe in general terms how small parts of it would work, watching for when theyre able to complete the puzzle themselves.Ive also had interviewees ask, Can I google some stuff?, to which I always answer, yes, of course - youll always have google at work!. If theyre really struggling and were about 10 minutes in, Ill mention that its open-internet, and see how they research and learn independently. Because yes, while asking questions is important,#4: Ability to research and learn independently is also very important.If they destroy my problem without much effort, Ill half-heartedly ask an implementation question about what is, but shouldnt be, a relatively obscure API (the FHIR CMS Meaningful Use API standard) and ask them to do some quick (&lt;5 min) research to check for comprehension - the ability to learn is the ability to stay relevant in a developers world, ultimately. And if they can, without existing knowledge, learn of a solution, comprehend it and implement it, that leads to#5: The ability to plan a solution, and then execute on itUltimately, it does come down to your ability to understand a problem and come up with a solution. If your theory is sound, but you get stuck on the implementation, but its just stupid syntax bullshit or easy-to-miss variable name mismatching, Ill grade you more highly than someone who copy-pastes the solution and cant explain it. If I didnt value peoples time, Id absolutely do a follow-up question that involved using the exact same solution in a different way, but what I test for seems pretty thorough as it is.#6: Mood. When a problem seems hopeless, do you give up, or are you determined? Does a problem excite you? When youre stuck, do you reach out for help, or shut down? If I suggest that there might be a problem on a certain line (with almost that exact wording), do you look at it, fix it and go oh sweet thanks, or do you get defensivecombative about it? Do you have an ego, or are you able to be wrong and thrilled to learn from your mistakes?&amp;#x200B;Ive been doing this for a couple years - and Im sure others have way more experience than me, so feel free to ask me anything, or disagree with anything so I can learn! :D","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_wktw58","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/wktw58\/is_there_a_sub_like_this_but_more_laid_back\/","DATE":1660089600000,"PLAIN_TEXT":"I dont want to leetcode endlessly, nor do I want to return home from work and then learn new tech stack just to job hop every 6 months + hunt even more money just to retire a year earlier per raise in the long run. I also dont want to have to spend much of my time with socially unskilled weirdos. All I want is a stress - free software job where I can get by with just doing the absolute bare minimum + have a moderate salary.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_buezmv","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/buezmv\/5_pieces_of_advice_i_wish_i_had_known_before\/","DATE":1559088000000,"PLAIN_TEXT":"A very hypocritical short list by a new grad who is probably talking out of her ass.1. People dont know shit. Everyones situation is different, and if someone tells you to always follow some rule, or you have to do x y z, theyre idiots.2. Have a life outside of CS. Seriously. Have hobbies (gaming! hiking! underwater basket weaving!), have friends (even - gasp - your coworkers can be your friends! If theyre competitive then yeah dump them but yeesh). Have things that bring you joy, and preferably spend some time away from screens.3. Take care of yourself. Mental health is so important especially since burnout seems to be more and more common. I worked myself into the ground during grad school and it is 10x harder to get out of a hole youve dug for yourself than it was to get there, at least in my experience. 4. Listen to audiobooks when you want to! Ive found its great for forcing me to go outside if I only allow myself to listen to a good book if Im going for a walk, run, etc. But like, you dont need to be constantly learning or improving yourself (unless you want to, and have the energy!), thats a recipe for burnout. No need to do a thousand leetcode problems a day. 5. Be good to one another. Tech can be really toxic and competitive. Build people up, dont tear them down. Isnt that why were all here on this sub? To help one another with our careers?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_j7gimm","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/j7gimm\/unpopular_opinion_actual_machine_learning_work_is\/","DATE":1602115200000,"PLAIN_TEXT":"The results of ML algorithms and software are really cool. But the actual work itself is nowhere near exciting as I thought it would be. Ive completely shifted my focus from MLAI to Data Infrastructure and although the latter is less flashy, the work is also much more fun. From my experience, a lot of ML work was about 75% Data Curation, about 5% building pipelines and designing systems, and about 20% tuning parameters to get better results. Imagine someone gave you a massive 10 GB excel sheet, and your job is to use the data to predict sales; the vast majority of your work is going to be trimming the data and documenting it, not actually building the model. Obviously this is only based on my opinion (you might have a much different experience). But as someone who has worked in multiple subfields including ML, infrastructure, embedded, I can very honestly say ML was my least favorite, while infrastructure was the most fun. The whole point of data infrastructure is to build systems, classes, and pipelines to maximize efficiency... so youre actually engineering things the whole day at work. But if you want a cool job to brag about at parties, then I work on artificial intelligence is basically unbeatable.Edit : Clearly this is a popular opinion","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_bgxgu6","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/bgxgu6\/im_22_i_havent_applied_to_more_than_20_companies\/","DATE":1556064000000,"PLAIN_TEXT":"I read a lot about people applying to 300 jobs and getting like 2 callbacks, but I had a very different experience. I wanted to share some of my tips that Ive learned.1. I never applied a ton, I had connections. In college I joined a professional fraternity and 4 out of the 6 jobs I got were through people I knew who worked there. You get your resume handed right to the manager instead of through HR. I recommend making friends with people in your class, or finding somebody else with a strong network and free-loading off of theirs (and buy them lunch or something). Furthermore, people you know there can give you invaluable advice on what is going to be on the interviewwhat the hiring manager is like, etc.2. I made friends with the CS gods who were role models in my class. Then, I just ask them for their resume, for them to look at mine, for their advice, their compensation and negotiation tactics, etc. Its not like the med field where other people want the competition to fail, I rarely meet any SWE who DOESNT want to help others get a job.3. Even when I cold apply, NEVER apply on the website, theres too many people that do that. Instead, I find a recruiter on Linkedin, I find their WORK EMAIL with this extension (https:connect.clearbit.com), and I email them DIRECTLY with my resume, my interest, and a blurb showing that Ive researched the company.4. (only applies to US citizens) This sounds shitty, but if you have an asian sounding name and you ARE a citizen, put that youre a citizen on there. Some recruiters will toss resumes JUST because theyre asian and the company cant sponsor, even if you are a citizen. I literally put US Citizen next to my phone number, linkedin, and github.5. Interviewing is honestly all about confidence. You have to be a salesman. You cant just be good at coding and suck at talking, or vice versa. I dont really study that much the day before an interview (thats for the weeks before), I just go on walks, run, do jumping jacks, get my blood flowing so that I feel the most alive I can be before stepping in to the room.6. credit to uChewbahka72, but if you dont have experience just apply to smaller companies, instead of FBAppleGoogleMSFT. Theres a reason those companies pay so well, its cause everybody has tons of experience, its ok to start at smaller companies where you can get good tech experience without the cool free food benefits and the company jerking you off while you work.Let me know if you want me to take a look at your resume or anything!EDIT: RESUME TIPS:I got some PMs about resumes, Ill take a look at them but here are my tips for resumes:1. Dont use Arial, Calibri, Times New Roman. I know this might be an unpopular opinion, but if you want to get a job (esp. in Silicon Valley), make it unique. DO put some interest in design. Im not saying make the whole thing in LaTeX or get Elon Musk to lick it before applying, but try some different fonts and dear God learn to right justify text on the same line. (https:fonts.google.com) (https:fontawesome.com?from=io - for LinkedIn, github, email, phone# icons). I use Open Sans and Raleway2. Use PROBLEM, SOLUTION, IMPACT. Indicate the PROBLEM youre trying to solve, then indicate how you SOLVED it (what language, framework, architecture, system, design), and then talk about IMPACT (financial - saved $42069k, operational - less people needed to do this task now, time - saved 20% time on this operation). Heres an example: Built a batch utility using Java, SQL, Hibernate to automate self-checking of the businesss pricing processing system (SOLUTION), allowing the business to catch failed charges due to temporarily failed downstream services (PROBLEM mixed with a little bit of SOLUTION), which in one instance saved the company $2000 in revenue leak3. Split up your skills into LANGUAGES and FRAMEWORKSTECHNOLOGIES. Languages: Java, SQL, Python. FrameworksTechnologies: React, Redux, git, AWS, Docker4. Bold text that is important, make text lighter or smaller for text that is not important. IMPORTANT: Company names, Job title, headers. NOT AS IMPORTANT: employment durations, project times, company locations5. Just find a good-looking CS resume online or from a friend and copy the formatting. MS Word is honestly enough for the vast majority of cases.EDIT 2: Here is my anonymized resume:https:i.imgur.comVpPK5G3.pngNot all my experience is on there, I put what I thought were the most valuable ones. I want to highlight that my resume doesnt have the biggest names on there in terms of company names, but I do think it is a strong one due to formatting, design, and wording.EDIT 3: I had 4 internships in school (1 per summer, 1 in part time) and 2 full-time positions already, sorry for the confusion","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_qp0fdt","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/qp0fdt\/observation_a_lot_of_popular_advice_on_this_sub\/","DATE":1636243200000,"PLAIN_TEXT":"As someone who have done 10+ years of IC work and is now in management, through tiny startups and unicorns and multiple FAANG companies, I have to say its really concerning how absolutely awful some of the highly upvoted advicesuggestions here can be.Ive noticed the trend for when someone asks a question for how they should proceed to handle a toughless-than-ideal situation they are in, very often the most cynical, hostile or sometimes downright malicious answers are also the most upvoted. I understand the appeal of justice boner against bad bosses or coworkers and how cathartic it can be to dick slap everyone in the room and then set the room on fire when you are frustrated, but very often the feel good thing to do is not the right thing to do.I agree there are a lot of assholes in the industry, and there are a ton of shitty companies out there with toxic work culture. Ive had my own shares of WTFs throughout my career. But thats just life, and I try not to let the assholes I meet in life to turn myself into an asshole as well. I also definitely do not assume the next person I meet will be an asshole just because the last person I met was one. My personal experience tells me most people are not sociopaths and they will treat you similarly in how you treat them. And if youve had a career where everyone was being unhelpful, cynical or even hostile toward you, then maybe do some introspection and figure out if youve caused some of that. Considering most of this sub are people who are in school or just started their career, its really concerning how the sub paints the whole software engineering industry as a dog-eat-dog, everyone dislikes everyone, employees vs. employers death match zero sum game. The reality is there are a ton of people who can use your help and would in-turn help you as well if you just give them benefit of the doubt. Im a little bit emotional on this issue because personally Ive fucked up a ton throughout my career, but I often had people who went out of their way to help me, give me feedback and benefit of the doubt and helped me improve and get over and learn from my screw ups. Thats why I strive to do the same for others these days. If everyone treated me the same way people advice others on this sub, I would be in a pretty bad place right now.Obviously very often things wont go your way, and the best attempts can go to waste. But you should still try to affect things for the better. Edit: One final point, people can change. Case in point: When I joined a &lt;10 ppl Y-Combinator startup, I was 25 years old and I was the oldest person in the company. The CEOCTO were great and smart guys, but had the management experience and emotional maturity as youd expect from most early-20 somethings. We made a ton of mistakes in product, business, and engineering alike, and at one point I was fired from the company because I introduced a bad bug in the code base.But guess what, instead of writing them off as toxic dumb managers we kept in touch and remained friends since and we were able to view in retrospective at some of the dumb decisions we all made. They both ended up growing a ton personally and professionally and did very well in their subsequent companies and I even raised money from one of them for a successful startup, and Ill be doing the same again for my next one.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_5ncqti","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/5ncqti\/no_palantir_your_internships_are_not_worth_5\/","DATE":1484092800000,"PLAIN_TEXT":"I recently decided to quit the recruiting process with Palantir after having first reached out in July of 2016 and having my first interview in October. Last summer I was really excited about the prospect of working at Palantir--cool tech, smart people, sick perks. After 2 phone screens, 3 onsites in NY, a hiring manager interviews and dozens of emails back and forth with recruiters I got a call offering me the opportunity to do even more onsites for the Forward Deployed Engineering role.During this time I also found two separate internships, one at a breakout list company and another at Google. I took both offers (I had two off terms from school essentially) and am currently working at the breakout list company. Yet, here I am in January talking to Palantir still and being asked to do more interviews. Finally I said enough, no tech internship could possibly be worth what would be 8 interviews or more if I kept going.This made me seriously consider though, how does Palantir get good talent if they have such a horrible recruiting process?Im asking this question because I thought maybe I was an outlier, but heard of several people with similar experiences. My perception of Palantir has been drastically reduced through this process. I told my recruiters via email about already finding internship, being stuck in the recruiting pipeline for nearly five months, and how I was not willing nor had the time to interview as Im working now. She just recanted the same things as before about wanting to find a good fit for me, how that takes time, and asked me to do more interviews.Not only is the recruiting process awful, but I think a company would have to be seriously delusional about its status to think that 5 months and 6 interviews later Ill take a day off of work from my current internship to take the CalTrain down to Palo Alto and do some brain teasers on a whiteboard so that maybe I can get another hiring manager interview for a role as a glorified customer support engineer that I didnt actually want in the first place.How in the world does Palantir stay competitive thinking like this? Is there still any hype for Palantir from top engineering talent? I wholeheartedly regret even starting this process of applying to Palantir as its been a huge time and energy investment and I have absolutely no closure--I didnt get rejected, I didnt get an offer, I just walked away. If youve had a similar experience with Palantir Id love to hear about it and what you did. Im also interested in what anyone who has had a positive experience being recruited or working at Palantir has to say. ","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_yl9o0f","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/yl9o0f\/twitter_to_layoff_50_of_staff_starting_today\/","DATE":1667433600000,"PLAIN_TEXT":"Edit Layoff confirmed by Twitter: https:www.theverge.com202211323439802elon-musks-twitter-layoffs-start-friday-november-4Edit Lawsuit filed: https:www.reddit.comrcscareerquestionscommentsylyyustwitter_sued_for_mass_layoffsThis bloomberg, but i removed the paywall. Apparently the knuckleheads made a slack and forgot to make it private. They want to fire half the staff before the quarterly RSUs (Which are now bonuses) vest. Id expect a class action lawsuit over this. Likely they will have to pay for part of the bonuses in some settlement, but that will take years. https:archive.phx4svemultiple news services are reporting the leak from slack.https:twitter.comalexeheathstatus1587959746576850945you can find others. Musk saddled Twitter with $13 billion debt when took the company private. This is called a leveraged buyout. So now twitter has to make money while also servicing these massive debts. Leveraged buyouts always lead to massive job losses, benefit cuts, pay cuts, and then higher prices. Since they need others to pay off their debts. If you ever work somewhere and there is discussion of taking the company private or spinning off your division (they buyout themselves and saddle themselves with debt), start looking for a new job immediately.this kind of thing happened before. When I was in school I read a business case about Safeway. They were profitable, but some investors saw an opportunity to break the union. They took out loans to buy out safeway to make it private. then sat down with the unions. they showed them the books. Now that the company is heavily in debt, we cannot service the debts if you do not accept massive pay and benefit cuts. if we dont pay the debts, the banks come in and shut the company down and sell it off for scraps.so its pay cuts or you are all fired. safeway today pays far less than it used to long time back.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_9i0pow","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/9i0pow\/graduated_with_a_24_gpa_1_year_ago_after_studying\/","DATE":1537574400000,"PLAIN_TEXT":"Note: Its been brought to my attention that this post has been mentioned in a [Joma Tech video](https:www.youtube.comwatch?v=YGflHj1SjA4) on Youtube and it appears that Joma has gotten my post mixed up with the [2.9 GPA post](https:old.reddit.comrcscareerquestionscomments6278bimy_journey_and_tips_29_gpa_at_a_noname_liberal) by uelliotbot. Just wanted to clarify that we arent the same person and the person being interviewed in the video is uelliotbot and not me :)When I graduated a year ago, I failed all my interviews with the Big X even after grinding through about 200 leetcode questions. So I decided to try something different with my new wave of studying a couple of months later while I was working as a software engineer at one of the companies I did get an offer from (enterprise software company). I started out by doing some research on how to effectively learn, and found a relatively well known and free online course called [Learning How to Learn](https:www.coursera.orglearnlearning-how-to-learn). The course is rather short and only took me about 8 hours to go through, but what I learned from it was a huge help.After completing the course, I decided to use this free promo code for interviewcake that I got from a hackathon and went through about half of the problems on that website (did about 20 problems). Most of them problems were ones Ive already seen on leetcode, so it was more of a warm up  review. One thing new thing I did was to write down each problem I did in a google sheets document along with the date I solved the problem (linked in the bottom). I would then review the problems I did for the past week to make sure I didnt forget how to do them. This was a tip I picked up from the online course -- the power of recalling + spaced repetition.Next, I grabbed a copy of Elements of Programming Interviews in Python (if youre going to buy it, make sure to check [their website](http:elementsofprogramminginterviews.com) to see how to get the latest version and also use their free command line judging tool to check your answers). I also learned python specifically for interviewing because of how concise the language is, meaning you could write your code much faster, which I think played a notable role in my interviews. I started going through EPIs study guide mentioned in one of their intro chapters that had a list of recommended problems. I decided to go with EPI because Ive already gone through 200 leetcode questions, but I wanted to read the more in depth explanations that EPI had and learn how the book explains the solutions to problems so that I could pull off something similar when explaining  solving problems in interviews. I ended up solving about 23s of the problems that were in the study guide.By this point, I felt ready to start interviewing. At least for the little guys. So I started mass applying to companies that I was only mildly interested in, saving my top choices like the Big X for last, as I would be more prepared for those interviews after prepping more with both the practice problems and with actual interviews with the companies I am less interested in.I got a massive number of rejections (see the second to last paragraph for stats). But every once in a while, I did get an interview too and I made sure to utilize them. I should mention that with one year of experience, I was applying to mostly entry level positions, but if a company didnt list any entry level ones, I applied to more senior positions, whether or not I qualified for them. I did get a few interviews for those senior positions btw. I had about 2 or 3 interviews a week for a couple of weeks from this.After doing about a dozen interviews, I started feeling more confident and was ready to start applying to my top choices. This is where I started using leetcode again. I got the leetcode premium subscription for a month to practice tagged questions for specific companies I was interviewing for.Finally, it was time for the Big X interviews. I took two weeks off from work and scheduled all of my Big X interviews to take place in these two weeks. There were several leetcode questions of varying difficulties that were presented, some I recall from EPI as well, but also a good number of questions that Ive never heard of. Nevertheless, after being exposed to so many problems and working through them, youll start to get a feel of how to approach most problems. I definitely didnt ace every single interview. There were several interviews where there was plenty of room to improve my solutions, even some that I didnt finish coding up the solution for. But I made sure to explain every detail of my thought process. Try to keep talking. Vocalize everything you are writing on the whiteboard. Draw examples. Im sure youve seen a lot of these tips, but ultimately, the most important factor was just to practice enough to the point where you can tackle almost any problem thrown at you. Do a lot of different type of problems. Review them, and thoroughly understand them.[Here are all the problems I worked on for this wave of studying](https:docs.google.comspreadsheetsd1ciClTiWWmrDL6sFnNWJj0dga2BC3x0l44tkvaAfkQo4edit?usp=sharing), which I reviewed via recalling, religiously. Problems prefixed like 14.4 &lt;problem name&gt; are from EPI chapter 14 problem 4 (mapping depends on book version). Problems prefixed like 128. &lt;problem name&gt; are from leetcode. The others are from various sources, such as interview cake. In the end, I received 5 offers (3 from the Big X), and about 100 rejections (individual companies, if it was just applications then more like 300 rejections), including the companies I never heard back from. I did a total 11 onsites and 23 technical phone screens where I had to code. I also tracked every minute I spent studying and for this study wave, I spent 130 hours. For the previous wave about a year ago where I was primarily grinding leetcode, I spent 275 hours. Feel free to ask me any questions you have and I will try to get back to everyone, at least eventually. Hope this helps!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_rwvtuq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/rwvtuq\/i_am_so_tired_of_all_the_bs_at_aws\/","DATE":1641340800000,"PLAIN_TEXT":"2 year old team, yet already all the seniors all decided to leave the team on their year 1. Heavily short stuffed yet management keeps pushing for delivery.Having been working non stop since December, oncall, log4j, oncall, log4j, literally took 0 day off except christmas and NYE, got $0 end of year bouns.3 managers, in total took 8 weeks day off in December for their familyvocationerrands.I am oncall again this week, trying my best to help with tickets, yet these 2 person really just pumped my blood pressure to the sky.Person A: pinged me on slack in early morning asking for help debugging, I didnt reply. Went straightly sending me an email and CCed a bunch of managers asking why I didnt help. Turned out they misspelled the name of the package they were git pushing to and my team doesnt even own it.Person B: pinging me multiple times a day asking for update on a ticket, been told I was working on multiple tickets, started questioning me is there anything more important than mine?. Told them I could not give estimite finish time because it is a huge ticket and needs days of work and I am the only one working on this, then straight went into the ticket and comment my name is not cooperative and all the teammates on their team circle jerking themselves on the ticket.I fking hate this company(edit: I am lucky to have good teammates, they are all burnt out just like me, management know little about development, they only care about operation. Other teams in the org use us like their go-to wikiQ&amp;Asomething similar when they encounter slight discomfort.thanks for all the comments suggesting me to stop victimizing and stand up for myself. I really havent found a good way to do it as the whole org is pretty pushy on engineers and im on visa, not so easy to jump ship as u[cookies50796](https:www.reddit.comusercookies50796) guessedbut I did tell the other team to either give me a hand solving the ticket or shut up and wait in a polite way lol)(update: manager finished his vacation and came back today, did a 1 hour daily standup following by 2 other sync up meetings, its 1pm and I have not had breakfast yet. Constantly asking me about progress on my own project during Chirstmas holiday while saying nothing about the oncall ticket, even asked me whos oncall for the week. Ignored my complain about that 2 person on slack, asked me to send him sync up meeting tomorrow knowing I am having vaccine appointment tomorrow. Nobody is gonna stop me from getting the F out from this hell at this moment.)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_m3geg8","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/m3geg8\/kinda_sadistic_but_i_am_enjoying_it\/","DATE":1615507200000,"PLAIN_TEXT":"I am at this very moment living the days that so many of us only dream of. The joy of seeing people (who took your efforts, skills and work ethic for granted) genuinely struggle and suffer.The story:I having been working at my current company for 3 years now. I learnt everything about my process in my early days because I wanted to, and not because someone told me to.My early efforts made me very good at my job. This led to the manager to believe that my job is very easy.Cut to covid times, and all the core members except me had left the company. The manager hired all new peeps, and even a new TL. It was kinda insulting that they hired someone from outside to be my TL even though I had more experience in this process.During the lockdown, after giving all the new members initial training, I asked everyone to keep going through the code, this will raise many queries and to please bring those queries to my attention. During the 9-10 months I didnt receive even 1 query from any of them. They all had been basically enjoying their honeymoon. Being paid for doing nothing.Still, I didnt mind, coz I was more in contact with my client than my manager. And I enjoyed the work. Problem began when the new TL started to act like TL. He would join in on calls that didnt directly concern him. Ask me about updates on particular tickets which he didnt know anything about. He would speak out of turn in the daily stand-ups in front of clients, and then in private would try to pin it on me when he got an egg to the face for saying something stupid in the stand up.So, what none of them knew was I had been busy this whole lockdown upskilling. Got my AWS certificateS, learnt and built practice projects on Spring and React.Cut to last month. I received an offer from a pretty big company with a 200% hike (because I was already being way underpaid according to industry standards).I issue my resignation, and my manager basically scoffs at me. His whole air was like what you do isnt difficult, youre easily replaceable. A couple of weeks go by and I had been slowly taking myself out of the operations. Letting the other guys handle the client calls and work tickets. And then yesterday it happened. My manager calls me. Starts talking bs crap like how I have been holding up during the covid. Trying to make small talk. I test it like any other conversation and talk to him casually. After about 5 mins of pointless blabbering, he says, hell counter the other offer and with a 20% hike. I politely declined it. Told him its time for me to see the outside world. He ends the conversation abruptly in visible frustration. I have told my TL that I am happy to address any queries while I am still there. But the thing is, my notice period isnt long enough to cover the whole project(350k lines of code with a large chunk being legacy code, that has been there since 2008). And my TL knows it.I am just endlessly giggling internally seeing them struggle just to have a productive conversation with the client. The client is clearly getting frustrated, my manager is under pressure from the client to get the issues fixed and my TL is just in a very sad place. This makes me happy. Its sadistic, I know. But I am just a human.TL;DREnjoyed my work. Made it look effortless. Manager thought my job is very easy. Was overlooked for promotion and never got a decent raise. Issued my resignation, now theyre suffering trying to figure out how the hell I was doing it.Edit:MY GOD!! never thought my post would get this much attention. Everyone here has made me feel even happier.Edit: Addressing the other side.I see that some arent as approving of my post as others. To them, I would like to say thank you for bringing the other side of the coin into perspective. I assure you all, my intention was never to put anyone in a difficult situation. I just took a better job, everything else just happened by consequence. I am sure the people who are negatively affected by my switch arent intrinsicly bad people, but I also feel this was a lesson they all had to learn someday.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_6278bi","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/6278bi\/my_journey_and_tips_29_gpa_at_a_noname_liberal\/","DATE":1490745600000,"PLAIN_TEXT":"Since Ive gotten so much from this sub, I wanted to see if I could give back a little and share my story  random tips. Hopefully it helps some of you out there. There was also some interest in my [preparation strategy while employed]( https:www.reddit.comrcscareerquestionscomments622ceqemployed_engineers_how_do_you_allocate_time_todfj7tj5).TL;DR: graduated from a no-name liberal arts college 2 years ago with a sub-3 GPA and 1 internship at a small local non-tech company; went to work for a large unprestigious fintech company, then an unknown startup; got a few hits from Big 4 recruiters but always fucked around preparation-wise and never converted an onsite; FB recruiter messages me in Feb. and I decide to go all-in; studied ~150 hrs in 1 month+ with a full-time job and landed 4 offers out of 8 onsites (didnt go to 3 onsites).Disclaimer: I am not claiming that FB or any Big N or unicorn or we is the be-all end-all of companies. Im not interested in debating whether theyre overrated. This is aimed specifically at people who might be interested in pursuing these sorts of roles, and especially at people who dont think they can make it, because of background, etc. Im also not claiming this is a fully general solution. This is just my journey and what worked for me--hopefully it will prove a little bit useful for you.Edit: I want to reiterate that I realize my school and GPA didnt get me into FB, but that my experience and interviewing did. I got in in spite of my school and GPA. My title is phrased as it is because of all the questions people ask on this sub about whether not going to a target school and not having an impressive internship forever precludes you from working at a Big N or unicorn. Clearly, I dont think so and I aim to provide some context and motivation to those who can relate. If thats not you, then hopefully the resources and tips are otherwise helpful. (Also quibble with the idea that 2 years out of UG counts as that experienced.)On prestige whatever tf that means:I see a lot of questions on here about whether its necessary to go to a top whatever school, or whether youre screwed if you go to a public school or a no-name school, or will i ever make it to GOOGLE if i dont go to Stanford!?. The short answer is: no, its clearly not necessary, but of course it helps. My school was so small (less than 10 CS majors in my graduating class) that we didnt even have a career fair, let alone tech company recruiters visiting.What that means is that you kinda have to make your own path. You have to do the typical side project shit thats recommended here all the time, but may also have to do a bit extra in terms of networking (few of my classmates now work at a tech company, let alone a startup or big N), keeping up in tech (reading blogs, HN, etc.), learning (MOOCs, small exploratory side projects), and your resumeLinkedinGithub.Other things I did to try to set myself apart were taking the initiative at work and putting myself on projects that worked on hottrendy techs (cloud, big data, ML) and maintaining a relatively polished resume and the like. Even when I didnt have an interesting project at work, I tried to keep myself busy with staying up-to-date and not letting my skills atrophy.Re: LinkedinGithub, I got my previous job at a startup through Linkedin, as well as my current job at Facebook. Definitely dont underrate it. I also had an interviewer at a Microsoft onsite specifically mention checking out my Github.On imposter syndrome, learned helplessness, and failure:Last fall, I was contacted by Google and Amazon. I halfassed an absurdly optimistic study plan, lucked my way through to onsites, and then failed miserably. And I mean failed. I didnt even code a brute force solution to at least 3 problems. It was brutal.The issue was, I was scared of failing. Scared that I might do my best, and yet still fail. It was a lethal combination of learned helplessness, imposter syndrome, fixed ([vs. growth](http:www.aaronsw.comweblogdweck)) mindset, and self-destructiveness. If I didnt really try, and failed, well, maybe if I had actually tried, I wouldve gotten it! My precious ego was protected. My self-identity was safe.In practice, what that meant was that I skimmed CTCI, did a couple Hackerrank problems in an IDE, read up on some algorithms and data structures on Wikipedia, skipped any problems that looked scary or intimidating (all Leetcode mediums+ and literally every single graph or DP problem), and convinced myself that practicing whiteboarding was a waste of time.Now, I know this sounds pretty dumb. But I also know this resonates with at least some of you. Dont fuck up like I did. If you truly want it, go after it and actually commit. Fuck being scared of failure. Dont preemptively discount yourself.On obsessive studying:In February, I got a message on Linkedin from a FB recruiter asking if I was interested in applying to a Data Engineer role. I said enough was enough and decided to go all-in. I wanted to see what I could do if I truly applied myself 100%. I didnt want to regret not having done all I could.I wrote up a study plan and schedule, resolved to study about 3.5 hrs a weekday and 7 hrs a weekend day, read a bunch of motivational stories (like this one aspires to be), told my friends and SO that Id be a shut-in for the next month, and hit the books. I kept track of [all the time I spent studying](http:i.imgur.comvAtIJqp.png). I trusted the process. And it worked out.As I expected, the first week was a struggle. I was getting lost with Leetcode easy problems. Wtf was a trie again? Etc. During this time, I also wanted to up the stakes and not waste my preparation, so I cold applied to a ton of roles. Probably over 150. I went through [the easy application list](https:github.comj-delaneyeasy-application), cmd-clicked every company I recognized, and applied to any and all relevant roles.On study materials and studying tips:DS&amp;amp;A: Leetcode Interview Cake the Algorithm Design Manual [Arden Dertats list](http:www.ardendertat.com20120109programming-interview-questions)System Design: [High Scalability](http:highscalability.com) [System Design Primer](https:github.comdonnemartinsystem-design-primer) [Hired in Tech](https:www.hiredintech.comclassroomssystem-designlesson55)SQL and data modeling: [Mode Analytics SQL tutorial](https:community.modeanalytics.comsqltutorialintroduction-to-sql) [Kimballs The Data Warehouse Toolkit](https:www.amazon.comData-Warehouse-Toolkit-Definitive-Dimensionaldp1118530802)I did 76 problems on Leetcode, about 75% easy, 25% medium, and a few high frequency hards. Did all of the Interview Cake problems. Had already gone through CTCI, so just skimmed it. Whiteboarded ~25 problems in total in detail (drawing test cases, iterating through multiple solutions, talking out loud about algorithmic logic and timespace complexity, etc.). Did about 5 complete mock interviews with my GF (including the talk to me about your background elevator speech portion).Interview Cake is pricey, but the costbenefit analysis made sense for me. I focused a lot on quality over quantity, and it was a good fit there (big fan of the hints and iteration from brute force to ultra-optimized). The feedback from phone and onsite interviews was that I did a great job communicating my thought process and talking through efficiency and test cases.Another thing I got good feedback on was my level of engagement. Prior to every interview, I looked up all my interviewers, any engineering blog posts, recent company news, etc. This made it easy to ask things like, I was looking at the recent announcement from [YOUR AMAZING COMPANY], how do you feel about it? or I saw that blog post your team did on BigQuery, what were some of the challenges you guys faced in refactoring your pipelines? I cant objectively back this up, but I do feel like this aspect is both overlooked and low-hanging fruit. (Plus, shouldnt you be curious about your future company?)On stats and other interviewing process details:First contacted by Facebook on January 18th. Signed their offer on March 28th.148.5 hours spent studying from 210 to 318. Avg: 4.13 hrsday.8 onsites: FB, Microsoft, Yelp, Twitch, Venmo, Foursquare, Indiegogo, Capital One. Didnt go to onsites at Capital One (wasnt too interested), Yelp, and Twitch (latter 2 happened after FB offer). Converted 4 out of 5 (not Microsoft; was a general SDE role).Overprepared for my onsites with the exception of Microsoft (shouldve done more Leetcode hards) and FB (shouldve practiced more on SQL window functions and pivot tables). If I had studied more efficiently, I probably couldve gotten away with 50 hours. But it was worth the peace of mind, especially since I wouldnt get another try for at least half a year.Traveled to 5 onsites in the span of a week ([schedule here](https:www.reddit.comrcscareerquestionscomments61e0t1how_do_people_get_so_many_offers_at_oncedfe3ra4)).Talked to  interviewed with about 20 companies at the peak. Some ghosting on both sides, some rejections on both sides. (Somewhat funny, mostly infuriating ghosting story: AWS S3 recruiter wanted me to apply, we set up a phone coding interview, the day of the interview was the day of the S3 outage (:), nobody called, recruiter said sorry they were super busy (understandable), some phone tag, I emailed another follow-up, complete radio silence.)Received 3 takehome coding assignments. Didnt do 1, converted 1 of the remaining 2 into an onsite and offer. Spent about 20 hrs total on the assignments.Negotiated my offers a little with the help of [Haseebs blog posts](http:haseebq.commy-ten-rules-for-negotiating-a-job-offer). Added about $25k to my total comp. If I had another big N offer, I think I couldve done better on this front with FB. Ended up with a package totaling ~$185k.On useful lists:When interviewers asked if I had any questions, I stuck with a bank of questions that I believe went over really well: What first attracted you to [AMAZING COMPANY] and what has helped keep you here over the years? What are some challenges your team is currently facing? What are you most excited about regarding the future direction of [AMAZING COMPANY]? Walk me through the development workflowprocess: do you guys do scrum or standups? Pull requests? How are tasks determined and assigned? What are some projects I would work on in my first 90 or 180 days here?  What did you work on when you first got here, or alternatively, tell me about the project youre most proud of? (to hiring managersVPsdirectors) When you think of a successful software engineer at [AMAZING COMPANY], what are the most common traits that come to mind?My mostly sorted list of heuristics I would go through when stuck on a problem: Always consider hash tables (dictionaries) with their O(1)-ness. (Tip: using a dictionary is the most common way to get from a brute force approach to something more clever. It should always be your first thought.) If at all array-related, try sorting first. If search-related, consider binary search. Start with a brute force solution, look for repeat work in that solution, and modify it to only do that work once. Space-time trade-off! That is, for better time complexity, try using auxiliary data structures. E.g., do something in a single pass over an array--O(N) time--by using a hash table--O(N) space--vs. doing something in multiple passes--O(N ^ 2)--without using any extra space--O(1). What information can I store to save time? (Another example: O(1) get_max method for a Stack class stores extra information (the max at and below each element) to save time (instead of iterating through the stack O(N)).) Try a greedy solution:Iterate through the problem space taking the optimal solution so far until the end.(Optimal if the problem has optimal substructure, which means stitching together optimal solutions to subproblems yields an optimal solution.) Remember that I can use two pointers (e.g., to get the midpoint by having one pointer go twice as fast, or in a sum problem by having the pointers work inward from either end, or to test if a string is a palindrome). If the problem involves parsing or treegraph traversal (or reversal in some way), consider using a stack. Does solving the problem for size (N - 1) make solving it for size N any easier? If so, try to solve recursively andor with dynamic programming. (Using the maxmin function can help a lot in recursive or dynamic programming problems.) A lot of problems can be treated as graph problems andor use breadth-first or depth-first traversal. If you have a lot of strings, try putting them in a prefix tree  trie. Any time you repeatedly have to take the min or max of a dynamic collection, think heaps. (If you dont need to insert random elements, prefer a sorted array.)On weird things I did:I used moda to help me stay focused and study. Wasnt necessary, but it did help (big YMMV disclaimer here). Didnt use it on the day of any interviews because I didnt want to make myself more nervousanxious.I copied over all the solutions I wrote for Interview Cake and most of the Leetcode mediums and high frequency  notable easy problems into a local directory and pushed it to Github. I then concatenated all these files and printed it out. Took the stack of solutions with me when I was traveling the final week and looked it over on flights, etc. Basically just priming my pattern recognition.On concluding:If you made it here, Im impressed. Im sure theres more I could write or that I forgot to include, but for now, thats it. Ask me any questions you have and Ill answer every one!Also let me know if theres interest in my open-sourcing my pretty comprehensive Workflowy study guide.Edit:Overwhelmed by the response, and thank you very much for the gold! I will clean up my study guide a bit and link it here within the next day. Feel free to continue asking questions, and if I missed yours, definitely remind me! Edit 2:My study guide is still quite messy, but I didnt want to procrastinate and let the perfect be the enemy of the good, so here it is: https:workflowy.comswGqavcPQFmHope it helps, and if you have any improvements, please tell me.Also, if people want to open-source it for real and somebody knows of an easy way to turn a Workflowy note(book) into a Github repo, please let me know :)(Note: I dont use this account anymore and am not able to reply to all the messages I get, but if you need personalized advice or even coaching, you can try emailing me at suryc011 [at] gmail [dot] com.)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_drk0cc","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/drk0cc\/after_seeing_some_posts_about_computer_science_no\/","DATE":1572825600000,"PLAIN_TEXT":"So, I have recently been seeing a few posts here and there by industry veterans that current students going into the CSSWE field arent doing it for their passion but rather for money. I wanted to give my input on this discussion as somebody who identifies as an immigrant, as person of color, a first-gen college student, and as someone who lived in poverty all of his life. Firstly, like any field, computer science education reaches more and more students every year. Back in the day, to study computer science you needed some sort of privilege (going to college, being able to afford a computer, ect). Nowadays, we have the opportunity to spread the knowledge of CS to everyone, even those at the lowest tier of the income bracket (dont get me wrong, we can still do better to providing STEM education to schools in poor districts, but luckily we are getting better everyday). For myself, my first exposure to computer science was in college, and while I thoroughly enjoyed the subject, I also quickly realized that computer science was also my way out. That is, my way out of poverty. My familys way out of poverty. Yes I studied it because I found it interesting, but I didnt have a passion for it like I have a passion for politics or human rights. I studied it because I knew it was the quickest way to get not only myself out of poverty, but also my family. This isnt even mentioning that today the CS Job market has grown incredibly competitive. CS has become the most popular major at many schools and its not surprising since it is speculated that coding will be just as important as writing in the near future. &amp;#x200B;All in all I wrote all of this to try and shine some light on industry veterans who are disillusioned by this sub. A lot of us come from really hard backgrounds and we simply dont have the luxury to study our passions. Just be happy there are people working hard everyday to advance this field and make major contributions to it. &amp;#x200B;I apologize if this type of post doesnt belong here.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ts89li","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ts89li\/i_was_offered_money_to_get_a_job_for_someone_else\/","DATE":1648598400000,"PLAIN_TEXT":"Just wanted to share an interesting experience I just had.3 weeks ago, a seasoned reddit user sent me a private message asking me if I would like to interview as someone else against a bit of money. The deal is: I join the zoom interview without video, record it, and pretend to be their candidate. I would get paid $200 per interview. Thats a terrible deal, I dont see why I would jeopardize my professional reputation in that way, but I agreed out of curiosity.The conversation continued on WhatsApp, with what appears to be the big brain of the operation. A guy asks me for my referral, LinkedIn, checks that Im actually a software engineer, and asks for an audio recording.3 weeks go by without hearing from them, and yesterday they told me I had an interview scheduled. Im supposed to be Kevin, from Connecticut. I have no clue in what world the scam could work, since Im french, and my accent is... well, I wont comment on my accent but its a bit different from the Connecticut accent.Anyway, I joined the meeting and the interviewers were quite surprised to see my face (Kevin is black; Im not). I explained to them that they were being scammed and went back to my tennis session. I wasnt hired :(One hour later, I got a message from the bad guy, threatening me that theyll send their friends after me. Now I hope they dont have any connections in Mulhouse, France :DAnyway, thats the full story, I think its interesting to know that this exists, although I doubt it can work, as I dont see the point in doing this kind of thing when one can get an actual CS job instead...","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_nwpva5","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/nwpva5\/i_got_the_job\/","DATE":1623283200000,"PLAIN_TEXT":"I graduated in December with my BS in CS, and after half a year of anguish being a stay at home dad while trying to keep my skills up and navigate this hellscape of a job market, I finally got an offer for software applications engineer.Good luck to the rest of you, keep trying, you might be one week away from changing everything!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_khrsw5","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/khrsw5\/im_a_liberal_arts_major_who_received_a_fulltime\/","DATE":1608508800000,"PLAIN_TEXT":"I was starting my last year of completing my liberal arts degree when I decided to teach myself how to code in Python. I took my first CS class later that year and fell in love with it, and decided I wanted to pursue software engineering.I had a lot of cards stacked against me, I was a recently homeless woman of color in a low-income, single-parent household, and it was too late for me to pursue a CS degree. I decided to take as many CS classes as possible and decided to teach myself everything else along the way. I knew my tech skills werent the strongest, but I had professional work experience and always excelled at soft-skills. I was able to find a tech-adjacent job and that job helped me land more formal CS experience. I took a lot of advice from this subreddit; I went to hackathons, did Leetcode, and contributed to open-source projects. Unfortunately I ended up graduating into a COVID recession, but after 3 months of applying aggressively (close to 800 applications), screwing up technical interviews, etc. I finally landed one full-time software engineering job offer. Its not FAANG or a tech company for that matter, and the location is not ideal, but the salary is great and I know it will open a lot of doors for me.I wanted to share my experience to show that you can succeed in this field with an unconventional background. Tech skills are important but your soft skills are indispensable - Im certain that my soft skills are what helped me land this job. Im happy to answer any questions or hear from other people with a similar backgroundexperience.Edit: Wow thank you for all the awards and positive comments! I noticed there is some confusion about my timeline in the comments, so I wanted to clarify that I ended up taking another year of college to take as many CS classes as possible. I have a little over 2 years of programming experience now.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_im25q8","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/im25q8\/not_going_to_lie_the_greatest_thing_about_being\/","DATE":1599091200000,"PLAIN_TEXT":"Nothing really else to add. It just feels pretty good to say that while the job sounds interesting, its not worth it if I have to interview like that. Just told two pretty prominent unicorns that I wasnt interesting in the interview process after their recruitershiring managers found jobs that I was pretty perfect for.Funny thing is, I think they hear that a lot from other experienced folks. There is no surprise on their part and they fully understood.Im gainfully employed in a good job with decent pay. Im too old and bitter for interview games right now.EDIT:I didnt realize that this would gain this much traction. So, some clarifying points to deal with the questionsassumptions.My current TC is around $330K - but my refreshers are really good - so it will soon be $370K and $410K the year after. The company has the ideal culture, great WLB, and I have an absolutely awesome manager. Its good, but I keep an ear open because I know I can do slightly better. I have 20 years of experience, 13-15 years as dev (depends on what you call my startup experience), but I have no specialized skills - so no, I wont make $700K that some people are saying that is possible. Possible for some, not me. $500K-$550K is my max potential, which is still unbelievably awesome.The companies I said no to were willing to get up to $500K, but these are non-public companies. So, theres a risk that lowers the TC in my opinion to something not worth much more than my current job, and my WLB would be much worse. And Im not going to cram for LeetCode for a week to work for them. Too much stress for too much randomness in the interview process.And no, I dont have a blanket refusal on all LeetCode. Im not stupid. But if a company wants me to do LeetCode, I do expect a huge premium. Most companies dont offer that premium, so I gleefully refuse.An example of where I didnt refuse - I recently interviewed for the E6 track at Facebook, but failed (long story short, they asked for a 3rd round, got a bad System Design interviewer, and failed - I actually did well on the LeetCode surprisingly). Anyway, that job would have $500K+ of non-paper money. So, I will do LeetCode for that. I also talked with Google. Did the first round, and they only wanted me at an L5, which is not a huge raise. That is not worth it to continue, so I refused.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_nl9dxy","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/nl9dxy\/i_just_got_a_offer_for_80k_no_degree\/","DATE":1621987200000,"PLAIN_TEXT":"I just want to say, it is possible ladies and gents. I finally did it. Im 22 and started my journey around 18.Starting learning how to code around then, worked a internship, did some of my own projects, failed TONS of interviews, worked a low paying entry level software developer job for about a year, and finally just got an offer from a fintech company for 80k a year, all by 22.I have no degree, no student debt, just a self taught guy with a lot of drive. I promise you, if you are about to give up, dont. I got rejected so many times I cant even tell you, its part of the game.Its 100% possible, just keep improving, youll get there. If anybody has questions for me or want tips, Im here to help!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_9tkgt0","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/9tkgt0\/hate_your_job_heres_how_to_quit_with_nothing\/","DATE":1541116800000,"PLAIN_TEXT":"This gets asked every now and then and I think itd be good to have a summary of advice that pops up when someone searches for it. This is specific to our industry, so if youre not in tech, this may not apply to you!So first and foremost: do not quit your job unless you have reached the absolute breaking point! I reached this point when my manager put me in a surprise meeting with HR and handed me a warning for something asinine like I was a child caught in the hall without a hall pass. I already hated my job and this was way more than I could handle without my mental health further deteriorating. That being said, if the economy is not good, under no circumstance, bar illegal or severely unethical practices, should you quit your job. I would not have put in notice if I didnt know I could get a job within a few months. If we were in recession, Id have just bent over and taken it. Its easier to get a job when you have a job.So, with that out of the way, here are my tips based off my experience:1. Ensure you have at least 2 - 3 months of expenses covered. Ideally you want at least 6 months. This does not include any money you have in a retirement savings account, and ideally no investments or bonds. Of course these should be liquidated in an emergency, but that should not happen if you have enough saved up to begin with. If you have a lot of money saved up, I would take the advice below on a less urgent timescale, to reduce the chances of burnout, or ending up in another crappy company.2. The moment you give notice, youre basically unemployed. Your income is limited. So act like it. Cut out all non-necessary expenditures.3. Youre allowed to give more than two weeks notice (though be aware they can kick you out anytime after you give notice). As much as I wanted to leave, I wanted to have a job while applying to jobs, because its easier. I also wanted to have a bit more financial security. So I gave a months notice. I figured thatd be enough time to find a job, and if not, at least I have an extra month of finances. Youre also allowed to quit on the spot and leave immediately. (In an at-will employment region!) Just make sure youre financially prepared for that. Know that you will have a somewhat tougher job hunt.4. Apply to jobs like its your job. I applied to ~50 jobs in the span of two days. My metrics were: Above a 3 on Glassdoor, and, I had at least a passing resemblance of qualification for the role (and in NYCNJ, where Im based). If you dont live in a hub, be prepared to move, or lower your standards immensely. And if you dont have a wealth of money saved up, you cannot be picky. I took the first offer that came, which luckily was at a great place.5. If you still have your job, do not mention you already gave notice! This should be obvious, but do not tell anyone you already put in notice. Thats a later problem. If your job ends and youre still in the process with others, tell them. At least youll have your foot in the door already.6. Study like crazy. You cant really afford to fail interviews. You will! But try to reduce that chance. I didnt grind leetcode but I studied every gotcha in the book for Java and JavaScript, and knocked down all the fundamentals for any frameworks listed under Advanced on my resume. Essentially, I could answer most questions about any language or framework I claimed to know well, and trust me, it paid off. If youre aiming for places with more Google-like interview processes, sorry but youll need to grind leetcode and brush up on CS101 concepts. Thats just a fact. There are plenty of places that wont ask you about data structures and algorithms, or give you fun riddles to solve. There are plenty that will. Also, when entering a technical or behavioral interview, make sure you study enough to at least understand everything theyve put on the job listing. For example, you may not know what R is, and no, you dont need to become an expert overnight, but you should have an idea of its purpose. Companies understand candidates dont know everything, and you shouldnt pretend to, but its better to at least say Never used it, but I know its for this than I have no clue what that is.7. What are they gonna do, fire you? Your full-time job is on the backburner if you still have it. Schedule those interviews during the day. Disappear for doctor appointments or long lunches. Youll need your laptop and I hope you know how to enable mobile hotspot on your phone. Know the quiet rooms in your office and book them. Obviously dont completely disregard your work, unless you hate your teammates as well, then, go ahead. On my busiest days I did 1 hour of actual work, and 7 hours of interviews and phone screens, with a 15-30 min break between each. When I had an onsite, I just used my time-off. If you dont have time-off, then sadly you will need to use sick days or unpaid time-off. If youre unemployed already youll have even more time to handle interviews. Ideally from 9pm - 6pm every weekday should have at least one interview or phone screen scheduled.8. Managing take-homes. Take-homes have become more common. Unfortunately it seems some companies do not realize candidates applied to more than one job. Some take-homes take an hour, others could take 12+ hours. Inform companies that you need more time if they give a deadline you cant do. If youre drowning in take-homes (I was!), take a break in applying, and schedule interviews further apart, so you have time to complete them. You arent in a position to reject take-homes, so youll need to find some system that works for you to handle them. If youre feeling ballsy, ask if theres an alternative to a take-home, like a round of code-pairing.9. Take breathers. This sounds counter-productive, but you will burn out if you dont give yourself time to relax. I nearly burned out after having back-to-back interviews and doing a take home that took three days of spare time. You need to have energy to do interviews, so burning out needs to be avoided. I also took breaks from applying, as I was already getting enough hits in my email.10. [EDIT!] Big tip: If you quit your job for what could be construed as constructive dismissal, or due to some form of discrimination, you can be entitled to unemployment. Just because you quit does not automatically mean youre disqualified. Look into your regions policies on applying for unemployment.Aside from those, I was applying to Frontend, Full-Stack, Backend, and General Software Engineer positions. Of the applications I sent, I got a phone screen from about ~40%. This would probably have been higher if I had been at my current job for longer than 6 months. It also may be higher or lower depending on your currentmost current role. I secured a job in two weeks, which honestly, is shockingly fast. I would expect closer to 4-8 weeks. But you should expect to be unemployed for at least 3 months even if, realistically, you should be able to find a job in about a month.In the end, I would say that doing this was ultra-stressful for me. But it was also relieving because I could finally leave my hell of a job. I really stress that you should not quit your job unless you are absolutely at wits end. You &gt; Others, but more importantly: You not in poverty &gt; You in your hell hole job.Thats all. If anyone else has done this, please add on to it! What was your experience like? How did it go? What else would you tell people who are thinking of leaving without another job lined up?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ktzjx2","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ktzjx2\/story_of_my_average_joe_cs_journey\/","DATE":1610150400000,"PLAIN_TEXT":"Hey guys,Ive been lurking here a while and have seen some posts referencing how they feel this subreddit is toxic or depressing, and also asking about what happens to average joe CS students. Id like to share my story if anyone cares.I started my CS degree at a community college for two years, then a I transferred to a no name liberal arts college. If anything this school would be considered below average honestly. I never grinded leetcode, worked on personal projects, or really learned anything outside of the school curriculum. In my junior year I mass applied to internships. I was asked to come in for an interview with a super small company that had maybe 20 employees if you include the interns. One of my interview questions was literally fizzbuzz. I was offered the internship and stayed there for about a year being paid minimum wage. Getting paid to program while a college student instead of working in retail? Hell yeah. I didnt care at all it wasnt a prestigious or high paying internship.In my senior year I mass applied to jobs and received two interviews. One with a government agency and one with a medium sized company Im sure no one would have heard of. Neither interview was particularly challenging or included any leetcode. I accepted an offer from the medium sized company for a salary of 70k with a 3k sign on bonus. I also received a conditional job offer from the government pending what looked to be a fairly intensive background check. I declined that offer since Id have to move.My point is if youre gunning for FAANG then by all means shoot for the moon, I wish you the best. But if youre just some college student whos worrying if theyll even find a job after graduation just relax. Theres plenty of opportunities out there your degree will open for you that are just fine comfortable jobs. And if you dont find one immediately after graduation, still relax. The overwhelming majority of college students wont. Most major in something much less employable than CS and spend years after being a fresh graduate to find their grown up job. Its not ideal but no one seems to care as much as on this subreddit. Youll all be fine.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_avf528","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/avf528\/a_tiny_guide_to_grinding_leetcode_problems\/","DATE":1551225600000,"PLAIN_TEXT":"Hey all,&amp;#x200B;Im still pretty young and only in my 2nd year of college so I often cant really contribute to this subreddit in terms of raw experience...but I wanted to make a post for those of you who are studying Leetcode type problems to pass interviews at Big N companies.&amp;#x200B;I have done about 250 Leetcode problems in all problem categories and read the fantastic book Elements of Programming Interviews by Adnan Aziz, Tsung-Hsien Lee, and Amit Prakash about 5 times and skimmed it 3 times.&amp;#x200B;Really really really recommend EPI over CTCI but that is personal preference. EPI dives very very deep into the reasoning behind how we go from brute force solutions for each problem, to the optimal solution but it is less beginner friendly since it is more intellectually rigorous. It instills an apparatus of thinking that no other resource I have found does.&amp;#x200B;I want to make a small guide answering questions people often have about these problems as well as things to watch out for.# An Exhaustive List of Topics Youll Need To Know Well Fundamentals of Computers (just a general knowing how computers store information etc.)  This is just a basal thing. Knowing how binary works, how memory is managed in a program (stack &amp; heap), etc. Big O Time &amp; Space Complexity Computation  Know asymptotic bounds. If you can be flexible in how you analyze a solution you come up with (lower bounding it, upper bounding, exact bounding) it can help you see whether you can do better and make an improved algorithm Arrays  This is pretty straightforward. Often questions that work within arrays will be solved in linear time ( O(n) ) for the most part and that linear time solution will be tricky. Primitives  Things like bit shifting. This is more rare and I dont think this is as important since it doesnt test real thinking abilities since it mixes with ones abilities to bit shift which is an esoteric skill. Strings  These are problems that often deal with strings like permutations, backtracking problems that have use take an exhaustive approach in producing decompositions of a string to search a possibility space (which is often a brute force way of solving a problem since it will be exponential in time), etc etc. String problems are often solved most optimally in O(n) time or O(s1 + s2) time (linear with respect to each string) if we are given 2 strings...whatever the problem may be. Dynamic Programming  One of the most difficult subjects. This is the key: subproblems. If you can identify the subproblem, you have cracked the problem. Because from there it is all about memoization to cache and leverage previous solutions. Recursion  Backtracking  This is a comfort thing. The more of these you do, the better you get. At some point you will naturally think of solutions in a recursive manner (if backtracking could be a possible approach used). Problems that use backtracking often say...generate all...compute every....this indicates an expression of exhaustively expressing all the possibilities of a decision space. Recursion is beautiful for this. Graphs  Know DFS &amp; BFS. DFS uses a stack (either implicit with the call stack and recursion or explicit if we create our own stack) &amp; BFS uses a queue. Greedy Algorithms  These are algorithms that take the locally most optimal solution to achieve a global optimal. In contrast to problems that use dynamic programming (which is characterized by caching previous subproblems to find a global optimum), greedy algorithms take locally optimal choices.  Not all greedy approaches one comes up with will work 100% of the time so it hinges on being able to use deductive logic to prove that a given approach will always work Hashtables  Very very very common in mid-level interviews. This is a must know. It is pretty simple, when our time complexity is too high, we can often reduce time and increase space by using some sort of auxiliary structure to cache work. Hashtables are often that auxiliary structure. Linked Lists  A tricky structure to work with. It is hard because we cant index into items. It gets easier with time but always remain tricky. Sorting  Know the fundamental sorting algorithms. Bubble, Insertion, Selection, Merge, Quick, Heap, ...etc Searching  If an array is sorted. IMMEDIATELY know that that is a strong hint that the optimal solution will use binary search and stay to the order of O(log(n)) MinMax Heaps  Heaps are really cool. Just know...if you see find the LARGEST...or ... find the SMALLEST...anything to do with size...think heap. Min or max. If we want larger items we use a min heap since we can throw away small items (to leave the large ones behind). And vice versa for when we want the smaller items Stacks  LIFO structures. Know how to implement a stack inside out. it is fairly easy so dont fear it. Id suggest knowing how to implement all data structures stated here. Why not? Queues  FIFO structures. Used for Breadth First Search. Trees, Binary Trees, &amp; Binary Search Trees  Trees are connected, acyclic, graphs. You can do DFS and BFS on them. Print all the characters in the tree in this order? Does it look like DFS? You can do that. Traverse the tree level by level? Looks like BFS. (BFS goes out level by level). System and OO design Principles (sometimes)  Some compaines ask Object Oriented questions. A great great resource for this is the book Clean Architecture by Robert C. Martin. I also highly recommend his book Clean Code but it wont help you for interviews (but will make you a better programmer)# An Approach To Preparation1. Find your weak topics. For me those were trees, backtracking, dynamic programming, and linked lists.2. Start with easys. My first Leetcode problem was Jewels &amp; Stones (you can search it) and it took me 30 minutes......it was just 2 for loops. Am I dumb? ... maybe ... but these problems are so far divorced from daily programming tasks that it was difficult for me.3. Easys will be very difficult when you just start...then they will start getting...easy...hmmmm...onto the mediums.4. Your summer internship interviews will be medium difficulty questions. Full-time roles will be upper medium questions sprinkled with a few hard questions. Stay rooted in the fundamentals above and you can survive.5. Go onto hards if you want...but dont get lost on esoteric problems that require special tricks. This is all about getting ready to pass an interview for a job, not so much to have bragging rights.6. Top it all off with polishing your delivery. [pramp.com](https:pramp.com) interviews helped me immensely. I did about 8 in person interviews this past season.# F.A.Q.How many Leetcode until Im ready?There is no finite amount. Every person comes to the table with their own weaknesses in all topics above. You will know when you are ready. You will see a problem and say...Oh...yeah I know what principle to apply here. The more you get that spark, the higher the chances you pass.&amp;#x200B;Should I time myself?Yes and no. Time is critical. Speed is critical. But timing yourself is useless if you are very uncomfortable with a specific problem class. I suggest solving many problems (peeping the solutions often is fine...just gain comfort) in your weak points. Then when you get sick of jumping to answers you will soon take the leap and just solve the problem yourself because you will become familiar with the techniques required for the approach. (this is how backtracking was for me. I went from total confusion to it becoming a default way of thinking.)&amp;#x200B;What should I focus my studying on?Weak points. And then popular problems. Find a list of problems the company you are interviewing at asks. No idea whether this is a myth or not (and CTCI addressed this as false...that companies repeat questions from a list) but I have friends that told me of getting exactly questions from these lists. It isnt critical but it can help.&amp;#x200B;Reading books vs. LeetcodeHackerRank?Books give you theory. Coding gives you the memory in your fingers and the necessary practice. Like...if I know a problem will use BFS, how fast can I put the logic in place for a basic search? If I know that a problem may use a heap...how fast can I throw up a priority queue with the right comparator (if it is a max or min heap...Java defaults to a min heap without a comparator)&amp;#x200B;Hope this helps someone...or made any sense...I typed it up quickly.&amp;#x200B;Im honestly not THAT good...like problems still stump me...but Ive come a long way so my experiences may help someone else.&amp;#x200B;Ill make more posts if people want more small tips.&amp;#x200B;Edit: Holy crap. That is a lot of upvotes....um....yeah. Hey.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_m6d1pt","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/m6d1pt\/heres_why_you_dont_get_a_chance_to_match_their\/","DATE":1615852800000,"PLAIN_TEXT":"started position about a year ago. quickly realized being underpaid. everyone one the team says I should get more, they are impressed with the quality of work I perform. ok. gave it some time, talked to my pm who is very friendly with us and is more of us in us (engineers) vs them (management) situation. He basically told me I definitely should be paid more, but we dont have a concept of raise here and were not really growing, so there isnt really much money to go around. The only way he got a raise was when he got another offer from someone else. Told I may be better off somewhere else.shit, it grinds my gears so much every time they praise my work without backing it up by some actions. I couldnt give less fucks about your thanks and great jobs... Im being paid less than the guy who fucking does nothing. and the more they praise the more annoying it becomes. If im so freaking awesome wheres my bonus? no bonus - means Im not awesome? (or rather you dont think I worth it) &amp;#x200B;fuck. anyhow. So I decided to reply to some of my linkedin messages just to see whats out there. Sure enough, 2 weeks later I get an offer with 30% raise, double pto, and some other misc things. gave my 2 weeks notices and refused to discuss an offer to see what they can do about it. either appreciate what you have or fuck off. words mean nothing. we are polite and professional in the workplace by default. Back it up by some action, otherwise what you do is called lying.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_nio8ny","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/nio8ny\/how_do_you_deal_with_coworkers_like_this\/","DATE":1621641600000,"PLAIN_TEXT":"How do you compete with coworkers who eat, breathe and live programming and have nothing else going on in their lives?Ill give an example that happened to me: The manager assigned a new project to be worked on by me and one other dev, Ill call him Ben. The idea was the whole project would take a few weeks to complete, and me and Ben would split the work evenly. At the beginning, me and Ben had a meeting and divided the project into small subtasks, and agreed to each do half the tasks. But Ben worked over time every day and the weekend too (I saw him committing code to the repository late at night on Saturday), and finished his half of the tasks very quickly. Then he started giving me unsolicited tips on how to do my tasks (of course ccing the manager), and then he outright just started doing my tasks for me. The entire project got finished in a week, and Ben did 90% of the work. Ben is not smarter or more efficient than me, hes just willing to work unlimited over time. Of course Ben made sure the manager was aware he did most of the work and now the manager is very impressed with Ben. I have no problem with people getting credit for working hard, but I do have a problem with being made to look mediocre compared to someone just because I have a work-life balance and they dont. Note that I am in no way a slacker, I dont goof off during work, Im not slow or anything, I put in a solid 8 hours every Monday to Friday. Im just unwilling to work any more than that. I have worked on several different teams during my career and it looks like theres a Ben on every team. How do you deal with such people? Advice from managers would be especially helpful.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_u1fai7","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/u1fai7\/just_accepted_an_offer_for_80k_straight_out_of\/","DATE":1649635200000,"PLAIN_TEXT":"Thanks everyone for all of the help on here. Im very lucky to have gotten to this point, graduating a year early from college with 2 years of internship experience. I worked really hard, and its exciting to see the fruits of my labor. Are any other college grads excited for their future?EDIT:Ive gotten a couple of requests to see where Im located. Im in WI in a relatively low-COL small city.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_78bxq9","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/78bxq9\/if_this_subreddit_gives_you_anxiety_depression_or\/","DATE":1508716800000,"PLAIN_TEXT":"National Suicide Prevention Hotline: 1-800-273-8255Ive been reading (sometimes daily) messages on the stickied discussion posts about people struggling to wake up everyday or on the verge of ending their lives because of how miserable they feel from the rejections that come with the job search.Im here to tell you that putting your sole identity in whether or not you have a job (especially at a Big N) is going to fail you. Every earthly thing can and will fail you. You cannot let this define you. There is so much more to life than the cookie-cutter shape you put yourself into when you think like that.Getting a job at your dream place doesnt suddenly get rid of those crippling thoughts that you may have. You will continue to experience them, even if you suddenly got that six-figure job in your dream city.Work on yourself first, then work on your career. Stay away from this subreddit for a while; it can be very toxic to your well-being, if you allow it to control you.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_i03i39","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/i03i39\/motivational_success_story_how_i_got_a_170k_job\/","DATE":1595980800000,"PLAIN_TEXT":"Intro:Hey everyone,Ive been seeing a lot of negative posts on here recently, and it kinda sucks since a lot of how I moved up has been partially due to the resources and inspiring stories Ive seen on here. Like most of you, I have also been laid off early on as a direct result of covid-19 hiring freezeworkforce cut, but then I ended up with a very good role at a Big N company. With that said, I want to give back to this community and hopefully inspirehelp some of you who are struggling to find jobs in this rough time by sharing a story of how I made it.Background:A brief background of myself is that I am a 23 year old asian male who graduated from a public university (it is quite reputable though) with a ~2.3 GPA in CS. I also graduated a semester late due to failing one of my final upper-level class on my final year, which definitely hurt my job-hunting prospect a bit since it was difficult to explain this to my potential employers. Given my stats, it seemed like I had little to no chance of landing a role, let alone a role at a Big N company, and yet, here I am. With that said, here is my story and how I did it.First Job-Hunt:Unsurprisingly, job-hunting as a senior was quite difficult due to my low GPA compared to my peers. I also lacked the knowledgeskill-setexperience that a lot of companies were expecting new-grads to gain since I only had one relevant internship at a non-tech company. The first job I took was a contractor position where I was paid $25hr, which was fairly comfortable given my cost of living. It was the only offer I received out of the countless applications I sent out during my senior year, and even that job was very hard for me to obtain. After doing well on the on-site interview, I was asked for my transcript and to complete a take-home coding assignment, I was almost ghosted due to my GPA, and I had to keep emailing the director in regards to the position. After many weeks of exchanging emails, he finally agreed to hire me as a temporary worker after seeing my take-home coding assignment (yes, those are actually worth doing if you really need the job).Second Job-Hunt:As my contract was nearing the end, I went back on the job-hunt again. I had a conversation with my manager and he thought I did well enough to convert to full-time. However, when covid started happening, I knew I was at risk of being let go, and sure enough, it happened the day before my interview with my current company (not within my managers control). Despite the bad timing, I didnt let it get to my head and performed well on the interview. This was also my only offer out of the hundreds of applications I sent out, and its better than anything I thought Id ever get, given my background. I didnt even bother negotiating as I was very happy with the 300% salary increase and it was already a very generous offer compared to the others at my level at the same company.Steps I took:First and foremost, I reviewed my data structures and algorithm. I went through a study guide that has since then been taken down (unfortunately), but the second best guide would be the Crack the Coding Interview. I read this mostly for the lessons it provided on each topics.Edit: [https:workflowy.comsstudy-guideRD5kZ682pWX5oxiE](https:workflowy.comsstudy-guideRD5kZ682pWX5oxiE) is the link to the study guide, shoutout to uthrowinaway101010 for finding it!Once I was brushed up on my DS+A, I started networking. I reached out to a lot of my friends, family friends, family friend coworkers, strangers on discord (shout out to CS Career Hackers) and recruiters. I asked them questions like what they look for in candidates, what do I need to improve on and if they can refer me. I used those feedback to improve myself to the point where Im at right now. In fact, my current role came from a referral from a stranger on discord, so definitely try to leverage as much networking as you can, even if theres a slim chance of it working out!Another important thing was to keep improving my resume. I listed my skills, work experienceaccomplishments, education (no GPA lol), 2 side projects (one was a hackathon app and another was a game I created with my friends). I also asked many friends and strangers to review my resume and built up on the feedback they provided, and it eventually paid off as I got to the stage where more recruiters were giving me callbacks.Finally, I did a lot of mock interviews. I tried to schedule about 2-3 mock interviews a week, and slowly ramped up as my final interview was coming up. This only took about 1-2 hours a day, which wasnt much for me since it just meant 2-3 less games of league. Again, I mocked with as many of my relevant connections as I knew, as well as the people on discord. I built up on the feedback I received to improve my interviewing skills. I became better at communicating my thought process, handling edge cases, coming up with near-optimal solutions to problems I havent seen before and asking clarifying questions. I am very grateful for their time as I felt this was my biggest contributing factor to how I did well for the interview. By the time I reached my on-site interview, it just felt like another mock interview at that point. I also reviewed the company values and came up with 5-6 stories prepared that demonstrated those values in a clear, concise manner. I highly recommend people do more mock interviews instead of just solo leetcode, as itll give you exposure to how other people answer questions and what youre lacking in.Conclusion:Please dont be discouraged when applying for jobs. I know how it felt, I was literally in that spot a couple months ago, but I never gave up. I kept improving myself and I achieved what I didnt think was possible for me in the past. There are companies that are still hiring new talents, you just have to keep looking.Also, dont get obsessed over the Big N hype either (dont think that any job that isnt Big N is worthless). I wasnt primarily targeting Big N, but when I saw someone recruiting for it on discord, I just went for it. I was very much comfortable at my old job and content with the amount I was making, but the circumstance forced me to job hop, unfortunately.Keep moving forward, and dont get too let down by rejections, Ive faced many rejections from companies I got call-backs from and I just brush if off and keep applyingtrying.Also, keep in mind that this is a marathon, not a sprint. As long as you consistently improve, you will eventually be where you want to be in due time, whether its a position at a new company or a promotion at your current one.In conclusion, if I, an Asian male with a 2.3 GPA at a public university, can land a job at a Big N company through perseverance , then Im sure all of you can find something youll be happy with by not giving up.Thank you for reading,RoyNote:The main reason behind my low GPA is mostly due to my inability to do well on exams, but I firmly believe that exam-taking holds no weight on how good of an employee the student will be. I did well on projects and assignments that were more relevant to real world work experience. However, thats a discussion for another time, lol.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_vciv7q","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/vciv7q\/i_got_the_job\/","DATE":1655164800000,"PLAIN_TEXT":"I graduated Dec 2020 from a no-name state school with no internships and average GPA. I got my first full-time job just over a year ago, 85k TC in a low-mid COL area. I was thrilled.A month ago a FAANG recruiter reached out to me. I decided to update my LinkedIn settings to be open to opportunities and got many more messages. Did an OA with another FAANG company and they scheduled me for their final round.I got an offer for 190k TC in mid COL. My take-home pay will be literally triple what it is now and all it took was a month of leetcode (~50 questions) and some mock interviews. Ill get to work with some of the best engineers in the world on things that affect millions of people and Im so incredibly excited.Ive been reading this subreddit for 5 years now, reading about these nonsense monopoly money salaries and now its me. Good luck friends, you can do it.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_py8y5m","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/py8y5m\/i_cried_at_a_meeting_today_due_to_feeling\/","DATE":1632873600000,"PLAIN_TEXT":"Im a 29F and have been working for 5 years mostly on front-end. I joined this team which works full stack and though Ive been on this team ~6 months, a lot of the concepts relating to the backend are foreign to me still such as database stuff and concurrency. There was a meeting today in the office with me and 2 guys on the team who are the experts. They are in their early 40s and have decades of industry experience. They went over my PRs and pretty much shredded my code to pieces. They interrogated me about the system but I obviously am not as familiar about the codebase as they are and I couldnt defend myself technically and it was humiliating. They then started arguing about the code between themselves for 10 minutes meanwhile I have nothing insightful to contribute so I am just sitting in this meeting room trying to figure out what pieces are relevant to my project which Ive spent the last 3 weeks working on vs them just arguing in some egodominance contest and I didnt even feel like I was in the room anymore or part of the conversation. I felt so defeated and discouraged. For these 6 months I have been trying to make a really good impression and prove myself, especially with this project. I just want them and the team to respect me and take me seriously as an engineer but its obvious that I am not anywhere close to that level yet and that I am not a good engineer I also have just been feeling super isolated and lonely on this team. There is pretty much zero diversity on this team, the people arent exactly that friendly, and they have all been working together longer than I have.One of the guys apologized to me in the hallway after the meeting and said he hadnt realized he had been so harsh. I appreciate his apology but then again its not his responsibility to manage my feelings. It should be on me to be less sensitive and to be a better engineer. I feel like after today, there is zero chance they willl ever take me seriously or respect me given that my natural response is to tear up when I am overwhelmed and feel powerless.Should I just quit this team and move on? Its been 6 months and I still feel like I know nothing. Im just tired of trying and stilll always being subpar.Editupdate: thank you so much for all the support and love you guys make me feel not alone in this anymore. In the morning, I am going to give my two weeks notice, step back, take a rest  mini sabbatical from tech, and then find a team with a culture I resonate with more. I realized that I really dont resonate with the culture or communication style of this current team and that there is a mismatch here. Not just because of what happened today but because I still dont feel integrated on the team at all, I feel emotionally exhausted and need a long break, I dont feel like I am getting the support I need, and I dont see myself matching with the culture no matter how long I am on the team. Thank you for all the help. Its very much appreciated","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_mq1la5","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/mq1la5\/my_ups_horror_story_and_why_you_shouldnt_trust\/","DATE":1618272000000,"PLAIN_TEXT":"I interned with UPS in their corporate office this past summer and was given a contingent offer in October based on if I graduated successfully (graduated Dec 2020), as well as the typical stuff (background check, reference checks, etc). I passed all the contingencies listed on the offer letter with no issue. So I accept the offer in October and now seemingly have a job setup post graduation, great! Early December rolls around and I email the HR person I received the offer from initially, no response. I wait about 3 weeks, by now I have graduated and am expecting to start work soon. I email again, no response. Another 2 weeks goes by, I email again, but CC my former boss from the summer that I was told per the offer letter I would be working for again - no response from either. At this point, it is February and I have not heard a word from UPS since I accepted the offer months prior. Keep in mind, I did not apply to a single job once I accepted the position because I assumed I was setup and was satisfied with the role. After being ghosting for many emails, I directly emailed my old boss asking what was up and if he could contact HR for me since I was unable to. He responded and said he would and keep me updated. 3 weeks go by - nothing. I email him again and he responses saying HR said the offer was contingent on if there was a position available and it seems like there isnt any open positions. There was never a mention of this on the offer letter, which included salary, a signing bonus, and more. The offer listed listed the contingencies very clearly and it simply wasnt one of them. Also keep in mind I am working in the corporate office within the F&amp;A department...(youd think theres plenty of jobs involving data science or analysis) At this point I am fuming and no longer want to be affiliated with the company even if they wanted me. Luckily I was able to find a job soon after getting kicked in the balls by UPS so it did not delay my progress too bad, but the way this was handled with the lack of care really shows a lot about this company. If you take anything away from this, know that:1) If you are given an official offer letter, it means nothing. It can be rescinded for no reason with no legitimate explanation. 2) HR is horribly ran at this company, at least at the corporate office working within F&amp;A. They do not care about you and dont even have the heart to respond to one email when you have accepted a job. 3) They seemingly tried to screw over a former intern that was newly entering a spotty job market after graduating college, by pulling an offer because of a contingency that was never mentioned in any capacity.Im happy to answer any questions or concerns, and god speed to any of you working at this company. Make sure to steer clear of this company when considering employment opportunities and thank you for your time!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_q1j0ez","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/q1j0ez\/the_pandemics_ending_now_i_miss_wfh_so_much\/","DATE":1633305600000,"PLAIN_TEXT":"Company sent us back to the office a few weeks ago. Im just a humble Flutter codemonger who has to commute 3 hoursday taking 3 different crowded buses because I live 22 kilometers away from the company. I just miss WFH so much, I miss having free time, I miss not having to wake up 6AM and go to bed 9PM, I miss not being 12 hoursday far from home, I miss feeling...productive and motivated.Sorry, this is just a useless post, a ramble. But I cant help it.I just...really miss WFH...","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_zmt79s","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/zmt79s\/do_the_math_before_accepting\/","DATE":1671062400000,"PLAIN_TEXT":"On the surface:We want you in the office 3 times per week.What it really means in terms of cost to you:Thats 1 hour of rush-hour driving, 32 miles away, each way. Plus 12 an hour of getting ready in the morning, and at least another 12 hour of recuperating from the stress caused by driving back home, during rush-hour.Lets say you are paid at the rate of $50  hour (given a $100,000 salary)- your 3 hrs. are worth = $150- Cost of a decent lunch = $15- Cost of car fuel = $3.30gallon (@32 mpg) x 2 trips = $6.60 - vehicle wear &amp; tear + added mileage = not calculated- Cost of unwinding after having driven through brutal traffic both ways = not calculated.- 48 weeks worked (minus vacation + holidays) x 3 days = 144 total days- 3 days in office (144 days)  ($150+$15+$6.60) = $24,710.40- 2 days in office (96 days)  ($150+$15+$6.60) = $16,473.60- 1 day in office (48 days)  ($150+$15+$6.60) = $8,236.8Your time, attention, and well-being are the #1, and most valuable assets that you have in this life. A workplace which robs you of these for an unnecessary corporate bullshit requirement which some out of touch C-Suite pricks came up with, may, or may not be worth your time - you decide.EDIT as of 121520222 12:05 AM UTCOne thing that I completely forgot to add: The dreaded weekend and late evening deployments, and prod support. If youre lucky, you will take turns doing this with your teammates - but these are still extra hours, which you are not getting paid extra for as a salaried employee.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_kotf7u","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/kotf7u\/you_dont_have_to_be_a_software_engineer\/","DATE":1609545600000,"PLAIN_TEXT":"Im posting my experience moving from software engineering to sales engineering because Im seeing a lot of posts from people who are unhappy with software engineering or even just worried if software engineering is the right career for them; you dont have to be a software engineer. TLDR: Knowing how to develop software opens the door to many other roles, and many roles would benefit from having someone who knew how to code. I used to be a software engineer, but now Im having way more fun as a sales engineer. I have friends who became UXUI designers, and their frontend development knowledge really helps with prototyping. These are just a few examples of alternative roles. ------I studied computer engineering and then worked full time as a software engineer for 2 years. I loved working on projects in college, but I hated working as a software engineer; I went from working on fun projects where I had a lot of control over the project to mostly maintaining code. It sucked having little say in the projects I was working on. A lot of my close friends started switching over to client-facing engineering roles; we were always really social, but coding all day wasnt our thing. I left my software engineering role and joined a start-up as a post-sales engineer (an engineer focused on supporting a GTM team after the prospect signs a deal) at a SaaS startup. The pay was the same as my software engineering role, but I only spent about 30% of my day coding. I spent the rest of the day working with customers and collaborating with other post-sales &amp; engineering teams. The work consisted of integrating our product with theirs to troubleshooting our product for a customer. It was refreshing going from coding all day to client-facing communication. I left the company and joined as a pre-sales engineer (an engineer focused on supporting a GTM team before the prospect signs a deal) at another SaaS company recently. Similar to the last role, there isnt lots of coding involved, but this role is focused on convincing prospects that our tool was the right tool for them. Because of that, the role is a lot more flexible and engaging, and I have a lot of control over how I want to tackle each prospect. I also have a lot more say in how our organizationcompany operates since Im exposed to EPD and our prospects directly.This job is what I loved about college, and Im glad I was able to find it. Im hoping those who are discouraged by software engineering take some time to research some other roles that involve coding. My example is just me going to a client-facing engineering role, but I have friends who transitioned to UXUI design, data science, marketing analytics, sales ops, etc. There are tons of roles where your software development skills would come in handy. Of course, youll need to develop the additional skills to succeed in the role, but you might already have those skills in your belt. For example, if youre outspoken and good at explaining complex concepts to non-technical people, you have what it takes to be a sales engineer.-----For those who are interested in client-facing engineering roles, there are tons of different names for the roles, and companies often use the same names for different types of roles (a solutions engineer can be post-sales at one company and pre-sales at another). Im going to share some names Ive seen for these types of roles for you to search up yourself. You can also mix and match a bunch of these words and find similar roles lol.Partner Engineer, Sales Engineer, Solutions Engineer, Solutions Consultant, Solutions Architect, Technical Sales Engineer, Technical Account Manager, Customer Success Engineer, Success Architect-------Edit: Im just sharing my experience with those who might be in the same boat as me. Im not saying my experience is the right way to do things.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_t4d580","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/t4d580\/keep_in_mind_if_you_are_going_to_a_new_job_the\/","DATE":1646092800000,"PLAIN_TEXT":"I bounced and got a new job with a great manager. I mean he was super awesome, I knew his work style matched mine, and he seemed like a very great boss overall. Except a month later he bounced from the company. Okay cool. Then I got put under his boss, but that guy bounced. Okay cool, then I get put under that bosss colleague. I then try to learn the code base, but the other engineer who was there for 4 years bounced, okay cool. Im on my own. I then get 2 junior levels placed under me, and they dont have any direction, so I take them under my wing. I reach out to my mangers stating I need more assistance knowing the processes here (like deployment, which services our teams cover etc). They gave me a senior lead for a sister team and I managed to get about 2 months of information in me, then that guy leaves. Its just endless amount of people leaving and new people going, and its getting to the point where a lot of people are just the blind being led by the blind. So remember that if you join a new company its probably to backfill someone that left for a better job too. I love the company and the work culture, but the endless people leaving, is starting to stress me out.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_j9zfgd","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/j9zfgd\/positioning_yourself_to_take_advantage_of_good\/","DATE":1602460800000,"PLAIN_TEXT":"I was recently promoted to Director of Engineering and, after taking some time to reflect this weekend, I realized that it looked like my career trajectory was basically entirely luck. I called and messaged an odd dozen of my friends in the industry and, oddly enough, it seems to be that way for a lot of people. I realized there had to be more to it.Heres a bullet list of my career history: June 2011 - In grad school (for stats), I got a job as a Systems Analyst at $22hr. At first this was just doing analytics in R, but I learned SQL. The DBA in that department left and I took on a few of his projects, optimizing stored procedures and fixing issues here-and-there in the database.  December 2013 - I was laid off. I had now graduated, so I had no insurance. It soon became apparent that rent and student loans were gonna burn through whatever savings I had pretty quickly. In February, I took the hit to my ego, moved back to my hometown (which was a lot cheaper CoL), got certified as an MCSA in SQL Server, and started going to local database meetups, looking for jobs. March 2014 - I got an interview for a job from one of the people I met at the meetup I was attending. I got it, making 55k as a DBA, partially off the back of my prior experience and the certification, but mostly by asking good questions and selling myself. This was a pretty laid back job, SLAs were not very tight so I got to spend time learning by trying to make our backend systems more efficient and resilient. I started reading about DevOps and quickly became enamored by the concepts. I built automated deployment pipelines for our database schema changes. I started writing tooling and automation around our compliance requirements. I got experience with AWS when we migrated our relatively simple setup there. I spent 5 years at this job, getting cost of living raises every year while desperately trying to pay off student loans. They could afford to pay me more, but they didnt, so I eventually got fed up and left. April 2019 - One of the people I met networking in the local DevOps meetups had an opening for an SRE at his company, and asked me to apply. I interviewed there, and it seemed like a great group. The company was a startup division of much larger firm. The interviews were laid back, we just talked shop for an hour. They asked me how much I was making and I said It wouldnt make sense for me to move for less than 115k. This was, of course, complete horseshit, but not technically a lie. I defined what made sense for me after all. They offered me 115k + bonus, and I took it. September 2020 - By now, I realized that, while I loved the team I worked with, this job was basically the logical opposite of my last job. It was fast-paced, frenetic, and we had to work hard and be really creative in order to hit milestones. I was learning a ton, and had been promoted, but I had started to feel the beginnings of burnout. In addition to my job, I had been leading brown-bags to teach people how to use the self-service platforms we were building, and consulting internally on other projects. My boss quit suddenly, and I was asked to take his position in the interim. I did, and after taking a crash course on corporate accounting and doing two jobs for a month from hell, I was asked to take the position permanently. Im now doing a lot better, things have started to stabilize and were working on several projects to improve our workflow, which are a lot of fun.This cannot be overstated: soft skills are key! While continuous learning is required for any career advancement, it wont help you get lucky. Soft skills enable you to put yourself in a position to take advantage of opportunities you would not be able to otherwise. I got my SRE position easily because the company was in a really tough spot and needed the expertise then and there, and I had gotten to know someone working there who fought for me. I got a promotion off the back of an unexpected departure because the company needed someone now, and I had developed relationship with upper management by offering to volunteer to do internal consulting and knowledge sharing for other product groups. I had realized that the reason I did not get a significant raise or promotion at my second job was because a lot of my work was not visible, just tinkering in the database layer and automating the boring parts of my job, and I wasnt going to make that same mistake again.I learned to speak clearly with confidence by pacing around my room at home and practicing presentations, doing mock conversations, even practicing joke delivery. It might sound odd, but none of this comes naturally to me, so I had to learn somehow.This had the knock-on effect of giving me some real confidence, when I realized that people were actually listening to me. I pushed to make as much of my work visible to upper management as possible, and where that wasnt possible, I started going out of my way to do stuff that was more public; teaching, mentoring, organizing internal knowledge-sharing communities, etc. Helping other people is genuinely one of the best things you can do for yourself.You never know when an opportunity will come your way. If you care about advancing your career, you should be prepared to seize it. Network, practice your soft skills, and deliver as much visible value as you can.EDIT: upvoting all the rhumblebrag comments since they make me giggle. This sub helped me out a few years ago when I was bored and frustrated at my last job. Im just paying it forward.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_cjzbfv","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/cjzbfv\/why_i_stopped_giving_companies_my_references\/","DATE":1564444800000,"PLAIN_TEXT":"While I was job hunting a few months ago, I stumbled across a job opening on LinkedIn posted by Robert Half. After applying, I was invited to interview with Robert Halfs VP of Software &amp; Applications. But before my interview, He requested 2 of my professional references which I happily gave him. After that, the Skype interview went great.The next day, my reference called me telling me he spoke to Robert Half &amp; that he said he talked me up good &amp; that he thinks Ill get the job.I never even heard back from Robert Half. However, my reference did. They called him 3 more times for reasons unrelated to my job search! For the past few months, he received calls from Robert Half in which they were trying to get their software developers to work on his company.I find it very unprofessional that they used my references for their own gains without even having the decency to write me an email telling me that I didnt get the job. Unbelievable.Edit: Thanks for all of the up-votes everyone. This was actually my first ever Reddit post.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_q7frue","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/q7frue\/anyone_else_mentally_exhausted_because_of_wfh\/","DATE":1634083200000,"PLAIN_TEXT":"WFH has me in real bad shape mentally. I moved to a new city and live alone, so I sit in an empty house from 9-5 silently working (when not in meetings). 6 months now ive been doing this and I think its causing me some real depression. I try and get out on weekends and go to meetups or play sports or something, but come Sunday evening I enter a deep sadness thinking about the lonely work week ahead. Anyone else go through something like this? How do yall cope?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_10g2o74","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/10g2o74\/the_cs_market_is_collapsing\/","DATE":1674086400000,"PLAIN_TEXT":"[https:i.redd.itaax0nee5xvca1.png](https:i.redd.itaax0nee5xvca1.png)Microsoft Employee Count: 2019: 144k Employees 2020: 163k Employees 2021: 181k Employees 2022: 221k Employees 2022 (Q4): 211k Employees (Post Layoffs)Few important factors to consider here: No, CS careers arent going away Bloatedunorganized hiring lead to recent layoffs, some factors:  cheap money (especially early in pandemic where interest rates were low)  companies with artificial  over estimated valuations  companies that struggled with profit already, but confused excess capital for growth  companies with shitty business practices andor shitty growth strategies  I think the writing was on the wall for a lot of these companies Fortune 100 companies dont represent the entirety of the CS labor market, there are ton of medium - large companies in serious need of qualified CS talent. Crypto was already doomed. Facebook, Amazon, Microsoft, Google, (Insert cool high paying tech company here), arent the only companies, rethink what motivates you in your career goals if your only goal until now was to work for a mega tech corp, maybe its not its cracked up to be? This is indeed a challenging time, especially for new gradsjuniors who saw the crazy opportunities of the last two years as companies rapidly expanded but now literally cant get a call back, but fear not - there are still plenty of companies hiring, and while nobody here can really speak to which direction the high paying, or general CS career market will trend in the coming year - this field isnt going away and the demand for qualified candidates will grow, the bar will be raised, but there will be more demand as time goes on, so for now persevere and good luck. Only people who havent really had any actual experience think ChatGPT will replace us all&amp;#x200B;TLDR: CS Careers arent going anywhere, chill&amp;#x200B;Data stolen from: [https:www.reddit.comrdataisbeautifulcomments10fllwqoc_microsoft_set_to_layoff_10k_people](https:www.reddit.comrdataisbeautifulcomments10fllwqoc_microsoft_set_to_layoff_10k_people)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_vc4m04","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/vc4m04\/coinbase_announces_18_layoffs\/","DATE":1655164800000,"PLAIN_TEXT":"Source: https:blog.coinbase.coma-message-from-coinbase-ceo-and-cofounder-brian-armstrong-578d76eedb12If you are affected, you will receive this notification in your personal email, because we made the decision to cut access to Coinbase systems for affected employees. I realize that removal of access will feel sudden and unexpected, and this is not the experience I wanted for you. Given the number of employees who have access to sensitive customer information, it was unfortunately the only practical choice, to ensure not even a single person made a rash decision that harmed the business or themselves.I also wanted to make sure that all affected employees are taken care of in this transition, and that we support them in finding a new role. Employees who are departing today will receive:Minimum of 14 weeks of severance plus an additional 2 weeks for every year of employment beyond 1 year4 months of COBRA health insurance in the US, and 4 months of mental health support globallyAccess to Talent Hub, where members of Coinbases team will work to connect with you with open positions at other firms (including portfolio companies from Coinbase Ventures and other top crypto VC funds) ===========================Edit: Due to the US housing slowdown, these two layoff news came out a few minutes ago:Redfin announced layoffs of 6% of its workforce:https:www.marketscreener.comquotestockREDFIN-CORPORATION-37247408newsREDFIN-CORP-Costs-Associated-with-Exit-or-Disposal-Activities-Regulation-FD-Disclosure-Financial-40721688Compass about 10%:https:www.marketscreener.comquotestockCOMPASS-INC-120835016newsCOMPASS-INC-Costs-Associated-with-Exit-or-Disposal-Activities-form-8-K-40721739","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_piophn","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/piophn\/officially_given_up_on_trying_to_get_a_job_as_a\/","DATE":1630800000000,"PLAIN_TEXT":"Im just going to cook some marshmallows with my CS degree or something, everyones invited.To sum it up, my school career services was ass and I couldnt get intern placements. I did research in machine learning for a year instead. Tons of personal projects from web dev to making a compiler. Still no luck getting a job, Im tired and dont really care anymore, that is all.I actually love programming so thatll never stop, but the job search is at a halt for the foreseeable futureedit: This post came from a place of pain and I was not at all expecting the responses that I got, thank you for the advice and support. Im definitely still going to hold off on the job search for now, but I dont feel as hopeless about the future and Im grateful for that.edit_2: To anyone who stumbles across this post, I assume you might have been in a similar position as me when I first wrote this. How else did you get to a post titled Officially given up on trying to get a job as a software developer. Well, after 1 year of being a SWE, I think I got some advice for you. Network. No, not LAN or WAN, actually go out and talk to people (or write a Reddit post from the comfort of your home). Look for STEM job fairs: your CollegeUni will likely host some throughout the year, or if there are any others that you could go to (SHPE for example). Applying online feels like a void that just sucks up job applications, so definitely try your best to get face to face with a recruiter. The rest is up to you and how well you can prepare for the interviews that Im sure youll be getting when people see the determination you need to have. Best of luck, sadcsgrad out.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_efh2ei","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/efh2ei\/advice_be_an_easy_employee_to_manage\/","DATE":1577232000000,"PLAIN_TEXT":"I manage a team of around 10 engineers. Heres my advice on how to be an easy employee to manage and hopefully itll help improve your relationship with your direct reports. Some of this might be controversial in this sub but heck why not go with the holiday spirit :)1. Be predictable and consistent - It is hard to manage someone who is a super-star one day, but loses motivation the next day. As an employee learn to average yourself out a bit. Dont put yourself on a burner and burn out. Manage your work life balance so you can stay consistent and predictable in your output. This way I can trust and estimate your deadlines a lot better. It is also much easier to put all your positive work forward during review time, instead of having to highlight the few negatives.2. Train your boss with communication - Do you have a micro-manager? This is for you. You need to train your boss so he or she knows youre predictable and consistent. You do this by over-communicating at first, and then slowly dial it down. When you first start, detail your implementation ideas during scrums. Send update notes in emails and again, be consistent. Then slowly shorten and generalize your updates. This trains your boss to learn to take your word and trust you. This is not about being as fast and efficient as possible. It is about being as consistent and as true to your word as possible.3. Push back - In order to even have a chance at doing 1,2 well you gotta push back. This means pushing back deadlines you know you cant meet. Give yourself some wiggle room. Pushing back is one of the best ways you build trust with your boss because it lets himher know that you have a good grasp of estimates and actually care about deadlines. Counter-intuitive isnt it? Time estimates is one of the most difficult tasks for any engineer. Take that burden away from your boss by being involved in estimation process and put your skin in the game. You become the owner. Your boss will be happy to communicate your reasons to his bossclients because it is your head. And you just bought yourself the time you needed and the respect you deserve.4. Dont have surprises - Again, this is in addition to the other points. Do not surprise anyone. It is often not possible to meet the deadlines even if you set them yourself. Nobody can be that predictable and consistent. This is why it is important to communicate a delay or a blocker as soon as possible. Also just own up to it. Tell people you have under or overestimated a certain task and tell them about a lesson learned.5. Dont personalize - Okay, this is cheesy. If the code is in master, no matter who it is written by it is our code. You are not blocked by a certain employee not answering a problem, but blocked by the problem itself. Youre not angry at a teammate for screwing up a deliverable and failing to meet a deadline, but youre competing against the deadline itself. You dont hate the person who introduced a bug, but the bug itself. Utilize your teammates to tackle these intangibles and build camaraderie around that.Middle managers have one of the crappiest jobs. They are still junior in a sense that theyre still expected to be boots on the ground and fight fire as needed. They are not far from the implementation details and tasked with teaching junior resources. However a lot of their review is based on elements they cannot fully control - their reports. This lack of control often leads some new mid managers to try to micro-manage. Nobody loves to micro-manage. Every middle manager wants an employee he or she can trust and be a straight shooter.Happy holidays!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_1134frz","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/1134frz\/if_you_are_desperate_for_a_job_apply_to_the\/","DATE":1676419200000,"PLAIN_TEXT":"You guys probably know this already but I just wanted post this for those who dont. You guys are very in demand in the aerospace industry right now. You wont get the pay and benefits that you would at a shiny apple or google job, but you may at least get a job. I am an aerospace engineer and have worked at NASA and other aerospace companies and they always need coders of some kind. I know the job market is rough for new grads right now so I thought this would be good to post.Some examples of companies you could apply to: SpaceX, Blue Origin, Northrop Grumman, Lockheed Martin, General Dynamics, NASA, Raytheon, Honeywell, GE Aerospace, many more. Also look at local aerospace contractors if you get really desperate.Edit: rough list of companies from least competitive to most competitive Raytheon, General Dynamics, GE Aerospace, Honeywell, Lockheed Martin, Northrop Grumman, Boeing, Blue Origin, NASA, SpaceXEdit 2: I do want to clarify that these arent all necessarily easy jobs to get. However they are another option that you probably have a real chance at landing(for some of the companies listed atleast). Never hurts to apply!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_nv50d3","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/nv50d3\/my_company_drinks_the_koolaid_so_much_that_it\/","DATE":1623110400000,"PLAIN_TEXT":"Ive been working for years at a small startup that has been around for over a decade (you know, the type of place that calls itself a startup to pay you less). In 2020 the company had a 15% drop in revenue and laid off 50% of engineering without warning one morning. Yes, thats all it took for them to have a panic attack and fire everyone.Since then, everyone left had their 401k match cut, got their raises frozen, and had to do the work of 2 or more people. The company culture got fucking toxic. Managers started to micromanage employees, employees were not allowed to speak out about anything, slack conversations basically disappeared, our 1 on 1s were recorded, and we had 7 status meetings in a week.Yet the company kept pushing the narrative that we are a happy bunch and everything is perfect. In fact, our new CEO said 2020 was our best year financially ever, but we still are operating at 50% staff with the same output expectatios. Magically, all negative reviews from 2018 onward seemed to have disappeared from Glassdoor too, its a miracle!The worst part is that a lot of people are drinking the Kool-aid and saying everything is perfect. They really believe we are changing the world. Its fucking time clock software. When I bring up the companys glaring issues some people (not all) say everything is perfect or it could be worse. They talk about the companys values like they are gospel. Every company line they buy hook line and sinker without question.This company has brainwashed people to a degree I have never seen in my career.I have a few interviews lined up, I cant work at this dump anymore. Have you ever seen people drink the Kool-aid this much at your job? How do you avoid companies like this when interviewing?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_s29jtl","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/s29jtl\/95_is_killing_my_soul_how_am_i_supposed_to\/","DATE":1641945600000,"PLAIN_TEXT":"Its getting harder and harder to put in my 8 hours daily. My job is also super demanding. I hate that all I do is work, think about work or recover from work. Wfh as a young person also makes me feel incredibly isolated and lonely, and my job even more depressing. I feel like stating advice like pick up a hobby is just a coping mechanism for making this dreadful existence just a bit more tolerable. I feel like I need to fix the root cause but Im not sure what that is. In my head, its creating my own startup but that seems like an unrealistic dream. What do I do?Edit: to be clear, I mean dedicated to work I do not enjoy and that I find completely meaningless. Im not complaining about having to do work in general. I like having goals and striving towards things. I dont think I will ever feel fulfilled in the corporate world. My sacrifice ultimately disproportionately benefiting and making the company ceo and his friends richer and richer while Im giving up my life for their benefit.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_6ndohd","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/6ndohd\/how_i_went_from_24_gpa_and_unemployed_to_my_dream\/","DATE":1499990400000,"PLAIN_TEXT":"Long-post inc.First of all, I would like to tell you guys that I was unemployed for 8 months after I finished college. I interviewed everywhere, from Amazon to dinky and sketchy startups. Ive taken advice and encouragements from this reddit as I pushed forward. On the other hand, Ive been discouraged by this reddit when the annual salary or what internship did everyone get threads started popping up. I looked at people on this reddit and thought that someone like me with barely any projects, zero (real) internships, and a whopping 2.4 GPA would never land a good job.I kept pushing. I used to not get even an email back from companies. Then I slowly got phone interviews.. in which I failed. I guess its time to go back to reading reddit, time to start working on leetcode and oh, I guess Ill get that Cracking the Coding Interview book. Phone interview started to lead to on-site. Let me tell you, I was not ready for those long 4-5 hour onsite grinds.Eventually, my hard work paid off.And heres the thing. I thought the company I accepted the offer from was going to suck. Its not the Big 4, no one has heard of it. Its just a medium sized tech company that gave me a job as a junior devops. I hesitated because I didnt work hard just to be a devops, I wanted to be a dev. I wanted an above average salary, not just junior rates. Nonetheless, I accepted quickly because a jobs a job. (I didnt even negotiate.)A year down the line, I love this job. I love it so much that I wouldnt leave it for any of the big 4. (except maybe Google). I make average salary in my city but I didnt expect work life balance to be this great.Here are some of the cool things I appreciate from working at a random company : 30-40 hour work week, free foodbeer, go to work 11am-5pm, unlimited paid sick days, amazing manager who really pushes me to climb up the ladder (our first one on one, he wanted me to eventually take his job.) and of course, being a devops. I learned more in this past year than I could have ever imagined. I learned big data(hadoop, mesosphere) ,CDCI (ansibledocker) , AWS (lambda, ec2, cloudformation, batch, elasticsearch, cloudwatch) and became an SME (subject matter expert) at centralized logging (ELK, nagios, splunk). I also learned like 5% of bash, which basically made me four times as fast when writing scripts compared to school-taught languages like java and c++. I wear many different hats even though the company is about a couple thousand people. Ive been a product owner, release engineer, and am currently in multiple different teams (multiple scrums a day).In the end, all these cool things that are associated with my job did not come from a Big 4. It didnt even come from a well-known tech company (you probably havent heard of it). It was given to me even though I have a crappy GPA. How I got a job was just based on tenacity and persistence, how I kept the job was because I took initiative and actually wanted to at least learn devops so I know both path). You guys can do it, no matter how depressing being unemployed can be. No matter how bad the job looks compared to rcscareerquestions kiddos job. This industry is amazing and I wouldnt give up computer science for any other subject in the world. Thanks rcscareerquestions!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_mxl911","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/mxl911\/200k_tc_offer_what_i_did_to_prepare\/","DATE":1619222400000,"PLAIN_TEXT":"I recently landed two offers from two Silicon Valley-based tech companies. One offer was from a medium-sized company just over $100k while the other offer was from a large company that was worth over $200k in total compensation. Both offers were to work in North Carolina. These were the only two companies I interviewed for.I am writing this post to document the things I did to prepare for interviews and answer questions I had throughout the process in the hopes it might help someone in the future. I want to stress that what I write here shouldnt be taken as gospel; this is simply my experience. Please make sure you draw from a wide variety of sources and hear others testimonials when planning for interviews. Feel free to ask in the comments anything I havent addressed.# Technical PreparationHow many LeetCode questions did you do? 106 completed (~120 attempted)  36 Easy  66 Medium  4 HardHow did you decide which LeetCode questions to do?1. I had LeetCode Premium and went straight for the questions asked by the companies I was applying to2. For any questions I struggled with, I added two of the Similar Questions or two questions from Related Topics to my favorites and solved them later3. I then went through [this list of 75 questions](https:leetcode.comdiscussgeneral-discussion460599blind-75-leetcode-questions) and solved any I hadnt solved yet4. Finally, I sorted all the questions by frequency and went down the list, prioritizing medium-difficulty questionsHow much time did you spend on each question?About an hour, sometimes less and sometimes more. If I couldnt come up with an algorithm within an hour and a half, I would look at the solution, save the problem for later, and move on to the next one.Is there a point where you begin recognizing patterns?It was a real struggle when I first started out. I was able to solve most easy questions but was pretty clueless on most medium questions. Things started to come together after I solved about 100 problems, but there were still a lot of problems I glanced at afterwards that I was unable to solve. If I got to do 150-200 problems (before landing an offer), I feel like I wouldve been in a really good position.Tips for solving these questions? Understand every possible method of solving each question you do. In every one of my interviews, I was asked to solve each question at least two different ways. Be sure to find multiple solutions to each problem by either going through the problems Discussion section or, if you have LC Premium, the Solution article Dont just come up with the algorithm. Implement the solution and pass every test case. A lot of times, implementation is the most difficult aspect of a problem. Also, in the process of implementing your solution, you might realize your algorithm is incorrect or doesnt address every edge case. Struggling through the implementation will ingrain the solution much more deeply in your mind Review old questions. This is self explanatory. Dont do too many problems without making sure you remember how to do ones you did a while back. Depth over breadth. 150-200 problems should be all it takes to cover everything you need to know. If you have done this many and are still struggling, you probably dont truly understand the problems youve done and rather are simply memorizing the solutions.Is LeetCode Premium worth it?I felt so, and heres why: Having access to the company-specific problems was invaluable. If there is one reason to subscribe, it is this Some of the questions locked for free users are questions that build the foundation for understanding how to solve many other questions The solution articles are often really detailed and well-written. Theyll cover almost every way to solve each problem -- something that you wont get from every Discussion postMy only warning is to not rely on the debugger they give you. Youre not going to get a debugger in an interview. Get used to debugging by printing stuff to the console.A Leetcode Premium subscription definitely isnt necessary if you cant afford it.Cracking the Coding Interview or LeetCode?I did both. I started off going through Cracking the Coding Interview. I only went through the chapters on Strings, Arrays, Linked Lists, Dynamic Programming &amp; Recursion, Trees, Greedy, and System Design. The introductory segment for each chapter is really great as it covers a lot of the basic concepts you need to solve a wide variety of problems in each category. See if you cant get a used copy of the book for cheap.# Background &amp; Other PreparationWhat other preparation did you do besides LeetCode? Before each of my first several rounds of interviews, I went through a list of common questions I might be asked about each project I listed on my resume, rehearsing my answers out loud. I made sure I could summarize what I am currently doing in under 30 seconds.One thing I want to warn you of is that youll want to make sure youre prepared for system design questions (e.g. design TinyURL). LeetCode does not have any practice problems for this, so just be aware that these problems exist.Id also recommend reading Clean Code by Robert Cecil Martin. I got asked a lot how I would change my code for a production environment, and reading this gave me a lot of material to work with. It will also just make you a better software developer in general.Whats your background? I am 24 years old and have a little under two years of experience as a software consultant for an investment bank. My main skill is JavaSpring Boot but I also know a little bit of React.js and Vue.js. My resume really isnt that impressive, so dont let a weak resume stop you from shooting your shot.How long before you got an offer? 2.5 months since I sent out my first application. This is also about how much time I spent grinding LeetCode. I got both of my offers in the same week.Where did you find jobs to apply for? LinkedIn. Nowhere else.# Thoughts on the Tech Interview ProcessI hate it. I think its really stupid. Some of the questions I came across on LeetCode had me thinking, They cant seriously expect a human being to solve this in under 45 minutes. Some questions are just glorified IQ tests that prove nothing about your ability as a software developer. Some questions are so ridiculously mundane I wonder why they get asked at all. If these are your thoughts, just know you are not alone.Unfortunately, tech companies do not care about your feelings. If you refuse to prepare for these questions out of spite, someone else who wants it more will step up to the plate and happily take those offers from you. Figure out what its worth to you. Good luck# EditsIll address some other things here based on questions Im frequently getting asked.Which companies gave you an offer? Are there really companies in NC that pay that much? Im not at liberty to say which companies gave me an offer. What I will say is there are a ton of tech companies with offices in the RTP area that extend offers making mine look like a government welfare check. Google, Nvidia, and SAS are just a few examples. There are some other really solid companies here too, like IBM and RBC.How did you find those opportunities? Set your location preferences in LinkedIn to North Carolina and youll see all the available jobs in the area.What did the rest of your resume look like? I had a summer internship at a tiny company where I wrote maybe 100 lines of code. I had a research assistant position where I basically just put together datasets for my supervisor to use in her research. I also volunteered as a web developer for a hospital my senior year. I listed any technologies and languages I had ever touched but left out anything I couldnt talk about at a high level. My resume really isnt that impressive and I never got asked about these trivial roles.What is your comp package? 138k base + 14k bonus target + 50k equity over 3 years (edit: 150k equity total). Theres also 401k matching and a discounted stock purchase plan but I havent calculated what those are worth.Are you getting paid by LeetCode? No. I am just documenting my experience here. I am well aware that you can get a job without ever touching LeetCode or a similar site. However, landing a job without any practice is extremely unrealistic for the large majority of people, myself included. Feel free to use HackerRank or whatever else is out there. Or trust your smarts and go into your interviews blind.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ldnkkw","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ldnkkw\/went_from_90k_to_140k_by_managing_phone_screens\/","DATE":1612483200000,"PLAIN_TEXT":"I am very fortunate to have gotten an offer for ~140k (mostly all base, as is customary in Chicago), while I was just at ~90k TC (for those of you who are curious, I am a 2019 grad and have been at the same company since then) - and I did not do any big LeetCode grind or anything like that (maybe 20 LeetCode easies and mediums total in a one month period). However, one tactic I found really useful, was managing recruiter phone screens strategically.&amp;#x200B;1. I set up a system to weed out really poor recruiter outreach. Most outreach is absolute shit - like roles that do not match with my experience at all, or have really poor compensation. I simply stopped replying to to most bad recruiter outreach where the recruiter clearly did not make an effort (like sending me job descriptions asking for 7+ years of experience). This was kind of brutal maybe, but I am not going to spend 30 mins every day replying to all the crap I get on LinkedIn DMs and email. I spent about 15 hours creating email filters to weed out bad outreach and prioritize high quality outreach (this may have been a bit obsessive). I asked for comp ranges typically before hopping on a call.2. When asked for comp expectations in the call, I would NOT talk about my current pay (it is actually illegal for recruiters to ask for it in Illinois). When I was asked about expectations, I would very clearly mention the compensation range of companies I was talking to. So I would say something like this: I have been talking to companies mostly in the 120-140k total compensation range, so I would like to target something in that range if we are going to move forward. Earlier in the process, these ranges were smaller, but as we went along, those numbers got bigger. I think I started off talking to companies in the 100-110k range, and this tactic helped move that range up. This was transparent, and it seemed to work well for me (transparency can help - who would have thought). As I went further along this process, I would let the recruiter calling me know if I had on-sites scheduled, or was approaching the pre-offer stage at other companies. This made them seem to move faster and advocate for higher pay for me to whoever they were representing. I even had one recruiter who, when he heard I was close to an offer, get back to me the same day after a phone screen with an expedited interview process involving a call with the VP engineering the same day.&amp;#x200B;Just thought I would share my experience. I did not really do anything special for interviews or interview prep, but I think I managed those phone screens really well, and that is not something we talk about often on this sub IMO. A lot of us could get disproportionately great results for the effort invested by being more mindful about key points in the process that we tend to not focus onnot like (particularly when you are asked about comp expectations). This is an opinion formed from anecdotal observations and personal experience, so take it for what its worth. Also, luck played a huge role, of course.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_m158xp","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/m158xp\/my_manager_went_through_hell_to_get_me_a\/","DATE":1615248000000,"PLAIN_TEXT":"A little more context from title: last month I got a job offer from another company a bit bigger than my current employer, and it would double my salary. I talked to my manager and she insisted I listen to a counter offer, she threw numbers at me but they didnt hit at least equal to the other offer, so I declined. She then escalated it to her manager, we talked and while he got closer to what I wanted, it wasnt enough, so I stood my ground and opted to go to the new company. Then, he escalated things to HIS manager which is basically second to the CEO himself, and his manager finally offered me the same amount from the job offer, so I decided to stay and declined the job offer. Fast forward to last week, I get an email from Big A stating that I passed the virtual on-site and they want to hire me. The salary they offered is almost 3 times the one I have right now, which is a lot, and obviously working in big tech will look great on my resume. Theres no way I can decline this, but I feel bad for making my employers scrape the bottom of the barrel to pay me what I thought as deserving, so how do I go about telling them Ill leave anyway without burning any bridges?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_n42yc9","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/n42yc9\/anyone_else_completely_burnt_out_from_wfh\/","DATE":1620000000000,"PLAIN_TEXT":"Im just so sick of working and living in the same area. It feels more like strangers nagging me to do stuff at home versus working and I find it really frustrating.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_lkrmyr","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/lkrmyr\/drug_addict_to_big_tech_swe_my_story\/","DATE":1613347200000,"PLAIN_TEXT":" Hey guys, I wanted to share my story with the community for inspiration and encouragement. I simplified it as much as possible but its still pretty long. I hope you enjoy and get something out of it. Happy to answer questions.I grew up middle to upper-middle class in a small town in the US. There were some issues in my family-- divorce, mental illness, etc, but they are good people and I dont blame them for anything that happened. In school I was gifted and got good test scores but never was a great student. I struggled to pay attention and always preferred messing around with my friends and playing video games to studying. I loved computers and technology but never really had a direction. This lack of work ethic would come back to bite me later on. I did the absolute minimum to apply for colleges but ended up getting into a state university because my teachers and parents pushed me (thanks guys).Around this time I started smoking weed and I loved it. It coincided with me moving away from home, so I could get away with smoking all the time. It was just weed in college after all. Harmless, right? Soon I was smoking multiple times a day and partying on the weekends, not taking school seriously at all. I didnt even declare a major. I started dabbling in other stuff-- Adderall to study, ecstasy and acid at an EDM show, Xanax or Vicodin to chill out. People would express concern about my behavior but I was in denial. My life started falling apart. I flunked out of school. I was always high, always broke, relationships falling apart from my shitty behavior, working shitty jobs to buy drugs first and then pay rent if there was money left over. At some point I got introduced to heroin and that was the beginning of the end.I descended really quickly into full-blown addiction. I completely destroyed my life, did terrible things to people I cared about. I got a really nasty spine injury while intoxicated and still have the side effects. At one point I almost died from an overdose. I only survived because someone found me in the bathroom. I woke up in an ambulance. I was totally broken as a person, facing homelessness, living off food stamps. It was by far the worst time of my life and I wont say any more about it.Eventually I asked for help and spent a year bouncing in and out of treatment, community support groups, etc and eventually managed to get sober. Happy to go more in depth on how I did it but it was a lot of work as well as help from other people in my life.I reached out to the school I flunked out of and ended up talking to a dean. I told him my story and he helped me get back in. I was broke but loans, grants, and cheap in-state tuition came through for me. At one point I had three part-time jobs in addition to my classes. I picked engineering since I could get a 4-year degree and start making money right away, but switched to computer science because it was fun and I couldnt get into the engineering program due to my shit GPA. I am very, very glad I switched to CS.It was hard trying to stay sober and go to school and work and learn how to program in my mid-20s. At one point I slipped up and relapsed, but I again reached out to the people around me for help and got back on track. I was fat and lonely and wanted to date, so I started working on my fitness, learning to dress better, putting myself out there on dating apps-- these are other things Im very glad I did. All this shit sucked and I was unhappy but I kept going. Its not like I had a better option. My classes were hard but I kept trying and gradually built up my work ethic. Through persistent effort I started to do well in school for the first time. I was making friends, I lost weight and found some sports I really enjoyed, and I was even going on dates.Eventually I went to a career fair and found out you were supposed to get an internship. What? I applied for a few and got demolished in the single interview I had. I took classes over the summer instead. The next year I went to the career fair and went to literally every table. I failed the interviews cause I still didnt know what I was doing but I followed up via email on my prospects and found a program where someone had dropped out and they needed a replacement. Nice! This was my big break. They hired me with almost no interview.I was absolutely terrible in my internship, working with kids way younger than me who somehow were way smarter than me, but I kept showing up. I built relationships with my coworkers and they let me work part-time during the school year and full-time in the summer my last two years of school. Not because I was some bright shining talent but because I showed up reliably and was pleasant to be around. I was never any good but I learned a lot and earned enough money to stop taking out loans (huge win).The fall before my graduation I knew a lot more about the job market and what interviews were like. I got a book on coding interview prep and practiced as much as I could. I went to every job fair and found every new grad hiring program I could online. I applied and got a ton of rejections-- but also a ton of interviews. I ended up graduating with 8 job offers. Most of them were for smaller companies in my state but one of them was at a big coastal tech company with comp in the mid six figures. I seriously could not believe it and accepted.Life has been fantastic since then. Im over five years sober from drugs and booze and engaged to be married to a great person (and a doctor!) I have a job I enjoy that can be challenging and stressful but is ultimately very rewarding. I work on cool technology with people I respect and learn from. I like where I am but I keep my skills sharp in case the time comes for me to move to a different company. I never would have thought I would have this lifestyle or earn this kind of money-- more than any of my friends or family and Im still very early in my career. One thing I absolutely cannot forget is that every day is a choice to keep working and doing what I need to do to keep my life on track. It would be so easy to fuck it up and go back to where I was.Lessons learned:&amp;#x200B;1. Fix your problems. If you have something wrong in your life, mental illness, toxic relationship, addiction, family issues, whatever, get it under control however you can. Sometimes that means separating yourself from people that are messing your life up. Once your life is in order, everything else will fall into place.2. Do whatever it takes. I had to desperately seek recovery to get and stay sober. It had to be my top priority and I barely made it. But I did it. When I applied this to other parts of my life such as fitness and my career, those took off as well. Learn computer science fundamentals (data structures and algorithms). Practice coding problems-- they will make you smarter and the best jobs will test your knowledge in interviews. Ive seen people on this sub make all kinds of excuses why they dont do this, but lets be honest, its just laziness. You can do it. Keep working at it until you get where you want to be. We have it easier than pretty much any other profession.3. Be a three-dimensional person. Take care of your body-- its meant to move and not to sit in front of a screen all day. If youre overweight, learn how calories work and fix it. Find hobbies you can get into and relate to other people about. Video games dont count. Pick something interesting. Side projects are fine but you need to have a life outside of tech. I have made a lot of friends through my hobbies. Learn to present yourself well. Dress well, practice good hygiene, develop social skills. Dont be a stereotypical smelly weirdo nerd. All of this is learnable. I was a fucking creature when I first got sober and now I am a well-rounded member of society. edit: An addition to this one is pick a high-quality news source such as New York Times, Wall Street Journal, Economist and pay for a subscription. Keep up to date on whats going on in your country and the world so you can talk to others and be part of it. Learn to differentiate between news, opinion pieces, and toxic bullshit that gets shared on social media. Having a political opinion is good but stay away from extremes.4. Stop feeling sorry for yourself. I was poisoned by self-pity but the truth is, life is hard and unfair. No one is going to fix your problems for you. And yes, some people are born lucky and everything just falls into their laps. If you want to have a great life you need to go out and build it piece by piece. Let go of your entitled bullshit and accept that youre going to have to struggle and do things you dont want to in order to grow and be happy.5. Drugs and booze and other vices-- many people are able to do these things occasionally and function fine. I am not one of them. You need to be honest with yourself about this. If you go to a party once every few weeks, youre probably ok. If youre smoking weed every day, sorry to tell you but you might have a drug problem. Cut that shit out. It will only hold you back. If you are an addict like me the only option is to stop completely. Resources are out there to help you stop.6. Dont live in the past-- I can never take back all the pain I caused, the bad choices I made, the injury I got. All I can do is try to make it right and do my best to do better going forward.7. Anything is possible. I quit heroin and came back from death. I am a mediocre engineer but very successful because I keep trying. You dont have to be born special to kick ass, it just takes hustle.TLDR: Started doing drugs, stopped with enormous difficulty, went to school, hustled hard, got a great job","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_klyxns","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/klyxns\/new_grads_dont_worry_too_much_about_the_perfect\/","DATE":1609113600000,"PLAIN_TEXT":"I am an ex-big 4 worker, and I must say, that place was hell. As a new grad coming from a mediocre school and only a couple small internships, getting a job at [biggest cloud company in the world] was a dream! I worked extremely hard preparing for interviews my whole senior year and I thought I was going to be set for the rest of my life.Luckily, when I got to Seattle, I came to an org that was in the middle of being disassembled from the top to the bottom. I had an extremely incompetent manager who was just looking out for himself, a team of engineers who preferred to speak in Mandarin over English, and not a single piece of documentation for our code base.The cherry on top was my first conversation with my manager was we can hire SDE1s at anytime, so you are not that useful until you can get to SDE2.After not having a single day of vacation for over a year (yes I worked on Christmas thanks to the companys oncall 247 policy!), half my team moving to other companies, and a manager change, I was put on the bottom of my teams ranking list because I had the least amount of experience. At the end of the day, you are worth as much as the years on your resume, how else is a manager that doesnt know you suppose to rank you amongst everyone else at a company that requires rankings? It was devastating to me that after working so hard work (at an estimated average of 50 to 60 hours a week), that it didnt matter.This was all almost a year ago now, but I have been at my new company and, even though the work is not as difficult, I am not having constant panic attacks to get stressful, mismanaged work done.This work force will chew you up, and I see a lot of new grad peers constantly stressing out about getting that perfect job. The only thing that matters is working somewhere that is not bad for your health. Literally just being in this industry for multiple years will get you more than enough money, you dont need to be a rockstar, that is all just marketingrecruiter BS.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_wcu4pl","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/wcu4pl\/lets_all_be_a_bit_nicer_to_each_other_here\/","DATE":1659225600000,"PLAIN_TEXT":"I have been active on this sub for a long time now, and I always enjoyed helping out people around here by answering questions.I dont know what happened, but I noticed that large increase in hostility and toxic behavior around here in recent months.Ive noticed a lot of people jumping straight to personal attack as an opening of a disagreement. Ive seen people assuming the worst motivation from anyone when they see an opinion they dont like. A somewhat polarizing thread last night resulted in OP getting personally attacked and receiving rude DMs and even a troll post poking fun of him. Thankfully mods brought it under control.There is a reason why a lot of experienced people stopped contributing to this sub. You say something people dont want to hear and you are instantly made the target of a pitchfork mob.Just because the downvote button is there doesnt mean someone has to use it. We are software engineers. There are always 5 opinions among the 3 of us. Disagreement is in our nature, but lets disagree without being disagreeable.But people get such a boner from assigning someone to be the shitty bad guy and then go to town on them. People saying the wrong answers fall victim to that, and so do people asking the wrong questions.Recently I was telling someone that if they finished their tasks way early in the day then they can consider reach out to the team and see if anyone can use any help. Someone immediately replied with you must be a shitty manager trying to exploit people and I feel sorry anyone who has to work for a piece of shit like you.Thats the day I took off my manager flair. The amount of toxicity I see on this sub in a month is more than the total of what Ive seen in my entire professional career, across 8 different jobs, ranging from startups to pre-IPO unicorns to multiple FAANGs.But precisely because of that, I know vast majority of you guys arent like this in real life. Internet brings out the worst of people (damn our predecessors for inventing the damn thing lol), but I really think this sub can do better, because Ive seen it being better.end of rant.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ejkd01","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ejkd01\/name_and_shame_home_depot\/","DATE":1578009600000,"PLAIN_TEXT":"This was for data analyticsbusiness analytics in the corporate office. Was contacted by a recruiter after applying that they wanted a phone interview. Had the interview (purely behavioral) and it went great. They told me they wanted to fly me to Atlanta. Awesome! In the coming days they set up a flight hotel room etc. Everything went great. Had two interviews (both 45 minutes) with two people. First went pretty well (710) second one went really well (910). I was told they would get back to me within a few weeks. A few days later I receive an email from the head recruiter saying that my recruiter will send feedback next week. Great- this is it. I then open my email one morning- for her to tell me to wait a few more weeks. Great. At this point I have a final round interview with a telecom company. I let Home Depot know and they told me to notify them if I get an offer. They ended up giving me an offer and I let Home Depot know. My recruiter said we would be in contact soon. 7 days later and I still havent heard from them and I told my recruiter I might have to sign my current offer. She said she wanted to call me. We talked and she recommended I sign my current offer and if I get Home Depot to renege. I was admittedly surprised she said this. I never want to renege on an offer and at this points its been quite a while. (2+ weeks) About 10 days later I was contacted and she wanted to speak with me- finally. She then calls me to tell me to wait until Mid January. Keep in mind this was mid December when she told me this. I was floored. But I decided to wait. Finally, I emailed my recruiter yesterday. She wanted to call me. She called me today to tell me that I did great in the interview and the hiring managers liked me but a returning intern accepted a returning offer- and thus they couldnt offer me a position. After almost nearly two months of waiting and being strung along I was declined. Im not upset- Im actually really excited about my current offer. But I was shocked a Fortune 500 company could be so disorganized. Furthermore, it shouldnt take nearly two months- for a rejection. Just my two cents","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_fcgxnw","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/fcgxnw\/its_so_much_less_stress_when_youre_not_pursuing\/","DATE":1583107200000,"PLAIN_TEXT":"I graduated a year ago and I applied to many jobs. I tried really hard to get interviews at the Big N companies. I had dreams of moving to a major city, working for Google or Amazon and thinking about all the pride and glory I could have to say I worked for [insert Big N here]. Eventually I realized I wasnt as good as I thought I was. Those leetcode problems didnt stick with me. Trying to memorize all those algorithms and data structures were stressing me out. I really didnt like programming as much as I thought I did. I realized I was mediocre.I started applying to jobs at random companies Ive never heard of that I would normally ignore. In small cities near that werent tech hubs. I got a phone interview at a small company nearby that did hardware and had a small 6 person webIT team. I was dreading the idea of working there. But I went in and met the people and I flipped completely. Everyone was so nice. The boss seemed to really care about all their employees. Everyone was a family and I felt immediately welcome. I got along great with everyone and their interview process went smoothly, I felt like I actually connected with real people for the first time.This was a huge contrast to the awful, stressful, interviews I had at tech companies in bigger cities where everyone felt cold and like they couldnt care less about talking to me. People who drilled me, were snarky, and got visibly annoyed when I didnt know something. I had quite a few ghosts and interviewers who bailed and recruiters who were awful and sent me wrong information. The interviewers seemed to barely glance at my resume. At this company, people I never met were genuinely excited to talk to me about small details about myself.Also? There was practically no technical parts of the interview. I got casually asked a basic array question that would be CS101 and that was it. The rest was personality and half the interview process was me shooting the shit with people about life, music, hobbies, etc. What a relief!As far as pay, its not amazing and its not 6 figures, but its livable while also being relatively comfortable in this non-major city. Theres no overtime and rarely ever will you get called outside of work. I can easily afford rent, utilities, food, etc. while also having a few hundred to save and few hundred for recreational spending. And thats fine by me. I dont think Id be any happier with more money. I can work relatively stress-free and enjoy my hobbies outside of work. Theres no pool table or free snacks or a Nintendo Switch with Smash Bros in the break room, but who cares. Im there to work. I can have fun at home.Honestly Im relieved. I wish I stopped trying so hard earlier and beating myself down not realizing I just didnt have the aptitude for this stuff. Its not a company anyone has heard of, I cant wear it like a badge of pride, but Im making rent and Im happy. I realized I just wanted the pride of working for a company like Google, so I could tell people and they would be impressed, but thats all superficial. It was a vicious cycle of thinking I needed to be great, being unable to achieve what I wanted to achieve, and emotionally feeling like shit afterwards. Genuinely the last year of my life has been the worst Ive ever felt mental health wise.By all means, shoot for the big companies and salaries, but if its destroying you mentally, I found giving up and enjoying being mediocre to be the way to go.Just wanted to share my story after reading this sub for the last ~2 years and feeling like if I didnt make 6 figures in a major city at a company people have heard of, I was worthless. If anything, I feel the most worth at this small company than I did interviewing at bigger, more well known, companies.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_v6x1zg","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/v6x1zg\/first_time_involved_in_the_hiring_process_here\/","DATE":1654560000000,"PLAIN_TEXT":" Dont use the indeed resume. IMO it looks very generic and will look exactly like a dozen other resumes . It retrospect its easy from my perspective why its hard to get a response on indeed. If you are interested in a company - make sure to use your own resume or maybe apply directly on their website if possible. Dont make your resume more than one page. CVs can be different. But resumes - that are more than one page usually reflect negatively on the applicant. EDIT: People disagree with this one. The consensus seems to be if you have &lt;5 years you can keep it to one page. If you are 10+ years two pages may be expected. YMMV Dont use super small font to get everything in on one page. A list of technologies doesnt really suggest to me that you have experience in those technologies - if possible list technologies used at jobs that you used to create certain products. If you dont have job experience list relevant course work about those technologies and which aspects of those languages your learned about. Proof read your resume - A spelling mistake would not necessarily disqualify an applicant - but any points against you hurts. A link to a github or portfolio is huge. If I am trying to decide between 3 - 4 resumes - any extra information helps.I know this is subjective and just my opinions - but I feel bad when I see people say they have sent out dozens of resumes with no response. I think often times its probably just a bad resume or something else they are unaware of.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_6tc4uw","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/6tc4uw\/i_created_a_mind_map_of_nearly_all_the_concepts\/","DATE":1502496000000,"PLAIN_TEXT":"A little background:Ive always dreamed of working in Silicon Valley, so last year I decided to quit my software engineer job and move to the Bay Area. For 6 months, I spent 8-10 hours almost everyday studying or interviewing for my next job. I applied at over ~120 mid-sizedlarge tech companies, (phoneonsite) interviewed with ~70 of them, and was rejected by or failed almost every single one. Needless to say, I was terribly bad at interviewing...Eventually, after hundreds of hours spent studyingpracticing interview problems, and a lot of failed interviews (and learning from every one), I was able to land my dream job at a top techbig N-type company!Ive lurked rcscareerquestions for years, and its been both helpful and inspirational in my goal to work in Silicon Valley. I created this comprehensive mind map of data structures, algorithms, and system design concepts to help me study for the interviews. As a thank you to this subreddit, I hope that this can help you in your studying and interviewing as well!Image of the mind map: http:i.imgur.comJbVwvxo.jpgMind map Link: https:www.mindmeister.com936304672algorithms-data-structures-computer-science-math","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_raoica","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/raoica\/success_story_pivoting_into_cs_at_32_and_going\/","DATE":1638748800000,"PLAIN_TEXT":"Being up frontBecause I will be sharing many deidentifying pieces of information, I have chosen not to write on my real account. I believe this allows me to share much more detail while still preserving some sense of anonymity. I hope that not only will this additional level of detail, of which seems to be uncommon in success stories will more than make up for any missing credibility by posting on a new account. I do not believe my story is particularly exceptional, but in the end people will need to make up their own mind.I have provided my background and where I came from because it may help inspire some people. I think success stories are often less impactful than they could be because there is always a sense of well you must have had x, or you were privileged in the following y,z ways. I dont intend to complete resolve that by sharing my background but rather just to make it less ambiguous. Some people will always have some excuse as to why they werent or cant be successful. My goal isnt to make it sound like a if I can do it, anyone can story.# About meI grew up in a lower-middle class family in the US. My parents had a nasty divorce when I was young and there was constant custody battles, I attended many schools, had no friends, and was constantly bullied. The police were not uncommon visitors to my house. In high school, things settled and I gained some notion of stability. Up until then, I had no vision of a future, no idea of how I could possibly make it in the world and no confidence. This began to change after I became inspired by the Japanese Anime Dragon Ball Z (yeah I know). It awaken me to the fact that one could self-improve through discipline and perseverance. This initially took the form of physical conditioning and after a while my confidence grew and for the first time I a passion. From this came my first vision of a future - I set out to join the military with the goal of becoming a Navy SEAL.I graduated high school (with a 2.1 GPA) and attempted to enroll in the Navy. However, I soon discovered I am medically disqualified from service. I had an undiagnosed kidney issue that barred me from enlisting. However I remained hopeful that if I could get it treated I may still enlist. So I began a 2 year process of treating the disease in hopes that I could get the levels of proteinuria (the diagnostic) to an acceptable level. But after being strung along by recruiters, I eventually got a hold of the recruiting command who said that even if my condition was cured, I would never be elidable for service - in any military service. The mere history of having it was permanently disqualified. That didnt matter in the end because the kidney disease is IgA nephropathy and is incurable and progressive. So here I was back to square one with no hope of a future.I worked for a time as a fitness instructor and I continued to work on myself, personally. I soon become inspired again. I had always been interested in science, but I never thought I had a future in it. However, I had gained the confidence to pursue the academic route. I knew I wouldnt get into a decent university with the traditional route given my academic history (GPA 2.1, and ACT 18). So I went to a community college and did very well which allowed me to transfer to a good university from there. I took out student loans to cover tuition and expenses. By this time I was able to claim myself as an independent on the FAFSA and thus allowed me to get enough loans and grants to cover most expenses.I had set graduate and pursue an MDPhD. I wanted to practice medicine and I liked science. Most MDPhD programs are completely funded and thus would allow me financially to pursue an MD. However, I failed in this pursuit. I had one particularly rough semester which sent me into a spiral of depression and self-doubt. I believed that since these programs were extremely competitive, there would be no way I could achieve success. In hindsight, I probably still could have been admitted. A big failure on my part was my failure to seek mental help. I had a certain sense of pride which prevented me from doing so. All my success until had been self-driven and I believed no one but me could help me, I didnt have the capacity to ask for help.My depression spiraled and I was at risk of getting dropped from my program (biology). One semester I failed 3 out of the 5 classes I was enrolled in. I eventually completed my required courses by the skin of my teeth and graduated with a 2.7 GPA, but I found myself again (in my eyes) back to square one. Only now with a massive amount of student debt. I realized I could get some lab tech job, but I had no desire to pursue this route. The pay is poor and the work is not intellectually challenging. I was tired of being strapped for cash, living paycheck to paycheck and I thought if my life was worth living, I needed to have a decent income. So I went back to doing what I though could amount to a decent pay - fitness trainer.I worked as a fitness trainer for a few years but I began to realize, this is a dead-end career for me. It was too intellectually unstimulated and I did not have the personality required for a long and successful career. I hated approaching people and I hated pressuring people to buy training. Eventually I heard about machine learningdeep learning. Up until then, I had no interest in CS or programming. But learning about deep neural networks greatly intrigued me. The level of empiricism involved reminded me of the natural sciences - experimentation, observation, etc. So thats when I started reading about the CS field as whole and I became even more fascinated - not to mention the pay is good.# My pivot into CSUntil then, I had presuppositions about what it meant to be a programmerSWE. One of the big ones I had was that you had to be really good at typing in order to be a successful programmer, which was unappealing to me because Ive always sucked at typing and had no confidence I could be proficient to a high level. I have large muscular hands with little finger dexterity. Obviously, I eventually realized this was ridiculous. So now I had my third inspiration for the future - become a software engineer. But with a BS in biology and a 2.7 GPA, I had to find a way to find a way.After researching what the best approach was for me I decided that pursing a masters degree in CS would be best. That way I could feel like my bachelors was not a complete failure and I could theoretically graduate and have a job in just 2 years. I was ineligible for most graduate programs because of my undergrad (most need 3.0 at a minimum). However, I landed on DePaul Universitys Master of Science in Computer Science which had a 2.5 GPA minimum. Just as important, they allowed you the option to test out of the introductory CS coursework if you can pass the proficiency exams. This was huge for me because it meant I could save over $20000 and graduate a year sooner. The FAFSA direct grad loans were just enough to cover full-time tuition. I applied and was accepted to the program, to begin the following Autumn quarter. This gave me about 5 months to self-study and attempt to pass the proficiency exams (you only get one chance).# My CS journeyTo do this, I discovered the ample amount of study resources available online. This included, reddit, edx, coursera, and youtube. However, the most valuable resources I discovered came from the open-sourced materials and lectures from elite universities like Berkeley, Stanford, and MIT. I audited several courses in preparation. Here are the audited courses and the corresponding DePaul courses I used to prepare for.[DePaul MSCS](https:www.cdm.depaul.eduacademicsPagesCurrentRequirements-MS-in-Computer-Science.aspx)[https:cs61a.org](https:cs61a.org) (DeNero version)- CSC 401, Intro to CS[https:inst.eecs.berkeley.edu~cs61bfa21](https:inst.eecs.berkeley.edu~cs61bfa21) (Hug version) - CSC 402, CSC 403, Data structures[https:www.eecs70.org](https:www.eecs70.org) and [http:imt-decal.org](http:imt-decal.org) - CSC 400, Discrete math[CMU Video lectures](https:scs.hosted.panopto.comPanoptoPagesSessionsList.aspx#folderID=%22b96d90ae-9871-4fae-91e2-b1627b43e25e%22) and [CMU 15-213](https:www.cs.cmu.eduafscsacademicclass15213-f15wwwschedule.html) - CSC 405, 406, SystemsI also realized that gaining some experience ASAP was crucial, so I began sending out applications for internships anywhere and everywhere. I was lucky enough to encounter a programming internship at a university research center which specialized in biomedical research. I think my bachelors in biology helped me land this even know I had no formal experience in programming. I started the summer before my first quarter began and I worked as an intern there the entire time I was in graduate school.During my studies, I continually supplemented with additional material, auditing other courses. I wanted to land a good job after graduation and while I was glad to be admitted to DePauls MSCS, the program was weak and I knew if I wanted a good job I would have to go above and beyond the coursework. I graduated with a 3.9 GPA and landed a new grad role at a F100 making 120k in a med CoL area at 34 years old.I prepared for new grad roles through all the ways you frequently read about on here. Grinding leetcode (about 30 easy, 80 med, 10 hard over 2 months), doing mock interviews on platforms like Pramp, and applying to lots of places. I couldnt grind any more than that because I was working (20 hoursweek) and going to school fulltime. I failed several interviews. However, all you need is one success and eventually I found it.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ysnkek","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ysnkek\/well_i_just_got_laid_off\/","DATE":1668124800000,"PLAIN_TEXT":"This isnt much of a CS career question; its more of just something I want to talk about, since a lot of people are going through this as well. Maybe youll feel better, knowing that someone is in the same boat as you. Or maybe not As you all may know, big tech companies have been doing large layoffs, and, while I wasnt working for a FAANG company, I did work at a large tech company that, unfortunately, axed a large number of engineers, numbering in the hundreds. I honestly thought that I was going to be alright because my CEO and execs kept on telling us at our all hands meetings that our company would be fine. Lo and behold, when push came to shove, they were wrong andor lied to us. But, of course, I dont blame them. Its impossible to tell the future, and the market is hard to read. You also dont want people in a state of panic. Rather than complaining about whats happened, Id rather look towards whats to come. And thats kind of where my issue (?) is.Should I apply for jobs again? Against FAANG-level mid-to-senior-level engineers? Little old me? Maybe. If I dont try, nothing will happen, and the worst that can happen is a company saying no and then just moving on to apply to other companies, I guess. But, Ive worked at my previous company for two long years. I was never really much of a vacation guy; in my two years, Id only taken a total of 11 vacation days. But Im going to take a nice vacation now. A long one. Perhaps one month long. Or two.Im probably going to code. Im probably not. Most likely not. Dunno if this is the right thing to do, but I want to finally take a nice, long rest. I was pretty burnt out, not going to lie, so, while I hate that I dont have a source of income anymore, a part of me is actually relieved that I dont have to work, as difficult as that is to admit. Im just going to take my time until I feel like my emotions and working soul are back in working order, regardless of how long that would take. Maybe itll take a year. Idk. Or maybe Ill just do this until my money starts to run thin (which probably wont be long hahaha). Okay, thats it from me. Im going to go play God of War Ragnarok now. Heard the game is pretty dope. Wishing you all the best.---EDIT: WHOA, I just came back to a massive influx of mail in my inbox, haha. Ive read through all of them but havent replied because theyd just be too many conversations to keep track of. But many of you have pointed out to me that youre going through the same thing. Its comforting to know that were all in this together, so thank you for sharing. For those of you whove had experience in the field for a long time (one of you has 30 years!), your advice on taking a well-needed break right now, as hiring is often not great anyways towards the end of Q4beginning of Q1 was very reassuring to hear. I didnt really show it in this post, but the idea of taking such a long break made me somewhat anxious, but a part of me just knows that I need a break more than anything right now for various reasons. Thank you. Thank you so much. Really. For those of you who are in the same predicament, again, I wish you all the best ---EDIT 2: Just wanted to say thank you again to everyone. There have been so many supportive comments from so many of you. Thank you for sending so much empathy and love down my way. Thanksgiving is coming up soon, and I guess I know what to be thankful for this year, and it wouldve never happened had I not gotten laid off, hahaha. Jokes aside, seriously, you guys are the best ! ","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_pbyn4v","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/pbyn4v\/anyone_else_feel_like_leetcode_encourages_bad\/","DATE":1629936000000,"PLAIN_TEXT":"Im a mid-level Data Analyst (Spend roughly 50% of my time coding), and previously I worked as a software engineer. Both places are fairly well known financial firms. In total, 5 years of experience. Ive recently been doing LeetCode mediums and hards to prep for an upcoming interview with one of the Big Tech Companies, it will be my first ever interview with one of the Big Tech companies. However I seem to continously get dinged by not optimizing for spacememory. With 5 years of experience, I feel Ive been conditioned to substitute memory optimization for the ability to easily refactor the code if requirements change. I can count on one hand the number of real-world issues I came across where memory was a problem, and even then moving from grotesquely unoptimized to semi-optimized did wonders. However, looking at many of the optimal answers for many LeetCode Hards, a small requirement change would require a near total rewrite of the solution. Which, in my experience, requirements will almost always change. In my line of work, its not a matter of if requirements will change, but how many times they will.What do you all think? Am I the odd man out?If anyone works at one of the Big Tech companies, do requirements not change there? How often do you find yourself optimizing for memory versus refactoring due to requirement changes?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_kjh4av","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/kjh4av\/what_are_the_most_valuable_books_youre_read\/","DATE":1608768000000,"PLAIN_TEXT":"Please share with me books you would say have added value to your career. Anything from self-helpproductivity books to nitty gritty software engineering technical books. Listed below are some books I feel have impacted the way I think about work.- Deep Work (Cal Newport)- Digital Minimalism (Cal Newport)- Zero to One (Peter Thiel)- Atomic Habits (James Clear)- The 4-Hour Workweek (Tim Ferriss)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_huqkn9","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/huqkn9\/as_a_student_graduating_in_a_year_this_subreddit\/","DATE":1595203200000,"PLAIN_TEXT":"This subreddit seems to be plagued by one of two things at any time. 1) students looking for advice on how to get into the career field (which I have no problem with) and 2) people who have jobs who are consistently unhappy with either their current job or career field, whether its a feeling of unworthiness, working long hours basically all weeks of the year, etc. Its incredibly disheartening and makes me wonder if I chose the right major and career field. I have a couple questions that Im hoping some of you can answer with some brutal honesty as I come to this crossroad in my own life and decide where to go from here. 1) Is there anyone out there who DOESNT work long hours and have their life completely taken over by this career field? Ive always told myself that I wouldnt care working 40 hours a week in a job that isnt all flashing lights and rainbows, but what Im getting from this subreddit is that these careers often end up being a huge time investment outside of the office as well with constant studying and learning as you try to stay relevant in the field. I simply cannot imagine working 40 hours and then coming home to my future wife and kids only to have to lock myself in my room to study more. 2) Does anyone here actually ENJOY their job? Does anyone actually look forward to going into work? Would anyone use the word fun or fulfilling to describe their job? This isnt as important to me because like I said I have no problem working 40 hours at work if I can enjoy my life outside of work, but am genuinely curious. Im afraid I wont like the answers I get but Im looking for honesty here.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_daqj5f","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/daqj5f\/i_landed_the_dream_job_and_i_couldnt_be_more\/","DATE":1569715200000,"PLAIN_TEXT":"Ive been trying to keep a positive attitude and turn things around but I feel like my life has gotten out of control.&amp;#x200B;I graduated school and landed a cushy 6 figure job in the Pacific Northwest. I have a nice apartment, Im learning more about good software development everyday, and my work life balance is great.&amp;#x200B;Im just miserable. I feel like my life is a trainwreck. On paper everything sounds perfect, but Im so lonely. I find myself developing weird anxious ticks and falling into destructive habits. I moved away from all my friends and family in pursuit of my career.&amp;#x200B;Ive been exercising, picking up hobbies in the area, practicing positive mindfulness, etc. &amp;#x200B;Ive started muttering things to myself in my apartment. I find myself saying how much I hate my life everyday. Then I feel guilty for not being happier with all the things I have. I cant tell my family because Im the only kid who hasnt completely fucked up their life. &amp;#x200B;I dont know what to do. Im scared that Im going crazy and I keep putting off seeking help. None of this was worth it.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_nt3m4m","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/nt3m4m\/i_absolutely_despise_the_software_dev_culture\/","DATE":1622851200000,"PLAIN_TEXT":"I enjoy being a regular SE. I love having a simple, unassuming, position where I just put in my 9 to 5 monday through friday fixing shit or adding simple brain-dead features, while listening to some Pandora.I love the simple joy doing my simple work of problem solving well, and then im out by 5pm so I can get back to my gardening, or cooking dinner, or enjoying some TV  gaming time. I have zero desire to be part of some new thing, app, feature, etc, though that doesnt seem to stop my fellow colleagues and bosses from constantly trying.And in the middle of all this, I recently realized why I despise the tech culture. I hate interacting with my colleagues and coworkers, and the progressive culture surrounding software development.It seems normal for everyone to be this arrogant elitist hyper competitive know-it-alls. And they sure are hell bent on playing this one-up-man-ship game constantly.What spawned this rant was this past week, some little punk got annoyed with me because my pull request got approved, while his got rejected, on a project he and I were working on. He wanted to escalate the issue and argue with our boss (and his bosss boss) why his shouldve been accepted (the senior devs explained why it was rejected in the notes), and wrote this long email to me basing his whole reasoning on ...everything is so wrong with the company when they can accept a [my] request from some GED having college dropout coder wannabe....I dont know why, but ever since that email (he apologized later), its been festering in my mind ever since. And its made me realize how much I can not stand developers, and the tech culture in general.I love what I do, I enjoy it. The things I dont enjoy... Are other software developers","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_jbq9dp","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/jbq9dp\/im_a_software_developer_but_im_not_a_good_one_how\/","DATE":1602720000000,"PLAIN_TEXT":"Ive been working in software development for the past 5 years and Ive been at my current company, a large bank, for 2 years. I work on web-based apps used internally by staff. Ive had no formal education in computer science so I lack the foundational knowledge others have. Ive basically only got by so far by abusing Google and ripping off other, existing code. I feel very inadequate in comparison to my colleagues and that I only got the job because Im a woman. Ive tried to learn about data algorithms and design patterns but I struggle to put these into practice. If someone gives me a design task, I havent got a clue how to get started. We have to move onto AWS soon and Im dreading that Im going to cause some massive security or cost issue. We also have to do extra tasks that we propose ourselves in order to improve our processes and keep on top of emerging tech, but I know so little as it is that I dont have anything to contribute.By the end of the day Im exhausted and feel like Ive accomplished nothing. Ive started waking up in the middle of the night thinking about work. It has sapped all motivation from me to the point I cant concentrate properly and Ill procrastinate to avoid tasks Im stuck on. Im trying to learn in my spare time but nothing seems to stick. Were buying a house soon, Im the main earner and I cant afford to lose this job.Sorry for the rant, I think I just really need a win to get out of this negative mentality Ive ended up in. Does anyone know any good techniques for learning the foundations? Whats a basic project I can realistically get done in a weekend? How can I learn AWS without getting charged a fortune?Edit: Thank you to everyone who has replied or sent me a message. Ive been having a bad couple of weeks professionally so I feel a lot better knowing Im not alone and probably not as bad as I think I am. Ive compiled a list of all the sources and will check them out. Ive also written out a study timetable and Im going to start going on walks at lunch time to get away from the screen and for some fresh air. Hopefully in a couple months time Ill be sharing some finished projects with you all!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_9rf4sn","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/9rf4sn\/is_anyone_else_just_tired_of_the_silicon_valley\/","DATE":1540425600000,"PLAIN_TEXT":"Im about to graduate from a top 5 CS school with a degree in CS in May 2019. Im on track to get a solid six figure salary with good stock options and bonus as a 22 year old. All my friends will be living in the same area as me after graduation and well probably live together. In the grand scheme of things, there is nothing wrong with my life and its a position that a lot of the younger people on this thread really are shooting for. Im not happy though. I feel like Silicon Valley is so cold and unfeeling. Everyone here is looking at the bottom line for themselves. There is no real community outreach or integration into the area people live. Theres widespread entitlement and a tendency to throw money at problems until they disappear. Theres liberalism in name only here but very few people are willing to put their money where their mouth is. Theres obvious classism and racism out here. Im fairly progressive when it comes to politics but I find the people out here tiresome when it comes to disagreements especially since the extent that they engage in controversial topics is just lip service. I used to talk about how LA is superficial and cold but I dont think The Bay is that different from that anymore. Its all about where you work, who you know, and how much you make. Not that theres anything bad about that, but it really just feels like a bunch of people living in an ivory tower surrounded by a large, well protected gate while there are starving masses outside that are really just trying to survive. &amp;#x200B;I grew up upper middle class but was best friends with a lot of people who were just above the poverty line (east coast). Most my friends were latino or black growing up (Im Indian-American) and it really bothers me that such a large portion of this AsianIndianWhite dominated area looks at those demographics so poorly. There are so many social issues here that we, as members of the tech community, are contributing to but refuse to acknowledge past the point of talk. Im sick and tired of it. Everyone is out here asking questions like how do I get past interviews at companies like FAANG? and how much is the starting salary for someone with {my skillset}? But in the end arent most of these people just looking for run of the mill backend or frontend jobs? Wont we all just be building CRUD applications for the Ubers, Lyfts, Googles, and Amazons of the world while enjoying the toys that were given with these nice compensation packages but in the grand scheme of things, were really not doing anything fulfilling with our lives? Were all just in the pursuit of more money. Idk, maybe Im just ranting right now (I absolutely am). Im just becoming more and more disenchanted from this life as I get closer and closer to graduation. Im not super keen on the idea of watching the world burn while we build cool (and often useful things) that will stay confined to the wealthy for most of the foreseeable future and cost of living for all of us shoots up dramatically. &amp;#x200B;Thoughts? ","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_hefnfm","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/hefnfm\/my_experience_with_h1b_as_a_poc\/","DATE":1592870400000,"PLAIN_TEXT":"I think I have a much different experience with tech then a lot of the posters on here. I am a person of color with a tough start to life, I never went to a great high school, I grew up in a shitty neighborhood, I am in a single parent household, I had a lot of shit not go my way. Luckily I have a good head on my shoulders and a good moral compass. I was able to go to college after high school. I graduated college with a STEM degree but it was not comp-sci. After graduation I was working doing data entry for minimum wage. I wanted to make a change and pursued a career as a software developer. I had to teach myself how to code, I busted my ass 3 hours a day after my work and commute and 8 hours on weekends working on personal projects and applying everywhere as a junior developer. I never got any calls back until I put my resume out on Dice. I started getting bombarded by staffing companies mostly owned by Indians. I HAD to take these jobs because nobody would take a chance on me. You know those shitty emails you guys get and go in your spam folder? That shitty 3 month contract in the middle of nowhere? I WORKED that job. That job that list 10 skills and 8 years of experience for 20 bucks an hour? I WORKED that job. I did everything I could to get my foot in the door of software development. Because of this the majority of the people I have worked with have been H1-B visa holders. We were all hired by staffing firms to work on projects for huge clients. I worked in giant buildings with 2000 people every single one on this Visa except for me. I became good friends with many of my co workers. For many of them I was their first American friend. I picked up on their culture and they got used to things here. I learned Telugu words and they picked up slang. I showed them Instagram dances and they got me doing Pakka Local. I even have Lungi my friend gifted me after I flew 10 hours and drove another 3 to get to his wedding in India. But despite this positive personal experience I wanted to tell you the truth because I always believed that what is right is right and what is wrong is wrong. The majority of the jobs I have worked at over the past 6 years have been clear signs of H1-B abuse. Almost every job I worked at could have been done by an American. Hell it could have been done by a junior developer who just needs a little bit of training. Because of this I began to research the program extensively. Its strange that when we bring up H1-B the first thing everybody says is the Cinderella story where a company tries so hard to find a good American candidate, they cant because us Americans all too stupid or lazy and are forced to bring in a foreign worker at a great risk to them. But in my exprience this is simply a nonsensical fallacy. The majority of H1-B visas go to tech staffing companies. These guys are the likes of Cognizant, Wipro, Tata and Infosys. Do you know what city in America has the most H1-B visas granted? Is it Mountain View CA? Is it Seattle? Is it NYC? NOPE Its College Station Texas, the home of Cognizant. The number 2 city is Richardson Texas the home of several other staffing companies. These staffing companies abuse the system terribly. They underpay their workers, they know they have their workers by the neck so they make them work 12 weeks 6 days a week because if the workers quit they get DEPORTED. They pay their workers WAYYY less then what they would pay an American. There is some myth here that an H1-B worker has to make more then their American counterpart. That is simply not true for the majority of the H1-B candidates. There is a loophole in the law that says if all the companies workers are making an average of $60,000 or more or if they all have masters then they are exempt from the salary minimum. Look at all the big tech staffing companies. Average salary at Infosys is 80,000 a year. This is the salary of a contractor who has to pay his own payroll taxes and healthcare. All the big tech staffing companies have average salaries below 90,000. Many American companies do not even bother with the old fad of putting up job postings and pretending Americans are not applying. The staffing firms handle everything for them. They just fire their local devs put up a contract for the same work and just watch one of the staffing firms take on the project for half the price of hiring local. Now imagine all these candidates working in some of the most expensive cities in the US for 80,000 a year. You realize how hard life is for them.That is if you are lucky enough to find a job from the big staffing companies! I had friends working at smaller staffing firms that were abused and used. They had to give cash kickbacks to their staffing company. They had to work overtime every day. They had to rent houses with other candidates they had to lease vehicles from companies owned by the staffing agency. They did all of this because they were to scared that if they spoke up they would get fired and deported. The H1-B visa is freaking indentured servitude visa. Even the person who originally drafted it Bruce Morrison, the senator who wrote the dam bill is out here campaigning against it. It is not some way for Google or Facebook to take the most talented developers around the world. Maybe that is what it is for 10% of the cases but the majority of its use is for depressing American workers salaries and hiring and abusing foreign developers who are just looking for a better life. It hurts American workers it hurts the workers it brings in. It is especially hurtful to people who lack representation at STEM jobs because the majority of us dont have the traditional means it takes to break into this field and are facing discriminatory hiring practices. Look online for how few junior roles there are these days. Nobody is bothering to hire or train juniors because they can get experienced candidates from abroad. Even if you guys believe that every competent developer all over the world deserves to come work here then why not just make them citizens in the first place? Why have this in between limbo visa where people are abused and live in constant fear of deportation? I think its time to take a good long look at this program and make something that is fair to everybody.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_b23axy","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/b23axy\/i_made_a_post_a_year_ago_about_applying_to_500\/","DATE":1552780800000,"PLAIN_TEXT":"I made a post a long time ago on this subreddit about being homeless after the house I lived in was condemned and sleeping in my car and having no where to go and no where to turn to. Shortly after that post things went from bad to worse as I feel into a deep deep depression and I decided to end it all and tried to kill myself by jumping off a bridge, I chickened out and left my car and and all of my possessions in the car and just ran away from everything.I basically was an actual hobo for about 5 months and made my way to Chicago with what little money I had left and just sat around there begging for change, eating out of the trash, wishing i could die. Eventually one thing led to another and I called and talked to my family for the first time in what seems like forever over the phone and they drove out and picked me up and drove me home. I stayed with them for a few months until I was moderately better, one of my old friends messaged me that he started a painting business and he wanted me to work for him so I went and I am currently working for. I make $19hr and I live in a studio apartment now. I realize I only ever did CompSci as a major because I wanted a high paying job and was never passionate or good at it and coasted off the work of others through college. Im probably never going to have a CompSci job, but Im okay with that. For now Im just happy to have a good paying job and have heat, shelter, food, and internet. My insomnia is getting better with medication and my depression occasionally flares up, but Im doing a lot betterhttps:www.reddit.comrcscareerquestionscomments73nyjrive_applied_to_over_500_jobs_and_not_a_single","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_u4yqlo","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/u4yqlo\/just_started_first_software_engineer_job_at_85k\/","DATE":1650067200000,"PLAIN_TEXT":"With the title, Im not trying to come off as boastful about my new job but rather, Im wanting to write a post that wouldve been helpful to see during my schoolCS journey.I initially attended a state school for a year studying CS but then transferred to a community college once COVID hit to pursue a new CS pathway they were providing. I was excited about what I was learning but I was worried that just an associates degree wouldnt be enough to land a good first job, especially with all of the requirements in entry level job listings that I did not meet. Then in September of 2021, I started an internship that I got through the new pathway provided by my CC and I graduated shortly after in December. I then started applying for software developerengineer jobs at the beginning of 2022. I found this job that dealt with languages and technologies I was familiar with but the requirements were a Bachelors degree, 2-3 years of professional experience, and all that typical stuff. Fortunately, I was requested for an interview, advanced to multiple rounds, got to showcase my take home assessment project, and received a call later that day that theyd like to offer me the position! I wanted to write this post for anybody who is doubting their degree, pathway, or capabilities to not get discouraged by job requirements and go for opportunities that speak to you! You can accomplish more than you think you can. Youll never fully be prepared for something, so just go for it and give it your best effort. Whether you are stuck in tutorial hell before starting a project or hesitant about a job opportunity, just go for it. All that matters is that you are able to produce a solid solution when given a problem.I am super grateful for this opportunity and for all of the helpadvice from this sub! Thank you for reading and I hope this reaches who it needs to!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_tgcjgp","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/tgcjgp\/why_is_it_that_when_you_struggle_for_so_long_to\/","DATE":1647475200000,"PLAIN_TEXT":"Several weeks ago, I was at my wits end, I was getting very few invites to speak with recruiters, and fewer invites to subsequent interviews. I had been actively searching for about 9 months with no success. But, I finally got an offer. It was a good company, an Aerospace &amp; Defense subcontractor. The hitch was the starting pay was about 40% below industry standard where I live for a new grad software engineer. Nevertheless I accepted because I needed to start working, and I knew they only lowballed me because it could take a long time to get my top secret clearance, and in the mean time, I would have very limited work I could do. I also knew that once I had my TS, I could easily justify asking to have my compensation increased closer to the industry standard.Moving on a bit, this company really dragged their feet getting me a start date, so because I was lowballed and still unemployed, I continued to interview for other opportunities that were already in my pipeline. One of which made me an offer that was bang on the industry standard pay for my experience level, 40% higher than the offer I already accepted. So now in one month Ive gone from struggling to even get calls, to reneging on an offer that I reluctantly accepted, and canceling another interview appointment that is in the final round.Why does this always happen? Why does every drought end with a flood (so to speak)?EDIT: I never disclosed to anyone that I already had an offer, where I was in the interview process with other companies, or even who I was interviewing with. I never even changed my LinkedIn.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_pyr82y","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/pyr82y\/i_just_wrapped_up_5_years_at_a_big_5_here_is_my\/","DATE":1632960000000,"PLAIN_TEXT":"These are the lessons I learned after 5 years as a software engineer at a Big 5, in no particular order:1. Only make promises you can keep, and then keep all the promises that you make.1. Go to managers with solutions, not with problems.1. Be the first to admit when youre wrong and theyre right.1. Dont let your ego get involved in your work.1. Make an effort to speak precisely.1. Become a master at the thing everyone is neglecting.1. Even if you already know what someone is talking about, pay attention. They may still teach you something new about it.1. Reduce fear by confronting that fear and coming out on top.1. Be likeable.1. Pay your dues.1. Make an effort to take your vacations.1. Get to know your coworkers personally.1. Reading, writing, and speaking are equally important skills as coding.1. Respect is earned quietly and with real sacrifice.1. Use every task as an opportunity to excel. No task is beneath you.1. Find mentors and then pick their brain.1. Be mindful of other peoples time.1. Kill your darlings.1. Cater information to your audience.1. Pay attention to the problems that other people are ignoring.1. Reduce complexity.1. Learn how to be comfortable and in control when speaking to an audience.1. Choose the right option over the easy option.1. If youre stuck between two options: imagine if each option goes horribly wrong, and then choose the one youd feel least embarrassed explaining to your manager.1. While we think of ourselves as developers, our first priority is operations.1. Lead by example.1. If youre too new to say smart things, ask smart questions instead.1. Your goal at your current level should be to strive to act like the next level up.1. Dont neglect your body.1. Its ok to be blocked, but dont get too comfortable being blocked. Remember that ultimately your job is to deliver.1. Take a vacation when your tasks feel like obligations. Return from vacation when your tasks feel like opportunities.1. At school, writing code that works is an achievement. At work, its the bare minimum. Write good code, not just code that works.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_gf2unw","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/gf2unw\/i_am_enjoying_wfh_it_has_significantly_boosted_my\/","DATE":1588809600000,"PLAIN_TEXT":"I am a full-stack developer(node.js) with 3 years and 10 months of experience. I am amazed at how good WFH has been for me.I have stuck to a routine during WFH and allocated strict times for everything. But I amazed at how fast most of the work is done. I complete most of my work in about 4 hours max, and then I utilize the remaining time for personal growth.I am currently studying DS Algos and improving my leetcoding skills. Apart from that, I am learning Java and writing distributed microservices in Java. Since I always wanted to learn an actual strongly typed backend language. I already work with MySQL, so wanted to know what the fuss about PostgreSQL was. Apart from that, I am learning PostgreSQL. Learning about performance tuning with databases.As far as house chores are considered, I am surprised and how much I can get done by staying at home. No delaying the inevitable boring work. Apart from all of this, I also completed 6 novels on my newly bought Kindle!Overall I feel WFH when executed with discipline has lot of benefits to offer.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_bmzz8t","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/bmzz8t\/i_raised_the_response_rate_to_my_applications\/","DATE":1557446400000,"PLAIN_TEXT":"A few weeks ago on this sub someone suggested that theyve had much better luck with getting responses from their applications when they found someones email address in the companys recruiting or HR departments and sent them a quick blurb about their application. I rolled my eyes at it at first, but gave it a shot. And in the end, I hate that he was right lol. But the numbers speak for themselves.&amp;#x200B;I keep a detailed spreadsheet of all jobs Ive applied to, so I started tracking my response rate as well as the conversion of responses -&gt; phone screenings, phone screenings -&gt; 2nd round (tech) screenings, 2nd round -&gt; onsite, and onsite -&gt; offer. For the purposes of this, I consider a response to be an initial phone screening with a recruiter (1st or 3rd party). For what its worth, Im a front end dev with slightly less than 2 years of experience. Heres what it came up with:&amp;#x200B;||Total applied|Total responses|Response Rate||:-|:-|:-|:-||WITHOUT sending follow-up email|65|9|13.85%||WITH sending follow-up email|12|6|50%|&amp;#x200B;Not only did the response rate go up, but the responses were quicker (usually 1 or 2 day turnaround time), and they had higher conversion rates amongst all steps in the interview process. I wont provide my conversion stats since theyre skewed because I accepted an offer, so I stopped some interview processes midway through. The offer, by the way, was from one of the companies I sent a follow-up email to ;)&amp;#x200B;The strategy is to find a recruiter or HR person on LinkedIn. A lot of recruiters I found will list their work emails directly in their bio. Otherwise, I would usually just guess that their email was [`firstname.lastname@company.com`](mailto:firstname.lastname@company.com) which was the case 9 times out of 10. My emails consisted of just a couple sentences:&amp;#x200B;&gt;My name is &lt;name&gt;. I submitted an application for the &lt;position&gt; just now, and I wanted to follow up with someone on the recruiting team, and I found your email on LinkedIn. I think you will find my experience as a &lt;current position&gt; at &lt;current employer&gt; to be a good fit for the role, and Im excited to hear more about the team! &gt; &gt;Ive attached my resume here, and my portfolio and my LinkedIn profile are below. Please dont hesitate to reach out to me at &lt;phone&gt; at any time.&amp;#x200B;BTW, [heres a link to my job application spreadsheet]([https:docs.google.comspreadsheetsd1hIidVSwJ214ikHE_xefMfhbKFSoFkVlUWXntKmeGUJsedit?usp=sharing](https:docs.google.comspreadsheetsd1hIidVSwJ214ikHE_xefMfhbKFSoFkVlUWXntKmeGUJsedit?usp=sharing)) that includes the response and conversion rate formulas. Hopefully someone will find it useful.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_10s5s5o","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/10s5s5o\/manager_isnt_happy_that_my_rulebased_system_is\/","DATE":1675296000000,"PLAIN_TEXT":"I graduated with a MSCS doing research in ML (specifically NLP) and its been about 8 months since I joined the startup that Im at. The startup works with e-commerce data and providing AI solutions to e-commerce vendors.One of the tasks that I was assigned was to design a system that receives a product name as input and outputs the products category - a very typical e-commerce solution scenario. My manager insisted that I use start-of-the-art approaches in NLP to do this. I tried this and that approach and got reasonable results, but I also found that using a simple string matching approach using regular expressions and different logical branches for different scenarios not only achieves better performance but is much more robust.Its been about a month since Ive been pitching this to my manager and he wont budge. He was in disbelief that what I did was correct and keeps insisting that we double check... Ive shown him charts where ML-based approaches dont generalize, edge cases where string matching outperforms ML (which is very often), showed that the cost of hosting a ML-based approach would be much more expensive, etc. but nothing.I dont know what else to do at this point. Theres pressure from above to deploy this project but I feel like my managers indecisiveness is the biggest bottleneck. I keep asking him what exactly it is thats holding him back but he just keeps saying well its just such a simple approach that Im doubtful itll be better than SOTA NLP approaches. Im _this_ close to telling him that in the real world ML is often not needed but I feel like thatd offend him. What else should I do in this situation? Im feeling genuinely lost.EditIm just adding this edit here because I see the same reply being posted over and over: some form of but is string matching generalizablescalable? And my conclusion (for now) is YES.Im using a dictionary-based approach with rules that I reviewed with some of my colleagues. I have various datasets of product name-category pairs from multiple vendors. One thing that the language models have in common? They all seem to generalize poorly across product names that follow different distributions. Why does this matter? Well we can never be 100% sure that the data our clients input will follow the distribution of our training data.On the other hand the rule-based approach doesnt care what the distribution is. As long as some piece of text matches the regex and the rule, youre good to go.In addition this model is handling the first part of a larger pipeline: the results for this module are used for subsequent pieces. That means that precision is extremely important, which also means string matching will usually outperform neural networks that show high false positive rates.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_hilm31","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/hilm31\/landed_my_first_web_dev_job_fully_selftaught_it\/","DATE":1593475200000,"PLAIN_TEXT":"Ive been waiting a long time to be able to write this post. Ive seen others achieve this same accomplishment and that was a huge part of my motivation. Went from six figure + year job - to just leaving and hoping to find a web dev role. Two big factors currently were corona and I moved to a new city. So the cards were stacked against me but determination and consistency won. My self taught course:Studied elementary OOP and Java about 4 years ago while working full time. Built some small apps here and there and then let it go for a while. Focused real hard on my day job until 1 year ago when I know I had an upcoming move for other reasons. I decided to go heavily into web dev and used freecodecamp as my foundation. The site was very useful and gave me a great intro to web dev. I didnt fully complete each section and all challenges. Tbh I didnt complete most of the projects. I just made sure I knew the concepts. By the time I got to the data visualization module, I decide to put FCC to the side and build my own react project. This is where the magic happened and I encourage all who want to get into development to do the same. Building your first project from complete scratch with no tutorial will teach you more than any camp or course. From downloading you IDE to setting up file structure to running create-react-app on the command line - everything was new to me but I literally Googled everything. Any question I had I just googled it and girded through it. It was slow and painful but you need to get through this learning curve. Just learning standard file structure for a full stack app was never taught anywhere. I found these from reading Stack Overflow, github, FCC forums etc. First project took about 2 months - simple text generation app deployed on Heroku and did this all after hours while working 50 hours a week. I would like to note also, I was heavily sending commits to github (another thing I had to google  YT to learn) to build up my profile to show employers. Once complete it took my project that I was super happy with and started applying to jobs! Turns out, employers wont hire you based off a text generator app. After 1 month of rejections and about 70 apps I went back to the drawing board and decided to build another app. A messaging application with React. Having more knowledge this time around was much easier and I completed a fairly ugly messaging app in about a month using Talk.js. Again I took this around and started applying.. nothing. Crickets. Back to the drawing board. Instead of building a new app, I decided to make this into a full stack project using Express and Mongo. The MERN stack. I taught my self about the backend, APIs, databases etc. This was my turning point. By this time I felt I knew enough to be deadly but my resume was still lacking professional expirence. I did away with the cover letter and the fact that I was passionately self teaching myself at night. I learned quickly employers dont care about that. I made it look professional, removed most of my prior jobs and listed the projects I built, was working on and my github account. I started to get replys! I also totally rearranged my LinkedIn.. making it mirror my resume and listing myself as looking for employment as a full stack dev. The recruiters flowed in. In my experience - I came across one recruiter who really helped my up my resume. All the other were a waste of time. What I did was begin messaging companies directly. Going to their site, find the Contact Us form and send them a message. Hey, Im a full stack dev looking for a great team to work with. Was wondering if you had any upcoming roles. Would love to talk short and sweet. Eventually I found an awesome company that was happy to have me onboard. Im now beginning my development career. Theyre fully aware of the self taught aspect. My advice is think of the goal as having two prongs: the hands on coding and the job search. Invest time in both equally however make sure your dev skills are up to par first. Application submitted: 150Recruiter calls that lead nowhere: 40Interviews: 10Offers: 1Total time spent developing since Nov 2019: ~400 if I had to put a number on it","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_djnlyb","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/djnlyb\/i_created_a_site_that_aggregates_new_grad_tech\/","DATE":1571356800000,"PLAIN_TEXT":"www.newgrad.techEdit: Seeing some comments about how theyre no listings in your particular state. We are working on expanding the data sources ASAP--feel free to PM me with any we should be pulling from!Not too long ago, I went through the new grad job gauntlet. Its hard enough studying for interviews and carving out time for phone screens and onsites while dealing with classes and midterms... but then you also have to scour the web for jobs actually open to new grads, and apply to them as quickly as possible. I spent hours assembling a spreadsheet of about 100 new grad jobs, and by the time I finished the spreadsheet and started applying some of them had already expired.So my friend (another recently graduated software engineer) and I created this site (inspired by intern.supply) which collects new grad roles and puts them in one place!Filter by State and Company TypeWant to work at a startup in New York? A Big N in Colorado? Open to either? You can filter jobs by state(s), and company type(s) (Big 4, Big N, Unicorn, Fortune 500, Startup, Other). Data Thats Fresh, Never FrozenNew grad jobs expire quickly because the recruiting season is often really narrow at many companies. We built a tool that automatically checks through our links and flags potential expired ones, and we do manual research and verification as well. We aim to keep the listings updated on a weekly basis, if not more often. We currently have about 200 listings but will be growing that number in the near future! I set up email notifications as well if you want to get notified whenever theres a new batch of jobs--you can scroll down to the bottom of the page to sign up. Open for Feedback Theres an email address at the bottom of the site if you find an expired listing, know of another listing we should add, or have other feedback. Feel free to PM me as well with any feedback. I built the webapp and am a backend engineer, so be gentle with frontendUI feedback :) Made with LoveIve been part of the CSCQ community for years and its helped me greatly--I was able to pass interviews, negotiate my salary, and get my dream job (ML Engineer in the city I always wanted to live in) in large part because of what I learned from this community. The site is free and has no ads (~~not even Google Analytics to harvest your precious, precious data~~ edit: due to the sheer amount of traffic this ended up receiving, had to add Google Analytics just to make some sense of it. Sorry, your precious, precious data is now being harvested.). But if youd like to support the ongoing efforts it takes to build and maintain this, feel free to check out the interview resources page and use the affiliate link to buy CTCI or something. Well get like, a buck.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_o1wkdp","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/o1wkdp\/felony_record_back_to_haunt_me\/","DATE":1623888000000,"PLAIN_TEXT":"Im not sure why Im posting this, likely as a reminder or a wake up to any of the younger ones reading here, or because I have no one to really vent this to. Its the latter. I posted a couple years ago as a senior in college, 28, on the job hunt and worried about my record having a felony from when I was 18. I got a great offer at a company I really wanted to work for but when it came to the background I just really felt like there was no way I would get hired. I came here for anyones advice or experience, which turns out very few felt I had a chance which is totally understandable. I was honest on my forms, disclosed my record and let it be.They did hire me, I remember crying my eyes out when they confirmed my pre employment was finished and I can start. Its been amazing working for this company and team, I love what I do and enjoy work every day. In the interest of a better salary I applied to a local company many of you will be familiar with. The interviews went great the teams loved me and they gave me an offer right away, a 75% salary increase and more than I even asked for as motivation. I was so happy thinking I finally did it, my dreams came true.Well I just had to go over my arrest record on the phone with the recruiter, I self reported it, it didnt even show in my background check. Now my hiring is frozen until a team can meet to decide if I should be hired. I feel totally worthless now, like I was on top of the world and now Im just in a dark hole. Being judged by people i dont know, who dont know me but see some ugly stains from almost 15 years ago.Again, Im not sure why Im posting this, but if youre in your teens reading this or hell anyone, please mind the company you keep. Someone else can make a mistake that will ruin your prefect record and cause you to carry a ugly burden for the rest of your life.Edit: well this got more traction than I expected or really wanted... Ive reached out to a lawyer and will likely start the process of getting my record sealed if I can. Also should this company decide not to hire Ill be ok, just disappointed. One thing about having gone through my experiences is Ive learned to push through hard times and this is just another. Keep on keeping on and thanks for the kind words everyone.For some confusion, I only self disclosed after the offer was accepted and contingent on a 3rd party background check. In that application it asked to disclose any arrests ect.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_axqkcq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/axqkcq\/i_was_recently_hired_by_zytech_a_consulting\/","DATE":1551744000000,"PLAIN_TEXT":"Having recently completed Udacitys Android Developer Nanodegree, I felt like I was finally ready to start applying for junior level Android developer jobs. I applied for over fifty jobs in one week, scoring a few interviews, and receiving a job offer from one of them: [Zytech](https:www.zytech.io). After speaking with Zytechs CEO over the phone, I was informed that they are a company that takes developers who are just starting out, trains them to get them job-ready, and then assigns them to one of their existing clients. The only catch is that Id have to be willing to relocate anywhere in the US based on the clients location. They offered $30 an hour plus benefits, which seemed amazing to me (the most Ive ever made is $11hr). I was ecstatic, and accepted the offer instantly. As soon as I was assigned to a client, Id be making more money than I ever had, with guaranteed semiannual raises. Sounds great, right?&amp;#x200B;Zytech is based in Atlanta, and I live in Phoenix, so all communication was done via email or phone. Before I could speak to clients, I was first asked to review three apps that their former consultants had worked on, to make sure that I knew my stuff. I reviewed and recreated an Activity from each of them, trying to improve them as much as possible to show off my skills. I was extremely excited and ready to get in touch with clients. Below you can see videos of my apps running alongside the actual apps (mine are on the right).&amp;#x200B;[Fly Delta](https:youtu.bedBvL5MJszPg) | [CVS Pharmacy](https:youtu.beAHXtOGEteaQ) | [Prime Video](https:youtu.be6femiDgWfB0)&amp;#x200B;Once I had completed all of the app reviews, I was nervous as I didnt know what to expect. I actually never ended up receiving any feedback whatsoever on my code (that I had spent hours of time and energy on), but, I was told that I could start talking to clients. As it turns out, they didnt have me work on the apps to show them that I could code, rather, they wanted me to work on them so that I could lie and say that I had actually worked on the published apps. When I say lie, Im not exaggerating: they fabricated an entire [portfolio and resume](https:i.imgur.comgtpeCO5.png) in my name that says that I had worked at these companies for years. Remember - the only experience I have comes from personal projects. I was told that since I was employed by Zytech, I was allowed to borrow their other employees experience.&amp;#x200B;Friday was the first (and last) day that I spoke to any clients. I was told to follow the resume that I was given when speaking to clients, which included lying about jobs that Ive never had and saying that I have experience doing things Ive never done. And the sad thing is, it actually worked. In one day, I had spoken to a dozen clients, completed a video interview, and set up several interviews for the next week. I didnt feel happy or excited though, I felt terrible. I was lying to everyone I spoke to. One of the clients I spoke to was really impressed with my (fake) resume, which just bummed me out even more. I discussed my disdain with two of Zytechs staff, the president and performance manager, who both told me that while it is technically lying, since I can do or learn most of the stuff anyway, it doesnt matter. They also told me that this was a necessary process as I dont have any real-world experience, and that this is just the way that it is.&amp;#x200B;I stopped all contact with Zytech that day. There is no doubt in my mind that this would have worked, but I am not going to lie to someone to get my dream job. Its just not worth it. If I dont know how to do something, I can learn it, but Im not going to sit there and lie to recruiters and interviewers to get something I dont deserve. Unfortunately, though, other people will. I wish this story had a happy ending, but here I am back on the job hunt, with a company out there stealing a large share of the job market by way of absolute fraud. I tried my best to research the company beforehand to make sure that they were legitimate, but there is little to no trace of them on Google (several similar-named companies come up when searching for Zytech), so I hope this can at least be a warning to recruiters and prospective junior developers. I just wasted the past two weeks of my life for this company, so Im hoping I can at least save someone elses time.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_a95j3l","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/a95j3l\/shitpost_name_and_shame_the_north_pole\/","DATE":1545609600000,"PLAIN_TEXT":"Pay: The pay is abysmal. Since we are the only company on the continent, they can afford to go cheap on labor since everybody is applying here. &amp;#x200B;Work-life balance: It is almost non-existent. Our product is used by billions of people, and we work the whole year leading up to a single day for release. We have daily sprints they call Quotas that MUST be completed before we go home. 18 hour days are common. Speaking of home...&amp;#x200B;Living Conditions: The company decided to build their office as far away from civilization as possible, and they own much of the land there, so building our own homes closer is out of the question. So, they provide us with corporate housing, and I think its safe to say the reindeer have a better living space than we do. Meanwhile, CEO is living in a nice cabin with his wife getting stuffed on food we could only dream of tasting.&amp;#x200B;CEO: Hes non-existent in the office. Rumors say hes mythical, but at this point I dont even care. He used to work a lot in delivering our product, but now he outsources his own work to a company in the U.S.&amp;#x200B;Guys, dont work here. Company is as cold as the weather. &amp;#x200B;Also, Merry Christmas you filthy animals!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_bsbc6m","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/bsbc6m\/got_fired_from_internship_for_not_wanting_to_sign\/","DATE":1558569600000,"PLAIN_TEXT":"I have been working as a developer intern at SAP in Montreal for the past 5 months. A couple of weeks ago, my manager asked our team of 10 people which of the two interns on the team they should hire for a full-time position starting in July. Up to this point, I had been doing great work and getting great feedback from my team members, and the team chooses me. He specifically asked a member of the team who they would throw off a boat if they had to choose between the other intern and me. Despite this, we have managed to all stay friends and laugh at our managers actions. My manager speaks to me and tells me they are interested in hiring me full time and asks me if I would be interested in staying. I ask my manager some questions and tell him what Im thinking and that I possibly would like to continue my studies and pursue a masters degree, finally, I politely asked my manager what the salary would be in order to help my decision and he gets mad that I asked him telling me how disappointed he is that I would ask him such a question. Despite this, I tell him I would be interested in staying full time and that I have been enjoying my internship thus far. The next day, another one of the devs on our team gives his 2 weeks notice as he has found a better job. A few weeks prior, our main DevOps guy found another job within SAP and told our boss that he would be leaving at the end of the month. Our manager threatened the DevOps guy telling him that they will have problems if he decides to stay on the team and not leave, all the while withholding him from starting his new job with the other team for 2 months, including his salary increase. Now with 2 talented team members leaving, our manager panics and attends our teams scrum meeting (a rare occurrence) and tells the team that he has good and bad news. The bad news is that the other team member is leaving, but the good news is that I have signed on to be a full-time employee. All this without my knowledge and before I even see an offer and what the salary and package would be. A couple of days later I receive an offer, however, it is really not that interesting and far lower than the market for software developers in the area and what other interns transitioning to full time have received at the very same company on other teams. I try to negotiate with HR, but they tell me that my manager has told them that the offer is non-negotiable and final. I decide to tell HR that I am not interested in the offer and would like to kindly reject it and continue with my internship. My goal at the moment is just to go back to school and do a Masters. At the end of the workday yesterday, HR sends an email to my boss to tell him that I have rejected the offer. I come into work this morning and begin to work as usual. Im in the middle of helping another intern, and my boss takes me aside and tells me that my last day of work is going to be the end of the week since I am not a team player and I rejected the offer after he told the whole team that I am staying full-time. I am shocked question if he means this Friday is my last day, and remain silent. I go back to my desk and continue my work while discussing other matters with my coworkers. My boss again takes me aside and tells me that I can actually leave today if I wanted to. I asked him if he could give me 5 minutes to process all the information and decide. During this time I call HR to see if I can do anything about this and to understand my rights, but they tell me that since I am an intern, my boss can terminate me at his discretion. I take my 5 minutes and come back to see him and tell him I would like to stay till the end of the day to do my knowledge transfer to the other teammates and to not completely screw over the team and finish up my tasks and finish documenting my work. My boss tells me that when I was taking my time to think he was taking his time and wants me out immediately. He follows me to my desk and watches me pack my stuff. I try to say goodbye to my teammates who are all shocked and sad, but before I can even finish my goodbyes, he comes and forcibly removes me, walks me out the door and closes the door behind me. The DevOps guy also gets told that today will be his last day and not to bother staying until the end of the month. My team comes to see me outside the office and tell me how disappointed they are at what happened. The other intern decides to quit on the spot after the whole ordeal and not finish his internship in which he had a few weeks left. The team that was at 10 is now down to 6 with only 1 dev left, which is a shame as I really enjoyed working with the team and they all said how much they enjoyed it as well. The day prior we had a meeting with our big bosses from Germany where I did a demo on what I had been working on, and they were all super pleased with our work as a team and told us that we are the best team that they have in our division, and we are leading the charge in cloud development at SAP. A couple of my coworkers under the same manager have already told me that they are fed up and are already looking for other jobs, and this had crossed the line for them. Is there anything I can do about this in Canada? Do I have any rights in Quebec or Canada concerning termination of an internship without any prior notice? My university is in another city, and now I am stuck in Montreal, not knowing what to do. Has anyone experienced anything similar?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_juvz3e","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/juvz3e\/are_there_any_other_tech_companies_paying_workers\/","DATE":1605398400000,"PLAIN_TEXT":"I work in food service in the cafeteria of a Microsoft campus. Due to the pandemic, Microsoft has closed the cafeteria and allowed ALL of the cafeteria workers on my campus to stay home and literally do no work at all and theyre still paying us the same amount each month.. Theyve even decided to give us a 2% raise recently. Its been 7-8 months now and I have not gone to work at all but they havent fired me or any of my co-workers and theyre still paying us every month. Whats even crazier is that they dont expect us to come back to work until sometime in early 2021, and possibly longer..I was wondering if there are any other tech companies that do this besides Microsoft?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ft6k92","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ft6k92\/anyone_starting_to_hate_working_from_home\/","DATE":1585699200000,"PLAIN_TEXT":"Ive been working from home since mid march since our company told us to do so because of this virus situation. First week, I was so happy. Now I am starting to hate it. I am unmotivated and lazy. I can feel it from my team mates too. The daily stand ups are shorter and barely any progress. Anyone else feel the same?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_jd5bd5","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/jd5bd5\/just_accepted_my_first_job_offer_with_no_leetcode\/","DATE":1602892800000,"PLAIN_TEXT":"Sorry for the wall of text in advance!I am still in school so I am pretty surprised (super senior though), especially because of COVID. I started applying in the summer and I did get a lot of feedback, I just think I didnt realize how serious the leetcode grind was and how most jobs I applied to administered hackerrank or a live coding session. After quite a few rejections, I decided that while my experience and resume was good that I need to work on my technical interviewing skills. So I decided that I wouldnt aggressively apply and instead passively apply and work on Leetcode until the next application cycle (next year since I wont have new grad status until starting spring) and if something hit it hit.Well something hit. I ended up interviewing with a startup in the New England area who absolutely loved me. Their team was great and any technical portions were more conversational and about projects I had worked on. In the end I accepted an offer for 72K with relocation assistance, profit sharing, unlimited vacation, and some other good benefits.What Ive learned in my three months of applying and over 200 applications is:1. Do the leetcode grind to a point but do not be consumed. I think the earlier you start the better, because you wont be cramming and youll have more time to let the information sink in through repetition and practice. For me, I didnt start too late, but with this being my first real application cycle where I sent my refreshed resume out I did have some anxiety because I didnt know what to expect. All but one company (the one I accepted the offer from) asked me some sort of leetcode question or had a technical interview.2. It doesnt matter if it is a big or small company they will still put you through the ringer. After the first two months of applying I realized that without decent leetcode practice I would keep getting rejections. Almost all interviews asked some sort of leetcode question(s) and they were in the easy to medium range. All interviews had a minimum of three interviews (including the final).3. It mostly doesnt matter where you apply. This sub likes to post that if you apply anywhere in the midwest or low cost areas youll instantly get a job or it will be a lot easier because theyre hard up for talent. That is simply not true. Ive sent applications to popular tech states like California, Washington, Texas, etc and states like Kansas, Michigan, Arizona, Virginia, etc. And it was the same experience. While my Indeed and LinkedIn reports for tech states would show 1000+ applications for a position the other states still had applicants in the 100s or sometimes more. I think because of Covid a lot more people are applying and in droves in all the areas you wouldnt think either. Also if you live in Florida, you might have a tough time if youre only applying here. Most companies are not looking for new grad or entry level. I had a friend who just got a job here after almost a year since graduation.4. Big N and top company interviews come from either networking or dropping your application when it first opens. I had the opportunity to interview at big companies like Amazon, Microsoft, IBM, fortune 500 companies, and national labs mostly because of friends or graduates from school. I also reached out to recruiters on LinkedIn with some success. I also wanted to see if my resume was decent enough to cold apply and so I applied when applications were first starting to come out as well and got decent feedback. For networking I always touched base with graduates from my school and started a conversation about their happiness at work and their work culture. For many of us who want to work at a big N, we know most of the answers to questions about the company and work culture, but the employees of those companies do enjoy sharing their joy. Make the conversation less about how you want a referral and more like wow youre working on really cool things and you love working there so much do you think you could help me achieve that same level of satisfaction because what a dream?5. GPA doesnt matter as much as you think. I only got asked my GPA if I applied to or was interviewed by companies at my career fair. I thought based off of those experiences applying was going to suck because I had a 2.1 GPA.6. Internships Matter. Most companies gave me the time of day because I threw myself at any campus tech opportunity. I work a really easy web dev job on campus, but maintained it for a year and recruiters loved that. I also worked at a student startup as a dev and later CTO as well and showed my impact there. They liked my initiative and drive for entrepreneurship with that one. I did it for that reason. It was unpaid, but I figured most companies would like that I expressed in interest in tech ownership. That became sort of a highlight on my resume because it showed an extended project turned LLC.7. Less than 100K doesnt make you a failure. A lot of new grad and entry level jobs were offering less than 100K even mid tier companies. The highest I came close to getting but failed the final interview was around 80K with Im sure some wiggle room for negotiation. That 100K+ is certainly achievable if you work for a top company off rip, but not everyone can land an Amazon or Google job as an entry level and that is OKAY. The biggest thing for me to realize is there is always room for a salary improvement. I may not make 100K + now, but its not unreasonable for me starting here to do so in the next year or two with a job hop or promotion(s). Youre not a failure because some of your peers beat you to it by a year or a few. Even now, I accepted the offer knowing that within the next 6 months or a year I will be pushing for a higher salary. Also were all still killing it! These salaries and our career growth are amazing, especially in this current economy! [Less than 10% of Americans make 6 figures anyway](https:finance.yahoo.comnewsmore-millennials-have-higher-salaries-than-gen-xers-boomers-185011477.html?guccounter=1&amp;amp;guce_referrer=aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8&amp;amp;guce_referrer_sig=AQAAABFbFNklIuN5OuD7a2Ox4YTv-UiMLHvrj6vouCKjHJWU0fQgiFRYQranBd_RQSxeq5HFz9-OZSX7S_19bsUpT3DMoh5KllyMqfjAWNQHCDDQDKu1zJU-cjTQ1mxDdOEz7kxst2LKJlfNXQ3-Sg77Ne1EFLbqdS6--PpxcQyFyUrL)8. Its also okay to feel dejected and like crap! It is a hard market and as new grad and entry level it can feel awful when youre applying in the hundreds with little feedback. It really makes you question your skillset and competency, especially when your friends are doing much better than you. Dont look at your friends success unless youre asking them for advice or a referral. Otherwise, be sad, complain for a minute, and within the same breath go straight back to applying. Something will hit eventually!I just wanted to post my thoughts. I know this sub can make getting employment seem dismal or like youre a failure if you didnt land a big N, but honestly just having gainful employment with the prospect of growth is a blessing. Yall we can do it!Edit: For those who dont have any internships, I wouldnt say youre a failure either or its hopeless. I can only speak from my experience and how it was applying with internships and what made it easier. I did have friends however who had none. One friend only had research experience and got a great job at a national lab (mentioned his rec above). Another had 0 and works at Lockheed Martin. A closer one, only minored in CS and works for a private making decent money in Florida. He actually got a job in state, while I wasnt able to get one. Meanwhile I had internships and at the time wasnt get any bites. Really its all perspective. Your time will come!TLDR: Dont give up. You arent worthless. It will happen for you too.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_zcym45","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/zcym45\/how_github_made_me_realise_i_had_seasonal\/","DATE":1670198400000,"PLAIN_TEXT":"Not a question here but a story about my career in CS - seems to be okay according to the rules, so here we go.The story happens last year. Its November. Im struggling at work. I have ADHD which I usually manage fine, but yeah the situation now is too much for me. I dont like the work anymore. I can barely focus everyday and I start to dread working at all.Im very close to just calling in quit and sending my 3-month notice. I cant keep living like this.Anyway, I have been on my 5th year of software development by then, and I found a company online that prints your GitHub history for the last X years, send it to you in a frame to hang on your wall. And I was like, its been 5 years that I started coding, that would be a neat item to congratulate myself on my success. I will order myself one.So I got that framed poster with 5 years of my GitHub history, you know, the contribution graph with the little green squares that shows every time you committed.And thats when I notice it: huge drop in my commits in November, every year for the last 5 years.But thats normal, I told myself. Ive often quit my job in November. After all I was feeling like shit at that time of the year 4 years ago... Also 3 years ago... 2 years ago... Last year. Wait shit. I have seasonal depression.So yeah. I did not quit my job that time. Couple months after I was fine and quitting wasnt on my mind anymore.Bonus to the story: fast forward to this year. I actually completely forgot about that previous story. And Ive been feeling like shit this November at work, not really knowing why. Its been extremely hard to be productive.Finally took some vacations (they start today). Very happy about it. I told some friends to come hang out at my place today, because I took vacations because I was feeling like shit.One of my friend replied ah, yes, your usual November dropdown. I was like... OMG right, I had completely forgotten about that.So yeah. Been eating a ton of vitamin D, hopefully it will help with that. Also wrote a reminder in my calendar for every future November: REMEMBER SEASONAL DEPRESSION! So hopefully I stop quitting my job.The lesson I guess is that sometimes you feel like shit and your brain will rationalize any reason for it, but you should first check that its not just something dumb like you having had a bad night of sleep, or just a recurring seasonal depression.The second lesson is that having data about yourself is awesome, at the very least its worth checking it out from time to time.Hope you liked my story andor learnt some things. Peace out.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_s3ffj5","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/s3ffj5\/my_new_employer_canceled_my_signed_contract\/","DATE":1642032000000,"PLAIN_TEXT":"So after searching for a tech job for months, doing countless interviews, getting rejected over and over again, I finally got an offer. I eagerly accepted and did the whole onboarding stuff. Then while I am on a damn plane, I get a call that they cannot accept me working from there and basically canceled my contract like that. Then they offered me $500 compensation for this. Oh did I tell you that I also gave my two week notice and I was supposed to start at my new job? Yeah. Awesome. Really awesome. Advice, please?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_kg2g24","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/kg2g24\/cs_rich_kids_vs_poor_kids\/","DATE":1608336000000,"PLAIN_TEXT":"In my opinion I feel as if the kids who go to high-end CS universities who are always getting the top internships at FAANG always come from a wealthy background, is there a reason for this? Also if anyone like myself who come from low income, what have you experienced as you interview for your SWE interviews? I always feel high levels of imposter syndrome due to seeing all these people getting great offers but the common trend I see is they all come from wealthy backgrounds. I work very hard but since my university is not a target school (still top 100 - UDEL) I have never gotten an interview with Facebook, Amazon, etc even though I have many projects, 3 CS internships, 3.6+gpa, doing research. Is it something special that they are doing, is it Im just having bad luck? Also any recommendations for dealing with imposter syndrome? I feel as its always a constant battle trying to catch up to those who came from a wealthy background. I feel that I always have to work harder than them but for a lower outcome..","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_wox6r1","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/wox6r1\/be_careful_with_average_salaries_better_to_aim\/","DATE":1660521600000,"PLAIN_TEXT":"We often get threads of people saying they arent the best, they dont want to grind, they just want a calm, chill job, would be happy with any half decent job, etc, and asking about what salary to aim for. And thats okay if thats your priority in life. However:You should remember that the average salary includes all the people that have not once googled swe salary, never negotiated in their life or if they did it was just can you please increase 5k a year, never participated in a forum or community about their career, and certainly never visited [levels.fyi](https:levels.fyi), or did 1 leetcode problem. Just by virtue of being here, could it be that you might be in a higher percentile than you think yourself to be? perhaps you are not so below average. in addition, the average salary doesnt include huge amounts of compensation in the forms of stocks, bonuses, assistances, extra vacations, etc. So the number itself is misleading. Anyone in this subreddit should perhaps aim for top 1% to top 25% compensation, and if you get average or below average compensation despite aiming higher, so be it. At least you can rest easy knowing you tried, that you arent like the majority of people out there that could easily get an extra 10k-50k if they would just use google and put some effort into knowing market rates, knowing interview practice, knowing that job hopping rewards x2 as much as not, etcAt the bare minimum, apply for top paying companies first, then work your way down the list. Dont apply by the order the job ads showed up on linkedinindeed, and then accept the first offer you get, because thats mathematically guaranteed to give you a worse average offer than applying in order of highest paying. Aim high, regardless of talent, you have nothing to lose but a bit of time, and a lot to gain.And last piece of advice, try to separate emotions from job search. It should be mechanical, the most cocky and confident person and the person with the least self-esteem should be doing the same thing, applying for top paying companies and working their way down the ladder if they dont get in. Dont let your self-esteem make you get less salary than you could have.[](https:www.forbes.comsitescameronkeng20140622employees-that-stay-in-companies-longer-than-2-years-get-paid-50-less) ^( Employees who stay in the same) ^(job) ^(for more than) ^(two) ^(years will) ^(earn) ^(50% less over their lifetime than people who change companies more frequently)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_kvxeoa","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/kvxeoa\/opinion_its_okay_to_take_the_job_that_pays_more\/","DATE":1610409600000,"PLAIN_TEXT":"I just read a post that criticized employees who focus on salary over job satisfaction and I wanted to offer a rebuttal. You can read the tl;dr at the bottom but I have a story that explains my opinion.At the very beginning of 2019 I was faced with a choice. I could stick with a job that I enjoyed with a team of amazing engineers where I was learning a lot and meaningfully contributing to a worthwhile project. Or I could take a job offer I received for about 50% increased total compensation with great benefits doing more boring work. I took the new job. It wasnt that I was underpaid by my previous employer, its just that the offer was for a contracting job in a particularly lucrative niche.After giving two weeks notice to my boss I made a comment in passing to the effect of Im sure I wont like the new job as much but I need to do whats best for my family. Well he latched on to that and we had a conversation where he said you shouldnt just take a job for the money. He said it in a way that wasnt attacking my decision but was just giving career advice and it really made me question my choice.Well about a month and a half into the new job my state announced its COVID stay-at-home order. My wife and I did some last minute grocery shopping and as we are walking from the car to our front door we are mugged at gunpoint by two men. They take our wallets, phones, and even my car (which was thankfully recovered but needed repairs). My wifes little sister was staying with us at the time so we made the decision to immediately relocate to a safer area.Between replacing our phones, the mechanic bill, early lease termination, and relocating costs this was a very expensive ordeal. We have been living paycheck-to-paycheck since then while our finances stabilize. If I hadnt taken the higher paying job then I wouldnt have been able to move to a safer neighborhood and I would have to live knowing that my wife and our family could be looking at a gun any time we walked out the door. So the beliefs that I now hold, and heres the tl;dr: Money is safety More money means the ability to:  live in a safe area  pay for medical costs (we are in the US)  purchase security equipment (home security cameras, etc)  respond to unforeseen expenses like car problemsI will never fault a coworker or employee for switching jobs to earn more money. It may sound dramatic, but quite literally their life could depend on it.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_zbrmud","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/zbrmud\/we_should_seriously_have_more_tact_when_talking\/","DATE":1670025600000,"PLAIN_TEXT":"From my own experience and the online mediums I frequent Im starting to notice an increasing dislike for people who work in IT, in particular people who work as developers. Especially with the recent layoffs in big tech people seem to be quite happy that others are losing in jobs (whether they deserve it or not, I do not know).Then there was a series of tiktoks of people who worked at big companies (not necessarily tech) describing a day in their lives in which was just participating in meetings, working out, having coffee &amp; lunch and thats it. Making it seem like an adult daycare where they get a paycheck by the end of the month, which is similar to some of the experiences I read here when people question about a day-in-the-lifelifestyle of someone who works as an SWE.In essence, what Im trying to say is, stop portraying working as an SWE as some job where you search for the answer on google and then copy that answer into your code and then you spend the rest of the day doing what you want. Maybe it is like that for some but not everyone, you cant google a solution when you need to refactor thousands of line of code or implement a new business feature.People who are not in the industry will get the wrong idea, and worse managers will start getting the wrong idea and are probably being emboldened by what Musk is doing.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_88b07i","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/88b07i\/i_had_trouble_getting_bites_on_my_applications\/","DATE":1522368000000,"PLAIN_TEXT":"This is kind of interesting and disappointing to me. I have a good resume, a 3.93 GPA, a couple of letters of recommendation (one from the editor of one of the biggest CS research publications in the US), and a not-too-shabby portfolio. But out of nearly 70 applications - mostly to local companies, even - I only got two responses. Didnt get either opportunity; they had hired someone else before even scheduling my interview.Ive never thought twice about checking, well, any of the boxes for reporting demographics or disability status. Honesty seems important when it comes to things theyll learn anyway in the interview. Plus, they talk all about how they legally cant discriminate, and they make a big ruckus about how that they even get bonuses from the government for taking on disabled workers! My disability is minor - I have a crappy lower back that I take medication for and it doesnt really impact anything that I do, but it was notable enough that I ended up registered as disabled. So if a company wants to use my semi-trivial condition to make stacks off the government, why not!But then I started feeling really down on myself about not getting a single bite on these applications. Threads on this forum always say you need to stop looking at the big companies and go local! Well, I was already doing that; I dont want to move out of state, and certainly not to California or Seattle or anywhere else with outrageous cost of living, so I only applied to the likes of Google if they had openings in the local office. You must have a bad resume, well, apparently its bad in a way that no career professional could spot, because I had plenty of people look it over. Your portfolio must be underwhelming, but in all of my applications, not a single person even viewed my portfolio.It really sucks to get shot down when you should be at the very top of the candidacy list. So I finally decided on one simple lie on my application. I didnt click I choose not to disclose my disability. I went all the way over to I do not have a disability while applying for 8 positions.I got 5 emails and one phone call that week. One email asked me in the very first exchange what my expected salary would be. They didnt disappear when I gave them a vague range about 10% higher than the local going rate - they called the number I left in my response 2 hours later.Im kind of overwhelmed now by all of it, really. It feels like being thrown into the deep end. Im being really skeptical as I approach these interviews Ive got lined up because it feels like there has to be some catch here. While it could all just be coincidental, it seems unlikely - and that really makes me angry. I think thats what Im feeling most right now. Ive been told that disability information typically isnt even shown to the hiring folks for the sake of legal liability. But wow.Has anyone else had this experience?Edit: Whoa gold, thanks so much guys! Its both depressing and encouraging to read the replies here. I think what Im maddest about is the idea that there were some good companies I may have had an opportunity to interview with if I hadnt checked that box - the places Im talking with now will be good money and okay work, but theyre definitely not in fields Im excited about and are mostly my bottom picks. So part of me still hopes its a coincidence or a statistical anomaly. Hopefully experience and networking with these companies will at least get me into CS work that Im more passionate about!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_g0yuex","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/g0yuex\/i_have_become_a_soulless_zombie_and_i_honestly_do\/","DATE":1586822400000,"PLAIN_TEXT":" In a retrospective recently, no not a code review, I become aware that my behavior has completely changed. My family and old friends do not recognize me as the same person I once was. My life is completely different now than it was just a few short years ago. My mother looked at me over video conference at Easter and suggested this, and I was quick to brush this off, but she was absolutely right.I used to be quite social and active. Through college I was an avid runner and involved in an honors fraternity. Never went to an elite school but always was driven by a passion for technology. I made many friends and frequently spent my weekends with them. That soon changed. Id say it was after my Sophomore year I got consumed into the world I live in now. My first internship, at a small and unknown digital media company. I quickly discovered minimum wage was not the standard intern pay I had been told and people all over the world were making full time wages at much larger tech companies. From there I was hooked.Junior year on I balanced internships at 30 hours a week with 18 credits in the evenings. I managed to score a salaried position while I finished up my classes and then spent a few months using every extra hour to build a portfolio and do every single DS&amp;A (Now leetcode) problem I could find. It could have been my birthday, I was still going to do my evening leetcode.Even after this I would work and consult, work and consult, find new jobs on a semi yearly basis, enhance my portfolio, more leetcode. Soon 5 years had gone by. I was nearing 27. Then I started with building up start ups and selling apps and ideas. Then came 32. Now what? I havent had a love interest in nearly 10 years. I have no interest in a family. No interest in doing anything but developing towards my own success. And I am successful, but I have given up the pursuit of everything else in the process. Forgotten what it means to be human. And the saddest part is... I just dont care.I dont notice it at all. I see pictures of those I graduated with and they have families, it does not phase me. Tonight I had to convince myself to step away from my work, have a drink, and compose this. So that somewhere, someone, will heed this and not fall victim to my own misdoings. You need not torment yourself with your work, you live life for purposes beyond just self success and human innovation. Dont seclude yourself, else you may find it far too late to attend to your mistakes.In a way I still have no regrets, I did what I set out to do, and will continue to do so, regardless of any intervention. I surpassed every expectation I ever had for myself. But I desensitized my humanity in the process. And this is something I can never take back.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_stskbq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/stskbq\/what_are_some_big_turn_offs_when_looking_at_a\/","DATE":1644969600000,"PLAIN_TEXT":"Here are a few for me:1. CEO is also the CTO (No worklife balance)2. Ugly website, website with no SSL (Are you even a tech company?)3. Developers have old hardware. I once interviewed at a place, one of the most senior developers had a Macbook from 2012, maybe even older. (Wow is this what you get for loyalty?)4. Companies that say they run a lean operation, but offer a lean salary. I dont mind working hard in a small team, but you gotta make it worth my while.5. Obvious coke head CEOs. Ive been around.&amp;#x200B;Forgot to add:6: Hiring manager or HR looks really stressed. I once went for the interview where the HR looked so stress she seemed like she was gonna cry. Clear sign of burnout. Ive been there. Totally not holding it against her, but most probably not the kind of place you would wanna work.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_t37gay","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/t37gay\/increased_total_comp_from_70k_300k_at_26_w_no\/","DATE":1646006400000,"PLAIN_TEXT":"I will put some FAQs below:1. What is your current job (and job history)2. What company is it?3. Why are you posting this?4. How are you paid?5. What is your story?6. How are you doing so far?7. What are the biggest themes of your story?8. Do you like your job?9. Can you help me?What is your current job (and job history)I currently am a Product Manager at a public company (making 300k). Previously I was a senior analyst at a small startup (making 70k). Before that I was on and eventually led the startups customer support team (making 50k). Before that I started a failed startup and did a bunch of random internships.What company is it?Company is a well known public company (not faang but close). Youve certainly heard of it and chances are youve used it at some point.How are you currently paid70% salary &amp; 30% RSUsWhy are you posting this?At end of the day, this is the kind of post I wouldve wanted several years ago. On one side, I want to show more people what is possible. My dad grew up in sharecropping...he literally picked cotton. My mom was unemployed most of my childhood. As a result, I didnt know my worth or what was even possible for me. Nobody in my immediate or distant family has a successful career. Making hundreds of thousands of dollars felt like something only certain people with perfect Ivy League backgrounds w special connections could achieve. So for me, as a college dropout who didnt go to an Ivy League or have any special connections, to be where Im at means a lot.Additionally, I hope this post sheds some light on the specific details and processes I followed in order to get where Im at.DISCLAIMER: this is not a magical step by step guide to doing exactly what I did. As with all of our journeys, theres luck and a level of randomness that is unique to our story. But what I focus on here is providing the specific things I did and the ways I approached problem solving so you can find something that is relevant for you. Ive broken my story into chapters containing what I did as well as a brief reflection for each chapter.The last thing I ask is that if youre just going to hate, please go elsewhere. I want this to be a productive space for growth and conversation. There are plenty of spaces to complain and be negative elsewhere. So without further ado, lets get into it....Whats your story?My story is a whirlwind so Ill break it into sections...1. The dropout2. Minimum wage startup3. Going back to college4. Dropping out, again5. Working as analyst6. Exploring product management7. The interviews8. How its going so farThe dropoutWent to a top-25 college on a full merit scholarship and dropped out due to severe mental health issues and family death. It was the first time that I had spent time away from family and lost my close cousin, grandpa, and grandma all while I was away at school. I had no ability to cope with the depression and it took me to a very dark place. After dropping out, I tried to start a startup with friends but my close friend who also was our cto lied about everything and startup failed.This was a really dark period for me because I had no money, no degree, and no hope. I attempted to apply for some product management jobs however no company would take me seriously. So I lowered my bar and had two opportunities.1. Work at a small startup with 40 people where Id be working for minimum wage in a support agent role. I believed that the company was doing really cool things but would be at the bottom level making barely anything2. Work at a larger company in a better role making around 60k. Better benefits and salary but less cool companyAfter much deliberation, I chose the small company at minimum wage. The things that caused me to make my decision1. I believed in the company and believed that as they grew, I could grow with it2. The manager was someone I really connected with and felt like he would have my best interest3. While money is important, I felt like I should be maximizing my learning and development, not finances4. I felt like I learn best in entrepreneurial roles where there is a lot of moving pieces. And the startup felt like that. I think that is is incredibly important to know how you best learn and find opportunities that align with that styleMinimum wage startupSo I started working at the startup from level 0. I worked my ass off, regularly working unpaid overtime. I did this so that I could complete my daily job functions and then also have time to contribute in other areas outside of my job. For example, creating improved processes for my team, developing macros for communication, or researching specific issues. I went above and beyond in client interactions and quickly developed the reputation as a hard worker who went above and beyond at every opportunity.During my time here, I really became passionate about working with data and started building and owning tableau reports and analysis for my team. My manager was incredibly important in this because he saw my potential and created opportunities for me to have more ownership. This validated my decision to choose the startup w my manager.After 2 long hard years, I had risen to the lead for my team and my manager transitioned into a different role. My new manager was far less supportive and career growth appeared to stall. So as a result, I made an extremely risky decision to quit my job and re-enroll in college and move across the country to finish my degreeAt the crux of this decision was a belief that I never wanted to feel like I was just waiting for an opportunity to emerge. I wanted to drive my career and when I felt stagnant, I wanted to always be willing to move.Going back to collegeWhen I went to college, I committed to studying data science. I applied for 100+ campus jobs and most were basic, admin jobs and got all rejections or ghosts. Finally got an email to interview for an analyst intern role. Did the interview and they asked if I had any tableau portfolio work I could share even though they used powerbi. The company (very big non-tech company) was trying to move to power bi (away from excel  PowerPoint) and j had data viz experience. My tableau work was all at my previous company and therefore not shareable but I told the interviewer Id check and see what I could do. That night I stayed up all night installing powerbi on a Mac (needed to setup a virtual machine which is a whole ordeal in and of itself), learning how powerbi works, and doing a sample powerbi project. I sent them the work and an overview at 6am and they were blown away. I got the job!Learnings:1. You only need one yes - i got literally hundreds of rejections in a 4-month period, many from jobs I thought were a guarantee. But at the end of the day, I got the one yes that mattered2. When you get an opportunity, dont let it go. When I got the interview, I was willing to do whatever it took to secure the job. Go over and beyond and make an impressionDropping out, againAfter two months into the job, I returned home for winter vacation and scheduled several meetings with people from my previous job. I leveraged the fact that I had an analyst internship now and spoke about possibility of them opening up a full time analyst role. The company loved me and was incredibly sad when I left and also happened to be opening up an analyst role. They initially wanted to start interviews in February, but since I was there in December and had great relationships, they agreed to interview me in December before I left back to schoolI prepared extensively for the interview and even prepared a document of all of the things I felt the company needed. Given Id be the first data hire, I wanted it to be clear that I had a plan. After the interview process, I got the job!!After much deliberation, I accepted the job, dropped out (again), quit internship, and moved across country again to start this new job at my old startup. Fortunately this was right before the pandemic started and had I waited at my previous company I wouldve likely been laid off with no ability to find a great job in the midst of the pandemic.My key learnings:1. Always be seeking new opportunities proactively. Had I just waited, I probably wouldnt have gotten the job but because I reached out, the doors were open2. Build great relationships. Even as I left the company, I maintained great relationships which were key in the company bending backwards to bring me back3. Always go above and beyond in interviews. Find something you can do that no one else would to give you a differentiating factorWorking as an analystAt my new analyst job, I worked my ass off to partner with the new COO to help him with mission critical problems. The trust grew and over time he started giving me more and more ownership. I leverages the fact that I had a unique set of data skills with a strong understanding of the business to provide the coo with regular insights that he needed in order to be solving the right problem.After a year, I negotiated and became a senior analyst (instead of analyst 2) even though I didnt get much salary bump (62-&gt;72k). The title was important for me. More important than salary. I knew this company would never be my big payday but having the right title could open the door for the company that would be.I also won employee of the year for my contributions to mission critical company initiatives that helped generate millions of new revenue.After being senior analyst for a bit, I discovered a new problem area at company and proposed to ceo and coo that I be the product owner for this area. Because of the trust I had built and my track record, they agreed. As a result, I operated in a various ambiguous space for awhile wearing tons of hats and continuing to work 80 hour weeks...Exploring Product ManagementFinally I was looking for a different opportunity that paid more than 72k..i started looking for jobs that would leverage my previous experience. I was really interested in Product Management because it felt like the logical progression of my current work. Id already indirectly been doing many functions of a PM while also collaborating extremely closely with our PM team. I felt like PM would allow me to use my data, communication, strategy, and execution skills in a blended approach that Id really enjoy and be good at. The hard part was figuring out how to break in...My thinking was...I have no product management experience but I do have a ton of customer experience work, data skills, and experience execution as a product owner....and if I could find a pm job that focused in that area, I could compete with someone who had more experience than I did.I found a few roles that met that criteria (pm roles that focused on the cx space) reached out to the recruiters, applied with tailored resumes (I remade resume at least 15 distinct times using [rresumes](https:www.reddit.comrresumes)as well as tons of friends) and then waited. Eventually a recruiter reached back out for screening interview. I made it past that stage and then he let me know about the interview process. I had never had a product management interview process before and this was a very formal process (execution and product sense interviews). This was overwhelming as I began to realize all the things that I didnt know and how much work would be required to simply not make a fool of myselfThe interviewsSo I took a week off of my vacation time, signed up for a pm course, and spent my entire week long vacation studying. I really enjoyed the process because the frameworks were either very similar to what I was already using in my current role or very applicable. After a week straight of studying (70 hours total), I had the first round and made it to second round.I then spent another full week doing prep + mock interviews for the second round. So In total two weeks of 70 hour studying, dozens of pages of notes, dozens of mock interviews, and prep, I got the offer!My biggest takeaways from this process were:1. Set yourself up for pm opportunities at your current job by finding ways to identify opportunities, scope solutions, and execute. It doesnt have to be a product, but performing those steps, especially across spaces that require high stakeholder management, is incredibly useful and you can easily package that experience for product roles2. To get in door, find opportunities that leverage your unique experience3. Study, study, study. Product management interviews are hard and irregardless of what you think, almost everyone is studying extensively for them.4. Mock interviews are amazing. Do them early and do them often.5. Your recruiter is your friend. They win by finding successful candidates. Therefore ask them about the types of interviews youre having, the personalities of the interviewers, common pitfalls, and feedback. Use your recruiter as much as you can!!6. Research the hell out of the company and interview process. For larger companies, interview process is well documented. So nothing should come as a surprise to you7. Dont look at interview prep as just interviewing for a job. Think about how you could apply the lessons youre learning to your current role. For me, that made all the difference in my ability to retain informationAfter I got the offer, I called a pm friend of mine who showed me some sites I could use for benchmarking comp. I was expecting comp to be in the 130-150 range so boy was I surprised when I was able to land ~300k after negotiating. Initially offer was 250k. While the job is very different than my previous role, a LOT of things are very transferable. Im very familiar with problem space, I can heavily rely on my data background, and Im extremely comfortable executing on initiatives and managing stakeholders.How things are going so far?Just had first performance review &amp; received superb feedback. In my short time at my new company, I have led a successful product launch, have gotten a ton of great feedback from my peers, and am mid way through developing a multi year roadmap.My biggest tools for learning have been 1:1s, tons of books, reading documentation, documenting all of my meetings thoroughly, and asking question after question after question. I can elaborate more on this if there are specific questions, but in short, just because I havent been a pm before has not led to me having worse performance. I am exceeding expectations across the board.Can you elaborate on the transferable skills?Data analysis: this is my bread and butter skill. I am extremely well versed in quantitative and qualitative analysis. This is extremely helpful for discovering what is most important thing to work on, how do we know what success is, and then measuring outcome to understand how accurate hypothesis was.Stakeholder management: a huge part of my current role is managing stakeholders. Being able to communicate and align a diverse set of stakeholders is a skill Ive been honing for yearsUser story mapping: a massive part of my job is understanding the user. With a background in customer support, I have a ton of customer empathy and have a wide array of tools to use for looking at problems from a customer POVExecution: ultimately my job as a pm is to execute and ship great products. Execution can take many forms and my experience executing my previous roles has prepared me extremely well for my current jobWhat are the biggest takeaway themes:1. Work extremely hard. For basically 4 years straight I worked 60-80 hour weeks and rarely took vacation. This is not a very healthy system and I know there is more to life than work. But Id be lying if I said that a large percentage of my accelerated growth wasnt attributed to the fact that I was willing to work twice the hours as my peers for over 4 years straight2. Take risks and dont wait. When I got the chance to work on a support team, it wasnt perfect job but I figured itd be better than nothing and took opportunity. When I felt like career growth was stagnant, I didnt wait and instead I just moved my entire life across the country. When I got a new offer back across the country, I didnt hesitate. To grow faster than everyone you cant do what everyone is doing. Its going to be extremely scary at times but you have to be willing to take calculated risks3. Find an area of interest and go deep. For me that was SaaS customer experience problems. I started on customer success team. Then I moved to data team where I was still working on customer success problems. Then I moved to product owner where I was still working with customer experience problems even if my product didnt involve a product teamengineer. That is what enabled me to get my product management job...the fact that even though I hadnt been a pm, I had a deep experience in cx space4. Choose the right manager. Managers can accelerate your career or completely ruin them. Never allow yourself to have a bad manager. And if you do. Run.5. Maximize Learning and Development early on: There were plenty of opportunities I had to increase my salary by 20-30%. Whether that was taking a less exciting job or trading off a new title for a salary bump. For me, I always wanted to keep a clear line of sight on the true prize. I felt like if I just focus strictly on prioritizing my learning and development, even at the expense of some short-term financial wins, itd put me in the best overall position to capitalize down the line. Do you actually like your job?I absolutely love it. I love the space, I love the team, and I love the product. If I was paid 70k, Id still love this job.Can you help me?Im happy to help review resumes, talk strategy, do mock interviews, discuss case studies, or just chat. Just reach out.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_cp2ew5","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/cp2ew5\/a_senior_engineer_at_work_got_upset_with_me_and\/","DATE":1565481600000,"PLAIN_TEXT":"Hi guys,I started my first CS job out of college a month and a half ago for a rather large company. I have been struggling to keep up with all the information, tech and fast-paced environment, and I think I have been asking way too many questions as well. I have a learning disability, but I have been trying my hardest and I am never on my phone or anything, it just takes me a while to learn things. A few days ago, the senior engineer who is also my mentor, got upset when I wasnt able to answer a few questions about the feature that my team was working on and basically told me something along the lines of I should have known I would have received this kind of low-effort from a diversity hire. I didnt ask him anything about it, I sorta let it go, but it has been haunting my thoughts this weekend. Im a little upset and concerned now. This engineer was one of the 4 interviewers that I had when I was interviewing for the position, and I assume that he would actually know if I was a diversity hire or not? Either way, is my job safe? Am I at any higher risk of getting fired or let-go because of this? I legitimately did not think I would be a diversity hire, so I oddly hope he was just saying this to make me feel bad.Any advice?&amp;#x200B;Edit: Thank you for the support everybody. I will talk to HR tomorrow.Edit2: For anyone who is still following...this is what I did. The HR department had a service for making an anonymous tip. I made an anonymous tip about workplace harassment, but I did not mention anyone by name or location. I listed everything that happened without giving out personal information. I made an email address without any personal information and listed it in the tip and said that they can reach me through that if they want more info. Im not sure if I will get a response, but that was what I was comfortable doing. If I dont hear back, i will try to reach HR directly.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_e8h6dq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/e8h6dq\/how_to_deal_with_a_male_coworker_who_is_trying_to\/","DATE":1575849600000,"PLAIN_TEXT":"I graduated last year and have been working at my job for about a year and a half now. I have been the only woman on my team the whole time. At first I was the only woman in a team of 5. (Im also the youngest at 25 but thats pretty much irrelevant). Untill recently it all felt great, I felt like I was just being seen as a fellow developer and not the girl. I was treated with respect and such. A few months ago as part of a reorg my team merged with another team, so now Im the only woman in a group if 16. And then things felt different.I still feel like Im respected, but now I am acutely aware that I am the girl on the team. This was almost exclusively caused by one of my coworkers.One of the first times I was in a meeting with him, he started going over the top when trying to seem inclusive. Like drawing long hair on a stick figure, correcting everyone who used he generically for a user with or she!, etc. One day he came to ask my coworker who sits back to back with me a question. Then he says (my name), you may be a minority on this team, but you are still a valued member and your thoughts are important.Just the other day we were working on a project together and he came over to my desk to talk about it. We were on the topic of dismantling an old system in favor of the new one, and he said we also need to dismantle the patriarchy! And internally I was like why is this necessary to be said right now?And the final thing that bugs me is he treats the rest of our team members the same, direct and emotionless. But with me he talks all soft and gentle and skirts around issues. I feel like he is treating me like some sort of fragile flower and it bugs me so much.All of this has also opened another can of worms for me where now I feel very sensitive to perceived slights because I often see them through the lens of they see me as just the girl. Like my desk being moved farthest from the rest of the team and facing away from everyone else. Or another coworker constantly fielding questions about code I wrote and know 100% about, just because he has a version he slightly modified that is used more. Then I end up often wondering if I was just the equal opportunity hire if you will, even though I completely know I have the skills and experience. Its all inconsequential and not purposefully done but now I second guess stuff. Constantly being reminded of my status as the girl on the team is very demoralizing.Im sure he has good intentions and is just trying to make sure I am comfortable and dont feel like an outsider, but I feel more like an outsider now because of his constant virtue signaling. Id like to tell him to tone it down because it makes me uncomfortable, and that I know he has good intentions, but I dont know a professional way to do so. Like do I email? Slack? Set up a meeting? Does anyone have any advice for how to talk to him about this?edit: clarificationedit 1211: Thanks everyone for the advice! I am waiting for another incident to talk to him about it so it is more relevant and he might remember it. Ill keep everyone posted","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_irjodn","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/irjodn\/ive_reviewed_thousands_of_applications_for\/","DATE":1599868800000,"PLAIN_TEXT":"Ive been a hiring manager for a US-based university recruiting at my unicorn of a few hundred people. As a follow up to [my previous post](https:www.reddit.comrcscareerquestionscommentsinrex1ive_reviewed_thousands_of_applications_for), I thought Id share a bit about how I go about reviewing applications. Also, if you arent aware of the [Resume FAQ](https:www.reddit.comrcscareerquestionswikifaq_resumes), this is a really amazing resource and I would check that out first. My post here represents one specific viewpoint whereas that advice is more broad and generic.Edit: One thing to note is my experience is only in the context of a Unicorn (which is competitive with FAANG). In our case we have tens of thousands of applications but we only have the capacity to interview a couple hundred.Heres a bit of the behind the scenes for how I review applications: Frankly, application review is not my full time job, so usually I end up doing this after work hours. Typically I might spend 30-60 minutes reviewing applications before decision fatigue sets in. Most applications would be pretty clear after about 5 seconds of reviewing. Probably 5% would be an obvious yes and 75% would be an obvious no. The other 20% of the cases take up 90% of the time. If your applications is in that 20%, then Ill take some more time to look through all the details. If you provide links like personal websites or Github, Ill probably click into that.When reviewing a resume, here is the rough order of things Ill look for: Industry Experience. Having an internship at Facebook, Google, or another highly prestigious company on your resume probably makes you a yes most of the time. Otherwise Id look into the details of what you did in your various roles. If you had an internship where you just pushed code around, that doesnt show much. But if you had an internship where you built and ~~shipped something that was used by a million users, or halved the latency of all requests~~ solved a really challenging but really impactful problem, then thats probably an automatic yes. Because of this, Ive often preferred candidates who interned at startups and were forced to play an impactful role in the company over candidates who joined a less tech focused F500 company. University. Ill be the first to admit that Im ashamed at how high this is. There are a number of reasons that which university should not be this high: (1) it is highly correlated to how well off your family is, (2) it only reflects on what you accomplished in high school and ignores what you accomplished in college. Unfortunately, university rankings are still the most reliable standardization out there. There is still a correlation between where your university and your success in interviews and your success in industry. If you go to a top 5 CS school, youre a bit more likely to be a yes than a no if everything else on your resume looks solid. Granted, if youre at MIT but you havent shown much else in any of the other categories, then youre still going to find yourself to be a no in most cases. Teaching Experience. Ive found that being a TA is one of the signals that helps separate soft skills the most. I appreciate candidates who have deep knowledge of a topic, can empathize with where someone else might be coming from in their understanding, and bridge that gap. If you havent done so already, I highly recommend talking with your professor about becoming a TA. Projects. Theres a ton of nuance in projects listed, so Ill go into more detail.  School project in your introductory CS sequence - this doesnt show me anything that would separate you from everyone else.  Hackathon(or similar) project - This shows me you probably have a genuine interest in learning new technology and building software. Also in this category are clones of apps.  Research project  Project teams - This shows me that you take initiative to dive deep into academic areas that interest you. Its even better if the research project requires you to work with a team.  Open Source Project - Theres a ton of nuance here, but if youre making contributions to a critical library or if you decided to build something from scratch and it has some traction, that looks awesome.  Productionized application solving a real world problem that has real users - I would love to get you an interview ASAP. You dont need revenue, funding, or even a startup, but there is no shortage of real world problems where software can help. If you can honestly say youve dedicated a significant chunk of time to this, feel free to put it on your work experience too. The best part of this is that unlike internships of university, this is 100% in your control. I cannot stress this enough - show me that you can solve a real world problem with software and have real people use what you built. Coursework. Computer science is still the gold standard in software engineering, but you can still succeed without a CS degree as long as you show that youre not shying away from project heavy classes and still understand basic CS theory. I generally like candidates who are taking more advanced courses (like grad level classes) andor more programming heavy courses (like compilers or operating systems). Extracurriculars. Candidates that take initiative and can handle large amounts of responsibility are great. In addition to displaying leadership, extracurriculars also show me how you are striving for excellence in the things that you enjoy doing. Show me your passion for sports, dance, theatre, or whatever and the things that youve done to push yourself in those areas. Degree. BS vs BA doesnt make a difference. Having a Masters is a slight bump, but if you can get your Bachelors + Masters degrees in 4 or 4.5 years, then thats pretty impressive. GPA. Honestly, GPA doesnt really matter too much. If you leave it off your resume, Ill probably just assume its lower than a 3.0, but that also probably wouldnt be a dealbreaker. If its really good, that would be a slight bump. However, Ive seen people with a 4.0 that fail in industry roles where soft skills and the ability to handle ambiguity are important. Skills. I wouldnt care too much if you included this. When hiring new grads we dont hire for the programming languages they know or dont know. However, if you have experience with iOS and youre applying to a company with a big mobile presence, maybe you should put it on your resume. Cover Letter. I almost never look at the cover letter. Work Authorization. We dont have a team capable of handling immigration for more than a handful of people, usually reserved for leadership and extremely senior positions. If you are a US citizen or permanent resident, it would be beneficial to add it.General advice: Less can be more. Im browsing through applications quickly, so be sure that any key words or accomplishments dont get missed because your resume is too cluttered. Imagine that my eyes are jumping around the page, looking for key phrases. If youre describing your previous internship, instead of describing what you did week by week, find 1 bullet point that encapsulates the work you did the entire summer. Then add 2-3 additional ones describing the most impactful or most challenging parts that made up that project. And please make sure your resume fits on one page - I sometimes dont even think to scroll down when reviewing a resume. When going into the details of your work, avoid jargon that the average technical recruiter wouldnt know. There is a fine art in communicating accomplishments without going into too much detail, but it helps to imagine yourself explaining it out loud to a friend. Show me the impact of your work. In general, software engineers are responsible for solving real world problems with code. I know that it can be tempting to talk about the technical details of what you did, but be sure to show the impact that it had.Keep in mind that this post just reflects my thoughts and there are plenty of other companies and other people that review applications that are looking for different things. Please dont overfit your application to one single narrow viewpoint. If youre in a role that also reviews applications, Id love to hear your thoughts as well. Let me know your thoughts and if theres any other topic youd like to learn more about.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_tveiy8","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/tveiy8\/takehome_aws_test_that_cost_me_90_only_to_be_told\/","DATE":1648944000000,"PLAIN_TEXT":"I applied for a job. The test included setting up an app using AWS services rather than code (ie apigateway rather tham node express, etc). I told them tagt I had no experience with these AWS services, but many times the test is to see how fast you can learn something, so they were like thats fine, and if you need extra time etc etc. So a few days later, its all done and I submit it (it did exactly what was asked, even according to another dev that reviewed it). Then some weeks later, I get told that they aremt moving on with the process because they are looking for X years experience (even though my resume already stated what my experience was). Whatever, I got and accepeted an offer a werk after that for more money than they were offering, and where the work is all code and no AWS (the wix of devops). Then I get my $90 AWS bill for the services I bought to do the test. I will never do a take-home test ever again.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_epubyd","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/epubyd\/is_this_common_in_software_engineering\/","DATE":1579132800000,"PLAIN_TEXT":"Im posting this from a throwaway account because I have friends and family that know my actual Reddit account and I feel embarrassed about my how I handled the situation and if I might be making a big deal out of nothing. So about three months ago my school had a career fair in which I got an interview at a well known healthcare company for a summer internship. I was pretty happy that i got the opportunity to interview because a lot of my friends didnt get one. I had the first interview the day after the career fair with some former students who are currently working at said healthcare company and after they said they wanted me to come onsite and do a second round of interviews. At the second interview I was in a room with three people each person asked me a question and the first couple minutes went just as great as the first interview. It wasnt until The third person asked me a question, name a time you helped someone become healthier and how did you do it. I mentioned how I helped my grandparents get to a healthy weight by teaching them to cook healthy foods and excercise. His response is what bothered me, Im an Black male and he said yea you cant eat fried chicken everyday and try to balance that out with the occasional watermelon. After he said that the room got really awkward and the other two people just looked at him and after a brief pause just said that they didnt have anymore questions and asked if I had any. I was pretty shocked for two reasons. One I honestly hate assuming everything comes back to the color that I am and I dont want to be the person who just claims racism at everything so I honestly was thinking he has to be joking or maybe thats just the foods his family ate growing up and it had nothing to do with my color and two I just couldnt believe, even if he was being racist, that it would be so blatant, like this is a job interview there is just no way someone would say that. Anyway i just quietly said no and the guy then said great, we can finally get these interviews moving fast. He then told me I could leave and to close the door behind me. When I looked at the clock my interview was 7 minutes long, I was scheduled down for 15 and out of everyone in my group Im the only person that left early and I was the only black person interviewing( honestly not uncommon at my school there are very few Black CS majors). I guess my question is, should I learn to expect this kind of behavior and is it common? Ive dealt with a lot of racism in my life and just being a CS major. Usually its just small comments about how well spoken I am and that Im smarter than most people expect or that I understand things better than the other ones. I just didnt expect it from a billion dollar healthcare company. TLDR: am a black guy, had an interview where I got asked a question on how I helped someone get healthier, interview responded with yea you cant eat fried chicken everyday and try to balance that out with the occasional watermelonEdit: Im in America on the east coastEdit 2: so I just woke up for my 8 am class and did not expect this many comments. I separated the text up a bit(sorry I was on mobile and very tired).I have decided to do what a lot of the comments suggested and report his behavior. I set up an appointment with my career center and have begun composing an email to HR. I dont want anyone else feeling singled out or hurt by someone elses comment so it just seems like the right thing to do. For the people who messaged me and talked about how I should have responded violently. Responding in violence to racist comments is never the answer. The only thing you will achieve is proving the image they have of you is correct and you will hurt any chance of any real change happening. The best thing to do is be the bigger person and respond intelligently and appropriately. Is that fair ? No, but sometimes what is fair and what is the right thing to do, do not align. Thank you everyone for the encouraging comments and Im excited to try again at my schools upcoming career fair.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_gh319k","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/gh319k\/is_anyone_here_motivated_by_money_rather_than_a\/","DATE":1589068800000,"PLAIN_TEXT":"TLDR: If you are a good programmer making decent money - did you enter the industry knowing the earning prospects, or because you were genuinely fascinated by programming?Im 22, have worked 2 years (Uni dropout from civil engineering after 1 year) in sales, considering going to back to University at UNSW (top Australian school) to study for 3 years to get a high paying SDE job.Financial independence is my goal.I have learned some great sales skills from working in sales for the last 2 years however I dont have any technical skills and dont want to be in pure sales for the rest of my life. A senior salesperson in my industry with 7+ years experience can make about 300k but this process is often quite stressful and luck dependent with frequent 60 hour workweeks.Im thinking software development may be an easier route to financial independence (less stress. higher probability) Ive seen my friends graduate with a software Engineering degree and get 180k TC offers from FAANGs - Id like to jump on this boat too.Only issue is Ive never been that drawn towards programming. My successful programming friends have always been naturally interested in it, Ive done a programming class before and found it OK interesting, however its definitely not something Ive ever thought about doing in free time.I am fully prepared to give away 10 years of my life grinding my ass off to achieve financial independence. Not sure if its best for me to do it in sales or study hard and become a great programmer - and then love it because of how much money Im making?And when people ask me to follow my passion - well, Im not getting into the NBA. I am an extraverted people-person and I entered sales thinking it was going to be extremely fun all the time - Ive now realised that its relatively repetitive &amp; uncreative with little transferrable skills. I just want to know where I should be focusing my efforts for the next 10 years of my life to set myself up for financial freedom and happiness. ","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_xsmvdy","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/xsmvdy\/current_software_devs_do_you_realize_how_much\/","DATE":1664582400000,"PLAIN_TEXT":"I dont mean because of the software youre writing that other professionals are using, I mean because of your jobs. The salaries, the advancement opportunities, the perks (stock options, RSUs, work from home, hybrid schedules), nearly every single young person in a white collar profession is aware of what is going on in the software development field and there is a lot of frustration with their own fields. And these are not dumbnon-technical people either, I have seen and known senior engineers in aerospace, mechanical, electrical, and civil that have switched to software development because even senior roles were not giving the pay or benefits that early career roles in software do. Accountants, financial analyists, actuaries, all sorts of people in all sorts of different white collar fields and they all look at software development with envy. This is just all in my personal, real life, day to day experience talking with people, especially younger white collar professionals. Many of them feel lied to about the career prospects in their chosen fields. If you dont believe me you can basically look at any white collar specific subreddit and youll often see a new, active thread talking about switching to software development or discontent with the field for not having advancement like software does. Take that for what its worth to you, but it does seem like a lot of very smart, motivated people are on their way to this field because of dis-satisfaction with wages in their own. I personally have never seen so much discontent among white collar professionals, which is especially in this historically good labor market.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_fwi9pq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/fwi9pq\/wow_are_startups_really_like_this\/","DATE":1586217600000,"PLAIN_TEXT":"I came across a post and it seemed interesting untill I got to this section.Youll be pressing the pause button on most everything else in your life over the coming months, working long hours and giving 100% of your time, heart, mind, and soul to help bring our revolutionary technology to market -- and working alongside others are doing the same.Unless thats my own company I dont see how you can ask of this from normal employees","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_xzw23e","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/xzw23e\/psa_yall_are_too_worried_about_the_job_hopper\/","DATE":1665273600000,"PLAIN_TEXT":"Hey folks, not a question but rather an advice to something I regularly see here (mods: please do your job, Ill accept your verdict).When changing a job soon after starting, people often worry how it will look in their resume - will they struggle getting another job? Will they be labelled as job hoppers? Will it impact their career? Some people even consider staying a few more months in a toxic job just so that it looks better in the resume.Heres the thing: youre overthinking it. If your job sucks, just leave, no matter whether youve been there 2 months or 5 years. Sure, if you do it 3-4 times in a row, some companies will reject you, but others wont, you wont be banned from this industry. Interviewers will ask why you change jobs often, and if you have a reasonable answer theyll say alright and move on. Your mental health and job satisfaction are too important to worry about a few companies that will label you as a job hopper.From 2019 to 2021 I went through 4 companies - some of them had toxic managers, some didnt offer me any challenges. Eventually I landed in a place where Im surrounded by good people where I can grow in my profession. Did some company reject me after my 3rd job in 2.5 years? Probably. But I really dont care, because its better to be rejected by a few companies than to stay in a toxic workplace.Lifes too short to work in crappy companies. If you know you dont like your job and you can jump ship, dont worry about your resume, just leave.&amp;#x200B;EditThanks for awards and responses! To clarify one thing: Im not saying you should be job hopping, because staying in one company for a few years has a lot of value.What Im saying is: changing jobs is better than staying in toxic workplace, and you should worry about your mental health more than about short stints looking bad in your resume.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_g6381k","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/g6381k\/2_offers_in_a_pandemic_with_0_internships_an\/","DATE":1587513600000,"PLAIN_TEXT":"I didnt think it was possible if all I read was this sub. While some posts are helpful, this place can induce anxiety.I worked full time while going to school after work &amp; on the weekends. Ill be choosing a $90k offer for a Fortune 200 company.I hope what helped me can help you:1.\tStay positive. I always felt theres light at the end of the tunnel. I didnt care if I didnt have experience because Id tell myself Ill convince interviewers with my friendly personality2.\tDont take this sub too seriously. I remember being positive until reading some negative posts. Got into my feelings real quick. Avoid if you must3.\tStudy Leetcode. Im no genius so I had to do some questions about 5-10 times over the course of 3 months. I focused on Explore Easy &amp; Medium. Be vocal &amp; explain your thoughts. I learned the most from Leetcode question discussions &amp; Back to Back SWE. Be consistent because if you stop for a while you may forget tactics4.\tPractice behavioral &amp; resume questions. Make a bank of questions &amp; have someone ask you things randomly. Get feedback. YouTube STAR method. Ace this portion!5.\tPractice interview behavior. During an interview I focus on being enthusiastic, friendly, and act like Im having fun. In truth Im nervous as hell but you need to do this so the interview can go smoothly6.\tRelevant projects. This helped me in receiving interviews. Since I didnt have internships I made projects that were relevant to jobs. Try to use a stack relevant to job postings. I had 4 projects on my resume and 3 of those were from school. The most recent was outside of school &amp; interviewers liked talking about that one since it was relevant7.\tMake a good LinkedIn profile or whatever job site you use. Good picture, decent amount of connections, etc.8.\tResume should have other things that show you collaborate &amp; get results. This kind of made up for my lack of internship since it showed I work with teams, had conflicts, etc.I applied 2 months ago to 70-80 places on LinkedIn. Had 3 interviews:1.\tNo offer. Failed because I didnt study much on behavioral questions. Stumbled a lot.2.\tOffer. Thought I failed because I couldnt quite handle 1 SUPER BASIC coding question but aced the behavioral &amp; had good vibes with the interviewer3.\tOffer. Did decent after wowing them with personality (refer to #5). Was given a coding assessment &amp; couldnt get it to run due to website technical issues. I did explain the algorithm step by step before coding which helped out.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_cdp9yz","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/cdp9yz\/another_data_point_on_industry_hire_in_the_bay\/","DATE":1563148800000,"PLAIN_TEXT":"Hi everyone, I just went through a round of interviews and wanted to share a data point. Also, I wanted to share some interview tips that you may not have seen before. Ill answer questions in AMA style.About meIm a software engineer with 5 years of experience in the bay area. Bachelors degree in engineering at Waterloo. I dont consider myself special talent, but I think Im pretty good at interviewing. Ive worked at a couple startups before joining G back in 2017. No specific expertise to brag about, but I have a good history of doing cross-stack work.OffersI interviewed at Airbnb, Facebook, Lyft, Uber, and 3 other companies. I received offers from Facebook, Lyft, Uber, and 2 other companies. First year total compensation ranged from 380k~500k from both public and private companies, 2nd year comp was around 400k for most of them. The offer numbers correlated with my interview performance, and from my research, it seems like some companies offer standardized offers to every candidate. Surprisingly the private companies did not beat out the public companies in equity package. Breakdown was around 180~210 base, 500~800 equity, and 0~100 sign-on.ProcessScheduling I set a measurable goal for prep. 200 Leetcode questions, 10 system design problems, deep-dives of my past projects, and recollected my past experiences for behavioral questions. Whole process was 3 months. Did mock interviews on [interviewing.io](https:interviewing.io) throughout the process. I had a buddy the entire process who was also looking to switch. He went from 85k to 300k TC (crazy). We did mock interviews everyday. I did my phone screens during lunch hours, and scheduled onsites over span of 2 weeks, using all my vacation days :( Schedule the companies that you dont want in the beginning. I bombed my first interview lol.InterviewsIts common knowledge that you should prep for Leetcode-style questions, and system design if youre interviewing for senior positions. Thats what I did 2 years ago to get into G, but the interview formats were slightly different this time around:1. Phone screens were more difficult. Im not sure if its because I was being considered for senior positions. In one phone screen I had to explain what a BST was, implement algo to check if tree is BST, explain LRU cache, implement it, then design Twitter timeline. Every step of the way I had to give the tradeoffs and timespace complexity, as well as analysis of the design and writinganalyzing some SQL queries. 2 years ago I got mostly EasyMedium Leetcode questions.2. Practical coding was heavily emphasized. Almost every company I interviewed at had a practical coding round, where I was given a task (building a featurescriptingdebugging). You can bring your own laptop and I recommend that you do. You can also search the internet while coding. I think they look for fluency in programming, as well as how you break down problems. I say this because I got an offer despite not completing a task. I think this is a trend that will continue until proven to be ineffective.3. Behavioral interview is more important than design. Every company I interviewed did a deep-dive of my past projects and experience. Recruiters told me that this interview is more important for determining level than the design interview. I can see why. Most design interviews arent conducted properly. Questions are often too large in scope and too much time is wasted in narrowing it down, and you only have 30~35 minutes when you account for the introclosing. High-level ideas can be BSd, and most of the interesting design decisions are lower-level. The level of depth is dependent on the interviewers experience level, making it highly variable.LeetcodeIve done around 300 Leetcode problems lifetime. This time around I did 200 but a lot of it was questions Ive done before. Leetcode tips are all over the Internet, Ill leave some tips I havent seen online. Do these questions [https:www.teamblind.comarticleNew-Year-Gift---Curated-List-of-Top-100-LeetCode-Questions-to-Save-Your-Time-OaM1orEU](https:www.teamblind.comarticleNew-Year-Gift---Curated-List-of-Top-100-LeetCode-Questions-to-Save-Your-Time-OaM1orEU) Find the brute force solution immediately, and tell the interviewer so that they know youre not an idiot. Too many candidates trip themselves up trying to find the silver bullet. Optimize the brute force solution if you can, and that will lead to a very good answer most of the time. Example: [trapping rain water on leetcode](https:leetcode.comproblemstrapping-rain-water). The brute force solution is to find the amount of water trapped at each index, by scanning for the largest values to the left and right. This is n^2. Then you optimize by caching the largest values to the left and right instead of scanning. Now its linear. You know that it cant be faster than linear because you need to look at each index. Even when youre peeking at Leetcode solutions, understand the brute force solution first and try to work your way up to the optimal solution. Jumping straight into the optimal solution without explaining the brute force solution will raise red flags. Readability is just as important as finding the very optimal solution. Solutions on Leetcode Discuss score low on readability. Put trivial computations into helper methods that you tell the interviewer you will implement later. Generally they wont ask you to implement these helper methods. For example, finding the minmax in an array, its so trivial that you dont need to write out the whole method. It also shows that you are comfortable with translating ideas into code.Design I used Grokking the system design interview on educative.io and system design primer on github. I recommend it, but these are surface level material and if you regurgitate the content you will fail. I recommend it as a starting point. They recommend this structure: requirements, load estimation, API, data schema, high-level architecture, detailed component design, and scale. This is a good structure in my opinion. The problem with these contents is they spend too much time on high-leveldrawing boxes, but when they go deeper they are not going deep enough, and tend to focus on the wrong things. I personally believe the most important part of the design interview is the API. Generally the interviewer will give you a problem definition and theyll tell you the feature scope and maybe the usage characteristics (daily active users, for example). You should clarify until you understand the problem, dont clarify for clarification sake. I personally believe API is the most important part of a design interview, and no other content online will tell you this. Think about it, when youre designing something at work, thats the one thing everyone cares about. Implementation details are done within the team or on your own. The API is where cross functional collaboration and discussions happen. Grokking and primer dont cover API in enough detail. Write down each API and discuss the policies. For example, when designing a queue, you have enqueuedequeue APIs. Does dequeue guarantee that the same element will be dequeued on subsequent call or not? This changes the entire system. Lets say youre designing a sendMessage API for a chat app, who generates the message ID? Server or client (it should always be client btw, and think about why, it changes everything). From API discussions, the data schema, high-level architecture, and services should be easy to draw out. Data schema will roughly reflect the API requestresponses, services will be scoped to support a set of functionally related APIs.BehavioralDeep-diveIf youve never failed, youre either inexperienced, a liar, or unaware - somebody Dont be afraid to show your flaws. In fact this is where most candidates fail. Interviewers can tell if youre BS-ing them. Be genuine. If youve never failedhad a conflictlost an argument, youre either inexperienced, a liar, or unaware. All are bad signs. I was asked to provide a concrete example of a time I had a disagreement, and I told the interviewer about a time I disagreed with something and lost (they liked it). This guy sums it up perfectly: [https:www.youtube.comwatch?v=PJKYqLP6MRE](https:www.youtube.comwatch?v=PJKYqLP6MRE) Go through your past projects and try to gain a deep understanding of the entire project, beyond the scope that you were involved in. Identify the key decisions you made, the high-level architecture, because youll need to be able to explain it to someone as if they are a newcomer to the team.NegotiationI believe there are 2 fundamentals of negotiation: knowing your market value, and having leverage.1. Know your market value. Use [levels.fyi](https:levels.fyi), Blind, your network to find out how much market value you have. Its strongly correlated with your level of experience and the company youre interviewing for. Do not take low-balls. Do not ask for unreasonable amounts. Ive seen people get offers rescinded for over-negotiating.2. Have leverage. Competing offers, good job situation, 1 million dollars in the bank, those are all leverage. If you have no leverage, then you need to fake it. I dont recommend faking leverage, because if you were able to get one offer you can easily get another one.I didnt negotiate my offers beyond telling the recruiters what the other companies were offering me. This only worked because I interviewed companies that pay top of market earlier in the process. I also let the recruiters know how much I was expecting, and disclosed my current levelcomp when asked (L4 at Google, so it would not have helped my case).I dislike most of the online advice that tells you to play a game against the recruiter. Recruiters are human. Full transparency, and being genuine with the recruiter has worked well for me. Try to not make it all about money. If all your questionscomments are around comp, it signals to the team that youre just interested in money, which certainly doesnt help your case.Closing notesI found that through preparing for interviews that I did become a better engineer. The process of preparing for interviews challenges your mental fortitude and timestress management. Prepping for design interviews is not as simple as reading Grokkingdesign primer, you need to gain a fundamental understanding of every decision thats being made in the design, and this requires a lot of digging through the internet for content. A lot of hate for Leetcode style interviews on this sub. Doing Leetcode doesnt make you a better engineer, but it makes you a better coder. A big part of our job is translating ideasthought into code, in a way that others can read it and understand it. Leetcode problems are challenging because they test your ability to generate the idea, and to translate ideas into code.&amp;#x200B;AMA","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_wmxz5o","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/wmxz5o\/tier_list_for_newgradintern_recruiting_sites\/","DATE":1660262400000,"PLAIN_TEXT":"Hey rcscareerquestions!I interned at Meta last summer (as a SWE) after applying to 80+ companies, and since FAANG applications are opening up soon, my friends &amp; I (who have no lives) decided to make a tier list of the recruiting sitesresources we used while applying to internships. Disclaimer: these are just opinionsexperiences, so dont take them too seriously.[Heres the graphic!](https:imgur.coma65ZvlrW)[PittCSC Internships Repo](https:github.compittcscSummer2023-Internships) (S Tier)+ Hidden gem, huge selection of SWEPM internship openings+ Updated live, often the day the internships are posted+ Direct links to the job apps, no sign-up BS- Good variety, but definitely missing a number of companiespositions- SWEPM only, hard to discover other roles- Big Techfinance roles only, minimal startupnontraditional rolesOverall: Great place to browse companies, repo is updated as more positions go live which is great. Free and student run, good vibes.[Simplify Jobs](https:simplify.jobs) +[ browser extension](https:simplify.jobsinstall) (S Tier)+ 1-click autofill for 90% of jobs I applied to online (actually goated)+ Automatically saves applications youve submitted to on your dashboard+ Most tech internshipsjobs Ive seen on any site+ Actually good job matching quiz, helped me find a bunch of startups I applied to- First time onboarding takes some time (~5 minutes, have to fill in profile to use autofill)- Ive seen expired jobs on the platform- Job lists not as useful during the off-cycleOverall: Job matching platform is A-ish tier, but god tier chrome extension, literally saved me hours of time. Application tracker also nice, works across most sites.[Software Interview Study Guide](https:docs.google.comspreadsheetsd19hSRrL4l3gRiJ5ucH9q4iwFo2QHgic9gGMNUrcn1mm0edit#gid=0) (S Tier)+ Another hidden gem, my top resource for interview prep+ Free, with direct links to a bunch of other free resourcessites+ Comprehensive, never been asked a question outside of whats on this doc- Only provides linkstopics, you still have to do most of the work- Doesnt provide solutions to practice (have to use Leetcode)Overall: A friend sent me this sophomore year, great place to startorganize your interview prep process.Untapped (A Tier)+Nice user experience (pretty website)+One click apply that actually works (unlike most sites besides Simplify)+Great for diversity candidates (thats their focus)-Some companies still require you to apply natively-Smallest selection of jobs of any website-I think only 1 of the top 10 tech companies on the platform-Forum is an absolute shitshow.Overall: Ive gotten decent response rates from Untapped, and the Quick Apply feature is super nice. Turn off email notifications from the forum and youll be all good.[LinkedIn](https:linkedin.com) (A Tier)+Networking (in this market, referrals are king)+Decent job variety (some cool places have LinkedIn-only postings)+Easy apply is lowkey nice, but havent heard back from any of the 200+ that I submitted.-Toxic and cringe (Im excited to announce... posts bruh)-Jobs platform is a pretty poor experience, lots of scam positions-Most jobs redirect to external applicationsOverall: LinkedIn is great to use in conjunction with other job boardsextensions. Use it to look up interviewersconnections to potentially get referred.[Handshake](https:handshake.com) (B Tier)+ Tons of jobs from tons of companies, most of which are super smalllocal+ Solid platform to attend virtual career fairsevents &amp; schedule calls with career center-Lots of the jobs they list are outdated (throws a 404)-Most jobs redirect to external applications (glorified job board vibes)-Job matching is pretty trash (I got recommended a woodworking job lol)-Lot of recruiter spam (never got any useful messages)Overall: Handshake is best as a scheduling tool for advising appointments IMO. I was really bummed that you could only apply for around 20% of the jobs through Handshake--the rest just push you to the company careers page. Also, the expired postings didnt help--definitely doubled the time I spent searching for jobs. But seriously, look at this lmfao. [https:imgur.comaQNFMQdo](https:imgur.comaQNFMQdo)Wayup (B Tier)+Similar to untapped, but more companies+Some jobs offer one-click applications, which is nice-Lot of irrelevantunrelated companiesroles-Supposedly 24 hour response times from companies which is 100% false, havent heard back really-Email spam is mad annoyingOverall: I was mostly neutral with Wayup, never got any leads but the platform itself isnt bad.Indeed (C Tier)+Most jobs by sheer number over all other platforms+Offers employer reviewers which is pretty nice.-Super disorganized, solid amount of scamspam postings-Job feed was always broken (theres a problem on our end)-Reviews highkey sus, feels like companies pay to inflate ratingsOverall: Indeed is honestly one of the better sites that Ive used in terms of finding roles. Discovery is kinda dog but if you even have a general idea of what youre looking for, their search tool can be powerful.[RippleMatch](https:ripplematch.com) (C Tier)+ You do less work, companies reach out to you+ Less time wasted on applications (no insta-rejections)-Small selection of companies-Freshmen and sophomores get 0 inbound-Long onboarding process, seems like theyre just selling your data lolOverall: RippleMatch is an interesting take on recruiting. The concept of having companies apply to YOU is pretty cool, but I think its limited by the small selection of companies on the platform. I also want to apply to companies that Im not necessarily matched with. Gotta shoot your shot.[Chegg Internships](https:www.internships.com) (D Tier)-Most jobs are expired-Most jobs are irrelevantscammy-Forces you to make an account before viewing any jobsOverall: Just straight dog. Never going back.[Interstride](https:interstride.com) (Honorable Mention)+ Platform specifically for international students+Wide selection of companies that care about the platform+Nice user experience, fairly new company-Not every company is on the platform-Relatively new platform, lots of bugs[YC Work at a Startup](https:workatastartup.com) (Honorable Mention)+ Best site on the web to find roles at startups+ High response rate, mostly from founders+ High quality roles - great for career growth- Startups only, no largermore established companies.- No good filter for roles--you have to look through each company individually.- Subpar user interface","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_z2omr9","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/z2omr9\/confirmed_recent_layoffs_are_making_it_harder_for\/","DATE":1669161600000,"PLAIN_TEXT":"Im on the hiring committee at my company for a senior position (5-8 YOE). Weve been struggling to find the right fit - candidates either have great technical ability but subpar communication skills or vice-versa.With all of the layoffs, weve been starting to target those who have announced they were affected on social media. I interviewed one of those candidates recently. This person was smart, eloquent, and sufficiently capable for the role. Taken as a whole package, they blow all of the other candidates weve interviewed out of the water.Additionally, this person recently relocated to one of the main tech hubs specifically for their previous role and seems understandably eager to find a new job. I suspect that our mutual interests will align and well hire this person.Ive seen a good amount of conjecture in the community that this shift might occur, so I thought it would be valuable to confirm that yes, recently-laid off employees from large tech firms are likely to temporarily make it somewhat harder for others to find a job.(Source: Me. N = 1. Your mileage may vary. Best of luck to everyone!)---UPDATE (in the interest of transparency) - 12 hours after initial post creationI performed an interview today with another candidate that was laid off recently from Big Tech. This candidate talked a big game and impressed me with nice answers to my open-ended questions. However, they couldnt solve our straightforward coding exercise. (This exercise is not LeetCode in the slightest; its actually very similar to day-to-day development work)I think these two candidates embody the sentiment expressed by a lot of you in the comments - Some of the laid off candidates will be truly fantastic while others are just good at interviewing and not at actually being software engineers.So, I suppose the takeaway is that although the job hunt might be a little more difficult in the short-term, its definitely not a lost cause. If youre good at what you do, youll be able to land a job. Youve got this; Im rooting for you! :)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_9dwqub","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/9dwqub\/name_and_shame_ellucian_they_have_absurd\/","DATE":1536278400000,"PLAIN_TEXT":"I have almost 20 years experience. I turned the job down. It was for a very senior position. I am not going to say what since I dont want them to figure out who this is from. When I got the offer, it also included a non-compete clause that said I could not work for any of their competitors. No name. Just anyone they considered a competitors. When I interviewed for the job over a year ago I googled ellucian non-compete clause There were a lot of posts on it saying1. They make you sign a more strict one when you get laid off if you get a small severance package2. They sue people who were laid off for violating the non-compete3. posts on glassdoor about how people are pressured to put up positive reviews. There are 500+ reviews. This is absurdly high for a company this size.All of this is gone. Even the glassdoor reviews that had the word legal action and non-compete. MY NEGATIVE review about the non-compete is gone. Ellucian scrubbed it from glassdoor. You can probably pay glassdoor to have bad reviews taken down or they threatened to sue. Dont work for a company like this. ","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_cbvs9g","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/cbvs9g\/does_anyone_else_think_we_are_in_the_greatest\/","DATE":1562803200000,"PLAIN_TEXT":"The job is not physically demanding. The pay is extremely well. The schedule is often flexable. You sometime dont even have to leave your house to work. Some jobs feed you lunch and offer other odd benefits. Employment is stable and its not hard to find another job if need be. Devs are in high demand. You can listen to music or podcasts all day long while you work. It really is better than almost any other career out there.Only possible downsides are stress due to strict deadlines, and micromanagement from the boss. Both of which I dont experience.Edit: Yes, I know some people are famous etc etc. Im not talking about lottery ticket careers here.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ri175e","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ri175e\/i_was_on_unemployment_benefits_last_year_taught\/","DATE":1639612800000,"PLAIN_TEXT":"I have a couple of mechanical engineering degrees I never put to use (took too long to realize that I did not enjoy it). Instead, after graduation, I became a personal trainer and worked at a commercial gym for a year. It was a very toxic work environment and I made peanuts (30kyear).When COVID hit, gyms were the first to shut down. I got some COVID relief of about 2k a month. With a steady stream of livable expenses and all the time in the world, I decided to teach myself how to code. freeCodeCamp, Udemy, blogs, documentation, and YouTube, thats all I used to teach myself the basics of HTML, CSS, JS. Built a few projects with React and Firebase, made a portfolio website, and started networking via Meetups. Got an opportunity to interview at a startup within a week.Went through 3 rounds and they offered me a contract position for 2 months (6500 $month). I immediately jumped on the chance and worked my ass off for a month. I was offered a full-time gig immediately after and was offered a 75k salary. Since I knew they liked me and needed me, I negotiated for 90k. They countered with 80k since I didnt have any experience. I renegotiated asking if they can review my salary based on my performance after 6 months. They agreed. I used these 6 months to take initiative and bust my ass off. Basically learned a bunch and took more responsibility from senior devs. I made it a point to meet senior execs once a month and tell them about my work. I was mostly doing this to make sure that my work was not going unnoticed.It all paid off when my CEO emailed me about the salary raise and set up a meeting. I was expecting a 10% raise at max, 88k was pretty sweet I thought. Little did I know that he came with a 31% hike, raising my salary to 105k. He acknowledged all the hard work I had put in and told me that he sees me as a part of the team long-term. I still cannot believe that this is real. This industry has changed my life!! I have met some of the most empathetic, kind, and brilliant people. I cannot wait to see where this journey takes me next!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_f0erfh","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/f0erfh\/job_hunt_for_a_regular_dude_new_grad_0\/","DATE":1581033600000,"PLAIN_TEXT":"Ive been a part of this sub for a while now &amp; especially early on, I felt that the only success stories were people of high pedigree boasting (top school, 4 internships, job at bigN) or people with outrageous stories, like the dude with 850+ applications. Theres honestly nothing wrong with boasting, its super exciting that all your hard work has paid off! But, for people like me, it only makes us worry while were still in school about what the job hunt is going to be. If I only see stories of people from good schools &amp; multiple internships &amp; stories of people with hundreds of apps, having no internships myself, one can only surmise Im going to be stuck begging for a job for like a year.Luckily, I feel like this sub has gotten better in this regard lately. More than likely its because people like me are getting jobs &amp; are actually coming back to post their success, exactly for the reason stated above. Regardless, heres another one for those of you out there feeling like youre doomed to a year of searching &amp; sending out hundreds of applications for a shitty job.So, my background:B.S. in CS from an online school0 internships0 professional field-related experienceApplications sent:75 applications total~20 of these were LinkedIns Easy Apply, meaning I literally clicked 2 buttons &amp; it sent my resume. Extremely low effort.The vast majority of these didnt have a cover letter. I typed up a generic one I started pasting &amp; wrote a custom letter for maybe 2 positions. I heard back from at least 1 of them.I got 5 phone screens. All 5 phone screens led to coding challenges or technical phone screens. Of the 4 screens:1 ghosted1 rejection1 on-site interview2 I turned down the technical screen due to a better offer (they came late)The on-site interview ended up in a job offer. Offer:Denver86k Salary7k Signing bonus (includes relocation assistance)Total time spent applying:~ 2.5 months. I started applying just 1 month before graduating, but very very casually. I didnt really ramp up sending applications until after graduating.How I did it:Do I think I got super lucky? Honestly, no, not really. I applied almost exclusively through LinkedIn. I dont think I got anything out of doing the Easy Apply ones, but hey it only takes like 5 seconds so why not. I think that Easy Apply is better geared for more experienced candidates that have much more impressive resumes. A good resource that helped get me started was https:www.newgrad.tech. I didnt tailor my resume for specific job postings. I went through a few iterations of my resume at first, but once I found one that I liked, I used the same one for every role.Edit: Ive had multiple people post that Im shilling for this site. I guess I can see why you might think that, but heres the truth. Its not my site &amp; I get nothing out of linking it. It has 0 ads, links to job postings directly, &amp; only makes money if you click affiliate links on a different page that the owner straight up tells you make him money. I posted it for 2 reasons. 1, I feel like other people that post these threads always have a long list of resources they used. Since I only used this site (at first) &amp; LinkedIn, I figured Id contribute at least something tangible. 2, the site is really good if youre just starting. Its honestly not amazing much past that, bc you quickly run out of listings (its not updated super often), but it helps you get your feet wet if youve been hesitant on starting the job hunt for whatever reason. If youre already far into your application process, it probably wont help much.As the title said, I basically did 0 leetcode. I say basically 0 because I think I did like 3-4 of the starter ones. I spent some time re-learning data structures because I felt that my school did a bad job of teaching them, but nothing crazy. What allowed me to succeed:Theres 2 reasons why I think I didnt have a hard time getting a good job.1: Im not awkward af talking on the phone or communicating via email.Im not extremely personable or fantastic at chit-chatting or anything, but Im a normal person &amp; dont melt at the thought of having to talk to someone longer than 4 seconds. Im also fairly good at writing &amp; do a good job at getting my point across in a particular way, so I think that helped a little bit, too.2: Personal projects.Youve heard it before from everyone on here &amp; guess what: its legit. I had I think 4 projects on my resume, 3 of which were school projects. Literally no one asked me about the bottom 2 &amp; I was asked about the second project twice. The focus was always on my first project, which was not a school project &amp; was an app I made that I use for my current (unrelated) job. It was very important, in my opinion, that this project wasnt a school project. You need to show initiative &amp; do something outside of what youre prescribed to do. It doesnt need to be super fancy or super high tech, it was basically a CRUD app. But make sure its somewhat big (took real effort) &amp; be sure you can talk about the different aspects of the project. What went wrong, what youd do differently, how &amp; why did you implement certain features, what focus did you put on the UI, etc.Thats basically it. Dont be super awkward on the phone. Dont be lazy &amp; do some projects. It helps if youre likable &amp; can come across as friendly &amp; personable. Like I said, Im not actually super personable, Im actually quite introverted. But I can still come off as if Im not. Good luck to you all.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_lfjabg","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/lfjabg\/netflxs_first_internship_program\/","DATE":1612742400000,"PLAIN_TEXT":"Netflix is the last AFUNGALMASS to host an internship program so its super cool to see a shift in direction. They only hire senior level SWEs, so it looks like theyll start having new gradsuniversity program.Here are the postings: Software Engineer Intern - Ads and Marketing: [https:jobs.netflix.comjobs56185209](https:jobs.netflix.comjobs56185209) Security Software Engineer Intern, Cloud Infrastructure Security: [https:jobs.netflix.comjobs47956263](https:jobs.netflix.comjobs47956263) Device Ecosystem Software Engineer Intern, Partner Ecosystem: [https:jobs.netflix.comjobs49474397](https:jobs.netflix.comjobs49474397)Heres the process:After applying, you will receive a questionnaire form.You can only interview for one role.And after that you will have to do a CodeSignal assessment test (different from typical CodeSignal).If you pass this, you will be reached out by the recruiter with the following info:Round 1 (45min -- current stage): The first round is a 45-minute technical interview with an engineer and is a pair coding exercise using CoderPad. Java is the preferred coding language. Overall, the general areas that the interviewers will be focusing on are predominantly: General engineeringprogramming expertise Questions will mostly focus on data structures and algorithms Skills and experience in designing and developing maintainable software systemsRound 2 (30min): This non-technical round will be with a recruiter at Netflix and will focus more on your working style and Netflixs workplace culture and values. Our approach to internships is different: we embed our interns in teams and aim to give them the experience of being a full time employee for the summer. This interview will probe your motivations and aptitude for working in the Netflix environment.Round 3 (45min): The final round will be a 45-minute conversation with the hiring manager. We will be assessing a mix of general soft skills, technical skills, and evaluate your ability to quickly absorb and execute on product development and business objectives.---Will make hiring decisions around MarchThey do have plans to give return offers based off the teams business need + exceptional internship performance.Most of this is basically a repost from Ladder: [https:ladder.tocommunitysweLlWXq6LdSzEkpEwIPSJq](https:ladder.tocommunitysweLlWXq6LdSzEkpEwIPSJq)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_bhfi88","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/bhfi88\/how_i_went_from_14hr_to_70k_with_no_experience\/","DATE":1556150400000,"PLAIN_TEXT":"I started off living in the Midwest, I knew nothing about IT and made $14 an hour as a contractor doing armed security work. Before that I was a failed real estate agent (being 18 when I tried real estate probably didnt help..)Im now 23, I have no college degree and went straight from the security industry into a cloud position making $70,000 a year in a low cost of living area. I had to move for this job offer, though I had multiple offers across the USA.Ive had offers from Minneapolis for 72k, Austin for 74k, Tulsa for 65k, and accepted a job offer in Raleigh for 70k.Before we go any further, if you are not in a tech area and want to accomplish this, plan to move.Anyways, how did I do it? I started off studying what industry I wanted to be in and whats popular. It ended up being the cloud. The good thing? It pays a lot, even if your new. The bad? It can be hard to get hired as a noob in the IT world starting at the cloud...UNLESS you take the correct steps.Step 1: Prove my knowledge in various ways. How did I do this? First thing I did was self study and grab 3 certifications.1. AWS Solutions Architect Associate2. AWS SysOps Administrator Associate 3. AWS Certified Developer Associate It took me 87 days to get all 3 of these certifications. After that, I needed to prove my knowledge in a real world way since I knocked the paper certifications out of the way. I did 2 Cloud AWS projects, one was a chat bot integrated into Facebook messenger that has automatic responses I built using Amazon Lex.The second project was more on the infrastructure side of things.Both were pretty simple projects for the most part.Step 2: Establish credibility. I started a YouTube channel where I created AWS Cloud tutorials and even showed how to do some things like building the chat bot, hosting websites using s3, explaining what route53 is and the differences between all the options, etc. After this, I grabbed 1 more certification. I went ahead and passed the CompTIA Security+ certification so I could open the door to government jobs, though I didnt end up at a government job. It only took 11 days, so it wasnt too big of a deal.After this I created a resume using one of the top formats posted on Reddit and updated all my LinkedIn information. I turned my status to searching for opportunities and started reaching out to recruiters and applying to jobs in cities across the United States. For specific areas I loved, I created a phone number using that area code and used it on that resume. At one point, I had 5 identical resumes but with different telephone numbers and used each one according to the city I was applying to.After doing this, I started getting job offers. This path is much much better than help desk and can slingshot you forward in your career. I had no connections in this industry, no prior experience, and no college degree. Like I said, I received multiple offers, its not easy, but its possible.Look for jobs titled:Jr devopsDevOps 1AWS EngineerCloud Support EngineerHell, I even got an SOC analyst offer in the cyber security space.Study materials:For the AWS certs I used LinuxAcademy and aCloudGuru, as well as reading white papers.For CompTIA Security+ I used professor messers YouTube video series and also bought a cheap study guide to supplement it.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_b3w1gg","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/b3w1gg\/2_year_update_my_journey_tips_29_gpa_at_a_small\/","DATE":1553126400000,"PLAIN_TEXT":"Previous post: https:www.reddit.comrcscareerquestionscomments6278bimy_journey_and_tips_29_gpa_at_a_noname_liberal(^ covers the basics which I wont really repeat here, like my timeline out of school or how I received interviews in the first place)My last post here had an amazing response from all of you and now that its coming up on 2 years--and with my recently going through another interview cycle--it seems like its a good time for an update. I stand by my prior advice but do have some thoughts to add from a slightly more experienced perspective.I also remember getting some questions about whether Id actually be successful at Facebook, i.e., whether studying so hard just meant I gamed the system and wouldnt do so well at the actual job, so I wanted to address that and general on-the-job tips as well. Finally, I havent been able to answer the vast majority of PMs I get, so hopefully this will scale better  be valuable to those people in sub-O(n) time :).TL;DR:ended up doing relatively well at FB--two Greatly Exceeds [expectations]  top ~15% performance ratings in a row--but felt like I was starting to learn less and wanted to switch from DE to SWE; studied 100+ hours in 1 month while working (focusing more on system design and ML this time); landed 5 offers out of 6 onsites, including Google and 2 unicorns; multiple offers were over $300k in total compensation (+50% from prev comp and at &lt;4 YoE); negotiation matters a lot; and this whole process is nonlinear and often frustrating but its 100% a winnable game and having tracking metrics helps (#trusttheprocess).Disclaimer:Im sharing concrete numbers not to brag, but because I believe in pay transparency and think the information asymmetry in the tech industry between employers and employees hurts us. I dont want to rehash a debate over Big N  FAANG prestige and am tabooing it here for reputation or brand value, which does have tangible benefits. Last and importantly, luck always plays a role in these things; Im not suggesting this is a fully general solution but there are ideas here that will probably be helpful for you too.On my experience at FB (skip if you only want interview advice):I came into FB with definite imposter syndrome, especially when I was surrounded by people who had gone to Stanford or came here from Google or had PhDs etc. I wasnt sure if I could hold my own and wondered if I had just gotten lucky interviewing. Everybody at FB always says that the first few months is like drinking from a firehose of information--theyre right. But eventually I found my bearings. To keep a long story short, I was in the right place at the right time when an impactful opportunity came along and I seized it. I received a rare Greatly Exceeds rating my first half due to this--and more importantly, learned a ton in a short amount of time, both technical and soft skills.Some job tips (keeping in mind that Im not that experienced):- Prioritization is critical and is a skill that can be improved: there are more things to be done than you can do- Proactive communication: always communicate sooner and more than you think you have to- Optimize for learning: if you dont feel like youre learning anything, speak up in your manager 1:1 (own your own career! and manage up), or explore other opportunities, internal or external- Seize opportunities: see also https:pmarchive.comguide_to_career_planning_part1.html- Focus on impact: this is cliched for a reason--you should always be asking yourself if what youre working on is the most important (not necessarily the most urgent) thing you could be working onRe: prioritization, I really had it drilled into me how critical it was to say no effectively. You need to strike a balance. Its important both that you can say no to senior important stressed out people and that you say it in such a way that theyre not disincentivized to come to you again in the future with more impactful opportunities. Practice helps here.Re: optimizing for learning, I took advantage of the resources around me. I was a voracious reader of internal technical posts, data analyses, and architecture  system design write-ups, read any documentation I could find that interested me, studied the core abstractions written by the best engineers (ht to Edmond Laus The Effective Engineer), and generally tried to learn as much as I could whenever I could. Learning compounds over time and even small increases in your learning rate make a big difference later.When I first jumped on the above project, I was out of my comfort zone. But I was pretty confident I could learn what I needed to and tried to adopt a growth mindset to the things I didnt know. And I knew that being slightly uncomfortable (read: lost) was a good place to be in for growth. This mindset also helped when the inevitable missteps happened, which is where communication comes in too.On the interview grind part II:My process was broadly the same as last time, but more principled. At a high level, the most important thing is to trust the process. When you first start out, its easy to feel completely stuck, like youre not making any progress at all. The learning curve is steep and nonlinear; some days youll feel like you know less than yesterday. Thats why I think its important to have external metrics you can use to track your progress, because (especially initially) you cant trust your brain to have an accurate picture of how youre improving. I personally used time spent studying and number of Leetcode problems solved as my goalposts: I decided I would be ready when I hit 100 hours of overall studying and 100 LC problems solved.So when youre struggling on a graph traversal problem for the 5th time or stuck on a weirdly difficult easy problem, you can at least see that youre, say, 4 total hours of studying closer to finding a new job and focus on that. This isnt to say that you should spend your time frivolously. Its important that your practice is deliberate and that you dont willfully neglect blind spots. (I knew I was weak at backtracking and at permutation-type counting problems, but I didnt want to face the struggle. Of course, one of my Google onsite rounds featured both.)Here are the resources I used:- Coding  Data structures &amp; Algorithms: almost 100% Leetcode, a little Interview Cake and Elements of Programming Interviews but decided it wasnt as efficient- System design: read all of [Designing Data-Intensive Applications](https:www.oreilly.comlibraryviewdesigning-data-intensive-applications9781491903063) and [Distributed systems for fun and profit](http:book.mixu.netdistsyssingle-page.html); went through the [System Design Primer](https:github.comdonnemartinsystem-design-primer), scattered CS &amp; industry research papers like [Bigtable](https:static.googleusercontent.commediaresearch.google.comenarchivebigtable-osdi06.pdf) and [distributed consensus](https:groups.csail.mit.edutdspapersLynchjacm85.pdf), tech company engineering blog posts, http:highscalability.com, and some of [Grokking the System Design Interview](https:www.educative.iocollection56686391014195205649050225344512)- ML: had hands-on experience at FB so mostly googled random shit like this [Github](https:github.comShuaiWdata-science-question-answer), refreshed my memory of how the most common algorithms worked especially GBDTs and random forests, and skimmed [Hands-On Machine Learning with Scikit-Learn and TensorFlow](https:www.amazon.comHands-Machine-Learning-Scikit-Learn-TensorFlow-ebookdpB06XNKV5TS)- Behavioral: emphasized certain themes in my elevator speech, prepared 2-3 stories for each of the most common behavioral questions, and had some solid questions for hiring managers (refer to the last post or to my study guide)The system design portion was a bit overkill, but I actually enjoy reading about distributed systems. I believe it also contributed to getting max L4 offers at Uber and Snap (more on that below). This time around, almost every onsite involved at least 1 system design round. Pre-FB when targeting a lower level, I received essentially 0 such questions. Heres my study guide: https:workflowy.comsstudy-guideRD5kZ682pWX5oxiE. Some parts are rough so take it with a grain of salt. The checklist of heuristics to try is particularly valuable imo; heres a condensed version:1. Always consider hash tables (dictionaries) with their O(1)-ness.2. If at all array-related, try sorting first.3. If search-related, consider binary search.4. Start with a brute force solution, look for repeat work in that solution, and modify it to only do that work once.5. Space-time trade-off! That is, for better time complexity, try using auxiliary data structures. E.g., do something in a single pass over an array--O(N) time--by using a hash table--O(N) space--vs. doing something in nested passes--O(N^2)--without using any extra space--O(1). 6. Remember that I can use two pointers.7. Try a greedy solution.8. Does solving the problem for size (N - 1) make solving it for size N any easier? If so, try to solve recursively andor with dynamic programming.9. A lot of problems can be treated as graph problems andor use breadth-first or depth-first traversal. And if the problem involves parsing or reversal in some way, consider using a stack.10. Any time you repeatedly have to take the min or max of a dynamic collection, think heaps. (If you dont need to insert random elements, prefer a sorted array.)11. If you have a lot of strings, try putting them in a prefix tree  trie.12. To improve time complexity, also consider how various complexities match to solution structures and try working backwards from a target runtime.13. Not quite the same as N-1, but sometimes a divide-and-conquer approach is what is necessary. If I know the answer for exclusive parts of the problem, can I somehow combine to get the final answer?14. For puzzle problems or anything where we can enumerate all possible solutions and theres a notion of a partial candidate solution, consider backtracking.On the interview grind (cont.):Ive (obviously) thought a lot about the Leetcode grind and one takeaway is that the entire process can be reduced to two overlapping recursive parts: 1) internalizing the comp sci building blocks and 2) knowing when to apply them. If you dont know how binary search works, youre going to struggle on a lot of problems. Conversely, if you can handwrite binary search in 60 seconds but cant recognize when a problem would be much easier with it, youre also going to struggle. The recursive part comes in when those building blocks themselves form more complex DS&amp;A building blocks, like union-finddisjoint-set or Dijkstras.Leetcode is an exercise in both. As you do problems, youll start to recognize common patterns and where a certain data structure or algorithm should be used. As you get stuck on problems, you may find that you have a gap in fundamentals--and that you need to go back and learn one of those algorithms more thoroughly. Its an iterative and even satisfying process.Relatedly, theres a tradeoff here between improving pattern recognition and learning how to struggle. The naive and fast way to optimize for the former is to do as many problems as possible; when you get stuck, just look at the solution and move on. The problem is that youll lose out on hard-earned insights that would therefore be more memorable. Youll also flounder when no answers are available, like in an actual interview environment. But you also shouldnt spend days on just 1 annoying problem. It can be tempting, but its a big opportunity cost.The balance I found was to set a timer for around 10 minutes: if I still had no idea where to begin by then, I would read the discussion but avoid looking at code; then Id reset the timer and try to implement those ideas; if I still couldnt get a solution, Id finally look at peoples code and try to understand it. For particularly thorny problems, Id put it on a list to do again later. In total, I studied for ~120 hours and solved 130 Leetcode problems--66 easy, 54 medium, 10 hard. I found hards werent generally worth it except for the famous ones like LRU cache and skyline. I did about 10% of the problems on a whiteboard while verbalizing my thought process in a timed environment, but I was already pretty comfortable with that element.On the numbers and negotiating:I applied or replied to around 20 companies. After some weeding out, I went on to 11 phone screens: Google, Uber, Pinterest, Airbnb, Dropbox, Snap, Stripe, Twitter, Opendoor, Lyft, and Stitch Fix. Note that this rate is very very different from before I started at FB. Back then, I felt lucky if I received 1 rejection out of 25 blind applications--mostly I was ignored. Its obvious but getting your foot in the door is so perversely important.For anonymity, Im not going to mention all the specific companies outcomes; also note that this was sometime in the last 6 months. Out of those 11 interviews, I passed 8. I received mostly LC mediums during these screens, but did get a few hards. I decided not to continue with one company and another happened too late for me to be able to do an onsite, which highlights the importance of timing. A company I really wanted an onsite with was my first interview and I bombed. Ideally, the interviews you care more about happen later in the process, but not too late. You want the practice but you dont want to burn out. You also want the offers to come in pretty close together for negotiation purposes.Out of 6 onsites, I received 5 offers: Google, Uber, Snap, and two others (companies D and E). Google is notorious for downleveling, so their offer was pretty low. The initial offers (total compensation using FMV and without signing bonus) were: Snap: $300k  Uber: $290k D: $230k Google: $225k E: $220kI was surprised by Snap and Uber but I knew I had done very well on those onsites. During Googles I had bombed a round (that backtracking + permutation LC hard combo). So overall numbers were according to expectations and my main negotiating goal was to get as much of a signing bonus as possible, knowing that base and equity were already at the top of the range. I didnt really try with Google since their offer came almost a month later and the difference was too big.During this timeline, one thing I made sure to do was let the various recruiters know of other onsites or offer deadlines. Its usually in your best interest to do this, particularly if the other company is a peer or has a good reputation. You can even use an upcoming impressive-seeming onsite as implicit leverage to improve an offer, even if you dont end up passing the former. I think this contributed to the high initial offers. For negotiation, I relied on [Haseebs amazing posts](https:haseebq.commy-ten-rules-for-negotiating-a-job-offer) and [Kalzumeus seminal piece](https:www.kalzumeus.com20120123salary-negotiation) and [followup](https:www.kalzumeus.com20160603kalzumeus-podcast-episode-12-salary-negotiation-with-josh-doody). I dont think giving the first number matters much, but what does really matter is knowing your market value inside and out and standing your ground. [Levels.fyi](https:www.levels.fyi) is tremendously useful for this (click the level to see the numbers and backing spreadsheet), as is Blind (e.g., [this Google post](https:www.teamblind.comarticlegoogle-engineer---total-compensation-in-us---ultimate-post-jYcrij5X)), toxic though it sometimes is.Haseebs advice on using I will sign right now if you can make $X happen at the end is another great tip. I ended up getting multiple $50k signing bonuses and improving the other offers by ~$20k each.On concluding:Thanks for reading this far--I swear I tried to keep it short. I feel guilty that I havent been able to reply to so many PMs, but promise Ill be active in the comments here. Its only been a few years since I read this subreddit obsessively and thought Id never be able to make it in tech. But it really is doable. Trust the process. Stay calm and leetcode on.AMA!(Note: I dont use this account anymore and am not able to reply to all the messages I get, but if you need personalized advice or even coaching, you can try emailing me at suryc011 [at] gmail [dot] com.)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_pl43ol","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/pl43ol\/how_he_hell_am_i_supposed_to_have_any_time_to\/","DATE":1631145600000,"PLAIN_TEXT":"I work as a part time intern at a fortune 500. I was fulltime over the summer and they offered to keep me around as part time during the school, which I thought was great.I also am a full time student.&amp;#x200B;I am burning out incredibly fast.&amp;#x200B;Its my senior year of university and Ive now submitted over 200+ applications for software engineer positions across multiple states, including gov jobs.&amp;#x200B;I cannot get so much as an email back from 99% of them. The ones that do email me back send me an OA using hackerrank or codesignal, of which I usually have to google a bit of syntax stuff but otherwise pass their test cases, and then get ghosted.&amp;#x200B;My resume has been reviewed by about 30 people now who Ive asked to review it, all of which say it looks fantastic.&amp;#x200B;I have multiple completed projects spanning all types of technologies including OSS contributions, but I like to focus on web dev and absolutely love React. I will choose working on a personal project that means something to me over doing silly leetcode problems any day. People always tell me they envy my Github profile because its so nice and feels complete. I also have half a year of intern experience now doing ALL different kinds of stuff, from fullstack web dev, to firmware, to devops, and both my resume and github show that clear as day.How the actual hell am I supposed to:1. Get a response from these companies?2. Find time to do leetcode with other life stuff going on? I do NOT want to do it. I do not want a FAANG gig. Every time I open up leetcode or my copy of CTCI my eyes glaze over. I just want a job where I can feed myself and work on advancing my skills with relevant tech.Feeling incredibly depressed from the prospects of this industry given my experience so far, albeit its not much. Ill take any and all advice thats not shoving leetcode down my throat at this point.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_eu88if","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/eu88if\/name_and_shame_tata_consultancy_services\/","DATE":1579996800000,"PLAIN_TEXT":"Background: I graduated with my degree in computer science from a state university in the Southwest in 2017. I only landed two job offers during my last semester of undergrad - Tata Consultancy Services and Infosys. I was under tremendous pressure from myself, my friends, and family to land a job offer before I graduated. TCS would allow me to stay in the same state as my parents so I decided to go forward with TCS. If I could go back, I wouldnt pressure myself so much to land a job offer as soon as possible. I would have taken a few months off to actually prepare for interviews. I actually remember the night before my flight to TCS HQ in Ohio I had typed out a letter to the recruiter at TCS that I didnt want to start my job at TCS but didnt end up sending it because my anxiety told me I had no other job offers at the time. I ended up working at TCS for one year before leaving to go work for a much better company.My Experience:TCS is a contractingconsulting company that sends its highly qualified consultants to clients for IT work. Most of these consultants have no clue what is going on. But, a small 1% are very smart people who either were too naive to realize how they were being exploited by TCS or just couldnt land a better job offer.Training in Ohio was littered with stories of how TCS had screwed over new hires. People who were promised a certain client or city were lied to. People who were hired as software engineers and had completed training ended up doing Microsoft Excel work for their client. There was even an infamous story that one engineers client asked them to wipe down computer screens for full time employees. The worst story was about a Pakistani new hire whose client asked them to get some trainings in India. The new hires visa was rejected in India so TCS just lied to the client that the Pakistani guy had received the trainings and sent him off to the client.Once my training was complete I was sent back to my home state where I went to go work for the client - a Fortune 100 company. It really sucked working as a contractor. I was constantly berated by senior full time employees at the client and treated as a second class citizen by full time coworkers. My team at TCS was the worst. I can speak HindiUrdu and constantly witnessed my boss and coworkers harass others in Hindi, cussing them out. My boss at TCS and other bosses would routinely make offshore employees work long hours all the way into the morning for things that werent event urgent or high priority. Those offshore employees werent allowed to work from home either. One time, my boss made an offshore resource come into work on a Saturday (through WhatsApp) she said she was at the train station waiting for a train. He was impatient and made her take a taxi to the office instead. Mind you, these resources in India are paid pennies and taking a taxi way out of their budget.My team was entirely in India and constantly complained about the horrible conditions and treatment the company gave them. They were under horrible contracts e.g. they couldnt leave TCS for the first two years or else theyd have to pay their bonus back. A lot of these engineers needed that bonus as their family was in extreme poverty or their parents owed someone money and needed to use that bonus to pay that off.The company routinely abused H1B visas and L1 management visas. What made me leave ASAP was 1) I landed another job offer but the big one 2) my boss telling me I needed to send my bachelor degree to some random dude in India applying for L1 visa and he was lying that I reported to him so he could qualify for the visa.Two years after I left TCS I asked my former manager for a recommendation on LinkedIn - besides all the shady things that went on - I figured I might as well get a reference letter from this guy so the year I was there wasnt completely wasted. I had to remind him 2-3 times on Facebook and LinkedIn with him constantly pushing it off with some excuse and broken promise that hed do it that weekend. One week ago, he blocked me on all social media.Overall, I would not recommend working at TCS or any companies similar - Wipro, Infosys, Cognizant, HCL, Accenture, Revature, TEKSystems, Sogeti. If youre a hiring manager, I would be careful hiring someone from TCS or similar, especially if theyre any type of manager - project manager, program manager (basically what my manager was). Unfortunately, TCS is a permanent stain on my resume for life now. I just hope someone who has an offer from them reads this and learns to say what I was too afraid of saying - no, I will not do the needful.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_mwhue9","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/mwhue9\/how_to_get_first_job_as_swe_two_cents_from_an\/","DATE":1619049600000,"PLAIN_TEXT":"Hello,I am experienced software engineer at FANG with 5 yoe. Experienced is in quotes because five years isnt whole lot, but Im definitely not new grad anymore. Ive given dozens of interviews, was a manager for couple of years in my previous company, and met with hundreds of job seekers at career fairs. This subreddit was great when I was looking for new jobs, but it seems now more than ever saturated by either new grads or students, so wanted to give some perspectives on how to get that first job. Everything is my personal opinion, and will be geared towards people looking for entry level swe positions.So youve been applying. Youve had few bites here and there, but no real offer yet. Some people say job search is numbers game, which is true, to an extent. But if you spend some time introspecting on what you are lacking, then you can hugely improve your odds. There are three main components to job search: your resume, people skill, technical interview skill.First your resume, this is your foundation. If the foundation is solid, it will make your job searching that much easier. You can tell your resume is lacking if your callback rate is low. If your resume isnt the best, then your focus should be improving this. Because it doesnt matter how good of engineer you are or master leetcoder, if you never get an interview in first place to able to show them. Formatting and wording is important, but what I usually look for when looking at resumes of new grads is whether they have internships or significant personal projects. Internship is usually better than personal projects, but if you are having hard time getting internship or it doesnt work with your timeline, then spend couple of months making personal project or, better yet, getting a group of friends to do a project and join hackathons. This not only boosts your resume but also gives you talking points in your interviews. 80 percent of the companies will ask you to tell them about something you built.Now the personal skills. Or as I would like to call it, do you know how to function in a professional setting. If you pass the resume screening (and online assessments) first step is usually a recruiter call. They are looking for red flags and whether you are really interested in their company. So smile, look engaged, and most importantly sound excited for the opportunity. Do some research about the company beforehand, ask meaningful questions and not something like is the lunch free?Lastly the technical assessment. This is the most dreaded part for most people. Alas, there isnt a golden bullet here. You just have to grind. Grind leetcode, hit the books, and you will get better eventually. But be sure to leetcode intentionally. Meaning you dont always look at solutions after being stuck couple of minutes. If you had to look at a solution to solve a question, then try redoing it right away or the day after, you will be surprised how many questions youve done before you cant do anymore, this just means you didnt truly master the concept, so take it as sign to study more.Lastly, learn from your failures. Unless you are very lucky or all star new grad from Stanford with 5 internships, you will fail your first interviews. The company will also never tell you what the issue was, so spend time on your own what you think went wrong. Was it technical question? Did you say something wrong? Were you too nervous? Debrief with your friends and mentors. And pat on yourself on the back, because that just means you just got that much better at interviewing. Think of it as getting exp points in interviewing skills. Also remember that luck plays a huge factor in interviews. So keep trying and dont talk rejections personally. Learn from them and eventually you will have an offer.Hope my perspective will be helpful to at least some of you. Feel free to ask me any questions in the comments. Ill answer all of them.Edit: If you could do me a favor and ask your question as a top level comment, that would make it easier for me to find you. Thank you.Edit2: Adding a couple of caveats here, Im an American so some suggestions might not be as valid in your home country. Also its for someone looking for a general SWE engineer role, so for breaking into specific industry like AI, embedded, etc, the process is a bit different.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_hz5a81","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/hz5a81\/data_from_1_year_of_applying_for_software\/","DATE":1595808000000,"PLAIN_TEXT":"#IntroIm a recent Computer Science graduate from a public university in California. The reason I started studying CS was to become a Software Engineer. I had dreams of working at FAANG and at the time I didnt realize how foolish that was. As I got closer to graduating and started to apply for internships and jobs I began to realize how competitive the field was. I was a middle-of-the-pack CS student at public university. I never had a shot at FAANG.I was originally set to graduate in December 2019, but decided to take an extra semester and graduate in the spring because I could not find a Software Engineering job. That turned out to be a mistake because I graduated during the peak of Covid-19. I officially graduated in May. I have applied to over 700 positions since July 27th, 2019. I am currently unemployed.I decided to keep track of all my job applications because I knew I would have to apply to a lot of positions and I needed a way to organize them.Im posting now as a postmortem to my Software Engineering job search. Hopefully you can learn something from this, and if not maybe it will at least be entertaining.#Data[Here](https:docs.google.comspreadsheetsd1_7pS1LQ_aF_AbCm-7CHOZ4EAmnf1c7TmQVqw7m0f53Iedit?usp=sharing) is the raw data I collected. [Here](https:imgur.comfVgorm6) is a pie chart breakdown of the outcomes.I kept track of: The company name, the position title, the position location, the date that I applied on, the final outcome, whether or not I got an interview, and the platform on which I applied. Looking back I should have kept track on the date of rejection to figure out the average time it takes to get a response. There are probably other useful data points I couldve collected to. Let me know if you have any thoughts on this.#Resume &amp; Cover LetterIve made many changes to my resume over the course of the year. Ill post a few different versions here, though this is not an exhaustive list. [V1](https:imgur.comFluOaoc)[V2](https:imgur.comPASQ7ne)[Current Resume](https:imgur.comZw8DAQg)There hasnt been any increase in responses to my resume as Ive changed it. Ive used a couple different cover letter formats, but I didnt take pictures of them over time. [Here](https:imgur.comFVqx2ZZ) is the current cover letter format that I use. I havent noticed any increase in response when using a cover letter vs. not using one.#Responses Before I began keeping track of my job applications, I was applying to internships my junior year. I applied for ~70 or so and was rejected or ghosted by them all. At the time, I thought 70 applications was a lot. During late October of 2019, I got my first response. I did well in a phone screen and then moved to the technical portion. I dropped an easy question because I took the interview at the end of the day. It was also my first technical interview so I was nervous and found it hard to think. Lesson learned. Take your interviews at a time of day when youre sharp and ready (in the morning for me). Ive received a few coding tests that automatically get sent out to candidates. I usually do okay on those, but not stellar. Not good enough to get a job apparently. In June I interviewed with a local company and it went well. I passed the behavioral and the technical portion and was told I was being moved to the final interview stage where I would sit down with senior HR and management. When I followed up with them a week later the recruiter told me that they were pausing the position.#My Software Engineering experienceJob OfferIf you were to go through my spreadsheet youd see that I actually got an offer! I removed the companies name from the spreadsheet so as to not dox them since my experience there was very negative.Late December of 2019 I applied for a Software Engineering job on Indeed. The listing was for a full time SWE and the pay was listed as 4,000 - 7,000mo. The CEO got in touch with me and I interviewed the same day I applied. The interview went well and he offered me an internship as a contractor for $17.50hr. I knew it was a bad offer, especially for California, but I accepted because I was desperate and foolish.Within a week of working there I knew the job wasnt Software Engineering and that I was getting ripped off. In the first two weeks I was there, I didnt see any of the engineers write a single line of code. I was working along side the other engineers getting deliverables out to clients. The other engineers were making 60k+yr salaried and I was making less than 30kyr as a contractor. Im pretty sure its illegal in California to hire someone as a contractor to do the same work an employee is doing (look at AB5), but thats beside the point. I stayed because it was experience I could put on my resume. At the end of March half of the company, myself included, was laid off due to covid. HPE Internship OfferIn late February I applied for and was interviewed for a summer internship with HPE. There were two rounds, one behavioral and one technical and I did well in both. The recruiter called me and offered me the position verbally and I accepted. 10 minutes later she called me back and asked me if I would be returning to school for Fall 2020. I said no, because I had planned to graduate in May. She rescinded the internship offer and I was right back where I started.If this ever happens to you I recommend you lie. #ConclusionSoftware Engineering isnt for everyone. I started my degree very hopeful and optimistic and now I am the opposite. If I knew it would be like this, I wouldnt have gone to college.Im not sure what my next steps are, but I know that I am done with Computer Science and Software Engineering. I just dont have the heart anymore. Im considering going back to school to study some kind of engineering.I hope you can gain some insight from this post and if not you may at least find the data cool to look at, or my story fun to read.Thank you.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_10m1zwc","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/10m1zwc\/are_companies_trying_to_get_us_back_in_the_office\/","DATE":1674691200000,"PLAIN_TEXT":"I work for a company, and we have 2 day a week policy in the office. This morning it switched to 3 days a week, obviously its eventually going to 5 days a week as they slowly roll us back. Genuinely surreal to see this, 3 years of work from home all 3 years stellar feedback. Any other companies slowly transitioning back or is it just my firm? I am probably going to put in my 2 weeks, as I am not missing my kids first steps to be in a cubicle.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_10r7z7w","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/10r7z7w\/got_fired_today_for_not_being_senior_enough\/","DATE":1675209600000,"PLAIN_TEXT":"Today I opened up my laptop and started typing away in Slack to get more context around a question I had asked at the end of the day yesterday. I push send, and almost immediately get a message from the CEO asking me to join a call.For context I was employed as a React developer at a very small startup. It wasnt unusual to speak directly with the CEO about the product, so when he asked me to join a call, so I assumed it was to answer my question.I join the call and I see him and our head of engineering. I immediately have a bad feeling about it, and my fears were realized when the CEO said weve made the decision to let you go. This came as a shock to me as I had received a lot of praise for both my output and the quality of my work, as recently as two months ago. When I asked what the deciding factor in this decision was, I was told it was because I wasnt senior enough. This felt like a bit of a non-answer to me, so I tried to clarify by asking what they meant by that. The response I got was Well, I dont have time to sit on this call and explain the difference between junior and senior to you. That felt like a bit of a slap in the face considering they never made any attempt to tell me that I wasnt meeting their expectations. I had only heard good things in my talks with the head of engineering and as far as I knew things were going well. Now, I am by no means a junior developer. Ive been writing software professionally for 5 years, and yes while thats not the longest amount of time, Im certainly past the point of being a junior dev. I can reasonably do whatever is required of me, and really dont need much assistance other than the occasional yay or nay on an approach to a problem. I had only been with the company since the very end of August, so I was really only there for about 5 months. I was just starting to get into the swing of things and really ramp up my production. A few weeks back, the head of engineering talked with me about them wanting me to run a project from start to finish, which seemed strange to me because I had literally been doing that. I started and immediately was put in charge of a large new feature set which I completed almost entirely myself, that is, until one of the other devs told me to let him finish the remaining 5% of the work (which he completed same day). This entire scenario felt very out of the blue and it has me questioning my ability even though I know Im more than capable. I also question the sincerity of their rationale for firing me as I never felt like I was included as part of the team during my time there (theyre all friends with each other) and it felt a bit like they just needed an excuse to get rid of me.Im having difficulty getting closure. Anything they asked me to do, I did, and I still got fired. When I tried to offer new ideas and solutions, I was shot down or told that it wasnt as high a priority, while other devs could do whatever they liked and were lauded for their efforts. When I asked questions, I was summarily ignored and it felt like people intentionally tried to steer the conversation in a different direction. It was otherwise a fantastic company to work for with a great work-life balance, so I dont know if I just ended up in the good-ol-boys club or what. It is also worth mentioning that the company was doing great financially, so I dont think the reason was monetary.It has me really wondering - as a frontend developer, what does it really mean to be senior? I am comfortable building an application from the ground up and really the only area I dont have a lot of experience in is in CICD, and thats because every company Ive worked at already has it set up. What more is really needed of me? What more can I do that Im not already doing?___TL;DR Fired from a small successful startup (only 3 other devs) for not being senior enough, with no prior warning. They treated me well up to this point, but I never really felt like I was part of the team while I was there. Got two months severance, but questioning what their actual reasoning for letting me go was.Edit: Kinda sounds like this is just how it goes with startups, and that theres not much point in dwelling on it. Ive applied for unemployment and hopefully should have something lined up soon.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_10ag8l0","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/10ag8l0\/junior_dev_acts_like_my_boss\/","DATE":1673481600000,"PLAIN_TEXT":"I started a new job a couple months ago.Theres a junior dev on the team who over explains shit to me and constantly criticizes my work. Like very nitpicky For example, today I misspelled a value, and she publicly made this a point in my teams slack channel. Then when I offered to fix it she says its ok she just wanted me to know for next time. Or shell pull me into a meeting and overexplain shit for what seems like ever. And always assigning me tasks and trying to boss me around. Im kinda losing it. Seems like she goes out of her way to make me look bad. How do I handle this?Update: didnt think this post would receive much attention. Majority of people here seem to side with her thinking Im incompetent or just a bumbling idiot. Its kinda giving me an existential crisis so I need to step away from this thread.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_nmphcg","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/nmphcg\/pet_peeve_this_takehome_project_should_take_2\/","DATE":1622160000000,"PLAIN_TEXT":"Do these companies actually believe this shit? Are they actually cranking out fully-fledged apps from scratch in a quarter of a work day? Fuck no.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_gdbbbt","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/gdbbbt\/leaving_amazon_a_blog_post_from_an\/","DATE":1588550400000,"PLAIN_TEXT":"https:www.tbray.orgongoingWhen202x20200429Leaving-AmazonI saw this on HN and thought it worthy of discussion here, its an angry exit post (justifiably angry, Id say) for someone leaving Amazon, which might not be super notable except for why theyre angry and that the author is a VP and Distinguished Engineer.&gt; What happened  Last year, Amazonians on the tech side banded together as Amazon Employees for Climate Justice (AECJ), first coming to the worlds notice with an open letter promoting a shareholders resolution calling for dramatic action and leadership from Amazon on the global climate emergency. I was one of its 8,702 signatories.&gt; While the resolution got a lot of votes, it didnt pass. Four months later, 3,000 Amazon tech workers from around the world joined in the Global Climate Strike walkout. The day before the walkout, Amazon announced a large-scale plan aimed at making the company part of the climate-crisis solution. Its not as though the activists were acknowledged by their employer for being forward-thinking; in fact, leaders were threatened with dismissal.&gt; Fast-forward to the Covid-19 era. Stories surfaced of unrest in Amazon warehouses, workers raising alarms about being uninformed, unprotected, and frightened. Official statements claimed every possible safety precaution was being taken. Then a worker organizing for better safety conditions was fired, and brutally insensitive remarks appeared in leaked executive meeting notes where the focus was on defending Amazon talking points.&gt; Warehouse workers reached out to AECJ for support. They responded by internally promoting a petition and organizing a video call for Thursday April 16 featuring warehouse workers from around the world, with guest activist Naomi Klein. An announcement sent to internal mailing lists on Friday April 10th was apparently the flashpoint. Emily Cunningham and Maren Costa, two visible AECJ leaders, were fired on the spot that day. The justifications were laughable; it was clear to any reasonable observer that they were turfed for whistleblowing.&gt; Management could have objected to the event, or demanded that outsiders be excluded, or that leadership be represented, or any number of other things; there was plenty of time. Instead, they just fired the activists.&gt; ...Working at Google, there have been similar issues there with whistleblowers, albeit possibly not as bad. Definitely disappointing whenever Ive read about it, for any company, and something I wish we could fix within American tech company culture, and American corporate culture more generally.(For the Big N rule this breaks: we do manually approve posts like this occasionally even when mentioning the Big N: when the post is as much about wider industry attitudes as it is about that particular company, and not so much how do I get into [AmazonGoogleFBNetflixetc.]?? or what is it like to work at [Big N]??, an overabundance of which was the original catalyst for the Big N rule.)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_elqsrm","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/elqsrm\/on_naming_and_shaming\/","DATE":1578441600000,"PLAIN_TEXT":"Ive noticed a lot of Name and Shame posts recently. I read them, and most of them are not about what it is like to work at a company, but instead about an interview process that felt unfair to the applicant.Im not here to trivialize what it feels like to be on the receiving end of those interviews. What I would like to say is that if you decide to not apply to a company because of interview experiences, you are not doing yourself any favors. Pretty much all the companies Ive worked for have failed to meet the expectations of the ideal interview process for some candidate. And in fact, the most common thread in these posts is a problem I have seen many times, which is the lack of communication from the company during the interview process.Its unfortunate, and I personally do what I can to prevent these gaps in communication at the companies I have worked at. But, I am just one interviewer, and I am not responsible for scheduling further interviews or providing direct feedback to you. I have nagged people within my orgs to respond to candidates when I realize someone has dropped the ball. I know someone who got favorable reviews, but a manager wasnt sure (I think the person had no college education), and so we didnt tell them yes or no for 2 months. I bugged them about this person a few times, until after two months I declared how ridiculous it was no response was given. At that point, they said - well would YOU hire him CodeIt? I responded hell yes, and they hired him. No one else even remembered the interview at that point. And then I had to convince the person they should take the job, because of how slighted they felt! Lucky for them, they did take the job - Okta went public and that person is retired now. Also he was great at the job.Similar stories have happened at other companies I worked at. Maybe even all of them. Youve heard of these companies, and they are good places to work at. One thing I have heard is there is no one who works at Google who would always pass the interview. There is always some interviewer at a company of sufficient size who might not like you, and usually it only takes one veto. If you are not being recommended by someone inside the company and have no experience, you are just not top priority to them. Sorry. It sucks. There should always be communication, Im not excusing that.But, when you are not a priority, it is easy to fall by the wayside when something in the interview funnel does not fall into a clean bucket (Maybe we like you, but want to see more candidates first. Or maybe, as in the case the of the IBM post, a recruiter quit their job.) I am sorry this happens.But to me, this is a different thing than taking a job with a company, and then finding out the workplace is filled will awful people and processes. Those places should be shamed. Go ahead and share you interview stories as well if you want, but Im surprised at the amount of upvoting and agreement with some of these posts. We are only seeing one side of the story here, and if you were to get a job with one of these companies, the interview process is the least important thing about how you will feel about your job after a month of being there. If you looked for these kinds of stories, maybe on glassdoor.com, you would probably decide 90% of companies are bad. I dont think its a useful signal to consider when you decide where to apply.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_sy1v68","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/sy1v68\/my_boss_just_gave_me_a_roadmap_of_my_salary\/","DATE":1645401600000,"PLAIN_TEXT":"Ive made posts here before about how I make substantially less money than I should. Im a backend web dev working with python and Ill have 1 year experience this summer. I make 45k.I approached my boss in November and explained that I was borrowing 200 bucks a month from my parents to help make my 875 dollar a month private loan payments and that with federal loans resuming at the end of January (before it was extended) I could not get by on my salary. He said hell talk to his boss about getting be something for my 6 months (December) and that he would authorize me to work over time. This helped a lot but I was still trying to see about that raise. It looks like the 6 months raise wont happen but theyre aiming for a significant raise at my 1 year. Theyre talking about trying to get me 60k. He then said hes going to get his boss to have a discussion about a long term salary plan for me. He says by 5 years he wants me in the mid 70s and at 10 I should be making 100. This is still... Not competitive. But I do like my job. I just want some feed back","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_f8tyy8","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/f8tyy8\/finding_a_job_definitely_gets_easier_with\/","DATE":1582502400000,"PLAIN_TEXT":"I always heard it gets easier finding a job once you have some experience, but Ive always had some doubt about how easy it was. I started off from a useless BA and did a coding boot camp in 2016, and subsequently submitted about 1000 applications in NorCalSoCal across 7-8 months where I got less than 10 phone screens and 1 offer for a crappy position.Fast forward 1.5 years after that first job and I started applying again. Submitted about 70 applications and got a few phone screens and 1 offer I couldnt refuse at an early stage startup in about 2 weeks. Definitely an improvement.Today, 1 year later (2.5 yrs of exp now), Ive been on the hunt for less than a week, sent out a little over 100 applications, and I already have 20+ phone screens and some onsites from places that seem great to work at.The point of this is that it definitely gets easier finding a job once you get more experience under your belt, even without a formal CS education. To everyone still trying to get their foot in the door, just stay disciplined and keep going.Edit: during this job search I sent 150+ applications over the span of a month, did 30-40 phone screens for frontend and fullstack roles, moved on to 10-15 onsites with multiple offers in the midst of the COVID outbreak. If youre motivated to learn and bring value and you have some experience, I think theres always a place for you.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_tazaf5","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/tazaf5\/how_to_be_good_at_your_job_some_general_tips\/","DATE":1646870400000,"PLAIN_TEXT":"Here are just some tips I thought Id share for anyone new to the industry.Im in a devops kind of role, but Ive worked as a developer a little bit too.These are quite broad , but I hope they can help you do better in your performance review.&amp;#x200B;1. Document everything. Managers love it, make good readmes on git, write confluence docs, do your part so even a 5 year old can understand how to setup and use whatever it is that you are working on. If there are things that arent documented and you figure it out then document it. Some companies are allergic to documentation, you probably dont want to work there imo.2. Write descriptive PR messages. If people have to review your PR, then make a descriptive heading and PR message body, heck even include screenshots if you want to. Even a 5 year old should understand what it is your PR does and why you are doing it, also test your work!3. Always test your work, even if it is an infrastructure change. 4. Double, triple check your work!5. Cheer on your team members, especially if they do something that is helpful or useful to everyone. Do it in public: if you are on slack then tell them well done so everyone can see. 6. Dont ever be jealous of anyone, if you work with someone who is good at what they do, then try learn from them. Like they say:You cant hate up. So look up to people and be nice to them, maybe they will even teach you a bit if they see you are willing to put in the work.7. Go and read the book:How to Make Friends and Influence people this is the ultimate social engineering book of all time in my opinion, but most of the advice if you take it to heart and start doing it for good honest reasons, then people will react well. For example the book teaches you to take interest in other people. If you genuinely take interest in people (and not just for selfish reasons) then people will start to like you more and open up to you more, this is super useful in the workplace. 8. Never break anyones trust. Just dont do it, be real and dont back stab. Live by the sword, die by the sword!9. Always be friendly, even if your co-workers have a hissy fit or outburst, keep your composure. I had manager lose his cool with me once and I just stayed cool and acted like nothing happened. Later he apologised and I said it didnt bother me, I could see it made him feel worse. (This is based on an idea in the Bible actually: Proverbs 25:21-22)10. Work hard to upskill all the time. Self study, get a side hustle or do some online courses.11. Be curious, read blogs, read other peoples code, ask people how they did something if you see a cool feature for example implemented in your company that you dont understand how it works, then ask the person who implemented it, they probably would love to tell you how it works. Comes back to point number 7.Cant think of more right now. I hope this helps someone!Feel free to respond if you disagree with anything.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_inrex1","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/inrex1\/ive_reviewed_thousands_of_applications_for\/","DATE":1599350400000,"PLAIN_TEXT":"Ive been a hiring manager for a US-based university recruiting at my unicorn of a few hundred people.Here are some numbers and thoughts to paint a picture of what its like being on the recruiting side: We are still pretty small, so we can only support about a dozen new grad and a dozen intern roles. This role was split between me as the hiring manager and one recruiter. Despite that, we would receive hundreds of applications per day. I think over the course of last falls recruiting cycle, we had over 15,000 applications. We arent even a household name or anything. When I went to a career fair, ~90% of the students had never heard of us. Because we have so many applications for such few roles, we are only able to extend offers to ~0.3% applications. Diversity is really important from the tops down and personally I 100% agree. We saw from random sampling that 40% of all applications were female. We were always expected to match or beat that %. Granted we also invested in trying to find more women, so Im not sure if the % will be as high for other companies. It was impossible to review every single application. My partner and I would try our best to review applications, but often this work would happen after work hours because the volume would be way too high. Even if we were able to review applications fast enough, we sometimes would see bottlenecks with the number of interviewers available or toward the outstanding headcount remaining. We would either have to bulk reject candidates without reviewing them or leave them ghosted. If you were ghosted or if you were rejected even though you thought your resume was good enough, Im sorry. Because of the bottlenecks, in order to have the best shot of having someone review your application, you should always apply as early as possible. We have multiple locations across the US and the ones outside of the SF Bay Area were always harder to fill. If youre struggling to find a job in the Bay Area it might be helpful to also apply to other places. I have strong feelings about coding interviews. I hate interviews that require you to find some kind of brain teaser element or require dynamic programming to solve. We discourage our interviewers from asking those kinds of questions. But we do need to find ways to find candidates that are fluent with solving complex problems with code. The passthrough rate is a really key number for high volume recruiting. In addition to obvious tradeoffs between quality of candidates you extender offers to, if the passthrough rate is too high, then it limits the number of people you can extend initial interviews to in the first place. If the passthrough rate is too low, then youre spending too many interviewing hours. Given that we have limited headcount, but we want to give as many people a chance as possible, we will have about a 50% passthrough rate on each round of interviews.Im not sharing this to boast about any acceptance rate numbers or to put anyone down who doesnt think theyd make the cut, but just to share a single viewpoint of what things are like on the other side. Also note that this is a super narrow viewpoint, I dont know what things are like at large companies or non-tech focused companies.I know that things are rough out there and I wish that everyone that wanted to get into software engineering could get the opportunity. I hope that some people found this helpful and if theres demand for it I can also share details of what I look for when reviewing an application.Best of luck out there.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_io93qw","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/io93qw\/is_working_from_home_the_new_norm_for_cs\/","DATE":1599436800000,"PLAIN_TEXT":"I sure hope so. I, like most people have been working from home since march. And its highlighted just how pointless going into the office everyday is for developers. Perks Ive noticed: No money spent on travel- I save PS235 per month by not having to travel. Improved flow and concentration- I know some might argue there are too many distractions at home. But for me, I actually get more work done as Im not constantly being bothered by projects managers tapping me on the shoulder for a 8 min conversation. Quality of sleep- without having to wake up early and commute , I gain about 3 hours of my day back. This allows me to finish work, get everything I need to do done in the evening and also get enough sleep. This in turn affects the quality of my work as I can think clearly and Im not getting up for coffee every hour. More time with my loved one- this ties into having more time in general, but it makes such a difference. I love working from home with my GF. Some of you may have kids and thats probably quite a challenge, but it must be nice to see them a little more during the day! These are just a few perks Ive noticed, of course there are some good aspects of being in the office I miss, like the boozy Friday lunches, work shindigs, banter by the coffee machine and the fooseball table. Im sure there are perks for companies not having us around all the time. They dont have to pay as much for operational costs, like heating and electricity. Also they dont have to do the things most offices do, and buy tons of beer and pizza for everyone What do you guys think? Is working from home here to stay? (Atleast for devs?) What are some of the perks you enjoy? Or what do you hate?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_4xashc","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/4xashc\/i_dont_want_to_be_a_rockstar_coder_when_5pm_hits\/","DATE":1470873600000,"PLAIN_TEXT":"Im fairly early into my career (3-5 years) and already feeling jaded. None of the companies I have been at so far, as a software developer have been a good fit.Im sick of companies claiming they do agile when they really dont.Im sick of deadline driven projects, where the deadline is created by people up top without consulting with the developers, assuming well just do whatever it takes.Im sick of things being broken in to sprints, but with stupid rules where everything needs to be finished by the end of it. No concept of moving things to future sprints. Everyone ends up scrambling and thats how overtime is created.Speaking of overtime, Im sick of lackluster development practices that cause overtime in the first place.Im sick of companies that are too cheap to build out proper teams. No, I dont feel like developers should do the job of a proper QA team. And if you cant invest the money to create automated testing, wtf are you doing?Im sick of stupid office politics. Tired of company events being created under the guise of being optional, but if say you wont be coming, you are threatened into going You better think long and hard about your decision not to go....Im tired of having to take my laptop home and essentially being constantly available. Tired of getting an email and being expected to answer it after hours.I dont love this stuff. I do it because I think Im decent at it, and it pays well. I have other hobbies. Unfortunately since I started working full time, my energy to do those hobbies has somehow diminished.I dont care to be a rockstar programmer. I dont want to code on my free time. I dont want to work overtime without getting paid for it. I dont want to deal with office politics. I dont want to pretend I care anymore...Part of me is nostalgic for the years where I did tech supportbug fixing. At least I knew I would go in, do roughly the sames tuff every day, and when I left for the day, that was it. No overtime, I was left alone.Where the hell are the companies that understand this, and what questions have to be asked to find them?Or do they not exist?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_dvytgh","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/dvytgh\/the_number_of_increasing_people_going_into_cs\/","DATE":1573603200000,"PLAIN_TEXT":"So Im gonna be starting my university in a couple of months, and Im worried about this one thing. Should I really consider doing it, as most of the people I met in HS were considering doing CS.Will it become way too saturated in the future and or is the demand also increasing. What keeps me motivated is the number of things becoming automated in todays world, from money to communications to education, the use of computers is increasing everywhere.Edit: So this post kinda exploded in a few hours, Ill write down summary of what Ive understood from what so many people have commented.There are a lot of shit programmers who just complete their CS and cant solve problems. And many who enter CS programs end up dropping them because of its difficulty. So, in my case, Ill have to work my ass off and focus on studies in the next 4 years to beat the entrance barrier.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_78rhz7","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/78rhz7\/this_startup_asked_me_to_do_a_project_for_an\/","DATE":1508889600000,"PLAIN_TEXT":"This was the email I received after applying (side note, this companys whole platform is centered around photo based marketing): Hi _______ Thank you for applying for the Back End Software Development Intern position. Before we we get you in for an interview, you will need to pass this development test:Project Guideline: Here at Bee we are content heavy, so this project is designed to test how well you can manage content. Here, the front-end would like to send a JSON encoded API request to your server in order to upload a photo to the site. It is on you to create an endpoint that can handle this upload, then find a way to view all the photos that have been uploaded to the site in an efficient manner.&amp;nbsp;Requirements: -Django or Node.js Framework -Photo upload endpoint -View photo endpoint -View photo feed endpoint -Authentication system that only allows authenticated users to upload photos but all users to view photos -Automated testing -Code coverage does not need to be complete, just generate that some critical functions of the system have tests attached to them. -Write-up on the systems design pattern choicesThis should explain framework decisions, where the system works scales well, and where the system could improve. This should be a quick project, so it is expected to be functional but not flawless. &amp;nbsp;I replied, asking if it was a paid position and the deadline for the project. They replied with the following:Happy to clarify. This position is paid after a 3 month training. This is non-negotiable and keeps us from hiring engineers that end up being toxic to our long term goals and just looking for a pay day. As for the project, you will have one week from today.We wish you the best of luck and hope to have you on our team within the month!&amp;nbsp;Then I responded, concerned that they were asking me to do free work for them. Mind you, I am very aware of companies asking you to do a project or test before hand...but this was different.&amp;nbsp;They responded with the following:You are mistaken, but I am sorry you feel that way. As I said above, you will not be paid during the 3 month training session. You would not be doing any work for the Bee platform during that time, but instead would be instructed and on-boarded by two of the leading engineers in their field. These 90 days are specifically designated to bring people like you up to speed on our very complex tech stack. We are not only in compliance with California guidelines, but have gone above and beyond to make sure our future employees are not only qualified to work for Bee but could work anywhere in the world after their first 90 days.Let me know if you have any further concerns and we will withdraw you from the applicant pool immediately.Their CTO was previously a SWE intern at Amazon...I take it that means you are a leading engineer?EDIT Here is the company: https:www.crunchbase.comorganizationbee-technologies-incResulting TechCrunch article: https:techcrunch.com20171030small-startup-shows-us-the-wrong-way-to-incentivize-programmers","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_f219oi","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/f219oi\/really_helpful_mindset_my_therapist_taught_me\/","DATE":1581292800000,"PLAIN_TEXT":"I posted about this on HN a few days ago under the same username and I thought this might help folks here too. I see a very similar attitude here to how I often feel.I have really bad work-related anxiety. Im always worried that Im about to be fired, either for poor work or for asking to use PTO. I also kinda fundamentally hate the feeling of being stuck in someone elses office, working on someone elses ideas, making money for someone else. I get this kind of get out feeling most days and my heart rate will skyrocket, Ill start sweating a little bit, and I feel like I have to literally run away or else Ill die.I recently started seeing a therapist for this and she told me to start thinking of myself as more of a contractor or specialist brought in. She gave me this mindset:&gt; Think of yourself as more of a contractor or a specialist. Your company chose to work with you specifically because youre the absolute best in your area at your particular field. If this wasnt true, they wouldnt have hired you.&gt; Youre just here to work on this one project. You can end the contract any time you want if it doesnt work for you. Your client will pay you $15k for this and it will be done in 3 months. You can decide then whether you want to keep working with them. This really helped me feel more in control of my job. Reframing the workplace relationship from employer-employee to client-contractor makes things feel much more even. It feels more like selling something on Craigslist, where its just something you did for an hour that day to make some money and not something you attach your whole identity to. My job just feels like a side hustle.I hope this can help someone else too! Let me know if you have any questions and Ill try to clarify.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_729exv","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/729exv\/after_a_sub_30_gpa_no_internships_switching\/","DATE":1506211200000,"PLAIN_TEXT":"Hey everyone, I wanted to make a throwaway to just thank everybody for all of the help you have given me directly and indirectly. I found this subreddit about three years ago and I thought I would just use it once or twice for help getting an internship. Instead I have visited nearly every single day, posted my resume at least twenty five times and asked dozens of questions ranging from interview prep to company reputations. I have also collected dozens of super helpful links that are still on my bookmark bar, like [this excel sheet](https:docs.google.comspreadsheetsd1z3_OfZdPXiOOgHi7uY5nvLuQX_qbpaxmYNXHHiuuV0Iedit#gid=0), [intern.supply](http:www.intern.supply), and this [massive cheat sheet](https:www.reddit.comrlearnprogrammingcomments5gr8nwheres_a_sanitized_list_of_530_free_online).I was never able to obtain an internship before graduating despite hundreds of applications and a handful of interviews but the preparation I did for these helped me later on for full-time interviews. It was really hard seeing everyone else obtain their 3rd or 4th internship and receive full-time offers several months before graduating while I was stuck doing manual labor over the summers for minimum wage. I suffered severe depression from the beginning of my Sophomore year until about a month ago and my sliding grades and poor interview performances were a few symptoms of that. I kept checking out my classmates on LinkedIn and the salary sharing threads here and kept feeling sorry for myself until I realized I just needed to keep improving instead of worrying about what other people thought of me. I felt so monumentally insecure going into interviews because I felt like I was always the weakest candidate because of my lack of experience.I also kept a folder on my email titled rejections because I was just getting so fucking many. I kept adding and adding to it because I wanted to look back on the day when I would get my first offer and see all of the hard work Ive done. I do not recommend this.Eventually after many hours of interview practice, dozens of hackerrank questions, reading CTCI front-to-back, a significant personal project and a one and a half month post-graduation internship I finally have my first offer. I didnt make this because I want to brag or anything, I just want to thank the contributors for all of their generous help and to provide some reassurance to those still struggling. If you work hard enough you will eventually succeed. Just keep at it.Thank you all so very much, I would not be in this position without you.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_v79a7l","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/v79a7l\/first_40_hour_a_week_job_feel_terrible\/","DATE":1654560000000,"PLAIN_TEXT":"Hi all,I just graduated from college and started work as an engineer in a company of around 40 -50 people. At first I was nervous, excited and curious about what it would entail. However, after working there a week, I feel like I have just been put through an incredible feat, but that was just a single week. Then I have to do it over again and again...I worked on farms throwing hay bales, I worked a gas pump, I worked in a kitchen as a busboy, food runner, line cook and sous chef and didnt feel this exhausted. Why do I feel like I am so incredibly tired and exhausted now? I cant wait to leave, and I know as a new hire I am suppose to be putting extra effort but the second I hit 8 hours I am out the door.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_bzrwsk","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/bzrwsk\/bad_advice_in_this_sub\/","DATE":1560297600000,"PLAIN_TEXT":"I noticed that this sub is chock-full of juniors engineers (or wannabes) offering (bad) advice, pretending they have 10 years of career in the software industry.&amp;#x200B;At the minor setback at work, the general advice is: Just quit and go to work somewhere else. That is far from reality, and it should be your last resource, besides getting a new job is not that easy at least for juniors.&amp;#x200B;Please, take the advice given in this sub carefully, most people volunteering opinions here dont even work in the industry yet.&amp;#x200B;Sorry for the rant.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_iyw3kw","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/iyw3kw\/is_there_anything_wrong_with_just_being_a\/","DATE":1600905600000,"PLAIN_TEXT":"Whats wrong with just working a job as a developer? I loved studying development and I enjoy programming, but Im not a hard-core coder. I dont spend any and all of my free time coding, creating apps or websites or whatever else. The work is time consuming enough, and Ive just decided to spend my free time doing other things I also love. I get the impression companies expect constant coding from developers, especially those seeking employment. Questions like: What are you currently working on?, Any freelance projects? Seriously? Will not being a hard-core developer negatively influence anyones chances of current andor future employment? Is it possible to work as a developer and achieve a fair amount of success without giving your entire life over to it?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_htrai2","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/htrai2\/how_to_get_a_software_engineering_internship_at_a\/","DATE":1595030400000,"PLAIN_TEXT":"Everything below is a synthesis from my experience over the last several years in college. I wrote it up for someone I know who is an underclassman studying computer science at a state university who is interested in trying to get an internship at a competitive technology company. I wanted to put it here because I think its useful, and Id be happy knowing others found it useful as well.To validate the information I share below, I am a new grad working as a software engineer and just graduated from a strong state school computer science program. Over the last few years, I have interviewed at a majority of the hot tech companies, both large and small, trading firms, been rejected a lot, learned a lot of lessons, and received offers from some of the most desirable places to work. Unfortunately, the one thing I cannot account for is any bias or privilege due to the school I attended, but I assure you, I did not go to MIT, Stanford, Carnegie Mellon, or Berkeley.This is a simple set of what I think are the core pieces of information and steps to position yourself to get an internship at a reputable technology company.Completely non-jokingly, I think it boils down to two stages, which require completely different areas of preparation and requirements:1. Getting the interview2. Passing the interviewGetting the interviewNote: this section is assuming you have a properly crafted resume. Quite frankly, I am too lazy to write about how to make a good resume, and I think there are plenty of resources online for that.For younger students and students without as much experience, getting interviews at technology companies can present a challenge. However, I think there are a few tips and tricks that can be used to make your life a lot easier.Referrals: this is the undisputed number one way to get an interview at any company. Find a friend that works somewhere, or a friend of a friend, and ask if theyd be willing to refer you or connect you to their recruiter at the company. When possible, referrals should always be the absolute first choice for how to apply to a company. This isnt just something you ask for when you need it. Throughout your curriculum, try to make friends with your peers, upperclassmen, and surround yourself with people that are strong students--right from your first year. 3 years later, all of those students (including yourself) will have strong internships, and youll all be able to help each other out. If you stay in your own small bubble and work through your coursework that way, youll be less well off.Career fairs: they work. The line for Google isnt worth it since they just tell you to apply online, but career fairs are worth going to and the lines are generally worth waiting in. Its a few hours of pain for long-term success. Just go. There are also ways to make these conversations more worthwhile. Take some time to talk to some of the shorter-lined companies that still have great programs that you may just not know about. A lot of these can lead to genuinely interesting conversations with an engineer that can lead to an email for you to reach out to later.Cold emailing: in my opinion, cold emailing is very underrated. Outside (or in addition to) career fairs and when you dont have a referral, I think its the best thing you can do. Your success rate from cold emailing will depend on the timing of which you send the email so that it doesnt get buried in the recruiters inbox, the quality of the email, and how impressive of an applicant you are.Finding the email of a university recruiter at the company and sending them an email expressing your interest in the company, the work they do, and that youre interested in an internship is a good way to get in contact with a company. I think cold emailing can be as effective as career fairs depending on the company, and its infinitely better than throwing your resume into the black hole of online applications. In the absolute worst case, you just dont get a response from the recruiter you email. An additional note is that I usually apply online to the company around the same time that I send the cold email because theres no reason not to, and sometimes the recruiter could miss your email or forget to respond, but your online application will get picked up and put you into the interview process.Three questions you might be having at this point are:1. How do I find the email address for the university recruiter at X company? 2. What do I put in the cold email?3. When should I send it?Lets answer them separately.For question one, I use a gmail plugin called Clearbit Connect. I have found this plugin extremely useful and does everything I need it to do. You can install it easily for gmail, then within gmail, you can search for email addresses of employees at companies by position, very easily letting you find the email address for university recruiter Facebook, if that was your search query.For question two, I will include an example email edited for anonymity directly from my inbox that I sent last year when applying for new grad roles. I think there is a key to it to stand out beyond I am interested in your companys internship  new grad program. You need to specifically mention WHY you are interested in this company. What is it about the work they do, their company culture, etc., that makes you want to apply. I know its hard to think about that specifically because many times you are just applying to anything and everything, but believe me, finding a way to make it specific to the company, even just a little bit, goes a long long way. Anyways, onto an example. I sent this email (and included my resume as an attachment) at the end of July 2019 to a recruiter I found through clearbit, inquiring about full-time jobs:---Subject line: COMPANY NAME New Grad 2020 SWE InterestHi RECRUITER NAME,My name is JOHN SMITH, and Im a senior in computer science at the University of Anonymous. Im graduating this year (Spring 2020), and this fall  late-summer Ill be looking for a full-time software engineering role for after graduation.Im currently a software engineering intern at COMPANY A. Previously, I was a software engineering intern at COMPETITOR working on PROJECT.From my time at COMPETITOR, I gained a strong affinity for the type of work done at YOUR COMPANY -- particularly working on RELEVANT DOMAIN DETAIL, and I have also heard wonderful things about the environment and culture at YOUR COMPANY.Im very interested in starting a conversation about potential full-time roles for after graduation in 2020. I know its a little bit early, but since return offers from previous internships will likely have a deadline a few weeks into the school year, I figure its better to get the ball rolling as soon as possible. Additionally, I went ahead and attached my resume to this email, so that you can learn a little more about me.Im excited to start the conversation and learn more about YOUR COMPANY!Best,JOHN SMITH---For question three, I think emails should be sent so that it arrives in the recruiters inbox close to the start of the workday (anywhere from 8-9am in their timezone should suffice). Youre probably thinking to yourself, do I have to wake up at 8am to send an email? The good news is no, you dont. There is a gmail plugin called Boomerang that lets you write an email and schedule it to be sent at a future time. For example, you can write the email the night before at 9pm and schedule it to automatically send at 8am the next morning, when youre still peacefully asleep.For all of the above, again, having a well-prepared resume here is a prerequisite.Passing the interview95% of technology companies will ask leetcode (leetcode.com) style data structures and algorithms problems. The interview will generally be 45-60 minutes in length and ask 1-2 leetcode style coding questions around the medium difficulty level. The amount of help youre expected to receive will depend on the company, but generally speaking, you should be able to come up with working code to solve the problem with an optimal time-complexity solution in roughly 30 minutes for a medium difficulty question without too much assistance. Some interviews might be an exception on the easier side and ask a couple of questions that are more easy difficulty, and some might ask a question closer to the hard difficulty.What interviewing is actually all about: Youll hear people complaining all over about how technical interviewing is bogus and algorithms problems are irrelevant to real world work, etc. One thing to keep in mind is your actual process and discussion with the interviewer. At some companies, solving the problem may be all they care about. But at most places, they are actually very forgiving and want to see how you code and how you approach the problem. Your discussion about trade-offs, your thought process, your verbal communication, your ability to implement once an algorithm is in place--these are all way more important than the actual solving of the problem to most companies. Of course, its difficult to focus on these things a lot of the time since many interviewees will get stressed out about solving the problem and not handle it well. Its mostly important to keep a cool head--start with the dumbest solution you can think of and discuss from there. As long as you can communicate and move forward and keep coming up with ideas and thoughtful genuine technical discussion, the interviewer is likely to think you have good general problem solving ability even if you didnt come up with a perfect solution right away. With that being said, preparation is still important and thats discussed more going forward.My general view is that technical interviews can be a bit of a crapshoot, and you might be fully qualified to work somewhere, but you just happened to get an interview question that you were unable to solve effectively. That happens sometimes, and all you can do is learn to move on. There are plenty of good technology companies out there. HOWEVER, I think that your goal should be to do sufficient leetcode practice such that you go into an interview comfortable with your programming and problem-solving ability for these kinds of questions, aiming to reduce the performance variance based on any question specifically as much as possible. There is absolutely a pattern to the kinds of questions asked, and you can definitely be in an interview and given a question that is similar to something you have seen before, either in a different interview or in your practice, and it will make the interview substantially easier.In my opinion, for internships, if you can comfortably solve arbitrary leetcode medium difficulty questions in roughly 30 minutes or less with the optimal time-complexity solution, you are good enough at these problems to pass a good amount of technical interviews. As a reference point, by the beginning of my junior year fall, I had solved roughly 100 problems on leetcode (I have currently solved 110 problems). It varies per person, but I think this is generally a reasonable number such that if you hit the right areas, you can go into your interviews feeling confident. If I had to guess, the breakdown of those 100 problems is 30-40 easy questions, 40-50 medium questions, and 5-10 hard questions. I have only come across a hard difficulty question a handful of times in my interviewing experience, and to be honest, Im not sure that difficulty level is worth preparing for, at least for internships, since they dont appear very often. However, the bar could be increasing for internships, and companies could start asking harder questions as the field becomes more competitive.I also want to include that these types of questions are not easy. Even the medium level questions, and some easy ones, can be quite challenging when first starting out. There will definitely be times you struggle very hard and just cant figure out a question, and thats okay. Practice makes perfect, and its all about practice.Certain data structures topics come up more often than others in these kinds of interviews. Here is a dump of the topics I think are the most important to focus on. These correspond to the Tag of the problem type in leetcode (ordered roughly by importance, but all of them are important):1. Hash table2. Tree3. Linked list4. Array5. String6. Dynamic programming7. Stack8. HeapFeel free to PM me if you have any questions. Im happy to help.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_oanlz3","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/oanlz3\/i_got_a_job_cs_degree_no_relevant_work_experience\/","DATE":1624924800000,"PLAIN_TEXT":"(burner account for anonymity, and because my main account has the same username as my LeetCode account)Hi all! Just wanted to share my job-hunting experience to make this place a little more positive and hopeful.I graduated Summer 2020 from a mid-tier UC school by the skin of my teeth. I nearly failed out twice, so I wasnt exactly a stellar student. I had some physical and mental health issues going on that necessitated many doctor visits, went through a devastating breakup, and overall wasnt in the best state of mind. Long story short, I got treated and Im doing a lot better now.I didnt start applying to jobs until May 2021. I didnt know anyone in this industry so I wasnt sure how to network, I only had unrelated work experience working at a small local business, and I didnt have any internships or cool personal projects. Given all this, as well as all the horror stories on this subreddit, I was super anxious about starting the whole job-hunting process.In total, I sent out ~20 job applications (yes I know those are rookie numbers), mostly through LinkedIn, before getting my offer. I got callbacks from 3, interviewed with 2, and 1 turned into an offer. The interview process itself wasnt too bad, mostly programming and data structure trivia type questions, a few LeetCode easys, a couple behavioral rounds, and a small take-home assignment.I did my best to be likeable, personable, and enthusiastic, did a lot of research into the company, asked questions about the company based on my research, looked up all my interviewers on LinkedIn, and made sure to think aloud and be very communicative during my technical interview.Not gonna lie, luck most certainly played a part. I didnt meet all the requirements in the job description and the job listing itself had hundreds of applicants. I didnt even know the language that was on the job listing title, but I applied anyway.Im not exactly sure why they chose to call me, but Im so glad they did. Im shy as hell and not a social butterfly, but I took extra care to work on my soft skills and I think that helped.For those wondering, base pay is low 70s plus benefits, job title is Software Engineer, and Im in the Los Angeles metropolitan area. I know its not FAANGBig N, but Im just happy to be given a chance somewhere.Good luck to all of you who are still searching!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_eiqo5k","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/eiqo5k\/name_and_shame_lendinghome\/","DATE":1577836800000,"PLAIN_TEXT":"Just wanted to share my horrible intern interview experience with Lendinghome, a startup in the Bay Area.Passed a hackerrank round - then they set up a behavioral interview with a software engineer. Was very chill, he just asked what I was interested in and explained what he worked on.Then, came the final round with two software engineers. I answered both of their questions correctly, and they said they were impressed by my skills and ability to explain my thought process. They said I would hear back results within a week, but they were hopeful I would get the offer. Two weeks pass - no response. I email my recruiter, with no response. I then find out that he has left for another company. So I email another recruiter at the company asking for a status update - again no response.1 month passes and no response - I email one of my interviewers - again to be ghosted.Finally, after 3 months, I follow up again with my interviewer. He says that he has not heard a response yet from the higher ups, but he will ask. 5 minutes after the follow up, I get a generic Thank you for your interest email.If you were going to make me go through the final round, give me false hope, ignore my follow up emails for months, and finally give me a generic rejection email, Id appreciate it if you never interviewed me in the first place.Their hiring process is highly disorganized and I would discourage people from applying here.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ky6dhe","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ky6dhe\/warning_think_very_hard_before_going_into\/","DATE":1610668800000,"PLAIN_TEXT":"EDIT: Imma just say that I was boiling over when I posted sarcastic comments and snarky remarks and I apologize for causing such a shitshow..lolTL;DR: Yesterday cursed out my friend in the DMs, took down the company website, and blocked him and everyone else in company in every possible way after being emotionally abused for too long.BackgroundIm a mid-twenties programmer with a good steady career path making enough money and getting enough perks that Im not complaining. I enjoy my job and my teammates, but the company I work for and the work I do isnt entrepreneurial. Having an entrepreneurial mindset myself, Im always looking for opportunities to build something with someone. Ive had one experience in the past of working with another friend of mine during college and we actually managed to build a cool MVP and get some funding from our universitys startup accelerator. It never went anywhere but was an amazing learning experience and solidified my love for startups and software.So, when I learned that my friend (who is the subject of this post) was working on a company with his family and they needed software help and expertise, I saw this as a chance do something again. I was excited at the idea because no one in the team had software knowledge and I could tell they needed help. At this point, the company was about six months old and was actually profitable from what I understood (at least, thats what he told me). So I decided to jump in and help out, being onboarded as the CTO.At first, things were great. I was able to prototype a lot of things very quickly and my friend and his family (2 other people) were visibly excited and happy at the rate of progress. I was essentially building the full stack for a website that would get used by business clients (anywhere from 10 users in the beginning to over 100 eventually). I told them front-end development wasnt my area of expertise but it seemed that nonetheless they were very pleased with the front-end design of the site. I admit maybe Im not totally incompetent at front-end, but it is far from being my specialty and I only really do it when I need to. I would still call it pretty amateur-ish, though.About a month in, there began being an incountable number of red flags that I sort of just swallowed and didnt make a big deal out of. I dont remember the exact timeline but here are some things that occured: Due to the his general lack of understanding of how software development works and the time scales involved, he proposed that we have the initial beta release about 1.5 months after my initial commit to the repo. Keep in mind, this is a tool used by business users and their livelihoods actually depend very much on our own website and business going smoothly. I dont take this type of stuff lightly and spent an enormous amount of time adding all sorts of fail-safes and tests to ensure the system would function smoothly. When it became readily obvious that we werent going to be able to launch on that date, he said he doesnt want to start a culture of pushing stuff back. Keep in mind that a week or two before this date, website features and enhancements started to take a back seat to me prioritizing system stability and bug fixing. When I didnt follow through with going out for drinks one night, he got mad and commanded me to not push back stuff for no reason - translation: he thought that I was using backend bug-fixing as an excuse and wasnt actually doing anythingenough on the website. Keep in mind, I work a full-time job and still managed to spend anywhere from 20-40 hours a week on this website, as my time allowed.  He was insecure about my commitment to the company and would always ask me if I was really ready to be a CTO and if I really care about it, asking questions like why I didnt put CTO on my Linkedin. I explained that it wouldnt look good in front of my manager, who I was connected with, to see that I recently started working on something on the side. He claimed he understood but I dont believe he ever shook that insecurity. I had asked for certain processes and practices to be in place. I continually asked all other team members to test the site as I was working on it. I also asked them to not send me feature requestsbugs in the DMs and to use our Trello board. I was constantly hoping one of the members of the family would ask me any questions about what tech I was using or what decisions I was making. The front-end to this system was a website but the backend was actually extremely involved and I was doing things that received no interest. Multiple times, I got requests for features that were already implemented into the website and nobody even bothered to go there and check to see if they were. There was zero enthusiasm about it after a certain point. Part of the site had an embedding to another site which previously held a bunch of data that was being storedprocessed (think of it as a legacy system). There was discussion about the rest of the site not looking similar to the embedding and that we should make the rest of the site look like it. The site that was embedded was actually a very high-profile site who has a major value proposition being that it has extremely good front-end (hundreds of UI employees - not going to mention it here but think of the most beautiful databaseexcel type site whose name is the name of a day of the week). Basically they wanted the rest of the site to look and feel like that. There was going to be a push to not rely on the legacy system anymore and recreate the functionality on our end, which I actually pushed for. So it seemed like a complete wasted effort to recreate the look and feel of the embedding. The straw that broke the camels back: Today was supposed to be our second try at releasing to beta. I asked about a week ago to please do some testing and make sure that everything works and everyone is happy. Well, yesterday morning I see a message in the group chat amongst all four of us from the guy saying that the site is a joke. Instead of offering any sort of constructive feedback (I dont think he even went on the site and tried to test anything), he proceeded to repeatedly call it a joke. (Note: I am NOT paraphrasing). He said that our competitor just released a site that had much more functionality and that if we didnt include multiple language options for users, fix the appearance of the website, and add a highly sophisticated item tracking system, then we cannot launch the site. He said that yet again we have to postpone the launch and I could tell he was in a bad mood. (Funny note, one of the requirements for launch were e-mails that we would send our customers when various events occurred. He always asked if there was anything he could take off my plate and I finally had something, which were these e-mails, so I told him to please do that. That was 3 weeks ago and he never managed to deliver a single e-mail to me, all the while being angry that I didnt deliver to him a website that would require a team of 4 people probably months to finish. One more example: it took another family member 2 weeks to put in credit card details to upgrade the tier of our services so that I could have a proper developmentproduction cluster, but I was blocked on doing this due to the fact that he didnt do this (it would take 5 minutes)I cursed him out in the DMs and said that he has no leverage in this situation. I had all the .pem keys to our EC2 instance (not that it wouldve mattered anyway) and all the code was in a private git repository that only I have access to. He didnt seem to understand the gravity of how absolutely furious I was because he didnt apologize or change his behavior but continued to criticize me. So what did I do? I turned off the instance, deleted all S3 buckets, and blocked everyone at the company. They can buy the code for 10k if they want. But Im never going back to that dumpster fire. Please: make sure your cofounders know what theyre getting into when it comes to a software business. And think really hard about going into business with your friends. Finally, make sure you keep as much as you can under your control in case anything goes as badly as it did for me.Edit: Forgot to mention one of the last things he said was that he could get a single guy in Eastern Europe to code every feature he wanted in under a month and that would not cost much money. Obviously Im not dumb enough to believe that and knew he was bluffing. But this type of emotional manipulation just put me over the edge. I know that the low-ball for the site that hes dreaming about would cost probably a hundred to a couple hundred thousand dollars to build properly.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_y133cq","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/y133cq\/anyone_else_feel_lonelybored_while_wfh\/","DATE":1665446400000,"PLAIN_TEXT":"Anyone else struggle with feeling lonelybored throughout your workdays while working from home?I joined a new job a year ago. I like the work I do and my coworkers are nice. But, there isnt all that much socialization and I sometimes struggle to get through a full workday without feeling somewhat alone. Anyone else feel this way? If so, is there anything you do that helps with that?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_u49hu4","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/u49hu4\/i_hate_scrum\/","DATE":1649980800000,"PLAIN_TEXT":"There. I said it.Who else is joining me?Scum seems to take away all the joy of being an engineer. Working on tasks decided by someone else, under a cadence that never stops. Counting story points and velocity to measure productivity. Control and priority set by the business - chopchange tasks. Lack of career growth - snrjnr engineers working on similar tasks.I just cant stand the performative ritual and having to explain myself all the time. Micromanagement with an agile veneer.And Im in a senior position so Im not sure who is even doing the micromanaging but it definitely has that feeling.And no, its not just because were doing Scrum wrong.Anyone else agree? or am I way off base? I want to hear especially from individual contributorsdevelopers that like working under scum and why.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_oq849p","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/oq849p\/you_should_definitely_negotiate_salary\/","DATE":1626998400000,"PLAIN_TEXT":"This will hopefully be a small piece of encouragement for anyone doubting whether or not they should negotiate their salary after a job offer. Im a software developer with 5 years of experience and I just received an offer for a new job after a few months being on the job hunt. The offer was 50% higher than my current salary, and came in 20% higher than the range I had originally told the HR person I was expecting. Given that the new companys offer blew my old salary out of the water and was even more than I had asked for, I was extremely tempted to forgo negotiation. Negotiating felt super uncomfortable, and I honestly didnt think my qualifications were such that the company would be tripping over themselves to hire me. In fact, I was even drafting up a post on this subreddit asking if it was worth negotiating at all.However, I decided to call up the company and told them I was extremely excited about the offer and wanted to work with them, but that the salary, while great, didnt quite cover what I thought Id need (I am genuinely moving to a higher COL area so I mentioned that). I threw out a number that was 4% higher (modest because I was already getting such a great deal), and HR accepted immediately. (Obviously if I was better at this I could have framed this better so that HR had to propose a higher number first, but you live and you learn.)So all this is to say: you should absolutely negotiate, even if you do it poorly like I did. If a company offers you a job, regardless of how unqualified you may feel they clearly want you and they believe you can do the job. So dont doubt yourself. Ive seen it posted a hundred times, but its true: a phone call that lasted 10 minutes resulted in me getting a 4% pay bump.Hint: if youre as nervous as I was, write out what you plan on saying. I wrote my dialogue in a way that sounded conversational so that I could read it out loud on the phone. I tried to make it sound as if I wasnt reading from a script, adding some pauses and a little improvisation, but having a set script in front of me that laid out my argument was invaluable.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_jm38l7","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/jm38l7\/after_2_years_of_hiring_data_scientists_i\/","DATE":1604188800000,"PLAIN_TEXT":"BackgroundIm a data scientist in a tech company in London and have been hiring juniorgraduate candidates as well as mid-senior data scientists for my department. I define the job description, filter CVs, grade take home assignments, interview people and decide when and how to start the successful applicants. Basically from start to finish.WhyLooking at the posts that are heavily upvoted in this sub, the general feeling towards take home assignments seems rather negative, and I understand that. Because I (not surprisingly) had to take lots of them when looking for my first job.So lets start by addressing the most common counter-arguments to take home assignments:1. Everyone applies for multiple positions at the same time. Therefore it is stupid for employers to expect you to spend hours and days, unpaid, on the assignment: I agree. Thats why its much more beneficial to put a time cap or limit the scope of the test, if a test is necessary.2. It favors people who spend days and nights working on the test: Partly true, because commitment is only one of the criteria but its never weighted above the other skills. If you can devote that many hours to the test, it shows that you really want to work at the company youre applying for. Hiring is costly, and no one wants to extend an offer to those who dont want it. But if someone devoted a month churning out garbage code, surprise surprise! They get rejected. Its quality over quantity.3. Take home assignments do not reflect ones capability to code: I disagree. It would be dumb to expect the code you write when working is exactly the same as whats in the test. From my experience, these assignments are a decent reflection of someones coding practice and approach to problem solving. Its really easy to spot copy pasting instead of defining functions, terrible code hygiene, blindly copying from stack overflow, etc. which makes filtering out people who cant code easy.4. Companies use these tests to exploit people and made them work for free: This is totally ridiculous. If the code written by a full time paid engineer who left 3 months ago cant be understood, reused or debugged, what makes you think the code you wrote in a few hours can ever be integrated and used easily? I understand there are cases like that, but those are rather niche and limited.And now, heres why I believe these assignments especially benefits junior candidates:1. It helps you win against people with more YOE or big brand names on their CV: The rule if simple. If you show competence in your code, even though you had no prior exp or graduated from MIT, you still win. Its a fair game.2. Its less tiring and a more worthy investment than grinding leetcode: In order to be proficient in these, you need to spend a few hours everyday for months preparing, and even pay to get extra access and you ended up learning skills that is useful in 1% of your job. This takes away more time and money than a couple of hours doing a take home assignment. The latter, on the other hand, is 99.99% actual coding and problem solving, and its a chance for you to practice. If youre data science enthusiast, its a golden chance to practice on dirty datasets.3. You are less likely to mess up: Ever done a whiteboard interview or a live programming exercise with someone watching every line you write and your mind suddenly go blank and if you cant come up with something, youre forked? Never happened in take home assignments where you are in control of your environment, code at your pace and are free to take a break.ConclusionTake home assignment with a reasonable length is a very effective tool to weed out totally incompetent candidates and assess applicants based on their actual capability instead of how their CV look or how well they can talk in an interview. This greatly reduces the randomness in the hiring process and lets both parties focus on what truly matters: Your technical capability.My most 3 recent junior data scientists had no prior working experience, but they showed critical thinking and great problem solving skills, as well as good coding practice in the test. They have been excellent and get promoted ahead of their peers.Lastly, bear in mind that, if youre applying for a junior position at a company thats actually worth working for, it is extremely likely that you will be competing against hundreds of people. And if 1 of them decided to spend time on the test, you lose.EDIT: Interestingly, some people here actually prefers spending hours and hours on leetcode instead of spending time a couple of hours on a take home assignment.EDIT 2: I agree that there are lots of bad examples out there, but they are not the majority. If you simply rely on a few narratives to say all take home assignments should be abolished, you have a bigger problem.EDIT 3: Please read my first point! WE ALL AGREE that tests that take hours to days to complete are bullshit. Good tests should be limited to a few hours (2-3).","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_cct7v5","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/cct7v5\/how_top_tech_compensation_works\/","DATE":1562976000000,"PLAIN_TEXT":"Ive noticed that there is some confusion and arguments on this sub about how compensation works at the top tech companies, whats real and just made up etc, and since this is information I wish I had before I joined I figured I would explain the different parts and add some concrete number. While this wont be 100% accurate for anyone single company GoogleFBUberLyftAirBnBLinkedIn etcetc are all surprisingly similar so it should be a good ballpark for all of them.# LevelsSWEs at these companies are hired in at a certain level and this level is hugely important for your compensation. These levels usually start at 3 (level 1 and 2 are used for non-engineering roles) and go up to 7-11 depending on the company. This post will focus on levels 3-5 for a couple of reasons.- It covers ~90% of engineers- Its very difficult to get hired in as a L6+ if you dont already work for one of these companies The breakdown of the requirements for each level is roughly as follows- L3: Non-PHD new grad or equivalent- L4: PHD new grad or 2+ years of top tech company experience- L5: 5+ years of top tech company experienceThe reason I use the term top tech company experience is that these companies are notorious both for discounting experience that arent from another known tech company and for trying their best to downlevel you. Even if you have 15+ years of experience you might have to push and have competing offers to get an L5 offer if you havent worked for a company the compensation teams knows how to evaluate. With levels out of the way, compensation can be broken down into 6 parts.# Base salaryProbably the most straight forward part. You can expect a yearly bump to your base salary that will be based on your performance and how your base salary compares to other people your level. For the total comp math later I will use a $3K raise which should be roughly correct for a standard performer. Approximate numbers:- L3: $120K- L4: $150K- L5: $190K# Performance bonusThis is a cash bonus thats usually paid out twice a year. This one comes at a target which is a percentage of your base salary. If you meet but not exceed your performance goals you will get your target bonus. The targets for each level are typically:- L3: 10%- L4: 15%- L5: 20%# Stock refresherEach year you will get a stock refresher paid out over four years. To see how much this would increase your compensation every year divide the number by 4. This one is also heavily tied into performance, more on that later.- L3: $45K- L4: $80K- L5: $130K# Stock sign on bonusWhen you join the company you get a big chunk of stock up front that vests over 4 years. What this means is that usually your compensation ramps up for the first four years and then it takes a sharp dive, known as the four year cliff. Companies deal with this in a variety of ways but this is outside the scope of this post. A good but not great stock sign on bonus is roughly 4 times the value of the yearly stock refresh for your level which comes out to:- L3: $180K- L4: $320K- L5: $520K # Cash sign on bonus Not much to say here, if you have competing offers you can expect to get a cash sign on bonus. Rough numbers: - L3: $10K- L4: $25K- L5: $50K# Other perks and benefitsThese wont be used for the calculations further down but since they do have real economic benefit they should be mentioned. The big ticket items are- Free food- Really good HealthDentalVision with $0 premium for individuals, low 3 figures per month for a family IIRC- 401K match, varies a lot but perhaps 4% of your base salary and performance bonus# How performance ties inNormally these companies have a pretty formulaic performance system that ties into compensation. You get graded on a scale from 1 to X (lets use 7) and your base salary raise, performance bonus and stock refresher get set based on that grade. The numbers used above are for when you hit the Meets all grade smack in the middle, most people will hit this number or a higher one. If you get a 17 you can expect your bonus to be 0, if you get a 77 the numbers would usually triple. # How stock price worksAt the time you get awarded your stock refresher or your stock sign on bonus the cash numbers above get converted into an actual number of shares. That means that if the stock price goes up, your compensation goes up with it, and likewise if it goes down your compensation suffers. # Doing some mathTo make things a bit more concrete lets do the math for the first 4 years for an L5 engineer. Lets assume the stock price stays constant, that the engineer has a completely average performance and does not get promoted. - Year 1: 190 base + 20% performance bonus + 14 of stock sign on + 50 cash sign on = $408K- Year 2: 193 base + 20% performance bonus + 14 of stock sign on + 14 of stock refresher = $394K- Year 3: 196 base + 20% performance bonus + 14 of stock sign on + 24 of stock refresher = $430K- Year 4: 199 base + 20% performance bonus + 14 of stock sign on + 34 of stock refresher = $466KHope this was helpful for anyone considering the top tech companies.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ezch8a","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ezch8a\/fired_imposter_syndrome_materialized\/","DATE":1580860800000,"PLAIN_TEXT":"Little background, this is my first job out of university, lasted about 5 months, I graduated with an electrical engineering degree 8 months ago.The job was SQL.Net type desktop programming. I knew nothing about databases and stuff going in but I figured Id learn on the job.Basically I was slow. My manager was admittedly a very nice guy but I had a ton of questions for every task and all my tasks took 2-3 times the recommended amount to complete.I spend a lot of time confused about the inside baseball nature of adapting to an existing set of source code. So much jargon, so many table names and procedures that do god knows what. Every task required my hand to be held.I was asked to come in on a work from home day. My boss, and his boss were in a room. They were concerned with the rate I was adapting to the learning curve. They hired another junior. That was the end of my tenure.Kind of lost what to do now. I live at home still and I dont think I can face my parents with this news.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ir489p","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ir489p\/i_was_promoted_to_senior_software_engineer_today\/","DATE":1599782400000,"PLAIN_TEXT":"Company: Airbnb No. of engineers: ~2000 Experience: 5 years in total Location: San Francisco (not that it matters now, WFH until August 2021)Context on my background: Im a self-taught Software Engineer with an unrelated STEM B.S. undergrad degree. I started out working for some eCommerce companies part-time on their UI, then I got a job as a full-stack web developer at a small enterprise SAAS startup (10 engineers total). I got my job at Airbnb a little over 2 years go and was delighted that I got to choose my team.I decided to try out working on infrastructure instead of product features (I wanted to learn more about it). I became completely obsessed with developer productivity and quality tooling. I work mainly with toolslanguages like Go, Docker, K8s, &amp; Typescript -- my official title is Senior Software Engineer, Infrastructure.I had a tough time adjusting to a larger company -- I thought if I worked really hard and delivered everything that management asked for, I would get promoted. Boy was I wrong. I think it finally hit me that I needed to go out of my way to convince others that I was good enough. I basically worked my ass off and got an opportunity to set the pace for my whole organization. I took the opportunity and delivered and was backed by leadership.I was finally put up for a promotion this quarter, which Im so excited about! Hooray! But Im lukewarm about it too because since the company is in crisis mode thanks to COVID. I dont think my compensation increase was that worthwhile. I might have gotten more if I left the company. But Im grateful to still have a job in these times.Thanks for coming to my TED talk. Happy to answer any questions about anything!Edit: levels.fyi info on compensation is very accurate for Airbnb. Mine at L5 is $210k base salary, $135k in RSUsyear which was much higher before covid. I didnt get a stock refresh at this mid year promo, apparently those are granted at EOY.Edit2: oh wow thanks for the awards! Its 9am here and I just woke up, Ill try and answer a few more Qs.Also stop calling me he lol, Im a woman, I go by sheher pronouns.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_i9dwmy","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/i9dwmy\/is_you_cant_leave_your_desk_culture_normal\/","DATE":1597276800000,"PLAIN_TEXT":"I just need to hear that Im not crazy. Ive worked two industry jobs with an academic one in between, both of the industry jobs were Midwest non-tech companies no ones ever heard of where software is more of a side department than the main product. But theres always been this you cant leave your desk for any reason culture, like with my manager timing everyones lunch breaks and keeping a record of how long everyone takes or how many times youve gone over 30 minutes, or never letting anyone take any time off if its not a medical emergency. Im pretty friendly with all my coworkers and they all have something that theyve needed time off to do, like take their car in for an oil change or go to the dentist, that my current manager wont approve because itll mean theyll be in an hour late one day, and every day theres some huge priority that cant be missed. For some reason they all seem not to mind it but its really, really bothering me. I feel like a prisoner or something. This has continued through WFH, now my manager expects responses to any Teams or email message within 60 seconds or theyll send a follow-up what are you doing? you should have been able to respond by now. Or theyll schedule meetings starting immediately and complain that someone was late. One of my coworkers got reprimanded in front of the rest of my group over Teams for going to get groceries during the workday and not responding to an email for an hour. I feel like this should be really abnormal but no one else seems to think that.The academia job was much more normal, like people would often go for long lunch breaks or go to get coffee outside lunch hours. Is this how most workplaces are?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_x3bgzm","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/x3bgzm\/for_those_working_05_hrs_per_day_while_fulltime\/","DATE":1661990400000,"PLAIN_TEXT":"Background: Im a new software dev doing mostly frontend stuff and I just started my first job. WFH and using a work laptop.Personally, I try to get in my 8 hours everyday because I just feel scared that theyre tracking my every mouse click and key press. Sometimes Im not able to though and worried they might add end up firing me if I keep doing it too often. So whats your guys situation like? How many hours of actual work do you guys do? If its low, what do you say when you need to tell them what work youve been doing? Do you guys pretend like tasks are hard and just take your time doing them? Arent you scared of being caught?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_i2pxtv","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/i2pxtv\/forgive_me_but_i_wish_my_job_would_lay_me_off\/","DATE":1596326400000,"PLAIN_TEXT":"I feel terrible for thinking this way. Especially with those of you out there looking for a job and I truly apolgize... But the past 4 months has taught me that WFH and working through a pandemic has caused a great toll on my mental health. Productivity at an all time low. Panicking about stand ups the next day with minimal progress. I only think about how much work I need to do. This weekend the only thing on my mind was work. Im supposed to be relaxing. Its eating me alive with the amount im not getting done and I dont know what to do anymore. I want to take leave of absence so bad but financially supporting myself and my family is extra important this time around. I just wish I could be collecting unemployment and ride these weird times out...Im sorry. I just need to rant this somewhere because I have to be strong for my family. Im stuck and lost and I feel like this feeling wont end anytime soon.&amp;#x200B;EDIT: Waking up to all the love from everyone and relatable stories definitely helps to make me feel a little more sane. I really appreciate the words you guys. And again, I just want to apologize to those felt offense to me saying I wish I was laid off, especially those who are in the opposite situation where youre struggling with job finding (ive been there and know how it feels). I immediately felt ashamed for even thinking that, but everyones situation is different and everyones mind is built differently. The grass isnt always greener on the other side you guys, and we shouldnt put each other down but help each other grow through these weird times..","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_t6qq9t","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/t6qq9t\/returntooffice_for_an_office_youve_never_been_to\/","DATE":1646352000000,"PLAIN_TEXT":"Return-to-office plans are ramping up again (third times the charm?)Most of us have been remote for two years in an industry with an 18-month average tenure. There is a very good chance that youre being asked to return to an office youve never been to.For those that have returned so far, how has it gone? Is it awkward? Do coworkers generally seem to be happy to be back in an office?For those that are told to return soon, are you going to comply? Push for permanent remote? Some hybrid setup of 6040 in-officeWFH?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_h96krz","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/h96krz\/i_thrive_in_the_wfh_environment_working_from_home\/","DATE":1592092800000,"PLAIN_TEXT":"Hey guys, similar to a lot of you guys my company has been working from home for the past few months due to COVID19. They announced plans to bring people back into the office and im upset because I KNOW my work and quality of life will decrease when this happens. Working from home has helped my anxiety and stress, my work has also been so much more productive and efficient, and not to mention the 1 hour i save from commuting. As an anxious introvert, i thrive in this environment. Being in the office stresses me out, gives me anxiety, distracts me and overall just makes me unhappy and a lot less productive than working from home. Also, i eat a lot more because of the free food, and after work i cant physically work out or anything because im exhausted. When im at home, i can work out during my lunch breaks and im not tempted to eat so much junk food.Now heres my question(s). I know a lot of companies want people to be physically seen at work, but if there is proof that someone is more efficient and productive when working from home, why wouldnt they let them do it? Would they really trade productiveness for having someone physically at work? In other words, how can I ask this to my manager for the highest chance of getting an okay from him?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_w7q2xi","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/w7q2xi\/why_is_this_field_so_entrylevel_unfriendly\/","DATE":1658707200000,"PLAIN_TEXT":"You hear about people with some or significant experience being able to move quickly for higher salary (with some dramatic increases reported here), and also demand conditions (WFH), or even instances where they are haressed by recruiters because demand is high and supply short.And you hear about graduates applying 500+ times, getting very few replies. All sorts of frustrations and regrets.And if lucky, maybe for endless internships and low paid positions in exploitative startups where you work long hours for practically nothing, hoping to land that good position somewhere else. Why are there not better graduate development opportunities if theres such a big demand for professionals? Its like no one wants to invest in staff development because people move quickly. So they want experience and so does everyone else. And then they compete for the same experience and pay premium salaries, much higher than if they invested in staff development and satisfaction.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_jqztd2","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/jqztd2\/how_do_i_stop_being_afraid_of_code_reviews\/","DATE":1604880000000,"PLAIN_TEXT":"Everytime I push code for a review, I have a bad feeling in my stomach. What if I did something stupid? What if the reviewer is thinking who hired this idiot and I stay in this state till the review is done. And tbh, no one is really mean in the reviews. They are quite polite. How do I get rid of this BAD feeling? Its driving me nuts. Especially during the damn WFH where Im online literally all the time. I have like 7 months experience right after college.Edit: Thanks everyone for your kind replies. Improved my confidence and made me feel much much better :)","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_gjmsoc","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/gjmsoc\/as_a_new_employee_i_feel_very_unproductive\/","DATE":1589414400000,"PLAIN_TEXT":"I joined my company right after the whole WFH thing started. As such, I havent met any one of my teammates and no one has really explained much of our platform to me. Instead, I am given a brief overview in a 5 min call and then just told to figure it out. Ive been reading the documentation and thats not too clear to me.If I was in the workplace, I could quickly go over to my teammate and ask for help. But this is much harder and annoying while working from home, everything takes like 3 times as much time. Plus Im still a junior developer and I feel like Im not learning as much as I could be if I was working in the office. Plus my company is pretty PIP-happy so Im worried that Im not very productive. :","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_iuti54","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/iuti54\/does_anyone_else_hope_permanent_wfh_isnt_the_new\/","DATE":1600300800000,"PLAIN_TEXT":"I generally love working from home, but since covid the expected working hours have been getting longer and longer. Before the lock down, pretty much everyone went home at 5, and that was the end of the day. Now, people will schedule meetings starting at 6, or I will get messages from managers later than that. Also, the deadline expectations seems to have changed a lot too, myself and my team have been working much longer days than normal. I know I could tell my manager that Im offline at 5 or whatever, but I dont think thats practical.Has anyone else experienced this?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_11yj23m","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/11yj23m\/my_bank_is_returning_to_5_days_a_week_in_the\/","DATE":1679443200000,"PLAIN_TEXT":"I swear just a year ago everyone was competing and offering work from home, and now with the tech lay offs companies gained all the power back, and now I see people who are adamant about wfh sucking it up and clocking in. This is genuinely heart breaking, I dont want to miss my kids first steps to be in some cubicle because Im not uncomfortable enough at home. Im thinking of quitting, but all these posts about the market got me really scared to quit. I only have about 4 years experience.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_f5dllg","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/f5dllg\/addressing_misinformation_about_the_bay_area\/","DATE":1581897600000,"PLAIN_TEXT":"Yes, every company asks Leetcode questions. No, writing algorithms is not your everyday job. Why do they do it? Its an intelligencecommunication test. They want to see how well you articulate technical concepts and think critically. Theyre optimizing to prevent false positives. And believe it or not, people can pass Leetcode style interviews without grinding Leetcode for months. Yes, there are people smarter than you, welcome to the real world.Yes, rent is very expensive. Yes, California has a state income tax. No, $180k in CA is not the same as $60k in the midwest. Especially when you have no dependents. Yes, you might live with roommates to save (even more) money. But you dont have to. Turns out humans are social animals that value friendship.No, the Bay Area is not as chill as Socal. Yes, you have to write code at your job that is paying you a lot of money. The vast majority of software engineers here are working 40 hrsweek or less. Yeah, you might be at work until 7, but you just hit the free gym, took a shower, ate free dinner, and are about to take a free shuttle back home. If your company doesnt offer those things, you probably left long before that. In addition to a ton of perks, many workplaces are flexible, and allow partial WFH 1-2 daysweek.Instead of whining and criticizing others on the internet, many posters here would do better to make an honest assessment of their own weaknesses, put their heads down, and get to work improving themselves. And Im not saying your goal should be $xxx TC, Google Mountain View or some vain, Blind-esque bullshit like that. I dont care where you want to live or who you want to work for.If youre unhappy, then harness that negative energy and look inwards, because you are the one that has the most control over your own situation. Yes, theres enough randomness in life that you cant guarantee any one success. But give yourself goals. Challenge yourself. Youll fail, and thats ok.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_ppi8dp","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/ppi8dp\/do_you_guys_get_anxious_that_you_might_be_fired\/","DATE":1631750400000,"PLAIN_TEXT":"It is easy to slack off when on WFH. I had my GRE last week and TOEFL this week, so I have been sort of neglecting work a bit. More I neglect more anxious I get for my exams and for my work. I can shake this feeling that I might get laid off, so I started applied to 2-3 companies through LinkedIn and getting rejected by auto mailer bot didnt help. Need tips on how to get over this fear of firing? I am 23M, been working since last year ( so no physical office for me yet). Edit : Grammar ","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_gci8ve","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/gci8ve\/possibly_fired_from_an_internship_is_this_my_fault\/","DATE":1588377600000,"PLAIN_TEXT":"UPDATE: (im not fired) [https:www.reddit.comrcscareerquestionscommentsgci8vepossibly_fired_from_an_internship_is_this_my_faultfpfdfgn?utm_source=share&amp;utm_medium=web2x](https:www.reddit.comrcscareerquestionscommentsgci8vepossibly_fired_from_an_internship_is_this_my_faultfpfdfgn?utm_source=share&amp;utm_medium=web2x)&amp;#x200B;Hey everyone,I think Im going to get fired from an internship thats kind of crappy anyway so Im not too concerned. But im very confused and would like an honest opinion if this is my fault or not. Sorry its kind of long.So around 6 months ago I got hired as an intern for a super small company. They pay me minimum wage and give me part time hours while in school and theres no end date to this internship. More like a part time job I guess. Since starting I was given almost nothing to do, and I asked on multiple occasions. There were days my manager would give me nothing and then Id try to look busy if the owner walked past as if it was somehow my fault I was sitting there texting with a blank computer screen. Needless to say I was learning absolutely nothing at this internship.Back in March we were notified via email wed be WFH due to covid. I had never worked from home before and had no task assigned to me so I logged into my work laptop and emailed my manager asking what to do. He said he would get back to me and never did. So for the next few days I would just leave my work email open in the background waiting for my manager to get back to me, while doing nothing. When it came to log my hours to be paid it was extremely awkward, because I either had to lie or write that I needed to be paid for doing homework and watching Netflix. I wrote very vague bs and then sent a followup email to my manager once again reminding him that I had nothing to do and asked if I should be working on anything. He said he would get back to me and of course never did. At this point my work days consisted of checking my email and since I had that on my phone I didnt even bother to log into my work laptop. I was truly doing nothing at all and thought forget this Im gonna focus on school, I wont try to make them pay me for this, and Ill wait for an email.An entire month goes by and I dont hear a peep until I get an email from the owner asking if I quit. I let him know Ive been here the whole time but no one has given me anything to do. He writes back with an email that clearly shows hes upset with me. Shortly thereafter he calls me on the phone and we have a brief back and forth where hes clearly not happy with me and at one point calls me immature. He then says hes going to talk to my manager and see what theyre going to do and we hang up.I go back to the email where he wrote that its not good I havent responded to emails and I should have asked for a task. I replied asking him to please show me which email I never responded to (there havent been any). I then told him that I did ask for a task on two separate occasions and forwarded him both email chains with my manager to prove it. Since its the weekend Im sure I wont hear back until Monday so Im not sure what his response will be.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_v30jt3","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/v30jt3\/just_started_new_job_from_90k_195k_with_less_than\/","DATE":1654128000000,"PLAIN_TEXT":"Just went from 90K -&gt; 195K total comp with less than 2 years experienceJust started my 3rd new job this week in less than 2 YOE with 195K TC. After job hopping so much Ill probably stick around here for a while. I took a paycut because my company forced employees back to office. Was not allowed wfh and was required to move. Would probably not recommend doing a paycut unless youre desperate like me. My salary progression:2020: 107K2021: ~120K (pay raise)2021 (few months later): 90K2022 (today!): 195KLots of leetcode, and 6 failed onsites (unicorns and FAANG). It eventually paid off. Honestly from what I learned, its a numbers game and you really just need to be good at leetcode.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_m4l9v3","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/m4l9v3\/how_do_you_stop_slacking_off_during_the_workday\/","DATE":1615593600000,"PLAIN_TEXT":"Ive been experiencing this more often and more pronounced during covid wfh. If a task takes 1 hour of high quality concentration to complete now takes me 6 hours because Im constanty watching youtube, checking reddit, watching tv, taking random breaks. I have other aspirations such as Leetcode, System Design, but I really hate how ingrained this slack-off behavior is affecting me currently. Anyone else experiencing a similiar thing and how are you combating it?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_qfhjvw","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/qfhjvw\/how_long_do_you_spend_in_the_office_do_you_start\/","DATE":1635120000000,"PLAIN_TEXT":"8 hours, eat at desk? 8.5 with 30 min break?Do you start the timer when you reach the shit show of a parking lot, or when your laptop is done booting up?Curious to see what yall doEditGetting a bit of traction with this post:Im a junior dev and we are now coming in 3 days a week of our choosing. I dont work directly with anyone at the same location as me, but I sit near some serious bosses. My manager (different city) told me she likes to do 8 hours + 30 minute lunch break, and we have to badge in out of building. Nothing in my contract or offer says anything about hours, just my salary and role.I currently have very little to do as I finished fast (and well) on my current project and am waiting for a new assignment.Its looking pretty freaking hard to appear busy with an open floor plan and basically nothing to do.Would love words of wisdom from some experienced folk.double edit modeThanks for sharing everyone. I agree about me being in the office being silly at this point. The company I work for is famous for great WLB but the stance on wfh they are taking pretty much negates that. Im keeping busy, working my way through my cloud certs, I just dont feel comfortable grinding leetcode here Pss If youre at a company that is full time wfh and is looking for an early in career human that is pretty handy with pythonaws and is a quick learner, Id love to hear from you","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_hashcu","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/hashcu\/getting_lazier_since_wfh\/","DATE":1592352000000,"PLAIN_TEXT":"Im not sure where to post this, if I should have gone to rproductivity please tell me but I think this has something to do with me being a bad software engineer.These past 2-3 months of WFH, work has been unbearable and around 3 or 5 PM, I would want to stop work when actually I can only stop at 6.30.I think the reasons are these:1. Im not confident in my skills and I feel incapable of completing the cards assigned to me2. Some of the work Im doing is insignificant but if I do get significant work, I feel my skills dont qualify and other peers should have do it3. When the product requirements are unclear, I reach out to my companys product team but they are busy doing something else so they might not answer at all or answer in 1-3 days. They also dont make enough cards to satisfy the product requirements4. Very small percentage because of this covid situation that doesnt enable me to socialize with other people and other depressing situation such as paycut, colleagues leaving etc.I really, really feel bad that I cant maximise the time that I have from 9-6.30 but I really dont know what to do, Im really unmotivated and very slow to get work done these days. I am afraid to communicate number 3 to my company because I am just a junior engineer and the product team has people with higher positions and have worked a long time in this company. Thank you for reading","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_g9gweb","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/g9gweb\/i_want_to_get_laid_off\/","DATE":1588032000000,"PLAIN_TEXT":"I know this is a super weird thing to say. Im a new grad who has some other open offers from companies that are doing well right now and actively hiring. However, 7 months ago, I joined a company that has been hard hit by COVID-19. Half my team has been laid off but expectations of output really havent dropped. I am working a lot more than I was working before WFH and I feel very burnt out. Theres some weird internal politics to deal with too as our team is reporting to a new manager and its stressing me the fuck out. I desperately want to get laid off so I can keep my sign on and relocation (nearly 50K) because I am not going to be able to keep that money otherwise. The company Im at is probably going to do another round of layoffs in the next month or two and Im desperately hoping Im laid off because I dont know how much longer I can work this way. Sorry, just wanted to vent.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_k3kjiu","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/k3kjiu\/what_are_your_must_haves_for_home_office_since\/","DATE":1606608000000,"PLAIN_TEXT":"Looking to snag up some items during Cyber Monday.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_fh5crn","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/fh5crn\/my_office_is_shutting_down_for_the_month_how_do\/","DATE":1583884800000,"PLAIN_TEXT":"The worst thing about college was the lack of separation between work and home. Now Im back in that mode for the foreseeable future. I also rely on my workplace way too much for basic needs like social interaction, food, etc. So Ive got to figure out a whole new rhythm for staying sane and healthy in my day-to-day. Any advice?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_vme1mu","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/vme1mu\/will_wfh_become_the_biggest_job_market_bargaining\/","DATE":1656374400000,"PLAIN_TEXT":"Is it already the most sought after quality besides pay? I know companies like Spotify have embraced it since COVID, is that the exception or the rule?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_tad1pw","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/tad1pw\/major_companies_returning_to_office\/","DATE":1646784000000,"PLAIN_TEXT":"I was really surprised to learn that a lot of FAANG is returning to the office, mandatory hybrid model. Is this something that you all think is going to be permanent, or do you think the back lash will be great enough for them to offer permanent WFH?Also what does this mean for the rest of the industry? My non FAANG company is making us go back to the office following the hybrid model, but Im surprised to see FAANG following suit with that too.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_o3r0wt","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/o3r0wt\/a_journey_from_one_year_of_unemployment_to\/","DATE":1624060800000,"PLAIN_TEXT":"TL;DR:I quit my job as an entry level QASTESDETwhatever you want to call it last June. Life doesnt go quite as planned, so I spent last July to March of this year being sad and doing nothing. I decide to go all in on LeetCode for ~3-4 months, and land multiple offers from big tech companies, learning a bit about myself &amp; the study process along the way.Where it all began:I left my job in testing almost exactly 1 year ago today for a handful of reasons. I would say the biggest reasons were that I wanted to make a transition into SWE and burnout from poor WFH practices that I had. I told myself I would take a ~2 month mental break before getting back to the grind. The day after I put in my 2 week notice, I get dumped by my girlfriend. This makes me sad.The 2 months I set aside for myself pass, and I start trying to do LeetCode (henceforth abbreviated LC). It was hard and I felt like it was going nowhere. At some point in November I began applying to jobs, hoping that having an interview would push me to study. I get ghostedrejected by every company. This makes me even sadder and I sink into a slump that lasts until March, where I do not accomplish anything career related.I instead sunk all of my time into playing video games, because I was good at these. Eventually I realized that I was deriving almost all of my happiness and self value from how good I was at these games. This made me very scared about the direction I was heading in my life and I decided to make some major changes.The power of habit:I had about ~100 LC problems solved prior to all of this. Link to my LC profile if you want to see just how closely the submission history matches the story I am telling: [https:leetcode.comaTastyStrawberry](https:leetcode.comaTastyStrawberry)In mid-late February, I logged in to LC hoping to change the direction of my life. I attempted to do some problems but struggled as expected. I was getting pretty frustrated, but then I noticed something called February LeetCoding Challenge 2021. I clicked on the link and read about it. The challenge advertised itself as a beginner-friendly challenge that is essentially just solving 1 question per day. I thought this sounded pretty cool, but since it was already mid-late February, I told myself I would just do the March daily challenges.March comes by and I actually forget to do the first few days, but Ive had enough at this point and I refused to wait until April to make a change so I decided to just start a few days late. I actually got kind of lucky with this, because in more recent months some of the problems at the start have been a bit too difficult to consider beginner friendly. I promised myself that no matter what, I would solve at least the daily problem every day. I found my confidence growing over time as I began to remember old concepts about DS&amp;A. This eventually snowballed into a system where I was solving several problems per day, every single day.Alright, time to log in and do my daily problem. Oh, this problem is pretty similar to what I just did. Might as well do this problem too. Oh, well Im already on the website, and it did feel kind of good to solve those other problems. Might as well do some other problems while Im here.There are 3 major learnings here, which I will touch on. Some of these are really obvious and you probably already know them to be true.1. The hardest part about building any habit is starting. After you establish the habit, everything after just seems to fall into place with a fraction of the effort.2. If youre struggling with LC, you probably arent as stupid as you are making yourself out to be. In most cases, it just means you havent learned a fundamental concept or youre a bit rusty. When I was a kid I watched a show called Are you smarter than 5th grader? and I always remembered thinking adults were so stupid for not being to get basic trivia. Looking back at this, its clear that its absurd to expect somebody to be able to recall some obscure fact that they may or may not have learned 20+ years ago.3. I didnt hatedread LC itself. Turns out I LIKE doing LC. I just hated being bad at LC. If you really hate doing LC, try doing it seriously for a bit. If you still hate it afterwards, that is fair and understandable. But who knows? Maybe youll come to enjoy it.The first offer:My resume went through ~8 revisions between February and April. I was beginning to get interviews, and oh man did I bomb my first few. I had an interview where I knew that I was going to fail about 5 minutes in. I had a phone interview where my interviewer asked me a multithreading question that I didnt know the answer to, and I spent the next 15 minutes more or less guessing what to do with 0 feedbackmercy from him. It felt really bad, but I remained optimistic by telling myself that no matter what, I was improving over time.Two months in to my LC grind, I had the good fortune of being given a referral to interview for a big tech company by a hiring manager. Im comfortable enough with LC at this point. I could solve most medium problems in &lt; 15 minutes. I breezed through the OA and get invited to the final round. Despite failing a bunch of interviews before this, I actually felt somewhat confident for this interview. The reason I felt confident for this interview specifically was because these types of interviews are pretty well documented. I knew that I was going to be asked these LC style questions that I was so familiar with at this point. In order to not burn myself out prior to the interview, I instead shifted my focus over to behavioral elements of the interviews.Every other day or so, I read a post that is titled something like I am a QA engineer right now, how hard will it be to get into SWE? My answer to this question is that you will either be at an advantage or a disadvantage, but you are the one mostly in control of which one that is. Learning to talk about your own experiences is an important skill that should not be overlooked. Take time to practice talking yourself up and build confidence in whatever it is that you did. Learn to spin your experiences in ways that are relevant to where you are applying to. The worst thing that can happen in this position is you convey to the interviewers that you do not think you have what it takes to succeed. Do not let this happen under any circumstances.The day of the interview arrived and I completely crush it. I signed an NDA so I cant give out the exact problems, but what I can say is that I was asked questions between the medium and hard difficult on LC. Funnily enough, I had actually done none of the exact problems before on LC, but my fundamentals were strong enough to work through the problems extremely comfortably in the time allotted.I receive an offer. Its a really good one for an entry level position according to [levels.fyi](https:levels.fyi). I tell my Asian parents the good news. They verbally abuse me for only 5 minutes compared to the usual 30. Life is good. The story has come to a close, seemingly.The second offer:I had some other interviews lined up still when I received my initial offer. I knew that if I could get a competing offer, I could maybe up my TC by a fair amount of money. Or better yet, maybe I could get an offer from somewhere Id want to work for even more. I had already done all of the studying, so I figured it just made sense to interview while my LC skills are still fresh and at their peak. I was in the loop with two big tech companies, who I will refer to from now on as Company A and Company B.I had final interviews scheduled with Company A. After acing a phone interview with Company B, a recruiter calls me and tells me that Im invited to a final round with them. Im ecstatic, and then the recruiter drops a bomb on me. Im not interviewing for an entry level position. Im interviewing for a level 2 position, and down levelling is not an option since there are supposedly no available spots.Panic. I had geared all of my preparation towards finding an entry level position. I havent studied system design at all. The recruiter tells me that she understood the nerves, but to try my best and that I might surprise myself. After talking to a few friends about the situation, I made the decision to cancel my final interviews with Company A and go all in on studying system design. I studied 55+ hours of system design over the next 5 days.I went into these interviews with a win-win, learning attitude. I told myself If I do well on this interview and get an offer, thats cool. If I dont, thats OK because now I know what to expect when I interview for the next level up 1-2 years from now. Funnily enough, I had 0 nerves because I was expecting to completely fail.I tried my best in these interviews, and I know for a fact that I had a strong performance on the coding interviews, but wasnt so sure about the others. I also signed an NDA for this, but I would say that this interview difficulty mostly fell between medium and hard LC questions as well. And once again, Ive done none of the exact problems before. I get a call back from the recruiter the next day.Ive done well enough in the interviews to skip a few steps and I am given an offer on the spot. I dont believe it. I pinch myself, I dont wake up. One and a half months ago I had woken up from a dream that I got an offer from one of my dream companies. That hurt to wake up from, and I wanted to make sure this wasnt just deja vu. I take some time to process the info and think about it. Over the next 48 hours, my offers compensation changes and I was really happy with it. I also spent a lot of time talking to a few friends and mentors before deciding to take the leap and sign on with Company B.On interviewing &amp; software engineering:Im not here to debatediscuss the current state of tech interviews. Do I personally think its silly that some random NEET can study LC and cram system design in 5 days and get a SWE2 offer, while somebody who has been working hard as a SWE1 for 2 years might have difficulties getting naturally promoted? Yes, but that talk is not for now.Interviewing is a skill. It does not definitively say anything about your software engineering skills. Do not let rejection from these interviews bring you down about your potential as a software engineer. Similarly, I do not believe passing these interviews makes me a better software engineer than anyone else. Ive never even had the title of Software Engineer in my life before!On shortcuts and the secret sauce:Shortly after receiving my offers and telling a few people about it, I suddenly had a lot of people reach out to me asking me for any tips and tricks I had. How did you do it? Whats the secret sauce? The funny thing is, a good number of these people are people I had asked to study with from day 1. They gave me a number of excuses that I wont go into detail about in this post. They saw me studying day and night. I told these people that the secret was right in front of them the whole time.Outside of a few things like the Blind 75 list and LC premium telling you what problems are frequently asked, there is no secret sauce. It just comes down to how much you are willing to put in.Personal tips for LeetCode:Below I will list a couple of the strategies &amp; tips that I utilized throughout my 3-4 months of daily LCing. I just want to quickly say that this is what worked for me. As you dive into your own LC journey, its entirely possible that you develop a system completely different from mine, and thats ok if it works for you!1. The most important thing is sustainability. A lot of people who start new habits tend to go extremely hard and burn themselves out all too soon. To avoid this, I asked myself this question: Can I see myself repeating the same level of grinding tomorrow? If there was any doubt, I usually would stop.2. Pick your problems wisely. Do not do problems for the sake of increasing your problem count unless you are just starting out and need a confidence boost. Challenge yourself. Problems you solve should accomplish one or more of these things: teach you a new concept, teach you to apply a familiar concept a different way, reinforce your understanding of a concept, or combine multiple concepts youve learned already.3. Dont cheat. Remember the goal. We are here to learn, not to specifically solve problems. If youve been stuck on a problem for a long time, it can be tempting to go look for just a hint by looking at what the beginning of the solution might look like. I felt this too, and I realized that this was just my fragile ego speaking. My ego wanted to be able to say oh yeah, I knew that. Remember, you are here to learn. If youre stuck on a problem, chances are you dont understand certain concepts well enough to move on. And thats OK! Move on to other problems and come back maybe a month later. Maybe youll understand it then. The problems that challenge us the most are often the most valuable-do not cheat yourself out of a valuable learning experience. 4. Work on your coding style as you do LC. When I first began the grind, I know for a fact that I was typing pure garbage. It was tempting to move on from a problem the moment I saw that my solution was accepted. Remember, LC is merely a means to practice for the technical coding interview. You should revise your code until you would consider itself presentable in an interview. I remember thinking to myself that this was so time consuming, but honestly this saved time as the months flew by, since cleaner code is easier to debug and think about. Being able to write readable &amp; stylistically good code is a skill in itself that should not be ignored.5. If you can get a friend to study with you, do it. Having somebody hold you accountable is a proven tactic to work in just about anything. If you can, discuss problems with them too. Being able to talk about problems is a skill that is arguably just as important as being able to come to the optimal solution. I owe so much of my success to the people who have studied and discussed problems with me.6. If you are somebody who chokes under pressure, you should consider doing the LeetCode weekly contests. As somebody who does not perform well under intense pressure, I began doing the contests every week to simulate a situation where I need to code under pressure. I believe this was a huge contributor in me being able to perform in a stressful interview setting.7. This is a more personal thing, but I cared a lot about my acceptance rate. After Ive written a solution to a problem and pass the base cases, I never immediately hit Submit. I always add a few test cases of my own to make sure Ive done my due diligence on some obvious edge cases. I think this habit made me very good at spotting things that could go wrong. This proved to be very valuable to me in the interview process because I was able to catch bugs in my code logically and independently.Again, these are just rules that I followed. There are a handful of others but this post is just so god damn long already I dont want to go into more depth.Closing thoughts:I also often get asked what I would do differently if I could do all of this over again. Honestly, I would keep most of it the same. The biggest thing I would change is my levels of physical activity throughout this grind. I wish I went to the gymoutside more, and that I ate healthier throughout the process. I feel so physically sick and unhealthy, but thats the next grind I guess.Its crazy to think about, really. If you told me four months ago that I would one day be in this position I would probably tell you not to make mean jokes. Im still processing it to be completely honest. In a conversation with my parents, they recommended that I reflect on the experiences and what I learned. I figured that one way I could do this via a Reddit post. Honestly, it would be so cool if just one person gains something from this. Im a pretty big lurker on Reddit and Im a noob at making posts, so Im just going to say some things now that feel like natural ways to end posts. Apologies if the formatting is complete garbage. English isnt my first language (technically true), so please go easy on me.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_88isyl","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/88isyl\/struggling_immensely_at_new_job_feel_as_if_i\/","DATE":1522454400000,"PLAIN_TEXT":"Two months ago I accepted a new job at a company doing very similar work to what I was doing at my previous job (JavaSpringMicroservicesetc.). The problem is that while I was doing that at my previous job where I had 3 years experience it was more like having 1 month of experience 36 times.My previous job (and first job post graduation) was at a large company with very low oversight, I would abuse their WFH policy (come in maybe 2x per week), and generally do absolutely nothing while I was there. Any tasks I completed were extremely menial in nature, and after 3 years I still didnt have a solid grasp on how the application was designed, or how everything works, etc. I legitimately spent &lt;10 hoursweek on work.I am a mid level engineer experience wise, but I am extremely junior level knowledge wise.Several months ago I decided to look for a change, and I studied up all the technologies at my job and made a bunch of tutorialtoy projects to get just familiar enough with the technologies to be able to speak about them in an interview (Sure, I can make these microservices and these rest endpoints for you, but I have no clue how to structure them in a larger project, no clue about security, or good design, etc.) With this, on top of grinding leetcode, I was able to land a new position with a nice pay bump where I have been for just over two months now.I have effectively bullshittedconned my way into a mid level engineer position while having the skills of a fresh gradSince my tenure date here, I have these sorts of regular interactions fairly regularly:- Coworker describes something in detail, I am completely lost. I end up googlingresearching while I can feel the pressure from my bosscoworkers to get something done.- Coworker comes by my desk to assist with an issue, I have extremely poor keyboard control (I know none of the shortcuts etc.) and they watch as I awkwardly manually fumble through the classesetc in the project. - I am asked for my input in a meeting, and I am usually decent at deflecting direct questions but I can sense my coworkersbosses patience with me is waning.- In two months I have closed exactly 0 issues on my own. - In two months I still have a fairly poor idea of not only how the codebase works, but of how new features should be implemented. (Which package? Should {classname}Manager manage instances of this class? Is there any configuration changes required along with this? Does this class need a separate DAO linked to it? etc.)- I spend hours of my free time outside work researching the technologies we use as well as implementing small tutorial projects, but it seems I cannot keep up.- I have regular 1-on-1s with my manager where it is clear he is displeased with my performance and lack of output.I made my own bed, and now I must sleep in it. I do not see my tenure at this company lasting much longer, I would be surprised to last another 30 days.I guess Im just venting. thank you for reading.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_qwgr23","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/qwgr23\/just_got_out_of_my_second_cubital_tunnel_surgery\/","DATE":1637107200000,"PLAIN_TEXT":"TLDR: If you start losing feeling in your arms, thats downstream of being a programmer and inflaming your forearms holding your hands in a cocked position. Which then compresses the nerves etc etc etc. And then you dont do anything about it for a year and a half and then you get to have a surgeon move some nerves around. Woops!So do something about it yesterday.Longer version:In 2019, I started losing feeling in my hands and suffering severe and ongoing forearm pain from an inflamed common extensor tendon in both hands. My right mouse hand was worse. In late 2019, I started doing the process of getting it looked at and then had to stop when COVID hit.So at home, I stretched, stopping using trackpads (I have an M705 on every surface I will ever use my laptop on, youre welcome), and shifted over to either the Newtral Mouse or, no joke, the [Cutesy Beanie Baby](https:www.amazon.comTY-Beanie-Baby-CUTESY-DogdpB015EV60HG) as a wrist rest on my main dev box.And then in early 2021 once I had managed to get my shot, I gave in and went to PT which made things even worse in general and great for 2-3 hours following every appointment. Dry Needling is legit. And then we gave up and went to surgery. The right hand in August, the left hand at 7AM EST this morning.The problem is that the swollen tendon would trap the nerve so when I bent the elbow, my ulnar nerve wrapped around the elbow and stretched out. And then it got super-swollen, so it was even bigger and even when we got the forearm to (sorta) go down, it made things worse. And the resulting surgery is to literally pull it up on the side of the elbow with some slack so it never needs to stretch.I cant say its perfect, Ill probably get 9.3 fingers back at any time and its really really sensitive to vibration so long drives are no bueno and Ill probably wear either elbow pads or compression sleeves for the rest of my life. But its a massive improvement especially as I keep working on my tight forearms.So your todos today:1. Ask yourself about numbness, tingling, or lack of fine motor control in your hands2. Stretch, massage, Theraband, and rest. Hammer stretches for wrist rotation, table stretches for the wrist ROM, door stretches just in case your compression is in the shoulders (I had a touch, that did respond well to PT also known as grabbing a door and leaning forward for 3-5 minutes at a time). For massage, foam rolling is good, getting someone to pull up a wooden rolling pin for baking and roll out the tops of your forearms is even better. 5 minutes a side every day.3. If you need help, go get it early. The idea with PT is to work the muscles so they heal stronger and better but if youre at the surgery point, thisll knock out all remaining feeling in your hands when it makes all your problems worse.4. Completely related, dry needling looks ridiculous and is amazingly effective. I might go out to a PT in a few months and try another round or 17 twice a week just to get the forearms loose again.5. Its not a bad surgery if you get that far. Id say a couple weeks to 90% of OG typing speed, a couple months to full strength. FWIW, Im following Lyle McDonalds injury diet and it does seem to work (You.... do not understand what enough protein is.)6. Noting that I love WFH, having two setups and also an hour (or four, see I love WFH) of commuting to at least put your wrists in another position and a distinction between your work and home setups might be a big part of the reason this took so long to get so bad.As an aside, amusingly, this all happened on the downstream of Amazon at Compass and then at Google and not Amazon. Had a lot of other health problems at Amazon, but this wasnt one of them.EDIT: As of March 2022, Im now on 3 surgeries because the nerve fell out of my right elbow after the first surgery. ","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_wkiuei","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/wkiuei\/would_you_take_a_20k_increase_to_your_salary_if\/","DATE":1660003200000,"PLAIN_TEXT":"I have an offer for a position that requires me to commute 25 mins to work for 3 days a week. Debating on whether its worth it.Edit: I really appreciate all of the discussion here. Based on the responses, it looks like Im setting my expectations a little low. Im in lcol city making 120k. My wife, baby, and I are living comfortably with that income so the increase in salary isnt the deciding factor of whether well have food on the table tomorrow. Initially I wasnt sure if I was crazy to turn down the 20k increase in salary, but actually Id be pretty crazy to accept it. 7500 minutes in travel time, not counting the time to get ready every morning, gas, vehicle maintenance, and occasionally eating out for lunch just isnt worth it for 20k more. Thanks all!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_enpoxh","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/enpoxh\/feeling_guilty_about_taking_sick_days\/","DATE":1578787200000,"PLAIN_TEXT":"I work at a company that has unlimited PTO and encourages taking sick days whenever youre sick. Ive been at this job for 6 months (my first job out of college). I was sick and took 3 sick days and 2 WFH days a few weeks before I took PTO during the holiday season. After returning from PTO, I had caught a bug during the vacation that resulted in me being unable to leave the house Sunday-Wednesday of coming back, before I felt decent enough to WFH thursday and friday.The issue is, that Saturday we had our company holiday party, and I wasnt planning on going as I figured it would be a bad look to go after being sick for a week, but my dad (whos been in the industry for a while) said I should definitely go as this only happens once a year.Of course once I get there, a few of my coworkers mention things like oh youre finally healthy or healthy just in time for the party eh ;) or wowwww youre not sick anymore etc. I immediately felt really guilty about being sick as clearly people had noticed I was gone and thus were saying these things.My question is, Ive been feeling really guiltybad since the party that I shouldnt have taken the sick days and just sucked it up and gone to work despite having an infection. In total Ive probably taken a total of 8 sick days in these 6 months Ive been here.Are their comments justified? Im not sure how to feel as I would never take a sick day unless I was actually sick, though I think I shouldnt have gone to the holiday party","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_sj4r8q","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/sj4r8q\/asked_for_a_50_raise_and_got_it_new_tc_150k_im\/","DATE":1643760000000,"PLAIN_TEXT":"Seen a few negative posts lately about tempering your exceptions for TC in general and based on where you live. Wanted to give a quick success story to raise spirits for any aspiring developers (or current developers aspiring for more) out there. Theres a little bit of luck involved here but I dont think Im an outlier and I think many could follow a similar path to me.I flunked out of college after sleeping my way through high school. Went on to work customer service over the phone for a few years making about $20 hourly at the end and got laid off, decided I wanted a better job for myself in the future. While I was collecting unemployment I decided to hone my lackluster developer skills and start looking for work in software development. I learned python online when I was 16 out of personal interest, so I had some experience to build on, but not much.I didnt do any leetcode, just worked on some personal projects. Found some odd jobs that made a couple thousand but nothing substantial but I made a few connections while doing that. One of those connections eventually landed me my first job as a WFH software developer. $25 hourly and eventually bumped up to a $60k salary. Was happy to take anything I could find to get my foot in the door. Learned a lot on the job and made some more connections. Got hired away through one of those connections with a nice raise to $100k TC still WFH. I was putting in good work and felt that I was outputting a similar quality and quantity of work to the rest of my team but felt like I was making substantially less than them. I thought the company and project were awesome and really didnt want to go looking for other jobs so I asked my supervisor for pretty big raise and several weeks later he gave it to me. New TC at $150k.Now, Im not saying that everyone should go ask their supervisor for a 50% raise and expect to get it. Thats pretty unrealistic. This is just my success story and yeah, Im feeling pretty great about it right now. But if theres some of you out there bummed about your current salary or hoping to land that first dev job, dont get down about it. Work hard, focus on doing good work, and learn as much as you can. Its ok to settle for less in the short term to look for long term gain, work experience and connections go a long way in this field. Best of luck and I hope others can find the success that I have.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_vaistt","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/vaistt\/im_hard_of_hearing_can_i_ask_my_manager_for_wfh\/","DATE":1654992000000,"PLAIN_TEXT":"Im working at an MNC. My company has recently started an hybrid model of working, its difficult to attend meeting in person with group of people. It would be easier for me if i can attend it from WebEx. Can I ask my manager for wfh due to this ?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_yyl4sg","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/yyl4sg\/company_sent_me_a_monitor_while_wfh_will_they_ask\/","DATE":1668729600000,"PLAIN_TEXT":"TitleEdit: wow, lots of responses! It seems like the best thing to do is contact HR when I put my notice in.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_wfa37w","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/wfa37w\/anyone_successful_so_far_but_feeling_lazy\/","DATE":1659484800000,"PLAIN_TEXT":"I want to apologize in advance, considering this might come off as dickish, spoiled, or something like that. And itll be a fairly long post, so sorry for that too.But Im scared of how lazy and unmotivated I am and Ive always been. Im what would be considered objectively successful and in a career situation a lot of people on here would kill for, but Im always a little afraid that I wont be able to keep it up and Ill throw it away.Background: Ive always been very lazy but very lucky. Most would probably call me smart, but I dont like calling myself that, because it sounds pretentious and that was pure luck - I didnt really do a whole lot to earn it. But I know the natural talent is there - it just feels undeserved.Ive basically slacked my way through life off pure luck and talent (which I did nothing to earn, so basically still luck. Got admitted to UC Berkeley with the historical lowest admitted GPA from my HS and ended up with a CS degree with an above-average GPA off pure ability while rarely going to class and learning everything the night before assignments were due or exams were held.I managed to BS my way into an internship at a certain PIP-heavy online retail company from a referral from a kid I met in college, and ended up returning full time, albeit for a new team that hire-to-fired me in about half a year. I know this sounds suspicious in the context of this post, but it was pretty blatant - secretly pivoted a few months in for missing one meeting and pushing one bug that passed code review and that I caught myself immediately and rolled back with zero business impact. But I got handed a surprise, obviously unrealistic pip near the beginning of the pandemic, and chose the severance knowing theyd can me anyways.And even then, I was too unmotivated to really crunch down and work on the job hunt instead of laying around at home playing games. But I lucky enough to be able to live at home and had saved a lot from my short work experience and severance pay, along with getting very generous unemployment benefits ($800week, sheesh), so I did the bare minimum - a few job applications a week, slacking off all day, etc. Because of that, and because hiring was coooooold during the first year or so of the pandemic, it took me over a year and a half to find another job, which came because I got a random call from a recruiter Id worked with previously offering me a phone screen at the big G.But I cruised through the interviews, as even though Ive never been motivated enough to practice or use LC or anything, Im fortunate enough to never have had much consistent trouble with tech screens. I no doubt got lucky too, having gotten questions that clicked in my brain, which is part of why Im insistent that algo interviews involve quite a bit of luck.And that brings us to now. Im working at the big G, having spent about half a year here, making a lot of money - I had no leverage and couldnt negotiate, but I got super lucky and they offered me 220k+ TC off the rip with half a YoE. I have good friends (tfw no gf), a nice apartment, no debt, and am pretty much in a situation that frankly, most people deserve more. I was just the lucky one.But Im scared itll all come crashing down. Its long overdue after all - Ive always been a huge slacker and still am. I spend most of my time not in meetings or eating dicking around at my desk on my phone, and were hybrid, which naturally means I get fuck-all done on WFH days. I was late for work again with another excuse, but theyve been fine with it. My team is super chill, which is, again, really lucky.My manager says he has no issues with my performance so far, but Im sure more will be expected of me as I gain more experience, and Im always afraid I wont be able to keep up like I have been by just putting my head down and quickly churning out quality work for a couple hours a few times per week.I want to be better, but every time I tell myself that Im going to turn it around this time, I end up falling into my old ways.Ive had psychiatrists and therapists, which is how I learned that I have ADHD (medicated), bipolar disorder (medicated), and Im a little autistic, although I think I mask fairly well IRL, and the logical thinking that comes with it probably helps me code. But all a therapist can do is make suggestions for strategies and things I can do, and even if I give them a shot, I never manage to keep them up, and fall into my old ways.I see my friends both in and out of tech working harder for less reward, and feel like my situation doesnt make sense, and even though Ive managed to BS my way through everything so far, it can only last so long, and the my day of reckoning will come. And thats a scary thought, because Ive never been able to get myself to do what I would need to if that happens.I know rcscq isnt my therapist, and this post might be inappropriate, whiny, and tone-deaf. If you hate this post or hate me, I get it. But is there anyone else out there like this? Am I just really, really impostor syndromed? Is being scared justified? Do I even have the right to be scared of my own shortcomings, when many people work harder, deserve success much more, but are much less fortunate? Am I just a jackass that needs to shut up and check his privilege?tl;dr: lazy, lucky, and probably undeserving - should I feel bad and scared that itll blow up in my face?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_rrp0u8","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/rrp0u8\/is_it_common_for_companies_to_make_you_be_on_a\/","DATE":1640736000000,"PLAIN_TEXT":"I got a linked in recruiter DM from a data science company called Hive. Their product sounded kinda interesting, but after reading reviews, several said they require you to be on a video call all day long in case someone wants to talk to you. Or maybe to make sure youre actually working lol. The recruiter confirmed this policy. I work at a big tech company, and have been contemplating switching jobs. Ive never heard of this sort of thing, is it common in our industry? It made me instantly no longer consider applying.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_hh6j5y","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/hh6j5y\/advice_for_new_grads_starting_wfh\/","DATE":1593216000000,"PLAIN_TEXT":"Its one thing transitioning into WFH, but definitely another experience starting your first full-time job as such. Wouldnt mind any helpful advice.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_x34rs3","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/x34rs3\/ive_been_put_on_pip_performance_improvement_plan\/","DATE":1661990400000,"PLAIN_TEXT":"Just when I had almost fallen in love with this new job which I started 11 months ago, this happens.My manager had conversation with me. He was complaining that my work is of poor quality (objectively speaking, it is not). I dont even directly work with this manager anymore. He leads this big project and he really wanted me to get involved in it but I struggled because its a big codebase and I was a new joiner. Months later, a new project was started and I worked on the backend for it. And I really liked that project more as I literally wrote it from scratch so I know where all the different modules are. And even the manager for that project was a bit chilled out. Now, the first manager kept trying to involve me in the first project but new requirements kept popping up in the second project and I was happy to work there. Somewhere down the line, this irked the first manager. Also, the company is known to be very cheap with salaries (a good work culture though) and they are paying me more than others since I switched from another company to work there. So they are probably expecting more output for the salary they are paying me. That seems to be the main problem here. Obviously this first manager has never worked a development job before, let alone reviewing my code or something. So I was confused after this conversation. Hes asking me if I noticed these issues in my work and how I can do better and I bluntly replied no, I dont see any issues in my work. He said hell speak to me again on soon and expects me to give an answer about how I can improve and stuff. Two weeks later, I was invited again into the conference room and told the same thing and formally sent an email that I am being put on a PIP (Performance Improvement Plan) saying that my performance was not upto their expectations and if they dont see any improvements, the end of September will be my last working day. I again mentioned that lack of specifics from management regarding my fictional performance issues but the manager said that as an organization there are certain protocols they have to follow. Given that there was nothing I could have done to prevent this, this is pretty much a firm intention from their side that they want to lay me off. It sucks that I left a corporation because of work culture issues and joined this smaller company. And I see the same corporate disconnect cropping up here. Now I will focus on giving interviews and finding new job in 1 month, and giving KTs for whatever projects I am working on.Edit 1--Neither of them are reporting managers. Its not a corporate-- rather a small companystartup. Both of them report to this senior person who is ownerdirector of the company. Both these managers are at the same level but the first manager is the one who is more dominating in terms of assigning work and giving feedback to the ownerdirector. And since its a startupsmall company, there is significant overlap as well-- Ive seen the manager do HR work and devs do requirement collection (me too). When I pressed for specifics, he said they he has seen people with lesser experience than me do as well as me. And he had big expectations from me-- he wanted me to lead some project and claimed that it didnt materialize.And a third project was also started a month ago led by the second manager with occasional involvement of the first manager. I was placed in that project (so Im not picking and choosing what I please). There were multiple UI developers working on different screens (Login, Register, Forgot Password). And in the backend team I was the only one writing the APIs. There was another person who was setting up the environment on GCP (apparently because it has good support for Kubernetes). I was working hard on the project and was very happy so the timing of all this happening was very unexpected and weird. A junior developer was later moved to this third project and I was explaining him the code and then he wrote 1-2 APIs himself. I guess he is expected to take the reins a month from now.Another detail worth mentioning is that since its a small organization (in the Python division theres hardly 15-20 people) people repeatedly complained about their low salaries and lack of increments. Developers frequently rebelled against management when increments were not given. The organization primarily hires freshers and almost everyone leaves within 1-2 years. They even made them sign employment bonds (common in India and somewhat illegal) and when people tried to leave for a better opportunity they would threaten that they will not give relieving letterexperience letter.Edit 2--During my PIP period, I pretty much focused all my time and energy in finding a new job. The company doesnt appreciate WFH so I claimed a medical excuse (broken back) and started working from home so that I can freely give interviews. I did the bare minimum for my job and was giving 3-4 interviews everyday. Because I was slacking (deliberately), the second manager was getting annoyed at me and could sense I was up-to something but he couldnt prove it (hes non-technical af). Within 2 weeks I got 4 job offers with almost 80% hike. I accepted one and then sent my resignation mail-- maybe thats when they finally realized what the deal was. The first manager was surprised at my audacity, to put it mildly. He tried to make things right, telling me that he never wanted to kick me out-- he just wanted to work closely with me (like how? Is he going to review my code?). After I left, at least 3 more people were either PIPed or randomly terminated so at this point it was pretty clear that they are going through financial strain. Even my last month salary was not given to me for upto 2 months. I sent some passive-aggressive emails and actively followed up with them and eventually got a big chunk (around 75%) of my money.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_w5jpfe","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/w5jpfe\/my_job_offered_me_a_carteblanche_for_perks_what\/","DATE":1658448000000,"PLAIN_TEXT":"My company is losing too many engineers due to pay. They cant offer more money at the moment but they gave us all a week to come up with perks that would make us stay.Current state of perks: Everyone is WFH and all over the country Unlimited PTO 3 annual week long retreats (suspended for covid) 4x8 workweeks","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_vgced6","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/vgced6\/how_to_stay_healthy_as_a_software_engineer\/","DATE":1655596800000,"PLAIN_TEXT":"I am not sure if this is the best sub to ask this, please advice me if there is any better option!It has been a year since I graduated and started working full time. My company is a fully WFH set up thus I spend 9-6 sitting on the chair looking at the monitor. Before and after work, I spend my free time watching anime and Youtube videos, on the chair staring at the monitor as well. Daily step count less than 3000.Before I graduate, I used to hang out with friends every day, go to the gym, and still have the free time to watch Youtube and anime. Now, chair life ate into my health and I could observe nerve and heart acting weird.I tried standing desks, ergonomic chair, stretching every 1 hour if I can remember, etc. I also try to eat clean, daily fruit and vegetable intake, etc. I wonder if there are more methods I can try.Fellow SWEs, how do you keep yourself fit on the minimum standard without sacrificing too much time to keep yourself fit?&amp;#x200B;EDIT: Thank you everyone for your responses, I received a lot of valuable answers. My goal was to integrate healthy lifestyle into the WFH schedule, and I think the comments definitely helped. I just ordered a chair bike and also blocked my time at 4pm to go for a jog for 30 minutes. I also hit random Facebook group again to hopefully find new friends. I hope we can all stay healthy and live long until we hit FIRE or whatever goal we set in life. Thanks all again!","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_cxxulw","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/cxxulw\/whats_a_chill_sf_company_to_work_at\/","DATE":1567209600000,"PLAIN_TEXT":"Currently burnt out working at a FAANG company on a high-user, high-traffic system. Ive developed insomnia recently; I have nightmares of causing the whole system to go down.I want to get a dog and focus on my hobbies and social life more. Does anyone have any recommendations for an SF-based company that is a) dog friendly b) has lots of PTO, flexible WFH policy c) relaxed performance requirements? (up or out can go to hell.)I realize this might not exactly be the best forum to ask this question but its worth a shot. And maybe serves as another warning to college grads aiming to get into these top companies that theyre not always all theyre cracked up to be.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_8qllqc","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/8qllqc\/anyone_had_work_from_home_taken_away\/","DATE":1528761600000,"PLAIN_TEXT":"My company bought each team member dual monitors and told us to work from home 3 days a week. It was awesome, everyone loved it.The team is pretty mature and high functioning. Our business stake holders could tell no discernible difference whether we work from home or not.My boss made a knee jerk, fear based decision and revoked WFH on a whim, effective immediately. My team of 8 people are shell shocked. I personally am disgusted.Anyone ever had WFH revoked? How did it go for you?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_mrfkp8","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/mrfkp8\/seems_like_most_companies_are_planning_to_bring\/","DATE":1618444800000,"PLAIN_TEXT":"Just off word Im hearing from several different people from several different companies, that their leadership is planning to bring people back in to the office.Genuinely thought that this pandemic would lead to a big change in how we work, especially with how most people seemingly became more productive as a result of WFH.","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_yp52ez","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/yp52ez\/50_raise_but_gut_is_saying_dont_take_it\/","DATE":1667779200000,"PLAIN_TEXT":"Im a junior full stack developer in languages and tech I really love. Its speed and security related, so Im satisfied with my current position regarding the tech, but not with the money. So, I began looking.Ive passed the interview and went to dinner with the company X-s devs. This company does something Im not really into, and is full of junior devs which need guidance. But, I would become a senior dev instantly and get a 50% raise. And my gut is screaming at me not to take the job.Pros of my current employer:- Private health insurance- Unlimited time off- WFH whenever I wantPros of the company X is only the money Id be getting. They dont offer anything my current employer does. I can try to negotiate though. So, Im in a dilema.What would you do?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_zaouce","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/zaouce\/with_remotewfh_being_a_new_norm_how_much_pto_is\/","DATE":1669939200000,"PLAIN_TEXT":"with remotewfh being a new norm, how much PTO is the new norm? is 3 weeks OK knowing you can step away from your desk to walk the dog anytime? does regular small breaks add up to blissful time afk for days at a time?","SOURCE":"Reddit \/r\/cscareerquestions"},{"ID":"t3_p2wkcf","URL":"https:\/\/www.reddit.com\/r\/cscareerquestions\/comments\/p2wkcf\/my_employer_purposely_made_it_impossible_for_me\/","DATE":1628726400000,"PLAIN_TEXT":" TL;DR: My employer strictly made WFH forbidden and we cant shift work hours around, my manager is obscuring my schedule, takes me in unannounced meetings and randomly shows up at my desk. How can i look for a new job without quitting first?I know it sounds stupid but my employer has made it very hard for me to look out for new job after a mass quitting because of the shitty conditions and I feel stuck here.The reason for a lot of my coworkers quitting was because of the NO WFH policy in bolds and all caps to start with and the mentality of if you dont like it you can go as it is cheaper to replace you.I was late to the quitting game and my employer has become desperate to make it as hard to quit for everyone especially me since i know the most about the projects and i have the most experience on the projects from my team.It started with my manager making my schedule as impressible as possible with things like sending me a meeting invitation a few minutes ahead, now its not even bothering sending me an invitation, he just comes to my desk and says we have a meeting, lets go...Before i used to know weeks ahead so i could know if i can miss for a bit if already did my task or prepared the meeting points beforehand etc and i know nothing else is planned so i could go for example to the nearest bank, or even a dentist appointment because otherwise i cant.I had some painful tooth infection some time ago and had to make a dentist appointment, when i told my manager about it and if i can go earlier he told me to ask for permission from his boss from overseas quarters... the response was that we are not allowed to solve our personal issues on the company time and if need to solve them to take a day off... we are working 9 hours (9to6), everyone goes home one hour before i get out so no way i can go pay taxes, to a dentist, to a bank etc I also tried on other occasions if maybe i can work one hour extra today and leave earlier tomorrow and the response was that i signed in my contract for the working hours to be 9 to 6 and i am expected to do so...Not only that my schedule is purposefully obscured so i cant miss a minute even for a smoke, or have a phone call because i also thought about a phone interview but he is also showing up to my desk unannounced, close to sneaky, then he takes a seat besides me to help me with something, so i cant even study for an interview or do anything else, topping it of with and exaggerated amount of work not only because half of coworkers left, other half on vacation but they also took new projects to the point that it is unbearable... new urgent issues every minute to the point that i feel i switched from R&amp;D to customer support, having to solve real time big issues directly on production env, work ethics have totally gone out of the window and so much more that i feel like i am going insane...Normally i would have switched jobs one year ago or even longer as i have paid attention to all the red flags but i had some long personal life issue so the career plans had to wait. Now all of this has build up to this and i feel stuck, mad and tired...I want so badly to just quit right away but i am in a tight position... Anyone has gone through a similar situation and has some advice or any idea how to deal with this?","SOURCE":"Reddit \/r\/cscareerquestions"}]